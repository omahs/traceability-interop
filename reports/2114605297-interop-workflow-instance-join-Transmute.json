{
  "collection": {
    "info": {
      "_postman_id": "6f3afe3d-f721-48df-82f7-eb3d3936f320",
      "name": "eCommerce - Workflow Instance Join",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b8d27d66-9def-4958-9cfe-fb86cab4150c",
        "name": "00 - Importer Access Token",
        "request": {
          "url": {
            "host": [
              "{{ORG_1_TOKEN_ENDPOINT}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"audience\": \"{{ORG_1_TOKEN_AUDIENCE}}\",\n    \"client_id\": \"{{ORG_1_CLIENT_ID}}\",\n    \"client_secret\": \"{{ORG_1_CLIENT_SECRET}}\",\n    \"grant_type\": \"client_credentials\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "0635badc-c879-4919-b2b5-b927f7168526",
              "type": "text/javascript",
              "exec": [
                "pm.environment.set(\"org_1_access_token\", pm.response.json().access_token);",
                "",
                "pm.test(\"Importer application has access token\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "b5e330cb-562d-45a6-a7b5-3e30e937cb46"
            }
          }
        ]
      },
      {
        "id": "8a8a0053-2845-48c2-93b1-13388ea4fa63",
        "name": "00 - Freight Forwarder Access Token",
        "request": {
          "url": {
            "host": [
              "{{ORG_2_TOKEN_ENDPOINT}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"audience\": \"{{ORG_2_TOKEN_AUDIENCE}}\",\n    \"client_id\": \"{{ORG_2_CLIENT_ID}}\",\n    \"client_secret\": \"{{ORG_2_CLIENT_SECRET}}\",\n    \"grant_type\": \"client_credentials\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "4a520a17-7bd4-40dc-9240-8ffdf08803f9",
              "type": "text/javascript",
              "exec": [
                "pm.environment.set(\"org_2_access_token\", pm.response.json().access_token);",
                "",
                "pm.test(\"Freight Forwarder application has access token\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "cf79d4af-0976-42e4-8aa3-d1c1010c2d57"
            }
          }
        ]
      },
      {
        "id": "7694194f-f6a7-4721-a7fc-030b82dc9340",
        "name": "00 - Customs Access Token",
        "request": {
          "url": {
            "host": [
              "{{ORG_3_TOKEN_ENDPOINT}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"audience\": \"{{ORG_3_TOKEN_AUDIENCE}}\",\n    \"client_id\": \"{{ORG_3_CLIENT_ID}}\",\n    \"client_secret\": \"{{ORG_3_CLIENT_SECRET}}\",\n    \"grant_type\": \"client_credentials\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "adb92ec3-2a91-43f3-8870-2513d964fdf7",
              "type": "text/javascript",
              "exec": [
                "pm.environment.set(\"org_3_access_token\", pm.response.json().access_token);",
                "",
                "pm.test(\"Customs application has access token\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "4bc8c048-6f62-4be5-b85f-919dfd2bf64a"
            }
          }
        ]
      },
      {
        "id": "11cebd9d-d705-48a4-bb13-579756963be7",
        "name": "00 - Get Importer Exchange Endpoint",
        "request": {
          "url": {
            "path": [
              "identifiers",
              "{{ORG_1_DID_WEB}}"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "efa19fac-5170-4335-a19d-19d14ae60333",
              "type": "text/javascript",
              "exec": [
                "const { didDocument } = pm.response.json()",
                "pm.environment.set(\"org_1_holder\", didDocument.alsoKnownAs[1]);",
                "pm.environment.set(\"org_1_tenant_url\", didDocument.services[0].serviceEndpoint);",
                "",
                "pm.test(\"Importer has holder DID\", function () {",
                "     pm.expect(pm.environment.get(\"org_1_holder\")).to.not.be.undefined;",
                "});",
                "",
                "pm.test(\"Importer has service endpoint\", function () {",
                "     pm.expect(pm.environment.get(\"org_1_tenant_url\")).to.not.be.undefined;",
                "});"
              ],
              "_lastExecutionId": "9f4bd419-983c-4b46-bca8-d231b9d9e94c"
            }
          }
        ]
      },
      {
        "id": "b75a6071-8ed0-41df-9a55-5e48c21c9eba",
        "name": "00 - Get Freight Forwarder Exchange Endpoint",
        "request": {
          "url": {
            "path": [
              "identifiers",
              "{{ORG_2_DID_WEB}}"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "3fda3ea9-4d4a-45bd-a256-a24b803a8ff7",
              "type": "text/javascript",
              "exec": [
                "const { didDocument } = pm.response.json()",
                "pm.environment.set(\"org_2_holder\", didDocument.alsoKnownAs[1]);",
                "pm.environment.set(\"org_2_tenant_url\", didDocument.services[0].serviceEndpoint);",
                "",
                "pm.test(\"Freight Forwarder has holder DID\", function () {",
                "     pm.expect(pm.environment.get(\"org_2_holder\")).to.not.be.undefined;",
                "});",
                "",
                "pm.test(\"Freight Forwarder has service endpoint\", function () {",
                "     pm.expect(pm.environment.get(\"org_2_tenant_url\")).to.not.be.undefined;",
                "});"
              ],
              "_lastExecutionId": "ebbf1e8d-c834-4fdf-b1dd-254401efc788"
            }
          }
        ]
      },
      {
        "id": "008e72d6-49d3-4f03-99bc-bc22b0d49f1a",
        "name": "00 - Get Customs Exchange Endpoint",
        "request": {
          "url": {
            "path": [
              "identifiers",
              "{{ORG_3_DID_WEB}}"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "a01fd5fd-6cb7-4977-ad18-953d4cc9a338",
              "type": "text/javascript",
              "exec": [
                "const { didDocument } = pm.response.json()",
                "pm.environment.set(\"org_3_holder\", didDocument.alsoKnownAs[0]);",
                "pm.environment.set(\"org_3_tenant_url\", didDocument.services[0].serviceEndpoint);",
                "",
                "pm.test(\"Customs has holder DID\", function () {",
                "     pm.expect(pm.environment.get(\"org_3_holder\")).to.not.be.undefined;",
                "});",
                "",
                "pm.test(\"Customs has service endpoint\", function () {",
                "     pm.expect(pm.environment.get(\"org_3_tenant_url\")).to.not.be.undefined;",
                "});"
              ],
              "_lastExecutionId": "72e4d5d6-f0cc-45ba-a8e3-0ecce560f00f"
            }
          }
        ]
      },
      {
        "id": "6727ac0f-1ccb-46bd-8e41-7f40de09ab06",
        "name": "01 - Importer - Issue Proforma Invoice",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\",\n            \"CommercialInvoiceCertificate\"\n        ],\n        \"name\": \"Commercial Invoice Certificate\",\n        \"issuanceDate\": \"2022-02-23T11:55:00Z\",\n        \"issuer\": {\n            \"id\": \"{{org_1_holder}}\",\n            \"type\": [\n                \"Organization\"\n            ],\n            \"address\": {\n                \"type\": [\n                    \"PostalAddress\"\n                ],\n                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                \"addressLocality\": \"Tsubame-shi\",\n                \"addressRegion\": \"Niigata-ken\",\n                \"postalCode\": \"959-0215\",\n                \"addressCountry\": \"Japan\"\n            }\n        },\n        \"credentialSubject\": {\n            \"type\": [\n                \"Invoice\"\n            ],\n            \"portOfEntry\": {\n                \"type\": \"Place\",\n                \"unLocode\": \"USLGB\"\n            },\n            \"destinationCountry\": \"MEX\",\n            \"purchaseDate\": \"2021-02-21\",\n            \"seller\": {\n                \"type\": [\n                    \"Organization\"\n                ],\n                \"address\": {\n                    \"type\": [\n                        \"PostalAddress\"\n                    ],\n                    \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                    \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                    \"addressLocality\": \"Tsubame-shi\",\n                    \"addressRegion\": \"Niigata-ken\",\n                    \"postalCode\": \"959-0215\",\n                    \"addressCountry\": \"Japan\"\n                }\n            },\n            \"buyer\": {\n                \"type\": [\n                    \"Organization\"\n                ],\n                \"address\": {\n                    \"type\": [\n                        \"PostalAddress\"\n                    ],\n                    \"organizationName\": \"Generic Motors of America\",\n                    \"streetAddress\": \"12 Generic Motors Dr\",\n                    \"addressLocality\": \"Detroit\",\n                    \"addressRegion\": \"Michigain\",\n                    \"postalCode\": \"48232-5170\",\n                    \"addressCountry\": \"USA\"\n                }\n            },\n            \"shipToParty\": {\n                \"type\": [\n                    \"Organization\"\n                ],\n                \"address\": {\n                    \"type\": [\n                        \"PostalAddress\"\n                    ],\n                    \"organizationName\": \"Generic Motors of America\",\n                    \"streetAddress\": \"12 Generic Motors Dr\",\n                    \"addressLocality\": \"Detroit\",\n                    \"addressRegion\": \"Michigain\",\n                    \"postalCode\": \"48232-5170\",\n                    \"addressCountry\": \"USA\"\n                }\n            },\n            \"itemsShipped\": [\n                {\n                    \"type\": \"TradeLineItem\",\n                    \"product\": {\n                        \"manufacturer\": {\n                            \"type\": \"Organization\",\n                            \"address\": {\n                                \"type\": \"PostalAddress\",\n                                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                                \"addressLocality\": \"Tsubame-shi\",\n                                \"addressRegion\": \"Niigata-ken\",\n                                \"postalCode\": \"959-0215\",\n                                \"addressCountry\": \"Japan\"\n                            }\n                        },\n                        \"description\": \"UNS S30400 chromium-nickel stainless steel rolls.\",\n                        \"weight\": {\n                            \"type\": \"QuantitativeValue\",\n                            \"unitCode\": \"lbs\",\n                            \"value\": \"16500\"\n                        }\n                    },\n                    \"itemCount\": 5,\n                    \"tradeLineItemWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"value\": \"82500\",\n                        \"unitCode\": \"lbs\"\n                    },\n                    \"priceSpecification\": {\n                        \"type\": \"PriceSpecification\",\n                        \"price\": 5200,\n                        \"priceCurrency\": \"USD\"\n                    }\n                },\n                {\n                    \"type\": \"TradeLineItem\",\n                    \"product\": {\n                        \"manufacturer\": {\n                            \"type\": \"Organization\",\n                            \"address\": {\n                                \"type\": \"PostalAddress\",\n                                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                                \"addressLocality\": \"Tsubame-shi\",\n                                \"addressRegion\": \"Niigata-ken\",\n                                \"postalCode\": \"959-0215\",\n                                \"addressCountry\": \"Japan\"\n                            }\n                        },\n                        \"description\": \"Galvalannealed ASTM A-653 zinc-iron alloy-coated steel sheets.\",\n                        \"weight\": {\n                            \"type\": \"QuantitativeValue\",\n                            \"value\": \"12680\",\n                            \"unitCode\": \"lbs\"\n                        }\n                    },\n                    \"itemCount\": 20,\n                    \"tradeLineItemWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"value\": \"253600\",\n                        \"unitCode\": \"lbs\"\n                    },\n                    \"priceSpecification\": {\n                        \"type\": \"PriceSpecification\",\n                        \"price\": 4400,\n                        \"priceCurrency\": \"USD\"\n                    }\n                }\n            ],\n            \"totalWeight\": {\n                \"type\": \"QuantitativeValue\",\n                \"value\": \"336100\",\n                \"unitCode\": \"lbs\"\n            },\n            \"totalPaymentDue\": {\n                \"type\": \"PriceSpecification\",\n                \"price\": 9600,\n                \"priceCurrency\": \"USD\"\n            }\n        }\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "6ca838f7-d082-48d6-9cf9-e4cbe9b1ee79",
              "type": "text/javascript",
              "exec": [
                "  pm.test(\"Proforma Invoice VC issued\", function () {",
                "      pm.response.to.have.status(201);",
                "      pm.environment.set('importers_proforma_invoice_vc', JSON.stringify(pm.response.json()));",
                "  })"
              ],
              "_lastExecutionId": "ace98ad0-8ff8-4524-b0a2-2640ebfb5a9b"
            }
          }
        ]
      },
      {
        "id": "33cac97c-f343-4ada-a79d-a3b03feb3c19",
        "name": "02 - Importer - Present to Customs - (1/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "ebb497a0-2e3c-4739-bcdb-0bb86b236664",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.environment.set(\"org_3_domain\", responseJson.domain);",
                "pm.environment.set(\"org_3_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Importer has authenticated to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "1bda2899-9ec9-46d8-8628-42cb78ef6e0c"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "61227d8d-56dd-482e-ae58-69babaae3d44",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60e93baa-1dfe-4d3a-a352-1d896d16fa99"
            }
          }
        ]
      },
      {
        "id": "f35482fd-151e-4f95-9470-cbe289e339c4",
        "name": "02 - Importer - Present to Customs - (2/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_1\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_1_holder}}\",\n        \"verifiableCredential\": [\n            {{importers_proforma_invoice_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "33b3e5b5-bb9b-405e-9018-2a58a671e4bb",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.environment.set(\"importers_proforma_invoice_presented_to_customs\", JSON.stringify(responseJson));",
                "",
                "pm.test(\"Importer VP of Proforma Invoice with workflow instance 'instance_1' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "debd58b3-8976-49a1-8abf-37578e2fd64b"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "72d74858-537a-416f-850f-fe0035f9a958",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67e80afc-1af2-47c8-a3f4-95e82d67166b"
            }
          }
        ]
      },
      {
        "id": "83797105-0337-4e02-999e-ba1cb72b6412",
        "name": "02 - Importer - Present to Customs - (3/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{importers_proforma_invoice_presented_to_customs}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "a19340f0-2244-4d0c-9cdc-82f787cb1ce1",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Importer has successfully presented Proforma Invoice to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"Proforma Invoice VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "b151b16e-a7fb-4072-8508-2aa3480e06dd"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "64404e46-18e8-4249-8311-82c5161d5fe9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ffb51107-289e-4521-8955-f6acd9b5ff64"
            }
          }
        ]
      },
      {
        "id": "5cb8046c-ff10-43e2-8874-49e723a6f833",
        "name": "03 - Customs - Verify Proforma Invoice",
        "request": {
          "url": {
            "path": [
              "presentations",
              "verify"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiablePresentation\": {{importers_proforma_invoice_presented_to_customs}},\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "63297395-b863-48a4-ae36-112f9a852f8c",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Customs verifies Proforma Invoice\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "var workflowInstances = JSON.parse(pm.environment.get(\"importers_proforma_invoice_presented_to_customs\")).workflow.instance",
                "",
                "pm.test(\"Customs stores first workflow instance id: \" + workflowInstances[0], function () {",
                "    pm.environment.set(\"customs_first_workflow_instance_id\", workflowInstances[0]);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "5b92c7f6-f291-4b49-8157-18d56af744b2"
            }
          }
        ]
      },
      {
        "id": "a9651441-e4a1-441f-b02f-491e04edf53c",
        "name": "04 - Freight Forwarder - Issue House Waybill",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"did:key:z6MkmbqKc6KncFZUbVJwUppttTkiMAtnVJ5wzC5oVBWci3pc\",\n        \"type\": [\n            \"VerifiableCredential\",\n            \"HouseBillOfLadingCertificate\"\n        ],\n        \"name\": \"House Bill Of Lading\",\n        \"issuanceDate\": \"2022-03-04T13:40:00Z\",\n        \"issuer\": {\n            \"type\": \"Organization\",\n            \"id\": \"{{org_2_holder}}\",\n            \"name\": \"World Forward, Inc.\",\n            \"address\": {\n                \"type\": \"PostalAddress\",\n                \"organizationName\": \"MCL Multi Container Line LTD.\",\n                \"streetAddress\": \"Well Fung Ind Centre\",\n                \"addressLocality\": \"Kwai Chung\",\n                \"addressRegion\": \"Hong Kong\",\n                \"addressCountry\": \"Hong Kong\"\n            }\n        },\n        \"credentialSubject\": {\n            \"type\": \"HouseBillOfLading\",\n            \"billOfLadingNumber\": \"FF873363210A\",\n            \"bookingNumber\": [\n                \"FF873363210\"\n            ],\n            \"shipper\": {\n                \"type\": \"Organization\",\n                \"name\": \"Espresso Italiano Co.\",\n                \"address\": {\n                    \"type\": \"PostalAddress\",\n                    \"streetAddress\": \"Via Vico Ferrovia 5\",\n                    \"addressLocality\": \"Goro\",\n                    \"addressRegion\": \"Ferrara\",\n                    \"postalCode\": \"44020\",\n                    \"addressCountry\": \"IT\"\n                },\n                \"email\": \"sales@espresso-italiano.example.com\",\n                \"phoneNumber\": \"+39 0351 9067195\"\n            },\n            \"consignee\": {\n                \"type\": \"Organization\",\n                \"name\": \"Prosumer Coffee Supplies, Ltd.\",\n                \"description\": \"Coffee Machine Imports\",\n                \"address\": {\n                    \"type\": \"PostalAddress\",\n                    \"streetAddress\": \"3934 Spinnaker Lane\",\n                    \"addressLocality\": \"Joliet\",\n                    \"addressRegion\": \"Illinois\",\n                    \"postalCode\": \"60432\",\n                    \"addressCountry\": \"US\"\n                }\n            },\n            \"notifyParty\": [\n                {\n                    \"type\": \"Organization\",\n                    \"name\": \"Prosumer Coffee Supplies, Ltd.\",\n                    \"description\": \"Coffee Machine Imports\",\n                    \"address\": {\n                        \"type\": \"PostalAddress\",\n                        \"streetAddress\": \"3934 Spinnaker Lane\",\n                        \"addressLocality\": \"Joliet\",\n                        \"addressRegion\": \"Illinois\",\n                        \"postalCode\": \"60432\",\n                        \"addressCountry\": \"US\"\n                    }\n                }\n            ],\n            \"carrier\": {\n                \"type\": \"Organization\",\n                \"id\": \"did:key:z6MktHQo3fRRohk44dsbE76CuiTpBmyMWq2VVjvV6aBSeE3U\",\n                \"name\": \"World Forward, Inc.\",\n                \"address\": {\n                    \"type\": \"PostalAddress\",\n                    \"organizationName\": \"MCL Multi Container Line LTD.\",\n                    \"streetAddress\": \"Well Fung Ind Centre\",\n                    \"addressLocality\": \"Kwai Chung\",\n                    \"addressRegion\": \"Hong Kong\",\n                    \"addressCountry\": \"Hong Kong\"\n                }\n            },\n            \"mainCarriageTransportMovement\": {\n                \"type\": \"Transport\",\n                \"vesselNumber\": \"MS Seven Seas\",\n                \"voyageNumber\": \"Atl-W0425\"\n            },\n            \"portOfLoading\": {\n                \"type\": \"Place\",\n                \"unLocode\": \"ITMIL\"\n            },\n            \"portOfDischarge\": {\n                \"type\": \"Place\",\n                \"unLocode\": \"USLGB\"\n            },\n            \"totalNumberOfPackages\": 2200,\n            \"transportEquipmentQuantity\": 2,\n            \"includedConsignmentItems\": [\n                {\n                    \"marksAndNumbers\": \"Espresso Italiano\",\n                    \"commodity\": {\n                        \"type\": \"Commodity\",\n                        \"commodityCode\": \"851671\",\n                        \"commodityCodeType\": \"HS\"\n                    },\n                    \"packageQuantity\": 220,\n                    \"netWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"unitCode\": \"kg\",\n                        \"value\": \"1460\"\n                    },\n                    \"grossWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"unitCode\": \"kg\",\n                        \"value\": \"1590\"\n                    },\n                    \"grossVolume\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"value\": \"85\",\n                        \"unitCode\": \"cmb\"\n                    }\n                }\n            ],\n            \"freightAndCharges\": {\n                \"type\": \"ServiceCharge\",\n                \"chargeCode\": \"basicFreight\",\n                \"paymentTerm\": \"collect\",\n                \"chargeText\": \"Negotiated ocean freight\",\n                \"rate\": {\n                    \"type\": \"PriceSpecification\",\n                    \"price\": 225,\n                    \"priceCurrency\": \"USD\"\n                },\n                \"calculationBasis\": \"Per container\",\n                \"appliedAmount\": {\n                    \"type\": \"PriceSpecification\",\n                    \"price\": 450,\n                    \"priceCurrency\": \"USD\"\n                }\n            },\n            \"declaredValue\": {\n                \"type\": \"PriceSpecification\",\n                \"price\": 24000,\n                \"priceCurrency\": \"USD\"\n            },\n            \"termsAndConditions\": \"https://terms-of-shipment.freightforwarder.example.com\"\n        }\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "aca1810f-324a-40a6-a46f-5f23ddc6a042",
              "type": "text/javascript",
              "exec": [
                "  pm.test(\"House Bill of Lading VC issued\", function () {",
                "      pm.response.to.have.status(201);",
                "      pm.environment.set('freight_forwarders_hbol_vc', JSON.stringify(pm.response.json()));",
                "  })"
              ],
              "_lastExecutionId": "78461b71-9806-4e33-9a98-15f72318db88"
            }
          }
        ]
      },
      {
        "id": "1620dd6a-cdb0-4d43-9841-e704cdc24d8f",
        "name": "05 - Freight Forwarder - Present to Customs - (1/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "878b13c6-7511-47c6-9be2-d81a2c9902fe",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.environment.set(\"org_3_domain\", responseJson.domain);",
                "pm.environment.set(\"org_3_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Freight Forwarder has authenticated to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "bb2b651a-fbde-4e22-b13a-e73584bf9f79"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "670d43ed-f73d-46aa-a0a6-525905998d62",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "589919ea-1955-4dc7-88d8-17539332f081"
            }
          }
        ]
      },
      {
        "id": "7318264c-49e7-46d3-9813-8591eaa723a2",
        "name": "05 - Freight Forwarder - Present to Customs - (2/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_2\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_2_holder}}\",\n        \"verifiableCredential\": [\n            {{freight_forwarders_hbol_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "162c18b2-ab65-49c6-aac2-e4b7cfa20bc7",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.environment.set(\"freight_forwarders_house_bill_presented_to_customs\", JSON.stringify(responseJson));",
                "",
                "pm.test(\"Freight Forwarder VP of House Bill of Lading with workflow instance 'instance_2' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "86da02ae-1e8a-43f8-9135-1b002d8a8273"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "160db9c4-5a7a-45dc-9791-1d5bd28cc140",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32e15af2-ab53-48bf-af1b-3a52d4d6347c"
            }
          }
        ]
      },
      {
        "id": "11061661-dcff-4f32-b6da-cf5aa4135b0a",
        "name": "05 - Freight Forwarder - Present to Customs - (3/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{freight_forwarders_house_bill_presented_to_customs}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "be460e38-c62d-4434-9fe4-5df1108ad08d",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Freight Forwarder has successfully presented House Bill of Lading to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"House Bill of Lading VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "acb8f5fe-567f-4524-a0c9-7d27c946645d"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "48bbbea4-66b2-4c11-9c76-7b2b1c6faddb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "802fa3f5-c778-40af-8c4d-8b3b4ba6045f"
            }
          }
        ]
      },
      {
        "id": "59174064-9c42-4b6d-992b-4e3c39c18781",
        "name": "06 - Customs - Verify House Waybill",
        "request": {
          "url": {
            "path": [
              "presentations",
              "verify"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiablePresentation\": {{freight_forwarders_house_bill_presented_to_customs}},\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "addeb585-7ea7-4c71-9de0-5d45adcc79d5",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Customs verifies House Bill of Lading\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "var workflowInstances = JSON.parse(pm.environment.get(\"freight_forwarders_house_bill_presented_to_customs\")).workflow.instance",
                "",
                "pm.test(\"Customs stores first workflow instance id: \" + workflowInstances[0], function () {",
                "    pm.environment.set(\"customs_second_workflow_instance_id\", workflowInstances[0]);",
                "});",
                ""
              ],
              "_lastExecutionId": "2bea5412-1020-48de-9960-83f0bb566d60"
            }
          }
        ]
      },
      {
        "id": "852b3ec5-0ceb-4038-ae86-bd4614f5f6a2",
        "name": "07 - Importer - Issue Commercial Invoice",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"credential\": \n      {\n    \"@context\": [\n      \"https://www.w3.org/2018/credentials/v1\",\n      \"https://w3id.org/traceability/v1\"\n    ],\n    \"id\": \"did:key:z6MkhNsCYEQQWJdyAbfaMZHz4UG6UZoQUGot7z7tBNsbz1JG\",\n    \"type\": [\n      \"VerifiableCredential\",\n      \"CommercialInvoiceCertificate\"\n    ],\n    \"name\": \"Commercial Invoice Certificate\",\n    \"issuanceDate\": \"2022-02-23T11:55:00Z\",\n    \"issuer\": {\n      \"id\": \"{{org_1_holder}}\",\n      \"type\": [\n        \"Organization\"\n      ],\n      \"address\": {\n        \"type\": [\n          \"PostalAddress\"\n        ],\n        \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n        \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n        \"addressLocality\": \"Tsubame-shi\",\n        \"addressRegion\": \"Niigata-ken\",\n        \"postalCode\": \"959-0215\",\n        \"addressCountry\": \"Japan\"\n      }\n    },\n    \"credentialSubject\": {\n      \"type\": [\n        \"Invoice\"\n      ],\n      \"portOfEntry\": {\n        \"type\": \"Place\",\n        \"unLocode\": \"USLGB\"\n      },\n      \"destinationCountry\": \"MEX\",\n      \"purchaseDate\": \"2021-02-21\",\n      \"seller\": {\n        \"type\": [\n          \"Organization\"\n        ],\n        \"address\": {\n          \"type\": [\n            \"PostalAddress\"\n          ],\n          \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n          \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n          \"addressLocality\": \"Tsubame-shi\",\n          \"addressRegion\": \"Niigata-ken\",\n          \"postalCode\": \"959-0215\",\n          \"addressCountry\": \"Japan\"\n        }\n      },\n      \"buyer\": {\n        \"type\": [\n          \"Organization\"\n        ],\n        \"address\": {\n          \"type\": [\n            \"PostalAddress\"\n          ],\n          \"organizationName\": \"Generic Motors of America\",\n          \"streetAddress\": \"12 Generic Motors Dr\",\n          \"addressLocality\": \"Detroit\",\n          \"addressRegion\": \"Michigain\",\n          \"postalCode\": \"48232-5170\",\n          \"addressCountry\": \"USA\"\n        }\n      },\n      \"shipToParty\": {\n        \"type\": [\n          \"Organization\"\n        ],\n        \"address\": {\n          \"type\": [\n            \"PostalAddress\"\n          ],\n          \"organizationName\": \"Generic Motors of America\",\n          \"streetAddress\": \"12 Generic Motors Dr\",\n          \"addressLocality\": \"Detroit\",\n          \"addressRegion\": \"Michigain\",\n          \"postalCode\": \"48232-5170\",\n          \"addressCountry\": \"USA\"\n        }\n      },\n      \"itemsShipped\": [\n        {\n          \"type\": \"TradeLineItem\",\n          \"product\": {\n            \"manufacturer\": {\n              \"type\": \"Organization\",\n              \"address\": {\n                \"type\": \"PostalAddress\",\n                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                \"addressLocality\": \"Tsubame-shi\",\n                \"addressRegion\": \"Niigata-ken\",\n                \"postalCode\": \"959-0215\",\n                \"addressCountry\": \"Japan\"\n              }\n            },\n            \"description\": \"UNS S30400 chromium-nickel stainless steel rolls.\",\n            \"weight\": {\n              \"type\": \"QuantitativeValue\",\n              \"unitCode\": \"lbs\",\n              \"value\": \"16500\"\n            }\n          },\n          \"itemCount\": 5,\n          \"tradeLineItemWeight\": {\n            \"type\": \"QuantitativeValue\",\n            \"value\": \"82500\",\n            \"unitCode\": \"lbs\"\n          },\n          \"priceSpecification\": {\n            \"type\": \"PriceSpecification\",\n            \"price\": 5200,\n            \"priceCurrency\": \"USD\"\n          }\n        },\n        {\n          \"type\": \"TradeLineItem\",\n          \"product\": {\n            \"manufacturer\": {\n              \"type\": \"Organization\",\n              \"address\": {\n                \"type\": \"PostalAddress\",\n                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                \"addressLocality\": \"Tsubame-shi\",\n                \"addressRegion\": \"Niigata-ken\",\n                \"postalCode\": \"959-0215\",\n                \"addressCountry\": \"Japan\"\n              }\n            },\n            \"description\": \"Galvalannealed ASTM A-653 zinc-iron alloy-coated steel sheets.\",\n            \"weight\": {\n              \"type\": \"QuantitativeValue\",\n              \"value\": \"12680\",\n              \"unitCode\": \"lbs\"\n            }\n          },\n          \"itemCount\": 20,\n          \"tradeLineItemWeight\": {\n            \"type\": \"QuantitativeValue\",\n            \"value\": \"253600\",\n            \"unitCode\": \"lbs\"\n          },\n          \"priceSpecification\": {\n            \"type\": \"PriceSpecification\",\n            \"price\": 4400,\n            \"priceCurrency\": \"USD\"\n          }\n        }\n      ],\n      \"totalWeight\": {\n        \"type\": \"QuantitativeValue\",\n        \"value\": \"336100\",\n        \"unitCode\": \"lbs\"\n      },\n      \"totalPaymentDue\": {\n        \"type\": \"PriceSpecification\",\n        \"price\": 9600,\n        \"priceCurrency\": \"USD\"\n      }\n    }\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "39260243-ba00-45f3-ae5c-2e8eda7455bf",
              "type": "text/javascript",
              "exec": [
                "  pm.test(\"Commercial Invoice VC issued\", function () {",
                "      pm.response.to.have.status(201);",
                "      pm.environment.set('importers_commercial_invoice_vc', JSON.stringify(pm.response.json()));",
                "  })"
              ],
              "_lastExecutionId": "5cc9428a-5019-4bed-8a92-a25a4dae229c"
            }
          }
        ]
      },
      {
        "id": "d807c0fc-0328-4cba-bce8-f05da4f9b629",
        "name": "08 - Importer - Present to Freight Forwarder - (1/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_2_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "ed4d8d42-4df5-41c4-94fb-9279d577b538",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.environment.set(\"org_2_domain\", responseJson.domain);",
                "pm.environment.set(\"org_2_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Importer has authenticated to Freight Forwarder\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "71a8938a-eb4a-4737-9ef1-8d21442892a2"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "2b6cf6ea-0ccd-425d-85ad-0b3d327e34ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5320402b-0760-4482-a73f-7c40a6241a49"
            }
          }
        ]
      },
      {
        "id": "fdebe57d-a616-4ebc-9ce4-d3969580a3b1",
        "name": "08 - Importer - Present to Freight Forwarder - (2/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_1\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_1_holder}}\",\n        \"verifiableCredential\": [\n            {{importers_commercial_invoice_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_2_domain}}\",\n        \"challenge\": \"{{org_2_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "4b2c3afa-3489-4c43-9cf5-7e6cb4995c8d",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.environment.set(\"importers_presentation_of_ci_to_freight_forwarder\", JSON.stringify(responseJson));",
                "",
                "pm.test(\"Importer VP of Commercial Invoice with workflow instance 'instance_1' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "a4c88150-d376-4fd6-9e71-6299507c1255"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "ccb07668-bb26-4710-90da-5fb18d41e919",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5593c782-081e-4b44-a081-618e038a4e77"
            }
          }
        ]
      },
      {
        "id": "b44c1b22-aa68-44da-bff3-a73f43e52ffb",
        "name": "08 - Importer - Present to Freight Forwarder - (3/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_2_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{importers_presentation_of_ci_to_freight_forwarder}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "bd9236fd-3713-4854-98a0-74c7d41b8e89",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Importer has successfully presented Commercial Invoice to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"Commercial Invoice VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "3782c808-5202-457e-a66f-f4270874d772"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "5b154060-44d8-4934-9a73-974eaf207176",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "257a2fcf-7fc0-4b7c-842e-8dad30b6e526"
            }
          }
        ]
      },
      {
        "id": "da013b50-afd6-4f96-a287-16b41e3e46e9",
        "name": "09 - Freight Forwarder - Present to Customs - (1/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e2d5c3aa-adb2-4656-ba48-8c415f6035c4",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.environment.set(\"org_3_domain\", responseJson.domain);",
                "pm.environment.set(\"org_3_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Freight Forwarder has authenticated to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "5c1f3ac5-77c5-4860-8507-0c5bee515601"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "f6b87e16-7bca-4869-82a0-8ce4af4a49e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b4698727-33e1-42d0-a707-98ae76980f14"
            }
          }
        ]
      },
      {
        "id": "4f2b826d-11a2-4ce5-b198-1384cb254fbf",
        "name": "09 - Freight Forwarder - Present to Customs - (2/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_1\", \n                \"instance_2\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_2_holder}}\",\n        \"verifiableCredential\": [\n            {{importers_commercial_invoice_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "135c765b-0b34-4f25-9a7c-3c4d5f65400c",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.environment.set(\"freight_forwarders_presentation_of_ci_to_customs\", JSON.stringify(responseJson));",
                "",
                "pm.test(\"Freight Forwarder VP of Commercial Invoice with workflow instances 'instance_1' and 'instance_2' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "6b91f70c-0362-4682-a27c-483600084c6c"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "6eda917d-fe02-4f9c-96d3-b354a93226a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "768665e6-ea71-4e2b-9ade-53a5e78eabaf"
            }
          }
        ]
      },
      {
        "id": "9922a8d5-7f42-480b-8567-d3f27282d736",
        "name": "09 - Freight Forwarder - Present to Customs - (3/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{freight_forwarders_presentation_of_ci_to_customs}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "9c88ff9e-0208-478b-8d0d-b8b0710906fd",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Freight Forwarder has successfully presented Commercial Invoice to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"Commercial Invoice VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "0d4c7c68-3666-4a0e-8e1c-4997c420ab83"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "647ee38b-8880-49f6-8988-4ad8131b393d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f70ca60-9555-414d-a704-5d561528aa2c"
            }
          }
        ]
      },
      {
        "id": "f614a997-1230-47c3-bdcf-1b1b5d986872",
        "name": "10 - Customs - Verify Commercial Invoice and Join Instances",
        "request": {
          "url": {
            "path": [
              "presentations",
              "verify"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiablePresentation\": {{freight_forwarders_presentation_of_ci_to_customs}},\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "0f46819a-dd5c-4fa5-b17b-68d9a17296ec",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Customs verifies Commercial Invoice\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "var workflowInstances = JSON.parse(pm.environment.get(\"freight_forwarders_presentation_of_ci_to_customs\")).workflow.instance",
                "",
                "pm.test(\"Customs checks known workflow instance ids and join the workflows\", function () {",
                "    pm.expect(workflowInstances[0]).to.eql(pm.environment.get(\"customs_first_workflow_instance_id\"));",
                "    pm.expect(workflowInstances[1]).to.eql(pm.environment.get(\"customs_second_workflow_instance_id\"));",
                "});",
                ""
              ],
              "_lastExecutionId": "fabc082b-03f4-468d-ac4b-3bf1fc15ba92"
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 36,
        "pending": 0,
        "failed": 3
      },
      "prerequests": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 30,
        "pending": 0,
        "failed": 14
      },
      "testScripts": {
        "total": 24,
        "pending": 0,
        "failed": 3
      },
      "prerequestScripts": {
        "total": 12,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 2151.4166666666665,
      "responseMin": 42,
      "responseMax": 11745,
      "responseSd": 3449.981460296401,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1649413890243,
      "completed": 1649413942603
    },
    "executions": [
      {
        "id": "b8d27d66-9def-4958-9cfe-fb86cab4150c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 24,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fd4b2ad6-cdfd-4d2a-9ffb-fd1e61afe68e",
          "httpRequestId": "7a216375-4c53-4f75-a690-a809d2561faa"
        },
        "item": {
          "id": "b8d27d66-9def-4958-9cfe-fb86cab4150c",
          "name": "00 - Importer Access Token"
        },
        "response": {
          "id": "ff3855ea-cf67-40cd-9731-697abc752ab3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11745,
          "responseSize": 60
        },
        "assertions": [
          {
            "assertion": "Importer application has access token",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Importer application has access token",
              "message": "expected response to have status code 200 but got 401",
              "stack": "AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:1)"
            }
          }
        ]
      },
      {
        "id": "8a8a0053-2845-48c2-93b1-13388ea4fa63",
        "cursor": {
          "ref": "8c49192a-910b-43af-a214-6da7a6fb9b5a",
          "length": 24,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2253f37b-8885-4c3a-a606-4634915b12a5"
        },
        "item": {
          "id": "8a8a0053-2845-48c2-93b1-13388ea4fa63",
          "name": "00 - Freight Forwarder Access Token"
        },
        "response": {
          "id": "0af6d57a-6581-47ac-9786-029ce6ed9a70",
          "status": "OK",
          "code": 200,
          "responseTime": 257,
          "responseSize": 852
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder application has access token",
            "skipped": false
          }
        ]
      },
      {
        "id": "7694194f-f6a7-4721-a7fc-030b82dc9340",
        "cursor": {
          "ref": "d20d141e-bfca-4c7d-95d0-f1e81f880464",
          "length": 24,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8a3176d3-b412-4c87-bda2-bd5d293df088"
        },
        "item": {
          "id": "7694194f-f6a7-4721-a7fc-030b82dc9340",
          "name": "00 - Customs Access Token"
        },
        "response": {
          "id": "3686c0bc-84da-452e-ba87-bc37f3a76a63",
          "status": "OK",
          "code": 200,
          "responseTime": 5786,
          "responseSize": 852
        },
        "assertions": [
          {
            "assertion": "Customs application has access token",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cebd9d-d705-48a4-bb13-579756963be7",
        "cursor": {
          "ref": "a6a6acdc-7a36-4c9e-9f53-f8bbc85e9347",
          "length": 24,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "75402b01-ec2b-4f3a-8d38-2727181b3b25"
        },
        "item": {
          "id": "11cebd9d-d705-48a4-bb13-579756963be7",
          "name": "00 - Get Importer Exchange Endpoint"
        },
        "response": {
          "id": "95073064-9bd8-47f6-8315-42d7b21f97ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 28
        }
      },
      {
        "id": "b75a6071-8ed0-41df-9a55-5e48c21c9eba",
        "cursor": {
          "ref": "e24a7ea1-562b-4cd1-bf4f-3b0ce08f4492",
          "length": 24,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fd9afa70-36d9-430e-b3ba-9b8fcfa1a9e9"
        },
        "item": {
          "id": "b75a6071-8ed0-41df-9a55-5e48c21c9eba",
          "name": "00 - Get Freight Forwarder Exchange Endpoint"
        },
        "response": {
          "id": "0632ca6b-8a48-4a2b-b785-35f7acc1b504",
          "status": "OK",
          "code": 200,
          "responseTime": 1104,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has holder DID",
            "skipped": false
          },
          {
            "assertion": "Freight Forwarder has service endpoint",
            "skipped": false
          }
        ]
      },
      {
        "id": "008e72d6-49d3-4f03-99bc-bc22b0d49f1a",
        "cursor": {
          "ref": "112ac86c-60ed-48f9-8331-1c525400534f",
          "length": 24,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "31341b16-d901-45f6-bd35-ddacce6c6e4b"
        },
        "item": {
          "id": "008e72d6-49d3-4f03-99bc-bc22b0d49f1a",
          "name": "00 - Get Customs Exchange Endpoint"
        },
        "response": {
          "id": "fc6dd983-7d0b-40aa-8a7f-34ed81d9c0f5",
          "status": "OK",
          "code": 200,
          "responseTime": 2042,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "Customs has holder DID",
            "skipped": false
          },
          {
            "assertion": "Customs has service endpoint",
            "skipped": false
          }
        ]
      },
      {
        "id": "6727ac0f-1ccb-46bd-8e41-7f40de09ab06",
        "cursor": {
          "ref": "a5045a6d-22b2-430a-85d7-ded549c6da26",
          "length": 24,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c0e87377-3462-40b5-904a-4c15670d635e"
        },
        "item": {
          "id": "6727ac0f-1ccb-46bd-8e41-7f40de09ab06",
          "name": "01 - Importer - Issue Proforma Invoice"
        },
        "response": {
          "id": "effb6836-3bba-4ef4-bfbc-c69b5737ccc4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 28
        },
        "assertions": [
          {
            "assertion": "Proforma Invoice VC issued",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Proforma Invoice VC issued",
              "message": "expected response to have status code 201 but got 401",
              "stack": "AssertionError: expected response to have status code 201 but got 401\n   at Object.eval sandbox-script.js:1:7)"
            }
          }
        ]
      },
      {
        "id": "33cac97c-f343-4ada-a79d-a3b03feb3c19",
        "cursor": {
          "ref": "50e7cf31-f2b3-4254-8523-f8e5bf607f2e",
          "length": 24,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c6be280d-3f13-473f-9e75-d9e5f0cd1e5a"
        },
        "item": {
          "id": "33cac97c-f343-4ada-a79d-a3b03feb3c19",
          "name": "02 - Importer - Present to Customs - (1/3)"
        },
        "response": {
          "id": "0ddf8461-4836-40cc-a927-3331b127d3b4",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Importer has authenticated to Customs",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35482fd-151e-4f95-9470-cbe289e339c4",
        "cursor": {
          "ref": "ad1d0410-7368-4da0-89ca-040dccc08171",
          "length": 24,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3957619e-64f5-4c01-b2b8-00891ba010d8"
        },
        "item": {
          "id": "f35482fd-151e-4f95-9470-cbe289e339c4",
          "name": "02 - Importer - Present to Customs - (2/3)"
        },
        "response": {
          "id": "0776a116-d80f-420e-8d23-8f1090cb1027",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 56
        },
        "assertions": [
          {
            "assertion": "Importer VP of Proforma Invoice with workflow instance 'instance_1' proved",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Importer VP of Proforma Invoice with workflow instance 'instance_1' proved",
              "message": "expected response to have status code 201 but got 500",
              "stack": "AssertionError: expected response to have status code 201 but got 500\n   at Object.eval sandbox-script.js:1:9)"
            }
          }
        ]
      },
      {
        "id": "83797105-0337-4e02-999e-ba1cb72b6412",
        "cursor": {
          "ref": "38d10ada-495f-48d6-afb0-c9a8f9a658fd",
          "length": 24,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "62897bf1-c7c4-47a8-99ff-265bb155a321"
        },
        "item": {
          "id": "83797105-0337-4e02-999e-ba1cb72b6412",
          "name": "02 - Importer - Present to Customs - (3/3)"
        },
        "response": {
          "id": "2634e0c0-a380-4706-8b45-6e0c9c09b329",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 56
        },
        "assertions": [
          {
            "assertion": "Importer has successfully presented Proforma Invoice to Customs",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Importer has successfully presented Proforma Invoice to Customs",
              "message": "expected response to have status code 200 but got 500",
              "stack": "AssertionError: expected response to have status code 200 but got 500\n   at Object.eval sandbox-script.js:1:10)"
            }
          },
          {
            "assertion": "Proforma Invoice VP verification returned 'true'",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Proforma Invoice VP verification returned 'true'",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:10)"
            }
          }
        ]
      },
      {
        "id": "5cb8046c-ff10-43e2-8874-49e723a6f833",
        "cursor": {
          "ref": "455121ff-6cb1-49a5-a8b8-136cb90fd334",
          "length": 24,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0b93e546-0f96-4855-afa2-e84bc2942317"
        },
        "item": {
          "id": "5cb8046c-ff10-43e2-8874-49e723a6f833",
          "name": "03 - Customs - Verify Proforma Invoice"
        },
        "response": {
          "id": "02cb5075-9c46-42c4-aa87-f3802b504eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "Customs verifies Proforma Invoice",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Customs verifies Proforma Invoice",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:11)"
            }
          }
        ]
      },
      {
        "id": "a9651441-e4a1-441f-b02f-491e04edf53c",
        "cursor": {
          "ref": "401c6072-c7b7-4501-b184-6867edd57bc5",
          "length": 24,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a56588de-d1a5-4783-8d52-8dc0f9b9f168"
        },
        "item": {
          "id": "a9651441-e4a1-441f-b02f-491e04edf53c",
          "name": "04 - Freight Forwarder - Issue House Waybill"
        },
        "response": {
          "id": "08086844-b760-45d1-b476-1b38d29b37cf",
          "status": "Created",
          "code": 201,
          "responseTime": 3858,
          "responseSize": 3507
        },
        "assertions": [
          {
            "assertion": "House Bill of Lading VC issued",
            "skipped": false
          }
        ]
      },
      {
        "id": "1620dd6a-cdb0-4d43-9841-e704cdc24d8f",
        "cursor": {
          "ref": "d5c64294-5e1b-4be2-b5dc-af7413576009",
          "length": 24,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7b6f0c19-ff20-4225-9b2b-9a182bb2aa12"
        },
        "item": {
          "id": "1620dd6a-cdb0-4d43-9841-e704cdc24d8f",
          "name": "05 - Freight Forwarder - Present to Customs - (1/3)"
        },
        "response": {
          "id": "6602ef6a-aed7-43ce-8494-50b98a013365",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has authenticated to Customs",
            "skipped": false
          }
        ]
      },
      {
        "id": "7318264c-49e7-46d3-9813-8591eaa723a2",
        "cursor": {
          "ref": "b38c1ba0-1f76-49e1-88f8-01dbb6f405f9",
          "length": 24,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "701acfc7-826f-4039-ae6c-7da6ff995c09"
        },
        "item": {
          "id": "7318264c-49e7-46d3-9813-8591eaa723a2",
          "name": "05 - Freight Forwarder - Present to Customs - (2/3)"
        },
        "response": {
          "id": "b5b89e78-1a42-4495-a57a-2c1309c0f867",
          "status": "Created",
          "code": 201,
          "responseTime": 5989,
          "responseSize": 4305
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder VP of House Bill of Lading with workflow instance 'instance_2' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "11061661-dcff-4f32-b6da-cf5aa4135b0a",
        "cursor": {
          "ref": "9e798b58-3eb2-496b-82e6-93ca7a6302b4",
          "length": 24,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "73312df8-c829-4704-a0e5-a7de32930798"
        },
        "item": {
          "id": "11061661-dcff-4f32-b6da-cf5aa4135b0a",
          "name": "05 - Freight Forwarder - Present to Customs - (3/3)"
        },
        "response": {
          "id": "9cd0ac88-8dbb-42b2-809c-47584e7ca81d",
          "status": "OK",
          "code": 200,
          "responseTime": 10079,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has successfully presented House Bill of Lading to Customs",
            "skipped": false
          },
          {
            "assertion": "House Bill of Lading VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "59174064-9c42-4b6d-992b-4e3c39c18781",
        "cursor": {
          "ref": "9368a1c8-5375-4594-b161-75cbadb9cdff",
          "length": 24,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "863bf623-7775-41d4-b59d-3e483b5472c8"
        },
        "item": {
          "id": "59174064-9c42-4b6d-992b-4e3c39c18781",
          "name": "06 - Customs - Verify House Waybill"
        },
        "response": {
          "id": "d962d77e-f369-4dcc-9d57-218024d5adfa",
          "status": "OK",
          "code": 200,
          "responseTime": 8122,
          "responseSize": 2874
        },
        "assertions": [
          {
            "assertion": "Customs verifies House Bill of Lading",
            "skipped": false
          },
          {
            "assertion": "Customs stores first workflow instance id: instance_2",
            "skipped": false
          }
        ]
      },
      {
        "id": "852b3ec5-0ceb-4038-ae86-bd4614f5f6a2",
        "cursor": {
          "ref": "30374d7a-cd60-4903-951d-585e6057a38b",
          "length": 24,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "92f01eae-7d6c-4f73-9672-7ca2df809d58"
        },
        "item": {
          "id": "852b3ec5-0ceb-4038-ae86-bd4614f5f6a2",
          "name": "07 - Importer - Issue Commercial Invoice"
        },
        "response": {
          "id": "b26f748b-a5b5-41cc-8eb0-132e9e000697",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 88,
          "responseSize": 28
        },
        "assertions": [
          {
            "assertion": "Commercial Invoice VC issued",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Commercial Invoice VC issued",
              "message": "expected response to have status code 201 but got 401",
              "stack": "AssertionError: expected response to have status code 201 but got 401\n   at Object.eval sandbox-script.js:1:17)"
            }
          }
        ]
      },
      {
        "id": "d807c0fc-0328-4cba-bce8-f05da4f9b629",
        "cursor": {
          "ref": "0898dbaa-c4f3-4a7e-9821-f6afecaabe0e",
          "length": 24,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "bb3f28e8-a52d-4a4d-a6cf-35cdd0284545"
        },
        "item": {
          "id": "d807c0fc-0328-4cba-bce8-f05da4f9b629",
          "name": "08 - Importer - Present to Freight Forwarder - (1/3)"
        },
        "response": {
          "id": "69f82fe6-def2-429d-984c-479684f56229",
          "status": "OK",
          "code": 200,
          "responseTime": 401,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Importer has authenticated to Freight Forwarder",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdebe57d-a616-4ebc-9ce4-d3969580a3b1",
        "cursor": {
          "ref": "d8c86253-58e6-40ad-a011-d167bda1254f",
          "length": 24,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "98714bc3-d991-4d51-88c3-0b482e6ad33d"
        },
        "item": {
          "id": "fdebe57d-a616-4ebc-9ce4-d3969580a3b1",
          "name": "08 - Importer - Present to Freight Forwarder - (2/3)"
        },
        "response": {
          "id": "4e78ecdd-5681-4b53-8ea2-0226848a1e8e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 56
        },
        "assertions": [
          {
            "assertion": "Importer VP of Commercial Invoice with workflow instance 'instance_1' proved",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Importer VP of Commercial Invoice with workflow instance 'instance_1' proved",
              "message": "expected response to have status code 201 but got 500",
              "stack": "AssertionError: expected response to have status code 201 but got 500\n   at Object.eval sandbox-script.js:1:19)"
            }
          }
        ]
      },
      {
        "id": "b44c1b22-aa68-44da-bff3-a73f43e52ffb",
        "cursor": {
          "ref": "a73b21fe-cf77-4c57-83ab-ae1287114295",
          "length": 24,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c7d07de3-9b30-462a-8fec-220a86459066"
        },
        "item": {
          "id": "b44c1b22-aa68-44da-bff3-a73f43e52ffb",
          "name": "08 - Importer - Present to Freight Forwarder - (3/3)"
        },
        "response": {
          "id": "ea29b6eb-faf5-41be-81b6-d92834ea6c34",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 56
        },
        "assertions": [
          {
            "assertion": "Importer has successfully presented Commercial Invoice to Customs",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Importer has successfully presented Commercial Invoice to Customs",
              "message": "expected response to have status code 200 but got 500",
              "stack": "AssertionError: expected response to have status code 200 but got 500\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "Commercial Invoice VP verification returned 'true'",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Commercial Invoice VP verification returned 'true'",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "da013b50-afd6-4f96-a287-16b41e3e46e9",
        "cursor": {
          "ref": "67d0ef3d-970c-4e59-aa14-4a71a9886582",
          "length": 24,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "36d95ff8-2622-4336-8aad-58714f0aa30d"
        },
        "item": {
          "id": "da013b50-afd6-4f96-a287-16b41e3e46e9",
          "name": "09 - Freight Forwarder - Present to Customs - (1/3)"
        },
        "response": {
          "id": "a2100e03-cb5c-4362-b4e3-95d377a22d86",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has authenticated to Customs",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2b826d-11a2-4ce5-b198-1384cb254fbf",
        "cursor": {
          "ref": "d16b6bb2-c1a4-4cfa-a665-28516b24476d",
          "length": 24,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1348f78f-058c-4c80-b4bf-525377601a0d"
        },
        "item": {
          "id": "4f2b826d-11a2-4ce5-b198-1384cb254fbf",
          "name": "09 - Freight Forwarder - Present to Customs - (2/3)"
        },
        "response": {
          "id": "219244a6-af39-4d51-a7a8-aa81e2843245",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 47,
          "responseSize": 56
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder VP of Commercial Invoice with workflow instances 'instance_1' and 'instance_2' proved",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Freight Forwarder VP of Commercial Invoice with workflow instances 'instance_1' and 'instance_2' proved",
              "message": "expected response to have status code 201 but got 500",
              "stack": "AssertionError: expected response to have status code 201 but got 500\n   at Object.eval sandbox-script.js:1:22)"
            }
          }
        ]
      },
      {
        "id": "9922a8d5-7f42-480b-8567-d3f27282d736",
        "cursor": {
          "ref": "4ef31fe6-3c36-47a3-8ef3-bc0899da86ac",
          "length": 24,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "693522dc-c8cf-4b12-a7bb-a95b3aca9e20"
        },
        "item": {
          "id": "9922a8d5-7f42-480b-8567-d3f27282d736",
          "name": "09 - Freight Forwarder - Present to Customs - (3/3)"
        },
        "response": {
          "id": "96750b4f-fa90-4817-a985-20fef72a6565",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 56
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has successfully presented Commercial Invoice to Customs",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Freight Forwarder has successfully presented Commercial Invoice to Customs",
              "message": "expected response to have status code 200 but got 500",
              "stack": "AssertionError: expected response to have status code 200 but got 500\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "Commercial Invoice VP verification returned 'true'",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Commercial Invoice VP verification returned 'true'",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "f614a997-1230-47c3-bdcf-1b1b5d986872",
        "cursor": {
          "ref": "8c9017b3-7191-40b2-8c93-5d5362bcf3c5",
          "length": 24,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d16db235-ff3e-4c75-8240-ecccc784394f"
        },
        "item": {
          "id": "f614a997-1230-47c3-bdcf-1b1b5d986872",
          "name": "10 - Customs - Verify Commercial Invoice and Join Instances"
        },
        "response": {
          "id": "c890ba2f-9afd-4ead-bfe1-89d77c92f4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1026,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "Customs verifies Commercial Invoice",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Customs verifies Commercial Invoice",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:24)"
            }
          }
        ]
      }
    ]
  }
}