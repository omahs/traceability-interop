{
  "collection": {
    "info": {
      "_postman_id": "c0814470-0c07-43ad-9ed4-2ad4b125c937",
      "name": "Workflow Instance Join",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e766ee75-10d1-4376-90e2-c1161313e015",
        "name": "Get Access Token",
        "request": {
          "url": {
            "host": [
              "{{ORG_1_TOKEN_ENDPOINT}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "audience",
                "value": "{{ORG_1_TOKEN_AUDIENCE}}"
              },
              {
                "key": "client_id",
                "value": "{{ORG_1_CLIENT_ID}}"
              },
              {
                "key": "client_secret",
                "value": "{{ORG_1_CLIENT_SECRET}}"
              },
              {
                "key": "grant_type",
                "value": "client_credentials"
              },
              {
                "key": "scope",
                "value": "resolve:dids issue:credentials prove:presentations verify:presentations"
              }
            ]
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "ba8ee5aa-ec4e-473a-8167-4386def5b348",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Importer application has access token\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"`org_1_access_token` persisted to collectionVariables\", function() {",
                "    const { access_token } = pm.response.json()",
                "    pm.collectionVariables.set(\"org_1_access_token\", access_token);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "a5449df1-c335-473a-8ea6-d4b0cd276876"
            }
          }
        ]
      },
      {
        "id": "7bbf51b0-90df-4d7c-82bc-c921a0a84c5f",
        "name": "Get Access Token",
        "request": {
          "url": {
            "host": [
              "{{ORG_2_TOKEN_ENDPOINT}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "audience",
                "value": "{{ORG_2_TOKEN_AUDIENCE}}"
              },
              {
                "key": "client_id",
                "value": "{{ORG_2_CLIENT_ID}}"
              },
              {
                "key": "client_secret",
                "value": "{{ORG_2_CLIENT_SECRET}}"
              },
              {
                "key": "grant_type",
                "value": "client_credentials"
              },
              {
                "key": "scope",
                "value": "resolve:dids issue:credentials prove:presentations verify:presentations"
              }
            ]
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "3ea6368c-e5d8-4c80-b6c6-37d3c13e93d9",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Importer application has access token\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"`org_2_access_token` persisted to collectionVariables\", function() {",
                "    const { access_token } = pm.response.json()",
                "    pm.collectionVariables.set(\"org_2_access_token\", access_token);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "d11cf142-114f-464e-b6e2-10a7926a3f45"
            }
          }
        ]
      },
      {
        "id": "623fa424-65b7-401e-b062-f02de68c01ed",
        "name": "Get Access Token",
        "request": {
          "url": {
            "host": [
              "{{ORG_3_TOKEN_ENDPOINT}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "audience",
                "value": "{{ORG_3_TOKEN_AUDIENCE}}"
              },
              {
                "key": "client_id",
                "value": "{{ORG_3_CLIENT_ID}}"
              },
              {
                "key": "client_secret",
                "value": "{{ORG_3_CLIENT_SECRET}}"
              },
              {
                "key": "grant_type",
                "value": "client_credentials"
              },
              {
                "key": "scope",
                "value": "resolve:dids issue:credentials prove:presentations verify:presentations"
              }
            ]
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "8403f1c5-0673-4072-a3f1-07243c122be6",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Importer application has access token\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"`org_3_access_token` persisted to collectionVariables\", function() {",
                "    const { access_token } = pm.response.json()",
                "    pm.collectionVariables.set(\"org_3_access_token\", access_token);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "5bba084f-e32a-4015-a263-635ea606f116"
            }
          }
        ]
      },
      {
        "id": "c89566b9-8fcd-4e40-a535-49f18b0780d0",
        "name": "Get Organization DIDs",
        "request": {
          "url": {
            "path": [
              "identifiers",
              "{{ORG_1_DID_WEB}}"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "2189771c-db26-466b-80c6-d6248ef9d166",
              "type": "text/javascript",
              "exec": [
                "const { didDocument } = pm.response.json()",
                "pm.collectionVariables.set(\"org_1_holder\", didDocument.id);",
                "pm.collectionVariables.set(\"org_1_tenant_url\", didDocument.service[0].serviceEndpoint);",
                "",
                "pm.test(\"Importer has holder DID\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_1_holder\")).to.not.be.undefined;",
                "});",
                "",
                "pm.test(\"Importer has service endpoint\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_1_tenant_url\")).to.not.be.undefined;",
                "});"
              ],
              "_lastExecutionId": "e47f97ef-6a05-45d6-8b94-1739e6e5d1b5"
            }
          }
        ]
      },
      {
        "id": "b7916daa-110e-4207-9cb6-07d6ed78936c",
        "name": "Get Organization DIDs",
        "request": {
          "url": {
            "path": [
              "identifiers",
              "{{ORG_2_DID_WEB}}"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "3e96e0fb-bc45-4137-9ada-3002c31c2f3b",
              "type": "text/javascript",
              "exec": [
                "const { didDocument } = pm.response.json()",
                "pm.collectionVariables.set(\"org_2_holder\", didDocument.id);",
                "pm.collectionVariables.set(\"org_2_tenant_url\", didDocument.service[0].serviceEndpoint);",
                "",
                "pm.test(\"Freight Forwarder has holder DID\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_2_holder\")).to.not.be.undefined;",
                "});",
                "",
                "pm.test(\"Freight Forwarder has service endpoint\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_2_tenant_url\")).to.not.be.undefined;",
                "});"
              ],
              "_lastExecutionId": "26bb851e-c5de-4301-aee2-e9627fef42a5"
            }
          }
        ]
      },
      {
        "id": "7818e2fb-ee37-4fcc-8def-b3dbacbc398c",
        "name": "Get Organization DIDs",
        "request": {
          "url": {
            "path": [
              "identifiers",
              "{{ORG_3_DID_WEB}}"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "d5269416-b7e7-4479-8355-242c333df905",
              "type": "text/javascript",
              "exec": [
                "const { didDocument } = pm.response.json()",
                "pm.collectionVariables.set(\"org_3_holder\", didDocument.id);",
                "pm.collectionVariables.set(\"org_3_tenant_url\", didDocument.service[0].serviceEndpoint);",
                "",
                "pm.test(\"Customs has holder DID\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_3_holder\")).to.not.be.undefined;",
                "});",
                "",
                "pm.test(\"Customs has service endpoint\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_3_tenant_url\")).to.not.be.undefined;",
                "});"
              ],
              "_lastExecutionId": "3e09a389-c360-46d8-afd3-b7cc662c21e9"
            }
          }
        ]
      },
      {
        "id": "7cda66bd-1359-44f4-b64b-75aec7807356",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\",\n            \"CommercialInvoiceCertificate\"\n        ],\n        \"name\": \"Commercial Invoice Certificate\",\n        \"issuanceDate\": \"2022-02-23T11:55:00Z\",\n        \"issuer\": {\n            \"id\": \"{{org_1_holder}}\",\n            \"type\": [\n                \"Organization\"\n            ],\n            \"address\": {\n                \"type\": [\n                    \"PostalAddress\"\n                ],\n                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                \"addressLocality\": \"Tsubame-shi\",\n                \"addressRegion\": \"Niigata-ken\",\n                \"postalCode\": \"959-0215\",\n                \"addressCountry\": \"Japan\"\n            }\n        },\n        \"credentialSubject\": {\n            \"type\": [\n                \"Invoice\"\n            ],\n            \"portOfEntry\": {\n                \"type\": \"Place\",\n                \"unLocode\": \"USLGB\"\n            },\n            \"destinationCountry\": \"MEX\",\n            \"purchaseDate\": \"2021-02-21\",\n            \"seller\": {\n                \"type\": [\n                    \"Organization\"\n                ],\n                \"address\": {\n                    \"type\": [\n                        \"PostalAddress\"\n                    ],\n                    \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                    \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                    \"addressLocality\": \"Tsubame-shi\",\n                    \"addressRegion\": \"Niigata-ken\",\n                    \"postalCode\": \"959-0215\",\n                    \"addressCountry\": \"Japan\"\n                }\n            },\n            \"buyer\": {\n                \"type\": [\n                    \"Organization\"\n                ],\n                \"address\": {\n                    \"type\": [\n                        \"PostalAddress\"\n                    ],\n                    \"organizationName\": \"Generic Motors of America\",\n                    \"streetAddress\": \"12 Generic Motors Dr\",\n                    \"addressLocality\": \"Detroit\",\n                    \"addressRegion\": \"Michigain\",\n                    \"postalCode\": \"48232-5170\",\n                    \"addressCountry\": \"USA\"\n                }\n            },\n            \"shipToParty\": {\n                \"type\": [\n                    \"Organization\"\n                ],\n                \"address\": {\n                    \"type\": [\n                        \"PostalAddress\"\n                    ],\n                    \"organizationName\": \"Generic Motors of America\",\n                    \"streetAddress\": \"12 Generic Motors Dr\",\n                    \"addressLocality\": \"Detroit\",\n                    \"addressRegion\": \"Michigain\",\n                    \"postalCode\": \"48232-5170\",\n                    \"addressCountry\": \"USA\"\n                }\n            },\n            \"itemsShipped\": [\n                {\n                    \"type\": \"TradeLineItem\",\n                    \"product\": {\n                        \"manufacturer\": {\n                            \"type\": \"Organization\",\n                            \"address\": {\n                                \"type\": \"PostalAddress\",\n                                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                                \"addressLocality\": \"Tsubame-shi\",\n                                \"addressRegion\": \"Niigata-ken\",\n                                \"postalCode\": \"959-0215\",\n                                \"addressCountry\": \"Japan\"\n                            }\n                        },\n                        \"description\": \"UNS S30400 chromium-nickel stainless steel rolls.\",\n                        \"weight\": {\n                            \"type\": \"QuantitativeValue\",\n                            \"unitCode\": \"lbs\",\n                            \"value\": \"16500\"\n                        }\n                    },\n                    \"itemCount\": 5,\n                    \"tradeLineItemWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"value\": \"82500\",\n                        \"unitCode\": \"lbs\"\n                    },\n                    \"priceSpecification\": {\n                        \"type\": \"PriceSpecification\",\n                        \"price\": 5200,\n                        \"priceCurrency\": \"USD\"\n                    }\n                },\n                {\n                    \"type\": \"TradeLineItem\",\n                    \"product\": {\n                        \"manufacturer\": {\n                            \"type\": \"Organization\",\n                            \"address\": {\n                                \"type\": \"PostalAddress\",\n                                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                                \"addressLocality\": \"Tsubame-shi\",\n                                \"addressRegion\": \"Niigata-ken\",\n                                \"postalCode\": \"959-0215\",\n                                \"addressCountry\": \"Japan\"\n                            }\n                        },\n                        \"description\": \"Galvalannealed ASTM A-653 zinc-iron alloy-coated steel sheets.\",\n                        \"weight\": {\n                            \"type\": \"QuantitativeValue\",\n                            \"value\": \"12680\",\n                            \"unitCode\": \"lbs\"\n                        }\n                    },\n                    \"itemCount\": 20,\n                    \"tradeLineItemWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"value\": \"253600\",\n                        \"unitCode\": \"lbs\"\n                    },\n                    \"priceSpecification\": {\n                        \"type\": \"PriceSpecification\",\n                        \"price\": 4400,\n                        \"priceCurrency\": \"USD\"\n                    }\n                }\n            ],\n            \"totalWeight\": {\n                \"type\": \"QuantitativeValue\",\n                \"value\": \"336100\",\n                \"unitCode\": \"lbs\"\n            },\n            \"totalPaymentDue\": {\n                \"type\": \"PriceSpecification\",\n                \"price\": 9600,\n                \"priceCurrency\": \"USD\"\n            }\n        }\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "86eb173f-fc01-4c91-8521-d7f308751838",
              "type": "text/javascript",
              "exec": [
                "  pm.test(\"Proforma Invoice VC issued\", function () {",
                "      pm.response.to.have.status(201);",
                "      pm.collectionVariables.set('importers_proforma_invoice_vc', JSON.stringify(pm.response.json()));",
                "  })"
              ],
              "_lastExecutionId": "b3b5cec8-895d-4c88-8abc-f1223c2a5c20"
            }
          }
        ]
      },
      {
        "id": "11ab336b-8e35-48d9-bf90-f2d3fb34f855",
        "name": "Initiate Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "52a5f0d5-f7bf-42e8-872e-330753f56a56",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"org_3_domain\", responseJson.domain);",
                "pm.collectionVariables.set(\"org_3_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Importer has authenticated to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "541a4a14-d2ed-4385-94ff-2653f5778834"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "294859c8-a7e6-4238-aee2-7531dc8f2a64",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ae01ad50-3724-4457-b2a2-908543050fa0"
            }
          }
        ]
      },
      {
        "id": "db0bff0a-0150-4e1d-8763-923b140fb1a2",
        "name": "Sign Presentation",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_1\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_1_holder}}\",\n        \"verifiableCredential\": [\n            {{importers_proforma_invoice_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "df55ee9c-73be-4f5e-bd34-64111a7541c6",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"importers_proforma_invoice_presented_to_customs\", JSON.stringify(responseJson));",
                "",
                "pm.test(\"Importer VP of Proforma Invoice with workflow instance 'instance_1' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "24a620f4-5447-4114-b93c-bd3c3e7c79b4"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "9c2cdc3c-3652-441e-9f11-59013bb8e97c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15263c7b-589e-4f33-8c74-8467ba4f2942"
            }
          }
        ]
      },
      {
        "id": "57d5a7b4-d868-4249-a07d-4669ad7e98e0",
        "name": "Complete Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{importers_proforma_invoice_presented_to_customs}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "83599f9b-4234-44f5-be63-ac4ae6c0f6eb",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Importer has successfully presented Proforma Invoice to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"Proforma Invoice VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "a22dc4bf-a3d2-4d3a-8299-1f2f17d60f18"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "1cbb772c-dbfb-42a1-9347-3405134b9bf1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "96e25bf6-12fe-41cd-8083-66fe32c2f67a"
            }
          }
        ]
      },
      {
        "id": "50cf24c9-3a86-4870-94fa-6cdd315d7a0c",
        "name": "Verify Credential",
        "request": {
          "url": {
            "path": [
              "presentations",
              "verify"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiablePresentation\": {{importers_proforma_invoice_presented_to_customs}},\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "176290af-31e5-4aa2-9f05-9d418846d75e",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Customs verifies Proforma Invoice\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "var workflowInstances = JSON.parse(pm.collectionVariables.get(\"importers_proforma_invoice_presented_to_customs\")).workflow.instance",
                "",
                "pm.test(\"Customs stores first workflow instance id: \" + workflowInstances[0], function () {",
                "    pm.collectionVariables.set(\"customs_first_workflow_instance_id\", workflowInstances[0]);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "eddab99c-ed4e-448d-8399-1ef18a4cac21"
            }
          }
        ]
      },
      {
        "id": "05a7ce9e-4117-49d3-882c-8b7cfabbd102",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"did:key:z6MkmbqKc6KncFZUbVJwUppttTkiMAtnVJ5wzC5oVBWci3pc\",\n        \"type\": [\n            \"VerifiableCredential\",\n            \"HouseBillOfLadingCertificate\"\n        ],\n        \"name\": \"House Bill Of Lading\",\n        \"issuanceDate\": \"2022-03-04T13:40:00Z\",\n        \"issuer\": {\n            \"type\": \"Organization\",\n            \"id\": \"{{org_2_holder}}\",\n            \"name\": \"World Forward, Inc.\",\n            \"address\": {\n                \"type\": \"PostalAddress\",\n                \"organizationName\": \"MCL Multi Container Line LTD.\",\n                \"streetAddress\": \"Well Fung Ind Centre\",\n                \"addressLocality\": \"Kwai Chung\",\n                \"addressRegion\": \"Hong Kong\",\n                \"addressCountry\": \"Hong Kong\"\n            }\n        },\n        \"credentialSubject\": {\n            \"type\": \"HouseBillOfLading\",\n            \"billOfLadingNumber\": \"FF873363210A\",\n            \"bookingNumber\": [\n                \"FF873363210\"\n            ],\n            \"shipper\": {\n                \"type\": \"Organization\",\n                \"name\": \"Espresso Italiano Co.\",\n                \"address\": {\n                    \"type\": \"PostalAddress\",\n                    \"streetAddress\": \"Via Vico Ferrovia 5\",\n                    \"addressLocality\": \"Goro\",\n                    \"addressRegion\": \"Ferrara\",\n                    \"postalCode\": \"44020\",\n                    \"addressCountry\": \"IT\"\n                },\n                \"email\": \"sales@espresso-italiano.example.com\",\n                \"phoneNumber\": \"+39 0351 9067195\"\n            },\n            \"consignee\": {\n                \"type\": \"Organization\",\n                \"name\": \"Prosumer Coffee Supplies, Ltd.\",\n                \"description\": \"Coffee Machine Imports\",\n                \"address\": {\n                    \"type\": \"PostalAddress\",\n                    \"streetAddress\": \"3934 Spinnaker Lane\",\n                    \"addressLocality\": \"Joliet\",\n                    \"addressRegion\": \"Illinois\",\n                    \"postalCode\": \"60432\",\n                    \"addressCountry\": \"US\"\n                }\n            },\n            \"notifyParty\": [\n                {\n                    \"type\": \"Organization\",\n                    \"name\": \"Prosumer Coffee Supplies, Ltd.\",\n                    \"description\": \"Coffee Machine Imports\",\n                    \"address\": {\n                        \"type\": \"PostalAddress\",\n                        \"streetAddress\": \"3934 Spinnaker Lane\",\n                        \"addressLocality\": \"Joliet\",\n                        \"addressRegion\": \"Illinois\",\n                        \"postalCode\": \"60432\",\n                        \"addressCountry\": \"US\"\n                    }\n                }\n            ],\n            \"carrier\": {\n                \"type\": \"Organization\",\n                \"id\": \"did:key:z6MktHQo3fRRohk44dsbE76CuiTpBmyMWq2VVjvV6aBSeE3U\",\n                \"name\": \"World Forward, Inc.\",\n                \"address\": {\n                    \"type\": \"PostalAddress\",\n                    \"organizationName\": \"MCL Multi Container Line LTD.\",\n                    \"streetAddress\": \"Well Fung Ind Centre\",\n                    \"addressLocality\": \"Kwai Chung\",\n                    \"addressRegion\": \"Hong Kong\",\n                    \"addressCountry\": \"Hong Kong\"\n                }\n            },\n            \"mainCarriageTransportMovement\": {\n                \"type\": \"Transport\",\n                \"vesselNumber\": \"MS Seven Seas\",\n                \"voyageNumber\": \"Atl-W0425\"\n            },\n            \"portOfLoading\": {\n                \"type\": \"Place\",\n                \"unLocode\": \"ITMIL\"\n            },\n            \"portOfDischarge\": {\n                \"type\": \"Place\",\n                \"unLocode\": \"USLGB\"\n            },\n            \"totalNumberOfPackages\": 2200,\n            \"transportEquipmentQuantity\": 2,\n            \"includedConsignmentItems\": [\n                {\n                    \"marksAndNumbers\": \"Espresso Italiano\",\n                    \"commodity\": {\n                        \"type\": \"Commodity\",\n                        \"commodityCode\": \"851671\",\n                        \"commodityCodeType\": \"HS\"\n                    },\n                    \"packageQuantity\": 220,\n                    \"netWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"unitCode\": \"kg\",\n                        \"value\": \"1460\"\n                    },\n                    \"grossWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"unitCode\": \"kg\",\n                        \"value\": \"1590\"\n                    },\n                    \"grossVolume\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"value\": \"85\",\n                        \"unitCode\": \"cmb\"\n                    }\n                }\n            ],\n            \"freightAndCharges\": {\n                \"type\": \"ServiceCharge\",\n                \"chargeCode\": \"basicFreight\",\n                \"paymentTerm\": \"collect\",\n                \"chargeText\": \"Negotiated ocean freight\",\n                \"rate\": {\n                    \"type\": \"PriceSpecification\",\n                    \"price\": 225,\n                    \"priceCurrency\": \"USD\"\n                },\n                \"calculationBasis\": \"Per container\",\n                \"appliedAmount\": {\n                    \"type\": \"PriceSpecification\",\n                    \"price\": 450,\n                    \"priceCurrency\": \"USD\"\n                }\n            },\n            \"declaredValue\": {\n                \"type\": \"PriceSpecification\",\n                \"price\": 24000,\n                \"priceCurrency\": \"USD\"\n            },\n            \"termsAndConditions\": \"https://terms-of-shipment.freightforwarder.example.com\"\n        }\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "062f6087-2249-46d2-89a0-2ab8103fbb04",
              "type": "text/javascript",
              "exec": [
                "  pm.test(\"House Bill of Lading VC issued\", function () {",
                "      pm.response.to.have.status(201);",
                "      pm.collectionVariables.set('freight_forwarders_hbol_vc', JSON.stringify(pm.response.json()));",
                "  })"
              ],
              "_lastExecutionId": "fbdeb108-a7c8-4a9c-ac72-aee8caa0b13e"
            }
          }
        ]
      },
      {
        "id": "47296932-56e8-4a0f-940a-945ade9cc7e3",
        "name": "Initiate Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "fca59f2a-1a7a-4e69-ba41-b65e8e1a6e4a",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"org_3_domain\", responseJson.domain);",
                "pm.collectionVariables.set(\"org_3_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Freight Forwarder has authenticated to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "3be30a4d-b7c2-4404-b196-8bca286d4571"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "0e336e8f-6c24-467c-b7b1-148302cd1c67",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9db7f6e5-669a-4fcb-93ec-c861c77e839f"
            }
          }
        ]
      },
      {
        "id": "b9942118-0127-486a-97cc-262445f0eb67",
        "name": "Sign Presentation",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_2\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_2_holder}}\",\n        \"verifiableCredential\": [\n            {{freight_forwarders_hbol_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "ccb3104b-9c92-46d3-98db-461f7fbd00f4",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"freight_forwarders_house_bill_presented_to_customs\", JSON.stringify(responseJson));",
                "",
                "pm.test(\"Freight Forwarder VP of House Bill of Lading with workflow instance 'instance_2' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "a5facf80-15f9-4316-ba00-336388788c80"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "d134f573-0527-4533-afa0-4d64e32971b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8e16191-b1b4-46b8-a7ce-b86ee66134a2"
            }
          }
        ]
      },
      {
        "id": "6dd793cf-1057-491e-9734-4c33847abdfd",
        "name": "Complete Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{freight_forwarders_house_bill_presented_to_customs}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "d3d3337d-710b-4b72-ad41-cbadb64806c6",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Freight Forwarder has successfully presented House Bill of Lading to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"House Bill of Lading VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "ca3bac43-e4c5-4091-b478-a77ccc94e729"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "7226bcf1-82da-4ee1-a2a3-7652f9542e7b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b18cac9-aec1-40cc-bbfe-65b840f9139d"
            }
          }
        ]
      },
      {
        "id": "451d3957-2b57-4f7c-a38c-b7f26e83dc4e",
        "name": "Verify Credential",
        "request": {
          "url": {
            "path": [
              "presentations",
              "verify"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiablePresentation\": {{freight_forwarders_house_bill_presented_to_customs}},\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "0f3e2960-3540-4f35-87ec-f43fc0d1dd2e",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Customs verifies House Bill of Lading\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "var workflowInstances = JSON.parse(pm.collectionVariables.get(\"freight_forwarders_house_bill_presented_to_customs\")).workflow.instance",
                "",
                "pm.test(\"Customs stores first workflow instance id: \" + workflowInstances[0], function () {",
                "    pm.collectionVariables.set(\"customs_second_workflow_instance_id\", workflowInstances[0]);",
                "});",
                ""
              ],
              "_lastExecutionId": "a1d66b2b-0096-4bf3-9cf1-65ad719ca0e5"
            }
          }
        ]
      },
      {
        "id": "c110fcfe-b255-41c6-921b-8dc4915b0d10",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"credential\": \n      {\n    \"@context\": [\n      \"https://www.w3.org/2018/credentials/v1\",\n      \"https://w3id.org/traceability/v1\"\n    ],\n    \"id\": \"did:key:z6MkhNsCYEQQWJdyAbfaMZHz4UG6UZoQUGot7z7tBNsbz1JG\",\n    \"type\": [\n      \"VerifiableCredential\",\n      \"CommercialInvoiceCertificate\"\n    ],\n    \"name\": \"Commercial Invoice Certificate\",\n    \"issuanceDate\": \"2022-02-23T11:55:00Z\",\n    \"issuer\": {\n      \"id\": \"{{org_1_holder}}\",\n      \"type\": [\n        \"Organization\"\n      ],\n      \"address\": {\n        \"type\": [\n          \"PostalAddress\"\n        ],\n        \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n        \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n        \"addressLocality\": \"Tsubame-shi\",\n        \"addressRegion\": \"Niigata-ken\",\n        \"postalCode\": \"959-0215\",\n        \"addressCountry\": \"Japan\"\n      }\n    },\n    \"credentialSubject\": {\n      \"type\": [\n        \"Invoice\"\n      ],\n      \"portOfEntry\": {\n        \"type\": \"Place\",\n        \"unLocode\": \"USLGB\"\n      },\n      \"destinationCountry\": \"MEX\",\n      \"purchaseDate\": \"2021-02-21\",\n      \"seller\": {\n        \"type\": [\n          \"Organization\"\n        ],\n        \"address\": {\n          \"type\": [\n            \"PostalAddress\"\n          ],\n          \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n          \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n          \"addressLocality\": \"Tsubame-shi\",\n          \"addressRegion\": \"Niigata-ken\",\n          \"postalCode\": \"959-0215\",\n          \"addressCountry\": \"Japan\"\n        }\n      },\n      \"buyer\": {\n        \"type\": [\n          \"Organization\"\n        ],\n        \"address\": {\n          \"type\": [\n            \"PostalAddress\"\n          ],\n          \"organizationName\": \"Generic Motors of America\",\n          \"streetAddress\": \"12 Generic Motors Dr\",\n          \"addressLocality\": \"Detroit\",\n          \"addressRegion\": \"Michigain\",\n          \"postalCode\": \"48232-5170\",\n          \"addressCountry\": \"USA\"\n        }\n      },\n      \"shipToParty\": {\n        \"type\": [\n          \"Organization\"\n        ],\n        \"address\": {\n          \"type\": [\n            \"PostalAddress\"\n          ],\n          \"organizationName\": \"Generic Motors of America\",\n          \"streetAddress\": \"12 Generic Motors Dr\",\n          \"addressLocality\": \"Detroit\",\n          \"addressRegion\": \"Michigain\",\n          \"postalCode\": \"48232-5170\",\n          \"addressCountry\": \"USA\"\n        }\n      },\n      \"itemsShipped\": [\n        {\n          \"type\": \"TradeLineItem\",\n          \"product\": {\n            \"manufacturer\": {\n              \"type\": \"Organization\",\n              \"address\": {\n                \"type\": \"PostalAddress\",\n                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                \"addressLocality\": \"Tsubame-shi\",\n                \"addressRegion\": \"Niigata-ken\",\n                \"postalCode\": \"959-0215\",\n                \"addressCountry\": \"Japan\"\n              }\n            },\n            \"description\": \"UNS S30400 chromium-nickel stainless steel rolls.\",\n            \"weight\": {\n              \"type\": \"QuantitativeValue\",\n              \"unitCode\": \"lbs\",\n              \"value\": \"16500\"\n            }\n          },\n          \"itemCount\": 5,\n          \"tradeLineItemWeight\": {\n            \"type\": \"QuantitativeValue\",\n            \"value\": \"82500\",\n            \"unitCode\": \"lbs\"\n          },\n          \"priceSpecification\": {\n            \"type\": \"PriceSpecification\",\n            \"price\": 5200,\n            \"priceCurrency\": \"USD\"\n          }\n        },\n        {\n          \"type\": \"TradeLineItem\",\n          \"product\": {\n            \"manufacturer\": {\n              \"type\": \"Organization\",\n              \"address\": {\n                \"type\": \"PostalAddress\",\n                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                \"addressLocality\": \"Tsubame-shi\",\n                \"addressRegion\": \"Niigata-ken\",\n                \"postalCode\": \"959-0215\",\n                \"addressCountry\": \"Japan\"\n              }\n            },\n            \"description\": \"Galvalannealed ASTM A-653 zinc-iron alloy-coated steel sheets.\",\n            \"weight\": {\n              \"type\": \"QuantitativeValue\",\n              \"value\": \"12680\",\n              \"unitCode\": \"lbs\"\n            }\n          },\n          \"itemCount\": 20,\n          \"tradeLineItemWeight\": {\n            \"type\": \"QuantitativeValue\",\n            \"value\": \"253600\",\n            \"unitCode\": \"lbs\"\n          },\n          \"priceSpecification\": {\n            \"type\": \"PriceSpecification\",\n            \"price\": 4400,\n            \"priceCurrency\": \"USD\"\n          }\n        }\n      ],\n      \"totalWeight\": {\n        \"type\": \"QuantitativeValue\",\n        \"value\": \"336100\",\n        \"unitCode\": \"lbs\"\n      },\n      \"totalPaymentDue\": {\n        \"type\": \"PriceSpecification\",\n        \"price\": 9600,\n        \"priceCurrency\": \"USD\"\n      }\n    }\n  },\n  \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5ce9fc4a-3983-4c27-87f5-eec17cc1d745",
              "type": "text/javascript",
              "exec": [
                "  pm.test(\"Commercial Invoice VC issued\", function () {",
                "      pm.response.to.have.status(201);",
                "      pm.collectionVariables.set('importers_commercial_invoice_vc', JSON.stringify(pm.response.json()));",
                "  })"
              ],
              "_lastExecutionId": "854cc651-97dc-42fc-b010-d3415eea75d9"
            }
          }
        ]
      },
      {
        "id": "30637728-25ca-42a5-98f7-797457ef9138",
        "name": "Initiate Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_2_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "54cd2d73-c269-4fd3-8698-d91744f81cd3",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"org_2_domain\", responseJson.domain);",
                "pm.collectionVariables.set(\"org_2_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Importer has authenticated to Freight Forwarder\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "eba5cc7e-6455-4403-9779-2e4cd82b66cf"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "89244a15-e1e5-4e2e-aa1d-31b0657626e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e8462aaf-3ddd-41e6-864d-957ac82673e5"
            }
          }
        ]
      },
      {
        "id": "172e1501-c8a1-46e2-88c8-d90552716f4f",
        "name": "Sign Presentation",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_1\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_1_holder}}\",\n        \"verifiableCredential\": [\n            {{importers_commercial_invoice_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_2_domain}}\",\n        \"challenge\": \"{{org_2_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "06c57019-5bb1-4a54-8990-8b58d8b9a758",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"importers_presentation_of_ci_to_freight_forwarder\", JSON.stringify(responseJson));",
                "",
                "pm.test(\"Importer VP of Commercial Invoice with workflow instance 'instance_1' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "ea0ce9f5-6888-4626-8987-5ffcd970075e"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "a3d8c45d-4f39-4107-afb9-eddb027944b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "40fe7ef1-5d05-4a38-98dc-17248ab6e3f2"
            }
          }
        ]
      },
      {
        "id": "97a6bf12-3688-4559-9c90-eaef2c102e9d",
        "name": "Complete Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_2_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{importers_presentation_of_ci_to_freight_forwarder}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f388bf76-4c84-40e8-a810-a63ac5e3d08d",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Importer has successfully presented Commercial Invoice to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"Commercial Invoice VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "07ff2042-3361-440b-aa49-aeb09929a1f0"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "84ff69de-ce17-4532-9cc7-bebfbe5eac39",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "614982d9-02f4-4e3d-8e89-21d852428d55"
            }
          }
        ]
      },
      {
        "id": "426b5a8d-6026-44a1-ba1c-63dfce932340",
        "name": "Initiate Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "a3dce8ce-7006-4771-b7c2-e0b3a1b19de9",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"org_3_domain\", responseJson.domain);",
                "pm.collectionVariables.set(\"org_3_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Freight Forwarder has authenticated to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "6a11b978-041b-4360-b430-da9cc93c45ac"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "c9469b84-5e96-4a12-aa6a-2677097838b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3da35d67-b7cd-4703-917c-6f648d53d1e9"
            }
          }
        ]
      },
      {
        "id": "c617b536-9b70-420f-807b-686a32039430",
        "name": "Sign Presentation",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_1\", \n                \"instance_2\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_2_holder}}\",\n        \"verifiableCredential\": [\n            {{importers_commercial_invoice_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "a43574a2-98a7-4cba-8ce1-88231176c0ea",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"freight_forwarders_presentation_of_ci_to_customs\", JSON.stringify(responseJson));",
                "",
                "pm.test(\"Freight Forwarder VP of Commercial Invoice with workflow instances 'instance_1' and 'instance_2' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "ea466192-a48e-485d-9c7a-bda22e898cc8"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "2bd75e75-48f0-469e-8a3f-9384933d5f7e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ec371e3-66a3-4921-ad39-5fdbe2f969e8"
            }
          }
        ]
      },
      {
        "id": "267e5ef1-26eb-4765-93f2-67d3ed2d344d",
        "name": "Complete Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{freight_forwarders_presentation_of_ci_to_customs}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5eedbba1-1899-44ae-8bcc-732cd13268e8",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Freight Forwarder has successfully presented Commercial Invoice to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"Commercial Invoice VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "02d6497a-d0a0-4662-b263-2040ccca3cc0"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "23b1c148-2a32-46f8-931c-c0fc1362771e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26850d1e-50a1-4799-b327-9dbd2edfe83e"
            }
          }
        ]
      },
      {
        "id": "26d5c529-8029-429a-ae8a-59ccd19e061e",
        "name": "Join Workflow Graphs",
        "request": {
          "url": {
            "path": [
              "presentations",
              "verify"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiablePresentation\": {{freight_forwarders_presentation_of_ci_to_customs}},\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "75e3ba6f-0d06-480d-a07f-a51185f40e33",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Customs verifies Commercial Invoice\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "var workflowInstances = JSON.parse(pm.collectionVariables.get(\"freight_forwarders_presentation_of_ci_to_customs\")).workflow.instance",
                "",
                "pm.test(\"Customs checks known workflow instance ids and join the workflows\", function () {",
                "    pm.expect(workflowInstances[0]).to.eql(pm.collectionVariables.get(\"customs_first_workflow_instance_id\"));",
                "    pm.expect(workflowInstances[1]).to.eql(pm.collectionVariables.get(\"customs_second_workflow_instance_id\"));",
                "});",
                ""
              ],
              "_lastExecutionId": "e3561618-79c2-4a82-a552-1cf33d0dde5a"
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 36,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 37,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 12,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 2882.4166666666674,
      "responseMin": 102,
      "responseMax": 7695,
      "responseSd": 2880.6910183245195,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1669684393364,
      "completed": 1669684463155
    },
    "executions": [
      {
        "id": "e766ee75-10d1-4376-90e2-c1161313e015",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 24,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "533343af-23b1-4065-8332-9c8b6d6cc0b3",
          "httpRequestId": "4f90ed3b-b9b1-456c-9e5d-f35377883bcf"
        },
        "item": {
          "id": "e766ee75-10d1-4376-90e2-c1161313e015",
          "name": "Get Access Token"
        },
        "response": {
          "id": "addf050d-4226-4034-b30a-9961ecf9feaf",
          "status": "OK",
          "code": 200,
          "responseTime": 556,
          "responseSize": 1044
        },
        "assertions": [
          {
            "assertion": "Importer application has access token",
            "skipped": false
          },
          {
            "assertion": "`org_1_access_token` persisted to collectionVariables",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbf51b0-90df-4d7c-82bc-c921a0a84c5f",
        "cursor": {
          "ref": "eefcdbd1-5d0c-40ac-866a-11f2cb158177",
          "length": 24,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "edab0ba2-36d5-4574-a63f-cb9f306eda3c"
        },
        "item": {
          "id": "7bbf51b0-90df-4d7c-82bc-c921a0a84c5f",
          "name": "Get Access Token"
        },
        "response": {
          "id": "946b2c33-e0d5-428b-a8a5-a2cdf8deef15",
          "status": "OK",
          "code": 200,
          "responseTime": 280,
          "responseSize": 1044
        },
        "assertions": [
          {
            "assertion": "Importer application has access token",
            "skipped": false
          },
          {
            "assertion": "`org_2_access_token` persisted to collectionVariables",
            "skipped": false
          }
        ]
      },
      {
        "id": "623fa424-65b7-401e-b062-f02de68c01ed",
        "cursor": {
          "ref": "6f926764-990b-4dd7-ad18-90ceb3e807a0",
          "length": 24,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "28c60c75-6a77-4d25-b95b-0267f4da21da"
        },
        "item": {
          "id": "623fa424-65b7-401e-b062-f02de68c01ed",
          "name": "Get Access Token"
        },
        "response": {
          "id": "2b793deb-11b3-4ef9-8ed4-1da8bec7d5db",
          "status": "OK",
          "code": 200,
          "responseTime": 321,
          "responseSize": 1044
        },
        "assertions": [
          {
            "assertion": "Importer application has access token",
            "skipped": false
          },
          {
            "assertion": "`org_3_access_token` persisted to collectionVariables",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89566b9-8fcd-4e40-a535-49f18b0780d0",
        "cursor": {
          "ref": "3ec16a84-7e10-437b-a26d-c74408677246",
          "length": 24,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "868b4c1c-e1c9-4eea-96b8-1e82acece2d1"
        },
        "item": {
          "id": "c89566b9-8fcd-4e40-a535-49f18b0780d0",
          "name": "Get Organization DIDs"
        },
        "response": {
          "id": "6007b23a-92b7-4be0-9cbc-a5b6758620ab",
          "status": "OK",
          "code": 200,
          "responseTime": 1200,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "Importer has holder DID",
            "skipped": false
          },
          {
            "assertion": "Importer has service endpoint",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7916daa-110e-4207-9cb6-07d6ed78936c",
        "cursor": {
          "ref": "484ce550-d418-4cef-bf9b-d8682f3bbb13",
          "length": 24,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dd79dcd1-0739-493c-a56e-91824d74eb29"
        },
        "item": {
          "id": "b7916daa-110e-4207-9cb6-07d6ed78936c",
          "name": "Get Organization DIDs"
        },
        "response": {
          "id": "00e94e66-f20a-4d08-a57d-6cac4e34eae0",
          "status": "OK",
          "code": 200,
          "responseTime": 1373,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has holder DID",
            "skipped": false
          },
          {
            "assertion": "Freight Forwarder has service endpoint",
            "skipped": false
          }
        ]
      },
      {
        "id": "7818e2fb-ee37-4fcc-8def-b3dbacbc398c",
        "cursor": {
          "ref": "6a5d9fc0-bd54-4927-9cea-116accdcdb26",
          "length": 24,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ceafdee6-d3ad-43e9-8565-841a107a3ef9"
        },
        "item": {
          "id": "7818e2fb-ee37-4fcc-8def-b3dbacbc398c",
          "name": "Get Organization DIDs"
        },
        "response": {
          "id": "48eb116d-7bfc-438e-a622-7087f87532f0",
          "status": "OK",
          "code": 200,
          "responseTime": 1445,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "Customs has holder DID",
            "skipped": false
          },
          {
            "assertion": "Customs has service endpoint",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cda66bd-1359-44f4-b64b-75aec7807356",
        "cursor": {
          "ref": "af6a617f-8c28-4e69-9076-51fe0c94ecf0",
          "length": 24,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "58eaf8d4-8af7-4fbc-9af2-89ba8d73a33e"
        },
        "item": {
          "id": "7cda66bd-1359-44f4-b64b-75aec7807356",
          "name": "Issue Credential"
        },
        "response": {
          "id": "dd38a95f-f33e-4d98-9bca-c2948d13ff5c",
          "status": "Created",
          "code": 201,
          "responseTime": 6648,
          "responseSize": 3415
        },
        "assertions": [
          {
            "assertion": "Proforma Invoice VC issued",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ab336b-8e35-48d9-bf90-f2d3fb34f855",
        "cursor": {
          "ref": "24d39e49-babc-404b-bde2-046a87577eae",
          "length": 24,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1bbb7dba-88bc-4187-85ee-fec8a80a00ff"
        },
        "item": {
          "id": "11ab336b-8e35-48d9-bf90-f2d3fb34f855",
          "name": "Initiate Exchange"
        },
        "response": {
          "id": "7e477f18-d1c3-43df-afed-a807fe024165",
          "status": "OK",
          "code": 200,
          "responseTime": 102,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Importer has authenticated to Customs",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0bff0a-0150-4e1d-8763-923b140fb1a2",
        "cursor": {
          "ref": "33c95b66-fe7e-4ec6-b419-8f0193190391",
          "length": 24,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a8d6f2c4-601f-4cf1-ba31-e60b071a9750"
        },
        "item": {
          "id": "db0bff0a-0150-4e1d-8763-923b140fb1a2",
          "name": "Sign Presentation"
        },
        "response": {
          "id": "a39a231d-3a35-4c2b-9a36-5165655075b6",
          "status": "Created",
          "code": 201,
          "responseTime": 6471,
          "responseSize": 4245
        },
        "assertions": [
          {
            "assertion": "Importer VP of Proforma Invoice with workflow instance 'instance_1' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d5a7b4-d868-4249-a07d-4669ad7e98e0",
        "cursor": {
          "ref": "38eccad5-dd25-432f-bc23-c6864d7dd315",
          "length": 24,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "69c88ab7-9a16-4c04-9126-594cb039a8a9"
        },
        "item": {
          "id": "57d5a7b4-d868-4249-a07d-4669ad7e98e0",
          "name": "Complete Exchange"
        },
        "response": {
          "id": "10cf2ec1-928f-442b-bee8-264272cd94d7",
          "status": "OK",
          "code": 200,
          "responseTime": 452,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Importer has successfully presented Proforma Invoice to Customs",
            "skipped": false
          },
          {
            "assertion": "Proforma Invoice VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cf24c9-3a86-4870-94fa-6cdd315d7a0c",
        "cursor": {
          "ref": "57960003-9b90-4c65-8963-6d6e55f6a82c",
          "length": 24,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8819f178-456c-47a4-8f4a-9c08187ec374"
        },
        "item": {
          "id": "50cf24c9-3a86-4870-94fa-6cdd315d7a0c",
          "name": "Verify Credential"
        },
        "response": {
          "id": "f9dca4fe-3165-4e64-b758-6f4ff1c2109d",
          "status": "OK",
          "code": 200,
          "responseTime": 7621,
          "responseSize": 3018
        },
        "assertions": [
          {
            "assertion": "Customs verifies Proforma Invoice",
            "skipped": false
          },
          {
            "assertion": "Customs stores first workflow instance id: instance_1",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a7ce9e-4117-49d3-882c-8b7cfabbd102",
        "cursor": {
          "ref": "64870e8b-7dc0-4f12-8247-9523db30e417",
          "length": 24,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a3c322c2-5aef-4d5d-a419-ff58de66c22b"
        },
        "item": {
          "id": "05a7ce9e-4117-49d3-882c-8b7cfabbd102",
          "name": "Issue Credential"
        },
        "response": {
          "id": "5453d679-46ea-41e5-aef5-c54d5eec4b33",
          "status": "Created",
          "code": 201,
          "responseTime": 3963,
          "responseSize": 3539
        },
        "assertions": [
          {
            "assertion": "House Bill of Lading VC issued",
            "skipped": false
          }
        ]
      },
      {
        "id": "47296932-56e8-4a0f-940a-945ade9cc7e3",
        "cursor": {
          "ref": "f0297b37-2227-47b5-b114-2f6c6aea681b",
          "length": 24,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "741ef343-b575-460f-a74b-4be4a66a2ff1"
        },
        "item": {
          "id": "47296932-56e8-4a0f-940a-945ade9cc7e3",
          "name": "Initiate Exchange"
        },
        "response": {
          "id": "69473f68-ee31-40ec-872d-723454a0c244",
          "status": "OK",
          "code": 200,
          "responseTime": 120,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has authenticated to Customs",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9942118-0127-486a-97cc-262445f0eb67",
        "cursor": {
          "ref": "d91756cc-2adb-4d55-9b54-17540ff6227d",
          "length": 24,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9ef2d262-502f-41be-84f8-f54d888cf18a"
        },
        "item": {
          "id": "b9942118-0127-486a-97cc-262445f0eb67",
          "name": "Sign Presentation"
        },
        "response": {
          "id": "41c3d465-3cb1-4592-9396-518701754dd0",
          "status": "Created",
          "code": 201,
          "responseTime": 5716,
          "responseSize": 4369
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder VP of House Bill of Lading with workflow instance 'instance_2' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd793cf-1057-491e-9734-4c33847abdfd",
        "cursor": {
          "ref": "9a2918bf-c464-46f7-9f16-ea3ec0d971d3",
          "length": 24,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "84682e88-169a-496f-9d4f-4567557053f4"
        },
        "item": {
          "id": "6dd793cf-1057-491e-9734-4c33847abdfd",
          "name": "Complete Exchange"
        },
        "response": {
          "id": "7eee059e-46db-40d5-99e9-269fcb7a726a",
          "status": "OK",
          "code": 200,
          "responseTime": 431,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has successfully presented House Bill of Lading to Customs",
            "skipped": false
          },
          {
            "assertion": "House Bill of Lading VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "451d3957-2b57-4f7c-a38c-b7f26e83dc4e",
        "cursor": {
          "ref": "02f8f4d6-8ae5-4ac2-9487-f71e99f7647c",
          "length": 24,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1f7b882c-610a-43c8-b66f-e81a71867d39"
        },
        "item": {
          "id": "451d3957-2b57-4f7c-a38c-b7f26e83dc4e",
          "name": "Verify Credential"
        },
        "response": {
          "id": "372ac469-0034-447f-ae78-e4b4a27c6314",
          "status": "OK",
          "code": 200,
          "responseTime": 7241,
          "responseSize": 3092
        },
        "assertions": [
          {
            "assertion": "Customs verifies House Bill of Lading",
            "skipped": false
          },
          {
            "assertion": "Customs stores first workflow instance id: instance_2",
            "skipped": false
          }
        ]
      },
      {
        "id": "c110fcfe-b255-41c6-921b-8dc4915b0d10",
        "cursor": {
          "ref": "714dc4db-6fbe-432c-9bf1-2042e0e3b77f",
          "length": 24,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e8409850-1fd7-450f-be24-6609b4f6b3bf"
        },
        "item": {
          "id": "c110fcfe-b255-41c6-921b-8dc4915b0d10",
          "name": "Issue Credential"
        },
        "response": {
          "id": "f22abd75-b738-4773-a5f9-62ce65a36639",
          "status": "Created",
          "code": 201,
          "responseTime": 4202,
          "responseSize": 3479
        },
        "assertions": [
          {
            "assertion": "Commercial Invoice VC issued",
            "skipped": false
          }
        ]
      },
      {
        "id": "30637728-25ca-42a5-98f7-797457ef9138",
        "cursor": {
          "ref": "4a47d6d2-4738-461e-ad60-ec08b973e6cf",
          "length": 24,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4e43415d-ca37-4d4b-8431-0dbfc546bc0d"
        },
        "item": {
          "id": "30637728-25ca-42a5-98f7-797457ef9138",
          "name": "Initiate Exchange"
        },
        "response": {
          "id": "26ecd556-4926-48e2-86f2-94475ed4b69e",
          "status": "OK",
          "code": 200,
          "responseTime": 114,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Importer has authenticated to Freight Forwarder",
            "skipped": false
          }
        ]
      },
      {
        "id": "172e1501-c8a1-46e2-88c8-d90552716f4f",
        "cursor": {
          "ref": "7260c4da-c0c2-4cab-be1e-57096ca92214",
          "length": 24,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "bc90aad5-07c3-4554-bea8-62ebdbc0a10b"
        },
        "item": {
          "id": "172e1501-c8a1-46e2-88c8-d90552716f4f",
          "name": "Sign Presentation"
        },
        "response": {
          "id": "c0517fb2-a71a-40ba-bfd1-bdc3a02155cf",
          "status": "Created",
          "code": 201,
          "responseTime": 5943,
          "responseSize": 4309
        },
        "assertions": [
          {
            "assertion": "Importer VP of Commercial Invoice with workflow instance 'instance_1' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a6bf12-3688-4559-9c90-eaef2c102e9d",
        "cursor": {
          "ref": "0f3d78f9-0ee1-4a51-9859-e6a227ee898d",
          "length": 24,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d66b8f6a-bb44-4695-b1dc-b1140616c716"
        },
        "item": {
          "id": "97a6bf12-3688-4559-9c90-eaef2c102e9d",
          "name": "Complete Exchange"
        },
        "response": {
          "id": "24e8d7b7-9efe-48b1-9466-7a9fdeefc8dd",
          "status": "OK",
          "code": 200,
          "responseTime": 764,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Importer has successfully presented Commercial Invoice to Customs",
            "skipped": false
          },
          {
            "assertion": "Commercial Invoice VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "426b5a8d-6026-44a1-ba1c-63dfce932340",
        "cursor": {
          "ref": "0ea8e297-58df-4662-ab2d-0f6e5a6458f8",
          "length": 24,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "341ebc99-dfb0-4201-bd09-bda8c0f21762"
        },
        "item": {
          "id": "426b5a8d-6026-44a1-ba1c-63dfce932340",
          "name": "Initiate Exchange"
        },
        "response": {
          "id": "906f2084-1626-482a-8ccb-6261d1d10ef8",
          "status": "OK",
          "code": 200,
          "responseTime": 146,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has authenticated to Customs",
            "skipped": false
          }
        ]
      },
      {
        "id": "c617b536-9b70-420f-807b-686a32039430",
        "cursor": {
          "ref": "582186d2-bf6f-4092-a662-b54ef06a6027",
          "length": 24,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "37fba4fa-c83f-4780-a6ac-ae253aee14c5"
        },
        "item": {
          "id": "c617b536-9b70-420f-807b-686a32039430",
          "name": "Sign Presentation"
        },
        "response": {
          "id": "fed272c3-12e4-4548-beea-ab2089726cf9",
          "status": "Created",
          "code": 201,
          "responseTime": 5848,
          "responseSize": 4322
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder VP of Commercial Invoice with workflow instances 'instance_1' and 'instance_2' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "267e5ef1-26eb-4765-93f2-67d3ed2d344d",
        "cursor": {
          "ref": "932b3276-43c3-4558-a654-9af1c6458117",
          "length": 24,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "932e6461-3fdd-44a6-ab04-eb7b85a07a90"
        },
        "item": {
          "id": "267e5ef1-26eb-4765-93f2-67d3ed2d344d",
          "name": "Complete Exchange"
        },
        "response": {
          "id": "06f426b4-ef67-41c1-a041-c1963e72ecdf",
          "status": "OK",
          "code": 200,
          "responseTime": 526,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has successfully presented Commercial Invoice to Customs",
            "skipped": false
          },
          {
            "assertion": "Commercial Invoice VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d5c529-8029-429a-ae8a-59ccd19e061e",
        "cursor": {
          "ref": "82603625-b0ae-42f8-a335-685badcf5d82",
          "length": 24,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3b95587b-26cf-4267-939f-879593c28274"
        },
        "item": {
          "id": "26d5c529-8029-429a-ae8a-59ccd19e061e",
          "name": "Join Workflow Graphs"
        },
        "response": {
          "id": "b8d3e23c-413e-43b6-b017-ee9d82bc277e",
          "status": "OK",
          "code": 200,
          "responseTime": 7695,
          "responseSize": 3092
        },
        "assertions": [
          {
            "assertion": "Customs verifies Commercial Invoice",
            "skipped": false
          },
          {
            "assertion": "Customs checks known workflow instance ids and join the workflows",
            "skipped": false
          }
        ]
      }
    ]
  }
}