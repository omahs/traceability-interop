{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "44022bda-ba39-495b-b1d8-534ec8f5746b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "22f5cb30-4828-43db-a125-a0a2daa86faf",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b92873f2-de5a-48bd-9d06-8bc139fd0b08",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "72b91933-549d-42d3-93ef-8fcdfa01dd37"
                }
              }
            ]
          },
          {
            "id": "7a8f437e-c15d-42a7-ab02-e5ebda6beeaf",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "57603331-c277-4f89-bcad-f2b1c480b9e0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4bd5309c-0eb8-4cdf-839c-49602059c361"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ac746250-060e-429b-9b64-7c33785cb819",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2ffbea40-f5e0-423d-a336-8d9402cb9366",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c085c3ac-1009-499d-9942-778b605c3b0a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef18d9d7-aecc-466c-bf89-64a6fa293aeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c54ddb3-49ae-4f06-8164-b83fd2b48982"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a8817683-a6a0-4fbb-af35-134fc2185920",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6b16fe6d-28e2-42a4-b2ae-eecaaea87160"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d706a4f3-f796-432f-b634-5e8ccf950b2d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "96014130-0d69-495b-86e0-699f52ee5fb1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa38a59b-11e8-40af-8e95-7fa2fb19af4b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9e802551-680e-4024-b210-a2dada3d9481"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d7c33a6-ee77-40e8-ac83-52c4d7b73fc1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3a2d73a-970b-4c26-83ac-844120b6a0df"
            }
          }
        ]
      },
      {
        "id": "1d90677f-06cc-4cf3-92d4-ded3a940465a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c334a66d-a6ca-4058-ad4a-cf121ce8f3d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b8c4fd7-787b-43c3-82e6-91a124f7cd4f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "287ea67a-b035-4ca5-bc30-e0a72aaab606",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e432b53-6d8a-41ac-81f3-442d7827ede5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44e550a5-cdeb-46d8-96b9-f6bb7e46080e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968217d4-962b-4d21-9fc4-945d3d26ec89",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5161ed90-ab46-489c-b464-d5bd3d6d3d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35958aad-1bab-4b63-90f1-69a2128adcf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc37ad2-5667-4c56-8c78-963421a7b178",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a820914-8907-4811-baf0-f5b3758f3e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d981e09-5819-4eaa-9e0e-2ec5f88b6482"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d7b06341-0a0d-4b58-b0e3-d60239c5fae8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ad20fa7-8d4b-4424-a0c5-5575bfe11de1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d274dd6d-2e33-4578-b6ef-2da0d5128170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19ee706e-affc-4890-b399-ee47deeb8230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd0c6c1-f693-43f1-b4ce-468b9714704e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3602ec9c-dc97-4a5f-92b3-27a1b490569d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4ff29b-11d1-43ed-b21a-589fe2e54277",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483daa88-19ee-4b1a-a6da-8b74d25e7bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a3eeb90-01aa-4883-a86b-fc2be4ed399e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb7297a-d4ad-47bb-9a6b-a316cd9087d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "00a156c5-bad8-4847-bf08-aa05f827d8b8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "650e58b1-b5c7-462d-8193-d9c165e9bca4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ee0dfa38-692e-4153-97cf-a65085048581",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccc95c29-ddef-476f-a44a-deb6a956f604",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c71b7d9c-7e41-4226-b75e-d98c79bab485"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a24b38ed-a2ff-4c31-ac05-800807bebb53",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "c2439886-3cf7-4a20-bd0f-0d4a7f2b28e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c11085e3-ba92-46fa-9cfb-ada8c3a29d71",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "183a0d87-fb02-4589-9bae-52cdf9d72bee"
            }
          }
        ]
      },
      {
        "id": "405e144d-b23d-4d4e-b7be-9ec1f8305094",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b6378560-ab67-4fbf-aad1-14b27e908054",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eecc9f75-2593-4486-a478-54d81014d175",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f65ae373-06f4-45f8-896c-664b19dd62f6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abedcd8-c5d2-46b8-a5e6-a6af5a33faad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ed48d9-7fb7-4526-821d-b31307b66255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9900475c-9fb1-4801-b2a3-e5c546c29d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2abaf5c5-cafe-46c4-ae4a-1e03d8b9aa1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d066a219-c7c3-4d21-be0c-1f3f81bc1384",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "805fa44d-98bb-49a5-975e-aeae252053ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2c5eb8-c550-4dbd-9143-f5ab271529d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e792631-573d-41f8-9649-8f7737ab0fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "504a8a9d-a956-4291-bf2b-6740d5657fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7709be-7af4-43ea-a557-5af925d71fb7",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce059c1-84db-4a9b-a5b7-91a3cfb309c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e712e0-903f-4a50-9904-1e44b8d67a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a5b104-db81-4c4f-8389-9f8dfd58160b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f69e66d-5e6b-4820-88a5-395444f972dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39f7baf-380b-4071-861a-3b3ff43ba6a3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002a9270-c94d-4688-889d-e126bcb5c30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c55b64c-773f-4570-a641-c173d7b90730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facaabbc-9005-4eaf-a399-40e54a67e0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "426238fb-2861-4cc7-8d58-46bf48f29473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477b1ee4-b4fd-4013-b179-7dfd8c5daf23",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0352912a-6794-4105-b6ff-3aab20ece7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0230d110-abec-4de7-8b4e-c42073ad618a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a7aad3-4c36-47a2-9130-51a176f30429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe082438-4a67-4637-a10c-6cc5bedde257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783bb04f-3834-45a3-a4a8-2ff92cc80bd9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603356ac-2337-47f4-93d0-252a1b307be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71d5e4e-7a9b-46aa-ad24-1566ee728f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d25e3c-baf3-48f2-bb23-f6b3d429ff90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "368358a4-09a4-42ee-b59f-670f9aad9a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc21fc65-8602-48db-a9e3-6b05a76a8499",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda61ddb-b4c5-4e10-a513-930f995f1700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "854c34c7-67d9-49d0-bf9b-68854341aa2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5958cd30-4703-4e89-8591-d201d1daaa00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70a774f6-d222-4e63-bede-34fe85820cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67c1849-746d-46e8-88ef-53720cfb94e7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "668edbae-7526-4814-8de9-fa496a8b3fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd2685a-37eb-48c4-8a75-45f6313168af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c69126e-5c2a-4cc6-b83d-0c7f593be6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ea209ae-7338-42e4-8ffc-d05df49898dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeeecc86-c6a8-4dff-b19b-d02b6953c142",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afca331a-7f47-468b-9906-82ae1de99f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd12994b-780c-41a3-bfb5-53fac0419035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f164960d-c5a5-4ef7-ba79-b83745d6d04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37ae4c2d-cd3d-42df-b45e-0100783a8f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47c38c6-5348-4690-981f-29bc0896c212",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd9b584-7153-4f57-a8d6-7f41f6afacc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd26cd2-42dd-4771-b1bb-5f1b8befd974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd46db35-563e-49b5-b82e-8ead6d2e3782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbe7c14e-ce29-4259-91d3-45c00bbf3e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1b0a25-c824-4735-8678-503b545fca27",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39bdf318-e5d7-4e34-8f68-512f6e3bc95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133a723d-b2ac-4414-9d80-db562f3a6290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6469043d-0b4e-4949-b1ec-936690b5cb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db31c6b8-514b-4281-ac7f-6fd9399b5739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fc7216-7f8d-4ff7-b8b5-cc9b0162be90",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96812eef-c6a0-4ac2-bf77-b952e95d34ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae4ad872-e9b7-4a19-8854-5de193376ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95003fc-3be4-4390-8bf3-b8fb681ecb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bdfe42e-a3b2-4219-8b56-29564b868142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd2e177-22db-4ae8-b7fe-109f3684739a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8185c98c-84d2-4d02-882e-10cd66d3affd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5df73f-7922-4670-a892-9f88b73f3df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78027bdd-9708-433b-b9b3-e830cba1ecb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9a1b08c-04d3-4468-9b30-92cc4458ca77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bf527d-595c-419c-8723-7f6f4a8b5664",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12a6a02-bb16-4d00-8e47-8f97190e4884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eae7be8-53a8-45ca-8529-cdd55cdda97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29308ea3-2d39-4077-b6fa-bb163a720148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fbd57ae-8916-415a-834d-a326d348eb18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e536a6-2aef-471a-9b3d-85f5d22acaa4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc038c9-1293-469f-8f54-7e08e1674219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f2d66ed-4e65-4129-80ad-dbd3697a3782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c2a385-0434-4aee-b8e2-43c2db8bf13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2eed38b-5f60-4b30-bdd4-1c403d4c9ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bec7697-a6fa-4e93-8977-4a0d7208f386",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "770190c8-42a9-4f11-896e-69f40d53cede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c59f147-dcc3-467f-a813-b766619d64ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8344aa41-2771-459c-91a6-cb2e12581b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc519574-bc3e-47da-a729-46b708868018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95eb6c1-a47a-455a-a64d-972de6c28903",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ecea51-637c-4ead-bdde-f2490dd1873f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dfb0924-f5ce-4bcd-a596-f72be7dbadb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205eb4f6-d46a-41a5-827c-0eeaa442cb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c296c51-2806-4df3-834b-2f807be35857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c3130c-4c2f-45be-af0f-87764f0af592",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f310eb3-be7f-4bcf-aaa8-259cd9c14459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7db646-6d05-4b85-8659-f4486898710d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bef57fd-d8c7-46a5-813a-3ff28e3900b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f30bef6-f883-49ff-9f68-d902838a0906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee83777-d605-423f-8542-55d16558b1da",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f958e35d-331a-4f05-8510-06fa1be0191f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6277d970-dc73-4724-83a7-a2271b07ff3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86f8b54-04df-4a3e-aa4e-cfe059a17399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26f4bf4c-cb0d-432f-800c-99c53acad274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9086e7f-5fed-4388-ab6b-8e72f8ef5318",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f0955b-f199-4e36-9799-5865518bcae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c224c9-d66a-42fa-b125-bbe3065a6779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9623f53c-9f82-412d-947f-6d4ce9f79971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "35172c2c-8f68-4092-86d3-1246fc465c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c663a6af-fb57-4388-8b2e-bbcef5f365eb",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325c30b2-8f40-492b-8558-674319e370c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0be0d9f-a32c-40bd-9ad5-d754725d507e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7606677d-fdeb-48ef-b2db-f9bb7d8d30b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "859c78ba-e44c-400a-abf0-5e5ff39a6afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a2be54-645d-4a5b-a64f-e92869a57288",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bf0ad3-f2b4-448e-b176-ad23d1f2f902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40141f9f-be9e-4285-b3bf-73f09f34599e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2470f52-cf19-4d91-82c1-799d1b9bd6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e23d1f09-4fe6-4bb4-9593-5d390e1c24c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c44c2b-1713-4d57-99e6-6acd5cdc7728",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4180c8-efea-4d36-917a-20bcfb7d42f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d82693b-bee7-456a-a61a-94c3173a3232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fdffab-d681-42e9-a900-3b2b83793cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72ed55dd-de8e-4c81-be8b-726e6f609e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ced6e1-cdd7-4215-a5a1-1bf0a05ff62c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616cce7e-cf9e-45f3-ba1d-d427c96b7d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284fdf76-d4b8-499b-b071-86a6ab172147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4076d613-9a95-4c8f-b7ab-b06116af20f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef2990a-a8b0-4237-89cc-4d3789db5b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e1a64a-4152-4a0c-a9d5-6fe519d75049",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f34507a-229a-446f-9b1d-772f5f9644be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d06e5921-347a-4fe6-8f2a-a5d906564f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4950e4cd-b2a8-4049-94cc-7570694bf3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1961a7e4-9f72-44b1-a7a0-ea67e70c78d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334858f9-d89b-4b6a-93a3-78c617f7e374",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c16ca6-7035-47ba-889e-61014619db94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b87ad13-ab19-492f-ad8e-1e83475a8391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1569ad52-d398-43d8-8e29-3645ce06dbf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7917b60-7af8-4923-8ecf-79c159a29f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cb39d3-c275-4cce-b105-36414a56eaf0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e2a0bf-2c17-418e-8de8-08f56ee58d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c2219fd-19a5-4dc2-896f-9dd33946984a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e5ca51-3f2c-405d-bb60-8a81cae218b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd085ece-fa8b-40ce-819f-3041e550b972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e09e47f-a69d-4103-9db3-dcb16e4b5240",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada492e0-a7df-4309-8057-f02b4927d029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06545172-4184-421a-b232-20a982786d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e5f17f-ac0b-4e2b-a572-dc760c2a53cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "107c900e-5eea-425a-b51e-2b9674ee65eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ab6ecd-5397-4900-b13e-e11a9e3de097",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73649f9-9dcb-4552-a579-064c229f8e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2caec4-cb33-4bb5-84da-d6a36a175b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6981449c-95a9-427a-9387-ff4f248ccd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a6c67b0-954d-4ee1-b0c3-0c7743b86695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ea5e8a-4e5f-4c86-805d-b2836a772fe9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eac998b-92f5-43aa-b41c-98b392172140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ed9394-7383-44c2-9f3f-bb6e4e79be54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3107a1bf-9ab4-43b6-ac2b-82f769944556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7508033b-8a46-4492-8fbc-cde931e1265e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f572a4-a04b-43f4-bdae-1437a3dece05",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc0c917-b340-4a55-8a86-7e1f88a87115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43971e44-9030-40a8-85c1-303389016921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85c9268-b18c-41c0-ac6f-2b94108735f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f0294cd-85c1-4308-9e10-ab6ec03e85c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a37a644-d02c-4cfb-95d6-83bf0ca7bc3b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a65d12-6a2d-4ad1-a59d-4a03e2213218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e730ea55-6150-400a-8c97-fa19d25f88e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b5ebef-8de4-4abb-8040-f69532ef261e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f19d240-6711-4618-81b1-873345e0ba54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a436d60-65cd-40ee-ac66-aedf073e8eec",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2206f76b-6077-4a35-995d-9159e413ab8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d1c6de9-a0e2-4fb3-8c09-82205f0bb748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c7311d-1697-4b0e-b692-6a8e478bc239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "390279fe-237b-4af4-a77f-7f440fe84f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f6f2d9-0b81-4ea2-8599-642bdf4444f6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30109ff-d59f-4ea5-9842-5ffb19d66d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b77899d-3434-4b77-9c7d-86f904600b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb1f179-3c51-403d-8955-1be8aa614fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0056b32d-b540-429c-9298-eb17d74e62fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b18c478-9511-4390-92d3-1c80fe7c6dfe",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5caf7376-3d13-41b9-9713-50618809e50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f994abc-3c42-4235-aea2-05be3ff5d13b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927e1152-9ce0-4704-a732-68c1d3d5961c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e73200d-5b29-4f00-8a7e-f879fb137cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43201cfb-d437-48ed-9a60-1ead61b13f07",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "530d5358-61eb-4ffe-b888-9490521641d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c7603a-8cab-479b-bd3d-2b4ad9e69bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a313abb1-7e37-41f9-9043-8eb2a4efd7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7030e951-b62b-4e7c-8520-5a33300dc12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab8f97e-4fe1-46a7-a70d-4f54346cbc18",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ab3f7b-5d12-4db5-8d4d-3c9a248505e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ee3bcc-a7e2-4a02-91cd-8c329f640177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfce35e-7f6c-4efb-9ae9-75b22e24b00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb90a9a-083b-4924-9c08-25f0126f6e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba8edaf-7ee1-4529-94c4-09b1a04cdcbf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5eab0b8-c7b4-42fb-93a7-5993beeca020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "afb1de55-73dd-4c5c-8cde-cb75fbe44f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8a85c0-73dd-4482-8770-0c64e75f5ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "635be44e-3735-4e3a-acbd-e8ec799305f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1dd79c0-7a79-4caf-9663-8e0b4198ac1e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ab55ae-bb05-40ed-8e49-c96672d5f74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6e5c87-2634-44e3-a8a5-f35547537672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e146349e-1982-4e8d-950b-118492995221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16250301-1ae0-4dab-b8bf-6badf2152c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2ba5b0-4ae0-40a1-aadb-9891de3e0927",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4499e46-1200-42c9-9ce4-09d9cc5b92d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d35013-5c59-4aab-8591-7315d7002834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdf7bc0-9eec-4902-8ebf-5a97fe3d9bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0581dd32-bebd-40e6-b210-6619e2f1d45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db371246-1f44-4b14-bec5-f1a070cb5ed2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853a49a4-719f-44e3-85f0-64dd1539e334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea1cff4-0619-4afd-9ee9-661ffa4207b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3b089d-ccf9-425a-9f6c-e8a054e2f807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4be33d78-ad09-46af-97ea-080e5c9d0379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4fb19c-1932-4c9a-8340-68f440cad8c2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0aa92a-c6ef-412d-80c1-96a2c4f531d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1bd6649-f52d-4694-afc5-8820632473f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74922ab6-3eae-40d8-ad3e-ba02ade91c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4202ed1-f376-4e09-8543-1e8dcb6109be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d29fbc-6ef4-4e38-a7a4-ed362ccd8170",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9579c16d-0ee6-4dae-a29a-af2ebe93c28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e7936f-3567-40ae-8123-23d6b0661857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01096710-90ac-4f17-8389-241212615ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "959c66c0-5059-42bd-97e4-54dc122c5943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506e690a-be18-45b3-978e-1488ec685f41",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1fa2e7-d619-4c1b-9eb3-a234c2d0de2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f5f3eae-fd0a-4b01-84bc-60a68324fb1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39a08da-d071-4ba4-a343-df027a63a83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cc32cdf5-4c59-4630-a4b3-c0d6e7e2b11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07e4a9e-0834-4adf-930e-08000d03499d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925cba43-3ed4-4276-a937-a5292447a873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d6b02d-72d3-4b48-b902-f132b1b243a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d05b3db-9959-4210-9f07-56c28987ae79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6754a85d-3879-429c-90f7-dffd47b7a0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f854b7-c8e4-4e7f-bf10-9b30efe4a72a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cdda580-e4c4-4a30-a3ed-3c0e6d090236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c081b86b-5056-4896-b0ea-6b5307738f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d637fe5c-90cd-430a-8886-aadb49e6eeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a11eec4-88d4-4ae6-8eea-b11eb0c94837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb4d04f-e2fc-4b00-9ecc-a97d07530d3a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7138165-f9a7-428d-b7e5-21e2d94e375b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6034a306-e2e3-45dc-9f35-a96d77ac8c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54f1ed5-22b7-4c8a-bffe-c3fce1664015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "235b94d0-228c-4c95-b291-9815c94a910a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6474ea15-efbe-4541-a934-981a8ca8fb30",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e34702-3ab9-4a4f-8cb2-766d54bcd138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee4d4a4-ac78-4252-b735-d6cb5818ef51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b399e285-07d2-40a4-b45f-61e09ec60af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33ed1a5b-a932-4918-87ea-2b870a723a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c9feed-2ea7-4fbd-9494-e7f334e5f820",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a7c2b2-bcf7-437f-bfb2-4a8aafb2d900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df96febe-5730-465c-a053-1c4c70e96c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee5934a-3fe4-411b-9418-d8f1eaf16223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76dba717-e0e9-469b-a50a-d00441282527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09e4c1b-5cfe-4e95-b7a4-98cbd69f8b93",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1aad256-0e61-409f-8bac-0622e44a9d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d4f274-f71d-4d7d-8618-27277f99ff2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7aff04c-3ddc-4aaa-bba3-fef82fb858bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d3cc75f-1fc2-4c3d-bcd0-51731a46d8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb645560-59b3-483d-9400-125f6b3d6cbb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4ba4b8-2da7-4181-bd52-96cb1cd39408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bff74f9-2c15-482a-804f-26c8eeb7a788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd976d9-02cd-4dfb-8ade-9cd054188966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8bb639e-9ffa-4a5f-83e0-291c227d9d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5df48d-8ed8-4ec5-b849-f4addc4014f3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e9686b-6878-4ed8-8943-ec0bf3ac7ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36639d08-4bfe-4577-ab9a-a007f441e8c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febbd58e-8fad-47a7-8895-1284792beccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9eea3ad-1654-4738-b563-77a5dcf7256b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0675234a-1c93-4748-811c-fd12ddd541ea",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01dfd0f-b0d0-4629-b73b-f658b1067221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ffa5c33-7d43-426b-937f-a6c88326714b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869a72e1-a100-45c2-848e-fd85c81b3699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3390fca8-66cf-4097-8639-a5ad8523a621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68aec5c5-c814-414c-aa6a-bf9dc5e0ea5d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bdaf4bc-b582-44cb-b696-b27cb4bf360b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476430f5-51d6-49cd-b6c8-dda8637b53af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e54482-5c47-4366-b2fd-dce2fcfda2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe79441b-2de9-46c7-b1d3-7f95e105ff8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e861e651-1134-43fe-bd65-73eede49b3ad",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adefb68a-6d2c-41cc-b185-f7ccc26aeca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9523d5f-95cd-4e4b-bd0d-d569094a8021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c624eb-aacf-4d1f-9993-62756555c452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31ef953a-37af-4ecb-873c-786df9a5080a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9147bd90-91bd-4e8e-8bd1-ea96eac08c71",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3aaea5-91ec-40d6-9097-ae155d33be95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ecc7a50-49ea-4b02-ad77-efcbd3c18bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df8fbb2-dc4b-45ba-851e-ee902a23bdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "232eb46b-c00a-4980-a304-83e8322cfa7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44703a16-c023-418f-983a-7d5965b35730",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed998b8-3520-4518-9d2e-f5eb6c7d6137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41a28cc-c656-4175-8830-fadd5d36a58a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b209750-63ac-4b2a-8601-4709e226862e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc5ab6a-64ee-40b8-9d8e-d25dd3feccbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74419da3-3742-4a80-8b93-8744893b942b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd3c8ea-cb14-4015-ac25-c4eef60dc390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a058aec7-913b-46df-bc20-bb2a03d92819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a8dd08-57b9-40b3-80b5-0195551394bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6d6079eb-762d-4a34-9357-5a760ccd4aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52160e1f-7b78-4440-8b4d-65a356a24231",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0cf6fe5-3440-4bb8-a29a-6aa6202c8f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d167a4f-2afb-4dbd-bc8f-678cf075235f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b18edf-094f-480b-8ebc-f268160d94a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "65ecb5b8-d054-4e1c-aa40-4fcacc1b7b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb256c4-4e29-4b4b-8bea-ae47f9e1c598",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de08296a-6212-4147-ab41-f04195fe7434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f72844-f441-4d7d-8edc-79f3dcf24ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec9b401-7f64-4565-88d6-79a2d3818ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "59e6d08f-9e89-4c09-a94f-8e635d006599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a02471-d21b-42d2-9aca-9fceadbdeb58",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e214bab6-53f5-425b-a263-0e61d9afa58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a61c7780-c368-451f-9b96-093ca1ed5682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4048dad-da9b-47d6-a5c3-a83e66b48fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "21df7d23-c960-4c10-b42c-3f3310845251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f94a46-8e14-4000-8b45-b4b4fa53dcb0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b780e2ab-a1e3-417d-92ec-31fe334bb885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9317e97-65d7-436c-aad9-a0aecf94204f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31d3a32-a34a-44ae-9a92-54a8f01a8ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "97617367-73d4-4014-980b-a62e99a6bb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e607ad6-eec6-4150-8f1e-da0b63d767fc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd87103d-5ecc-4249-8213-b6d25552f1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054bd5e5-2ffd-41ed-98b6-cac7ce8c16d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434db30c-4038-4f7a-8b9e-ab12d9227eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "26ba62d2-872e-4822-955a-3a2c92f42789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15521b12-6ef2-4dd3-8f7c-779ba04674a0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3a2149-753b-49cf-b53d-5618feca4976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7470b83a-5195-49e3-b8b2-43a1fbbf2f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a8c4d6-c2c5-4c5e-8a08-2efdf67f4ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3961138-5cb1-43c4-b73e-75d032455c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff76199-aa07-41e0-9061-d7c928f90a1a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feda4e9f-c8a6-4111-8b5d-b77a45723bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34ac49c9-4e99-4a4c-97ff-3b77ab047859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5831fd6a-3a3d-4b17-a88a-9a60aaca14fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9112ebac-c86c-44a8-9c3d-22d7a27d4d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26fd19b-7b57-404a-afba-7b185f51ec22",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120a5fc2-0028-43cd-9a3e-2baa9e3acdca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698617e2-2dc8-4c5a-ad7c-bd8810f8670f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b582953-1fc1-4460-b4f4-26d26b8ffcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed70e08-9a2c-485a-9978-fc66090b50d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99c7915-1821-4851-83a3-9e89d14d0c4d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb9dfc3-2368-4d8b-a368-79508689a473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a9de45-8587-45a6-bf03-d67c4668bef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be67dcb3-0111-44ae-bcb5-8946aaeb17d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad939981-f67a-4048-b145-d695d3498a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd3723c-d780-4a65-baea-7570990f0bca",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c95210-4729-474e-ab58-cf7a58296a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f29a350-c734-41f9-9113-52911d842817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191c8d6b-f8cb-4d1d-971b-26ea1e8b0b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b87a92cd-7997-460a-9921-de2a0527937a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10386fb-1eca-4a84-a423-35c106aae3e6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1334a64-1879-4bf9-bbcc-f4089ea33788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834592ae-442a-4613-84dc-2eb228270e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b65ad5-066d-4227-ae4d-8bbcd726ff7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef90a05-61ee-405f-81d7-cba998acee40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7459890b-032e-429e-a85f-2b7f7b74e09c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28241c64-143d-43d3-a434-e1a7b713e5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9448d528-ee26-46bd-9e54-eeb8f2163877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5323eee-875d-43ad-abe0-eaaaaed7711e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3851b3-9511-4369-9ba4-70f64c4e7de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c22029-b6f7-4256-83e1-1ebc198b9b6d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8b2a0c-bd7a-4df9-b0f7-4a1e9e7edd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed99b703-9e3b-4ce3-ab32-f787cef4b79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348ea078-1b40-4315-8552-130036750de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a94830b3-34ca-4f3e-b974-ff247350273d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eccbe71-641a-432e-957d-830faf611f88",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08121d81-002a-4f0e-a459-aa855370fcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bceab78-ec26-4e8f-b2e6-0c64e0320b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbea329-dbff-40cd-801b-b952c079d366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef6ba4ba-19e1-459e-85bc-3ef07aae005c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad8ebec-b68a-4785-8d76-095364bc80b0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "293e14f6-2358-47af-9303-4aa6ae10e70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a4bfa7-1691-434f-8984-d0269f9cb6cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0674963-ad88-4fac-b440-85b48f5536da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36eadbd9-ac61-498d-ba73-9fbd714131cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d8142f-8fb2-49de-bd8c-e89345bae673",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb47595d-83ec-4cd6-828e-7188964d7080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea0f87c-a43d-488f-a52f-6ac7899747d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806cfdef-0027-4bf9-97c8-d34383561e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc8bb6b1-bb04-4e18-8efd-9e1d236d3ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa551ab8-71e5-4b41-bfdb-0b42f9fe98e2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66818faa-76de-4160-a563-1773852ab8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87162025-b22b-4f95-9f16-5a93cf68cacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3806699f-8125-413e-b3c1-440784cfe61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6fdb2ed-629a-4ba6-b288-20f1c19c116b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b092634f-cbb8-47ca-b8f0-1a7f4a8a4b6e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e07a7f-bb95-4440-83cf-c1688f23cd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d56d5f7-9cfa-4291-ad93-255880f09bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2076099-5141-4093-b1f3-216ab2fb8c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6fba6ec2-2aab-48ac-89c2-7b3df7e2c7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcf95ac-6f85-4eff-af6e-8995ee942ac0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba8f7f6-5469-4bba-8ee5-bc2d6828735b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b09763-7d74-4db2-8bc2-d9b7f294faf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4a2109-8625-416d-8f1c-e5211e8566b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fdde477-3b48-4f40-8dc6-f65da02e38db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d970d923-cb0c-4754-9ceb-ba32f6c69f03",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491014bc-20bf-420a-8634-3165cb9d31d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574cf342-1ee6-4bb0-ab34-9741938a6290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10ac09d-522c-4b8c-a86c-363e4e9cd193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3a68d9-86a9-443f-a892-1b851982539b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5aa8c26-dcd8-4ff1-8722-a0f424099343",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9a5d5d-0082-4685-a63c-d4c0ebb2950e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1cfa30b-19ec-4f1b-8fb9-a48adef4d3c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d543241b-8f58-48ca-afdb-eaf6c7478c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d28d72e-1ceb-4826-83cd-53943fd60ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b025dea-db2f-4100-b537-f68991458682",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3da2960-6a7f-47ad-9538-d95454adfcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f17a583-7dc2-4109-be2a-4fca45954cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0045957f-d612-4dbe-a6d2-bed9cddb21fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a06017c-a6f6-4ccf-8ba2-ba0a321a363b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4f45a1-30f8-4eb7-8aaa-e38b744dd280",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c59456b-ba30-44ae-b5d3-738183e8cfd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798cbb0a-676a-4068-8ef4-66aa78892e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0da2575-6a73-48da-84cf-d9e8b0f05f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc3b40fc-ba76-46bc-b626-03b44d190f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec7c575-63e9-4767-abee-eaa567fd9c1e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9fc568-7d1b-494d-ac61-c710f5866d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9236023-d43f-4bdc-8c43-d67b19c5cc45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5a1310-fd22-4044-bd23-cf8cc81c481d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a32e255a-21ad-4044-a098-732ae7554cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f068ca-5993-4a1a-b766-dbba6fc0c5dc",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b140d0c2-6bc0-43ae-b0b3-fca1570d4ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7acf2f45-992b-4427-98c3-f0f013e3f3c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa6a998-d843-49e0-8b94-9300175ec390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b64a5a6-4141-42d3-b353-5782b4c61c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57940c4d-d541-4f25-a405-325523eb4ab8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c610b2e8-fce1-49a2-ac4c-ca31776b7ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce416eca-2540-41b9-9db6-03f937bd266d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7dc453a-971b-40d3-b7e3-092125e6c7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf17a5c-8606-4959-a060-825c2a1c3b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220ee2f7-ed63-4354-85e3-81afc0d7f5f8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448a8919-f6ac-482e-b903-455cd0f88f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3979be5-b007-47d0-86a6-8c59c8e18822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0beccbed-ba9e-42c5-bc3e-41227ebb8648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67a9e037-64d0-4b56-b595-be04a947aad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49721cd0-e1c4-4f4a-b95a-6fb9782ddaa5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dac3c3e-c213-4ac1-aeaa-3ebc8e6c8365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7759495-8e82-46aa-81a1-ab709ecd7375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54866e49-e2f1-40e3-aab8-e8a521cabcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bde0a26-fc96-4685-9533-32e6995dbf57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c07934-b65a-4878-8f71-81cdd518b674",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f5e28a-7bbf-41a8-919e-070f288337f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ea4bfe-bea8-4d87-9da2-0ff241a34e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7221c3-30f4-490f-8baf-51e088a520fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "713fd7fc-d09a-4777-806e-86bea75f8f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34519b6b-c596-4247-bad6-c26d2e972623",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554d61b3-79b2-4f94-a26a-c3de70a98b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c01fc8-7936-4f66-a493-de40fd1eb02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805d1030-7d7e-485a-a6b2-33790d22cc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f128892-5744-4f64-bf61-5c63944b56ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44c08fb-31c6-4986-ac1d-a196c2e0278f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37235a6-6bc7-468b-b98a-3b4773073802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab07254-7142-402c-9e16-396ad21acef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bec938-c425-4a10-8219-8d9d675430fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a21f7a7-ebd1-49d8-b96b-0277800f58eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d508bf81-1e56-4b78-b6d8-201cd353041a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77008c62-ed9c-4155-a4b1-49cf98019de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "786190be-6962-4011-a649-08f71c3b7cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40537b64-7437-4f8a-96e9-df1dbec0c5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c2f046-404f-4dc6-be6c-0121d7234d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a39d97-3e6d-460e-a4df-e0b6e08cae4a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cab3bab-facf-4de1-b74a-5a900f1601ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da74e34c-655a-44b7-9d02-b9d902cbf229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a944f20-b826-4ea0-838a-2dfbc808e021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f3f5e77-4d28-4f49-8216-b912be539b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2567e1-abc3-4de9-86e2-d931d6520b98",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c156c96-1dc6-4386-ab8b-b04f32911f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04316074-a0fd-4481-b78a-e2c33b42543f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35bd47f8-dae5-4eca-9ea0-920eb2858575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0127c9-81e5-4323-8ed9-c11128bfcddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82a9769-3874-4ba0-afe4-f38bd5ebc85c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87221f1c-364e-4632-9e94-b8af448435b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4a66e8-5b4e-4157-a451-742792d1e4a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e83bb5-e233-458b-9d44-a1b38e1a0c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "64bb7670-822e-477b-9135-66d3b00ff7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78e406c-b1fe-49ab-837a-f7a9f27f4640",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d105308-2370-40ce-99a0-79b621d140e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c9426c7b-ac78-40d5-a0b2-ef988c4bffdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419410d2-4f87-49be-a6c4-70d918d6e2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4404b7af-c531-40f8-8544-2e265c434376"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "678e57cc-5764-4782-b821-55f03074cbfc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fbde79e3-4162-47ed-880d-1c701a082513",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "188d8eb7-4bbc-4f78-a224-669a9717babf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1cb638b4-eb69-4221-b34b-a91594336aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f6026d-25fe-4500-b957-938b95b0525f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "b71e8a0c-15e2-4093-9984-e288a335acf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec21fcc-71f8-40b6-8c75-70d8195a927f",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb360ac-8000-4277-b35c-9ccf7aaf45ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93d42361-1ccb-4aea-86a0-e020d3c00a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cb096b-267a-4dfd-8763-df777b1ee55b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "bb170149-a5bf-42d4-b5c1-8e31b9e67190"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e89527d-3db3-4799-bb92-2c83b4df3797",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06f4ff35-ea16-4528-859a-9cc46c75b834"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3ed9d8c-83da-41c1-8e87-c558c8d59415",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a460a7b0-c5ea-47fc-b180-c95ee9c6c1a7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cbbf1c83-7d7b-4fad-a035-d57e7c86349c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4db8f8c2-9ef2-4610-b5c1-8193b1d177d4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3dc0578f-9959-4275-87f9-3909dca9eb30",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "da342c41-16f7-4be2-8b90-5b9b25c07bb6"
                }
              }
            ]
          },
          {
            "id": "087e7322-5675-407f-980d-9f7d8be46c43",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f810c503-6a69-46c6-90fa-0b19d8d87b40",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82c82910-d710-47b6-9e68-a3852f6b0faf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d471869-71c7-48a1-adba-aed6ddb1c6c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18085435-af33-4a1c-8e78-1c7e30fcfa09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bd31db54-6454-4c9b-b85e-64034bfee32a"
                    }
                  }
                ]
              },
              {
                "id": "bdefea2a-5efd-4676-ba69-5c4f9869a1d8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47e8648a-28b7-49a2-82cd-099292095358",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c47aeb0-e74c-4e50-b2af-09a95d8f2455"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d775d68-a941-46a1-bd34-7b9d38c2e2cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0b5055e5-ba3b-4e32-af3b-8aea18efc1f9"
                    }
                  }
                ]
              },
              {
                "id": "94a5246d-bb14-4825-92ed-821909608a6e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "621a9161-800c-4164-90d3-d2c095cd86fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7f2cb5d-e31a-4fe3-874a-c9782ce2d727"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8625a15e-e797-46ef-8bc9-9454e2231f18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e63d1da5-fd16-4b61-abdf-775fc238ddda"
                    }
                  }
                ]
              },
              {
                "id": "c6bd7c03-ca3c-4ae2-acde-5410dd452cf4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81e4a347-ae5e-4e2d-bbcb-2da5b458d65d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "677de713-c28d-44c5-95de-adb5c07ccb57"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62630372-0e5c-4279-9ee1-e13049109827",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5517b8cd-75ae-4a20-ad49-c5fccadac516"
                    }
                  }
                ]
              },
              {
                "id": "f34fbe65-fc6b-4a2e-8c43-c5b774f4fa93",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e17bb16a-e0f7-4174-90f2-dd684715c840",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f59688e4-e760-4061-9c2c-2d29c3a25f29"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41a41d86-7869-4275-8bde-da685c108d86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5e17266a-2864-4efc-a084-fecb15724271"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "138ca3c9-8dd1-45ef-9925-3d7b54d8b498",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c39ac37-d29c-4bb5-8dca-2ec82b56af90"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a1179f27-42aa-4480-87a3-3bcdff3fa85c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ad579ea2-1b12-4743-9c49-495b70228e28"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ae81e6c-acde-4a18-a093-f8f09baefc8e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "61873c33-b5f7-47ee-9c75-59dbd1dd57d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "835cdec4-6214-4028-97f6-9009952e37d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "271dc274-fa14-4f09-a3b6-d73553002302"
            }
          }
        ]
      },
      {
        "id": "d81f8cca-8ebb-4666-9a99-2b2d3af8c547",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a3abdfc3-cec7-476d-a525-fd2e7469db31",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c918c459-7664-4b56-8ae5-f06c66304aa9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "77033b67-47f8-4d75-a810-ebb33d11cbdd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b04bda-8602-4fbf-bbf9-c69cf4120bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac74fc6-94da-4ac3-bf95-5cf2a408cd82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175d003c-fb8b-4a21-bebd-cf2dcbe8055c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "26429175-8238-48e3-b5f3-05781271551d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2592b742-2403-4dbe-bd28-2811857b9c14",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c6926c-81d1-4668-810a-598f7c292b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7242b62-bd52-4c66-b837-1ed08e5f3e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a493c20-cbfb-42e5-a7d1-1e4eb49d6821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eed79fb-9982-4d7c-8ad0-3f765017b0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7372a30-a807-40ea-9157-f042920eff86",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea25ba5-5785-44a8-a8bb-db0bf2aba9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd32f9cb-7bfa-4d76-8471-545e92ae6c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0d0d3c-3791-48a0-ac2e-7ea01df373ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "881bf84c-62d0-43b7-9796-58b7ebe73e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b0f7fc-7b5f-4090-bdcb-dad402b7d327",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4c8842-bb83-4cae-8343-f2806fc2e94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa64ce8-a8fc-4f2b-adff-bf7980e70f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea8ae5a-c76c-4c70-85ad-3c51faada858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce9653c-a705-4d81-bccb-d0ffee461a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ada7f7e-6176-44d2-bcc0-8cc576a86fa1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c865e85-cd85-4c20-ab3b-d47fd47c5cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "912588fb-1793-47c1-97eb-e2004dfc97c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adbdd1c-04db-40c1-8f85-50e31a3744cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc57017-5028-4271-87f3-f104f3044b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9f8d1f-c192-4223-9a48-e678098608da",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cac8b4-fb97-40bc-afef-49a088976a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c1ce7a-81f7-4129-a3f1-df586f9c963a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82a9f7b-3043-491b-bb2b-9dfdcaa76127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1139ea10-3927-4f62-ac57-6abc70bc9daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28257f6f-6da4-4740-b7b3-c6a6973b1409",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f3c5e4-9978-4575-b425-b46a9f70e440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62664b67-06b1-461b-878a-a9fe62a9ebc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0dfcc3a-a9fb-4af1-9e2e-44a7c9da65f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d40e69d0-ec3c-49d7-aad9-94e21ba241b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afadb22b-4bc1-496a-8c02-48c34125e573",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5324f501-f263-4955-9c34-83fb62427eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5893168-8c99-4be2-91c2-a1fb7c9f1b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61b6485-a7df-4771-af7d-040595a6d9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9520be9-a90d-4197-a547-a68b8056f81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a5e26e-0286-4ff6-aab4-451456ef4ef2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f202421-775b-47a5-85c8-39c1744fbe7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe91ee9-8075-47f7-bfb3-d60a56783de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ffc6f9-9c2d-476f-a40b-ac4efa3b1478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68418c1b-d2ac-4209-94bd-b05f342d0516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e976d2-49a4-410c-b5b6-07f008a096bb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3bfffe-a04a-4bc4-ab53-dc41cbf077d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db46444-0ac6-4de7-a451-f6798cff75c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b881cf75-1596-4549-97de-9197379cdbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc60671c-77c4-4beb-b888-da7faeb92ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe55ec4-e7e2-40e2-b858-40f8423cba1f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7f4659-23e2-4be3-874d-e93fea2bb95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe1512a6-0563-4df5-8117-f1dc0f3ffade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4180f1-9d70-4ad7-b486-d62864c93c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5df598ff-d762-4590-8284-1ecf0f776519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02817ff-472e-4a2c-b20e-0433fa1280f4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99998f3b-c0e9-4497-9006-5b3718e7a17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a0ad982-05a4-480a-b923-f5ded4dc403b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b33147-8b6d-4946-a6be-812a7a145b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "72169b24-9512-4074-8e08-b62ce13980ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e68ec8-a0c3-450d-9e9d-be39c7057474",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e3eb9d-bca5-4cfb-8f40-804c6429f92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ef7da4-163d-4935-8cbc-1e6de5b5abf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1227f0-6648-4fe7-80e1-493746886b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49d0b015-aeef-4bf3-a844-357eb3f84a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ecb5de-1351-44f1-93ae-fc847e29a725",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428a617a-dc04-4e51-887f-023fdc16f2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11386c01-7719-4866-be51-8cef647c554e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469bb20c-02ae-4316-a413-57f55d0ad31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "96eb2a21-6390-4a73-85cd-d60341985cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb69a3c-e3b3-425f-9ec1-980858c8d5ea",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff91dae0-25f7-49e2-a5cb-7521c473ebdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5b0616-c98b-410b-aea2-13284d242351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2cfa6e-5153-4574-b199-094512c37ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a2e789-8e90-4768-bec8-407db5da779e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c21db8f-5538-476e-925e-25744495e622",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b2ffd8-5d37-4612-aabd-5447f3e81087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f8de70c-6488-4b15-ba25-3964583d03e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c39538-6eb8-4bfd-b27e-9281eb50055a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4499f248-ea51-46e0-bcf5-26e7e90b2b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90017bc2-2457-481c-9741-3fe364ce6ac6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31165b0b-8ebd-4446-aa44-48042cb84b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2934936-a5f8-4454-9c36-304a6c578bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4aa539-d69d-41dd-827a-95060b0eaa7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "21636462-141a-4fb7-9762-5ba10c649993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe24d5b-11f3-4b10-9540-c498e5e44528",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5777fd75-136a-4511-8044-7b953e079aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2fc96e-0b38-4d7c-898b-cde999df0d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d85d577-e568-48b7-8d18-c77592e36d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe43440-7506-4cfe-8493-108b5a6aab89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108f1541-ef73-49a9-9e9c-49ef6c77800a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd93371-2e7c-41bc-bfd5-d58122963fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0331b6fb-6804-4716-bfd4-23cab2ccc2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe23ff77-02f7-43d1-a83c-5607f3a3ff9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d95883d-5d12-4f30-b42a-847f6b60a27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375b1134-33c2-4968-995f-a4ce04f7ac17",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8745e0-89a5-46a2-a949-e1b8b769890c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89f5053-57e2-41d9-be23-4df37ac14c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58dc38aa-cbc8-4afb-8b64-20c94a166c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68501ff1-44cf-4482-8050-6f6088b5afcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4546d0a0-25e7-418a-8c37-78726e841122",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c39f3eb-f20c-4d3a-915a-d93ac08f1cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2491046f-70e5-4551-afac-9994f073cc06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f01de5-4953-4866-b3f4-d399169de3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc2198e-0610-4ded-ad77-c63f9e981ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc8a2df-9c31-4302-9ab2-cbbb9004d1ef",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39b55b2-4587-4284-9bc6-2ed144134010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f6ed1f-13c5-46c2-a1c8-48154d531a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbcc83b-aff4-4207-8420-422b4ae1ab03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66506f3b-83c8-49c4-88a1-dcc9a72f7ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a44fed-091d-4e57-b48a-48d6ced70dfc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301652e7-f79d-4506-b375-5e63dc4132b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a29640-9cc6-4f64-9037-9632850a6c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b637b22-468e-4a4b-a0cc-e0de9e3e42c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2c9c4a-9fa9-4a5d-9258-d1112e0a233f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5846b2c0-0128-4614-8b85-e9995f54a066",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414d766e-7a34-4b0a-90c1-89a4be7d4f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892e960d-a7df-4900-ac5f-0b8059535e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdb23e9-a807-4bf2-b12b-c2be70e5532d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "caffd507-1489-47b7-a5dd-c51bc129281d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f977a620-63d3-4e45-81d4-399938bdbce3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8138425-e1f4-4c88-a056-acce0441ac4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c00eb5-85f6-4d64-a42a-b15cfd28151e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89727e7a-405f-4ffe-9005-893841e2ffbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45a5b807-96aa-4b3d-b568-420bb106c94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af73188-312a-4826-a313-11c637fe2872",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "928b054b-3efb-49fc-b53f-22daa097d2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74df067a-de5b-4b0c-97fd-b6a13281b40f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af8cda0-622d-4aa5-956a-19d027202dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75530e4f-173a-484e-9984-8c123ef92680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5684d6-0cf4-42b7-afb0-d7dadc502db0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a67399e-5d85-4883-b747-d56ba096868a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77a573e-8cf1-4f4f-ab42-914ebc8e29b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea232012-8280-4d33-bb12-b21929d7a279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f23435de-144c-4316-af83-fdddadab2c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e17e34-17d6-4c39-9e14-821a6b9418e6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "907eb2e8-826b-4ce0-9329-ea8c554a7389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f797f4-3387-40b2-a2df-80bc755166a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3da933-38a2-4107-a2cd-484c1ac5a316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1580aed-8338-4abc-9ba3-9296ef355ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654b47ef-4bcc-4460-9525-23a1a87d4d38",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c663448-6a02-4aab-a91c-0206a4924025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff8e931-2ca6-439f-bab3-ce29ee5ee342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42b7f7f-3799-4aa3-8f2e-ea904fc49aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0efb6c-06ab-4df6-86fe-ff1212a09d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20d6537-760d-4d67-a15f-3a4cc2e8e163",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f46230-07cf-420a-a182-413fa0677f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e13263-5414-413c-9f6e-5bfeca3dd983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3caebe4-b814-42e9-a5bf-66f7bd03346c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf1a7aa-a5dd-4850-92b7-fc2c3cbe9c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d4c583-9510-4c2b-adb8-d957f86c2a04",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92bceba1-a71a-4ac7-80dd-b29f543f8aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a8c80c-cde4-49f7-8dbb-0a8a2c1a1f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de01cbf9-7b3f-4918-89d8-9e0492a4b0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f12a812f-9692-456d-b0ce-0edc14d401c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b88815a-597d-492a-960d-4e033e9882e3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738caa10-55a6-46af-8094-32cf302dd083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ad14f7-6daa-4ccb-a16d-f5c23644d951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbc20b7-a7c1-45b6-aa3d-b1856c45572a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7949d6-b3c5-49d3-a90f-8c22757abec0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bfe38588-59e7-49fe-b01a-c7cd206b2697",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "460cfc09-fc15-4708-8dab-92276efe61a3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8d7e2a-9073-4208-8b59-c49732866345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d662803f-8aaf-4603-a07f-934bb4c435cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a75055-9569-496a-9165-b3e16f2368cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2464305-e344-429f-9ffd-243cf44acc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3207fa5f-d656-4c45-8082-da38918fbacd",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1d6ae6-504a-4070-86c9-d207f5263ca1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "93e00622-b7d7-46cf-9e1c-089cdf689e27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9166cac5-6d23-4d0e-8e7d-fc16c3b9759f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cad8e1a-59a5-48e5-85a0-3a7a0b3c25c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cd79b2a-cd43-45a8-8327-6493fba1cfa3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2fb33ac-6bde-41d3-b3f8-2830e186aaf7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0dba51b5-d874-47aa-ae00-0551bdecb245",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "beef2e75-1c1c-45e9-a23c-b67aadc460d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03101ee5-5a86-45e9-8845-b0368e2992d9",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4b12bcd5-751a-4c65-9a8e-215a70560244"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e782f49-597d-4eae-8d4a-a4b331b4a9e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f535f50-11f1-47c7-be76-9f6cfafaed8a"
            }
          }
        ]
      },
      {
        "id": "f415656d-682a-47e0-b123-9ae799c4a1c2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4a725d8d-0383-49ef-86a4-01dbaecb02c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af127a2b-0086-4081-b5bb-eabd50d7ea88",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "261d37ac-1c47-4953-98a2-b245a6d983c9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18eaaef5-8a69-4fc8-8e08-f76f9240bdd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8e52d4-8054-494e-8f14-33b4cca3bf7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e6324d-a48d-4b3d-bcd4-5f5cac2bef11",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10455478-5f28-4e10-b9b2-81e163220c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f80e21f6-f3aa-43da-8bb7-44206929de9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9389695-fc16-4b7e-ad88-422ad48315aa",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "188c3f7c-4213-45e5-ab2f-96c1393cfb14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ed0383-d521-47a4-98d3-576af57f75fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35a3716-6c70-4c53-854c-a11a9964d0f8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c147876e-f9b5-4a8b-bbe4-409c7ee680d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2270b187-5542-4b7a-abfd-fd555acd7a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad849ac-b5f9-4fe8-b45b-33d93773026c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfd615c-6751-4a82-94e4-ccabd72734d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "376b5e0b-c7ac-42a3-bffb-44cb5ede745b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad608f79-7dac-44d1-ac6c-a0239c041189",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30aed813-624b-4899-a2f1-cbfcb20f834a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c00764b6-54cd-4b17-a46e-78f576c6ae70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c261c37d-46ef-4ed8-9595-6b5dbcad8752",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4479a6-f658-45f9-8c2f-2a9d200b12e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b5541b5-ce19-4ee4-b120-cf5a3871a67b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea36217-52a9-48cb-aa99-5e0531663b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc8d400-da95-4931-af98-f16884be2e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368eb11b-9765-4b7b-9997-14baa55e9afe",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09f8bfa-8aba-4275-9663-4e605efd8fd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30d9dd1d-ad68-4f14-9864-67808ca4e1ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12e074d-a3cf-4b59-b085-e6b391240112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795ec468-55f6-485b-950f-039990ea6bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3541af2-2232-4ab4-9641-aabc2ffb8bb0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2e03aa-d337-402c-8b5b-d77dec720275",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "078593af-8abb-421b-aaf6-e4ba5429cb72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce97c876-d5bf-4ae1-becf-41febad85384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17eb448c-b68d-40f0-8a71-f46e6f6e6f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310b4365-002a-414c-8364-f0278c908dce",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e13705-3fb1-409c-809a-39b9f49e8aca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "235ed222-9392-40ba-9aa9-021054a0074a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfb35d1-da9f-4d26-8ead-9e55ffcdc130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19052287-cb1a-4ba6-840e-a4d1aa7dde43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21501009-2df8-4909-9024-37dc80710b59",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59bc8cf-737a-49a0-8460-adc5e72d6e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3998cf3-d759-4f14-acf9-062880896918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad0c4c4-5b15-4d96-b045-a3e516919acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "097dc865-4a6c-4710-a96a-dfe12904ef0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4f5b6f-87dc-456f-a6cb-4698029f7c09",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac806a5-0e13-4056-8d68-5eb5d3e9710b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce23727-2b09-456c-b09f-bcc059ad78f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cce9f1-eb9a-46a8-affa-3f1ee1bab7ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4957c35-7b39-4070-8c66-6aed82de8767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa21fcf-feb7-4b47-a760-5ff993296f4c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05962fd6-0a8f-4232-966d-819f6532f422",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e40ab2a-2220-4cd9-b01f-6d1847f8cb96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe7c744-f5ca-4e61-b02e-b8f9debe8fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ecc575-15ff-4db3-986b-1f0efe513f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ac5046-4acd-412d-a969-7cef89995cef",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70f262b-d759-4c1b-a7a0-68676308488c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fc4a725-b6ad-4986-9d6d-099131da5532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa963757-5cbb-4a5f-b48e-50aabbf4dc8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a9fd4d-ac35-4179-af20-b362c405bf80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff45a3c-ed25-4897-9422-9f245a63c8ec",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2898f4d-cc43-4fb1-82a4-c4d14005a52e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05c1cf0d-f982-41ae-80cc-85db2db1895f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89db3a3-bc08-4b82-a2e2-b258e2d4a89d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbfcfebc-b6f4-41e0-99f0-05c7f1f8fa79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e45c918-e707-446e-8c0a-8130405c2dd6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8731f4c-50cd-46c9-bebe-45048bb259ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "970f38f6-fc1e-44d7-8077-768a8ce9e1a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f94e31-769e-47e4-8389-afc8df2afe5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0439bef7-3369-4648-9302-af43caf227d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cac4ea-94c9-4d41-b3d6-96eec8cf7ad3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e820a80d-7074-44ec-9133-3cb86f910fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dff9b3e-99c9-4e5c-a7fd-e70f2f2fe17d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77c0596-faec-4cbb-ba4d-7c6a04cf0f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0eb8095-0822-4730-8498-3c1febcf9e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbdc70d-108f-4e6b-b101-e78dc82dcf6e",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d98f0b-0f76-42f4-9aa7-b3153fdda7fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de8860d-afe0-4b72-abd4-15289ea56731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "618f8651-928a-4a22-8be4-0f728076cdcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1f5bd2-f515-40ba-8eac-4339114c3785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b377d9e9-1c5c-4f81-aacb-8ae33d504d55",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20983bef-822f-4faa-835f-c9cac1226850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9bc8ba-c27c-471b-8d30-0fc410f2d27d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e96703-2273-4e3b-aabc-14d2f97f7610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b264c8-92bc-4e71-bb35-9ff878f1b91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce4271e-666b-4aad-8d52-973a96024eff",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4cdb15-0785-45a2-929c-e2f44b560c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1899c83-321c-433f-b8ec-029caee353be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3453010-e4fc-42d6-bf28-a9cedcde05b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ea7d51-0e0e-440c-96bb-a002cb619502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817611d4-fb4c-4697-997a-4fde7fd05725",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76511e22-6ebb-4a7d-b9ad-3dea8bacdef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f95db2a9-13d8-4437-8fb7-54cb35f3db5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fad23f-0bb1-4003-b7ae-dd7202cc67e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2fe7348-050b-4fb3-b53f-e9202b521c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68bb1ccd-eff9-4f10-96f0-7ca24c6977ce",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a986666-26bb-4b51-95db-43a3a766ac03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a05a1c0-7bf3-4dc7-b517-e0563e9a2d45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5117911f-f30e-46a9-b1b7-9f1024494f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea229b0-09fc-442a-b6aa-c342695a97b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc59c48-6d1b-4bea-b67a-01e7b0d87fe6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2a47d0-0e8f-4b52-98a8-bd5a224935b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b15b809-396d-4950-bea3-a0d0784b8b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a222a05-8288-4ce2-b6b7-9d9730655c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0c7702-c9cc-4823-82cf-995e9d65d300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1263c57-6ac3-4b81-a427-69be8c6299c4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db05c673-395e-472f-88ac-d3b2322cc3cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d343b9f-5887-42db-bdff-1c609964a7ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e911a89-e4fd-48b4-b03a-85fd07cdc300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2bba5ef-2406-4b9d-a79f-7b9a0c5be993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9315e7b-6eb8-413f-ad46-12f85389d73f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895e8514-9520-4c65-bfc6-2574bf51cea1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa31671b-54c5-491e-be12-ff3b985e91ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5be1881-e791-4b69-8e6d-a2790d65e258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e65a6d9-f510-4755-b463-0e3bb09cfd6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4716ae3-44e3-4ccf-9738-2d8cf6be124b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3911bf1-acc4-43dc-bb92-b576b5101fb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "206663c5-7b6b-42a1-96fd-7ccd2a2af5eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6908455c-37f4-40d8-b3f8-899597516082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fcb5700-ddc1-4ac6-94bc-78c829cbca3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d2ecd0-ad4a-475d-84f2-1fce9f400310",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c591adf4-5abe-4f3e-ab80-2e3d6a078575",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e7c73aa-129c-4655-93f0-edeed7fb963a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6a94f1-194b-41d7-8ffc-c8551b2a9b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a402812-8d41-458d-baf8-42d6e6984ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ff11c6-ea1c-4247-8cf9-c7fc25848b2c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03271ba4-6598-42cd-ae2d-860bb8cd00a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8caec650-54dd-407c-b764-6481c53c9df0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb2847b-0154-4f34-83e8-6626d3bae182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6111a0ca-a2a8-478b-b28d-6f98286db732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1012ec4e-7aa8-4b64-95c0-ea4aac8282ad",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a906e37d-9f24-4e30-b3a4-0c581ba89067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9addd81-592c-4dc7-873b-d8cc62990fd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef5a420-34b4-4dd2-94f7-b56004736bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec961b55-f60a-46c6-b203-90af410fed55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a7d639-a4a7-4802-9c59-578d3fb76eb9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94af533-15ee-4cfd-b608-4a823bc3590c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18a1c29a-f394-440b-8926-0f2a988287fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fe9311-d799-486b-a514-681be66d7ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae21e8cd-8386-485b-95c8-3b5ba374cd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8e565e-4001-4c3a-b55b-f5f441ad2a69",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c1afd2-649b-494e-9b88-ce52058eff69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dccffbab-c808-4634-8a56-0f6a969af075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883a5613-89f9-4b12-b350-4b4ef40b437a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26f54f4-82aa-4cb1-962a-ef3c77b792b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9cc6a4b-38a6-4f2b-8cc1-7d99766e2baf",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe576849-f02a-4ce2-9518-62ec908ea713",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5544a5e-9f20-42c1-a004-e559584fa9a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0fef06-4d88-4889-a41b-6a0ae5aba039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3e71c5-c676-4c48-b6af-3d190a33fb92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f325e7eb-1d60-4b44-a003-0bc5a456ca92",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ce5e7e-59d9-4893-9730-222ffda648fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1833d165-eedb-4095-b06f-897c3b246cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05eca7da-6011-4923-83a2-750f177af6d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bebfcee-3597-4149-ad6c-41e73daa625e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1392315-697e-4556-9d15-b674317d3ed9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bca807-c252-410e-a972-95402d4ac4b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5286cd6-a444-4424-9884-58c7570dee46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea6a56c-4e94-4dad-8081-45fbe6e78647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9badfbd5-e714-48c4-9eeb-5be891a0cbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13dad9b-d11a-4108-a173-ac5b5db238d4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd304bc4-c18d-47ce-adfa-1d3c05726423",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bff7d266-2714-44e3-97ae-49375c18e446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f591bcd-a07d-4db7-9dba-6e4efce9cc29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b90f93-bf05-4c76-ab4a-31cc74c257f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291e5a6c-316c-41a2-9876-eac013241648",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fdc9e15-f749-4a99-9c98-c6b9f8e10d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8523c07-a74f-4572-8166-6b3f4f1d364f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e8ba10-c146-4f0f-be34-fe1ab02587bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc848f1f-a1f9-461f-95e7-b2642badab2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264321f3-0a7c-4e61-80af-051bdf2ee605",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7729aa0a-4058-4236-89cd-452702d8f71b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "905b5dcd-0f71-4816-8836-9587e09c3256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca1f008-1402-47a8-8eea-57b935aad650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20175c9-7c2d-456d-8200-6a5fd62296cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce17c0d-de6b-475d-9364-954c39632a1b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347e7160-016a-4231-89ea-50701df4d7ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a03ce5-0110-4633-bb8f-55c869ddbe55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f1a4f9-485d-4c97-ada8-e85f1b1ea1c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c57792b-d637-41f0-bc0a-ee889219678e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573b3495-3f68-4215-bd6a-f2f853773380",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7cb8f9f-0728-4cd5-a4b7-6caabcd6e1c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89af7474-f606-4f14-b914-2c0b22b1ad1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ad632e-37e9-4018-afe6-badf89093ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144a8bd1-28aa-4c9c-a236-4cebbc5ad6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d587f43-1423-42fa-bd0d-9d2f361d2ce1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7566e0-d2c2-4c8d-a9c3-61cb09a67bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c017993-216d-4261-9867-b6ec627df26f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "130014e8-aada-49bf-a787-38b8f414890d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d945baa0-eac9-460a-a09b-fee15e22a645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9055cd-1b3b-4016-872e-49e34fae8657",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd07449-4cba-4ae1-a7ba-de12e31975d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6c7c93-76ea-4200-b29b-1fa15ff962a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a236a6-d9f6-42c2-9466-5b1f2df0151c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5071af-a51b-469d-81cf-a9cba81358d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5441ae13-c39f-4dea-820d-7e3697ba630b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475ba521-5899-4878-821f-6fa0b3d8d8ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6465914-9f42-443b-bf4a-c8120035b602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647b413e-dd57-4a15-a9e4-df64b81cdb8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fddd863-0471-4f51-92aa-bafdf5d8a173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c038898-f886-4109-8054-179f499c6b71",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255772eb-2ef8-4962-958a-06910f562b78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1392700e-db26-48b1-98ef-e41ac1aea468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a967d5f4-937e-461d-aacc-5e5296e02bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af17273-8a35-46c2-a6ff-514fcea7117c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6c8288-87b5-4881-a2c3-558f7d721fc7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781c08b1-8403-48e7-97cb-d2b2d5a844be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b05cf9b-fd92-4e7b-8ad0-49fe4447508e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c53f10d-947a-486f-a24c-a0843e7915f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767d2685-d529-4fa6-a00a-889019aa48c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce39b608-847e-4032-a3da-0ce516793be0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d73581-2dad-4961-9f91-bb3bb694e4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80bb32f8-87b3-4941-855d-1468fe224a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "694c05a4-1d9a-40fb-adec-a68647077ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84044e1e-1a54-4938-8305-d0f571554bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b045bf51-263c-47f6-bef5-3830d612b92f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0b895f-08c2-4108-82e9-7bd02b292ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105a69ca-be1e-4362-9523-fc7caee6e32d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63e3feb-3dc1-4f6f-8e7b-d123d6c24396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c75f8d0b-0599-4db8-8002-79b83f94c31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabdc7d7-99ad-4b27-aec2-bb0f5bdc69c3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60257aa-8d94-4aa5-ae65-8e4ca816a6af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b1de10-cc27-4bf1-a838-7d393b025591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43dbf8a-e055-4f63-801b-0ab26dba583e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb6fb5ac-7932-45b2-9d7f-42d278699772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcc0041-cc82-4462-86e7-ff570ab26b7a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fd1a5a-e272-404d-8c88-332c00201cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076414bf-e8be-4b0a-b72d-6e91475b91b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8570c09a-6718-4203-8050-1e12b30e1018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b15ff2-452e-4b5f-a0c5-9db2ef1064b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2c9d04-29bb-4940-b3b8-10381eee7b31",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b8225f-dc05-4c72-bc31-be4aae3a9593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c673b4c-6a92-49cf-96b1-f1fdc350f1ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d258a77-f2a9-4dda-a421-3d4af475d39c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "099edac1-662c-4a9d-9c62-1394c1a2f999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f575998f-9c2d-491a-a4a9-1f924ef09e8f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2a5273-9e67-4ff1-9292-e56d66ad4cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85bd6566-4f7d-41f7-8828-5b78b6330ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8cd21a-44ea-4dce-8ba8-fb7683da45fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f25491c-2e8c-4b64-8e2e-c36d38bae813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5881d8e-1e6b-427d-953a-ab6ef1f68445",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81305d51-1fe5-45ed-b72f-f6bb6f6a5330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd31ec1-c0bc-4438-8f68-7df330373e14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f4b2bf-1471-4931-99d8-105f148b3014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab4ecb7-392c-4277-b622-577392ce2a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c88b110-553e-4954-84ff-6385839c9c4f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd720620-7d13-4287-b95e-b37a1e88fbed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f042bf84-7a0d-4f59-891b-58978bcb64be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9b87fc-ffe5-407a-90de-514021ef62fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f26b966-7eea-4e23-858d-d7b62d3991f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20328726-60cc-44c1-b1be-674d680d9ced",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190ba4b4-69fb-46a2-a85c-e09b7ef89c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18da5013-122f-48de-b627-8170b79124c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82b1ac8-91b4-4256-b0c2-6745f5673e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e86350e1-0850-4223-89c8-f61f4e961463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8db1c86-d24a-4633-a0f9-1465c64c26f8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f80f5a7-5d19-4243-a838-93defe897db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baac9a09-b278-4172-9031-d19e67ec9b8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c6abd6-48ab-446d-99a0-5b71e594addc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48dbba4-b4fa-42d5-882a-bf8b8f59229b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5fe5b9-6308-42bc-8516-33f17ac6883e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5ec3cb-e595-43dc-960c-4e23180dda6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf9c8b9-4fa7-424b-a5ba-76936f5f9251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95a0400-0e27-4b4f-a357-4dc293832205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cec9219-bdc9-41cb-941f-5ee7ea2e1de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3f276c-f1e1-440a-861d-9c0353c3a723",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d0d184-4dc3-4ece-a550-b8f7b1ab85e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "178b9f46-96fb-4fb1-8dfe-9b1bb4af5dc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0614a9-dd2d-4adb-ac5d-9622015c4a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "addb5caa-4714-41a4-827e-06d94fe1ceb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7594028d-922d-4776-8f86-0779835013e7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab05e196-da35-419e-b614-bd63a2364c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb3ae6d-5a3a-449d-8631-0febf6c604d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "def58edb-433d-4fc6-9df0-d75c5b4043b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1034316c-ddd7-43af-9574-e41995c8ca18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d31e7a-60bb-43b5-8810-5c0c289ea657",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e053716a-2708-45c3-868c-b3e14b93bfc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a29039-1e59-43c7-b627-0eb2982228b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aba0256-a690-4310-af2b-6085f1bd33c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e750806-deca-43f0-8800-d93b9c4da200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd25286-7074-41ea-8bc4-8969ef7627f3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3589d62d-8efd-4425-99f3-6fcac57f360d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef605e5d-61ad-4531-bc4c-ce45508b59d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9815390f-ff35-43e2-ac2c-205c1b083ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec5d0ab-8401-4ae6-ae60-e7604cdffd64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfef129-b588-46f8-a5b1-292e4d76f9a8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70bb2c16-c87f-425f-b8a0-be9ba99f9b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5066aa9e-2393-401a-b951-071f63cb68ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc8dbfb-0154-4a5e-b619-b852d22b5908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af52665-d14a-4929-8bac-834c92c518fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db46205a-4631-454b-ab32-6ac154c5474a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19000d20-460f-40fb-954f-f9e68a41745f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad41bf6a-388c-4214-ae90-8e2cb1161b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdad7e41-1e41-4157-bc65-81cdcbd96736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9ff676-f782-403e-aa6b-d657064c2639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6fb9e2-5650-4c3c-9bd9-ccb67d858ada",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc417e2-c05e-4fcb-ae55-7143335299b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4756c1d-556d-4964-8a9e-81ee7572577d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9add1775-1444-4396-b179-06edc672b766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5bf5d79-ba60-4075-ab8f-a54bb99f588c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc206678-c834-480f-9d10-72fa665bc7af",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a3999f-7774-4b16-914d-bc26fdfcf062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49cf950a-9c49-4448-9be6-c17d09923749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c66828c-4d52-4caf-92b7-dcc37cb23e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674f1ff4-be21-4dc9-85f0-02a14a607125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b41feaf-c554-49ec-a326-770964326b3c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e907128-1dac-47d2-a254-7ecf582b7d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f79b332d-b715-408a-a101-7bbe904d4dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7503e3-58be-48eb-88ae-cd05d289d5b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7695be-7f75-4a73-955d-3a5d7afb8645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b377bf86-685a-4b27-b99a-3c0c99e45e28",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a9c8f8-a4d3-44c3-8ba4-1c3848b4a2b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0773247e-2e25-489f-9cbe-bccdee45b14e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a417e82f-459a-460d-888c-32d3aadbc2dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e5ca299-6eb4-40d5-9460-e9a097031987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd80475-6582-465a-8fa6-168fc1bb0cec",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a353da4-f53a-4708-a28a-d02905513485",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "222aadcf-c9d4-4e2d-bfeb-6a2d793f3ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df6c479-87a8-4f11-a309-709efac479ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e3ca1d-9eb2-47c6-866b-e82a979aa644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8ddddd-e9f8-4da7-8456-4205c589fc29",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2dcec8-ae7e-4f5b-89c2-77f0141f2f67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8b07418-2357-485b-85fd-cafd9033a6df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2431f8bd-39b7-43be-9152-eb1cbe71c019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69ad428-a4b9-443f-ab3c-f802665009a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a8f697-def4-4b47-961b-ab6081803bb8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e14db1-ef28-4366-b2a4-ea5cf5aefedc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55ffc60b-871d-45d8-90de-16c4ff44f700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "561582df-cf31-44e0-a0b8-f9eb539d3f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a199e8-4193-4685-9d7e-d2d3cf5a8cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3265262-a3a8-42c8-8d2a-55b612f1bf83",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a739b8-6896-4a82-bc73-db7667446183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63726593-4e26-40ab-88b8-54ee236f496e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcfdc74-1612-46af-ba21-cacd93473742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d714675b-7f76-43f7-85d0-f057d4bf6bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc6df23-fc88-4c01-9867-afbde6b185ee",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee9db1f-c00a-4097-aec7-e1d11503d107",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d281945-7afb-4098-bd5e-cc710f542350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cd5615-f14d-4906-af9a-37ead78d7d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d4a1cfa-7fc9-4d8b-bb46-3811bf19694b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8156f59-038f-4d39-ae14-b5001caca05f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597abe33-d911-49c1-ad5d-34f3214fb01b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa269969-62e5-46d7-b0d4-b31b563a0013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "270df7f0-ec07-49f5-a676-6db02a611639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21e1627-53a7-46bc-a4f5-4f9e603fbb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d7cc68-2b83-4bfa-b226-7c339c95265a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54ec19a-f319-495f-894d-6157c89e8e7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "638d9926-4791-46f4-b326-a30ed5c76627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4369ce86-f4da-45c6-8643-a0bca7b46e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0984b0f2-01d8-4e5e-89ef-40052e3d0b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe16bf0-9363-4ebc-8bb1-1695488028c5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed9adc3-009d-4073-82e4-b7876822dd1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af5cebde-01d9-43fb-8796-767088882168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "703fd61c-a66d-49e0-8d2f-5cca6e176232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "564b409d-4831-4be9-8ea9-e66baa58717a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dde27cb-1fc2-4577-ba82-e4fcf0ed4cf2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce662ae-7c79-416c-b266-ec2c1b834b3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93266104-bb30-4034-914b-c33aff313158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69df0554-983c-4387-812a-00b2ad935f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a89f41b0-c32a-4fdc-99e1-7ec8c6ae618c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bd834d-8a8d-4777-be5b-69412c9f334a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c920114f-2c26-410b-bfea-8f9dd05a6f6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a47ff560-2dd1-465a-8b14-069711a2b276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34424ee-0fa5-4860-bbd3-a69a28f81ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb91b3a9-c807-4991-a962-853b9fc107c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc87d93-2a0c-48d2-bb50-21a5c6bf5ff0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08bd703-9108-467e-9a84-a8a0e6111326",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3ef8144-74c6-44ae-82db-18e1d7c0389a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880d6380-7d4f-487d-abc7-ba82f34f2440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a960890-1f71-4786-8367-2585df5b3df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d35b982-4831-488a-8bba-e6b95faadcf9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6bfc11-33b9-42b5-ac01-a6ca824addba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc50a766-a027-4b77-bfe2-02748a853ab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3841f60-9c9b-4358-8293-1712271ba948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c62fd1-de30-414b-a4d8-984580aeba1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5cb172-181c-4206-b79a-2f9e78ea8437",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b4a6aa-5603-4eb5-892c-7c3a256b6e28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea2be9ff-cfce-40d7-a795-2dcf3748180b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5161697d-5dc3-4724-ab23-99c992c1d6d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3c07cc-8857-4292-b1fe-476d5940fd11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971f101d-cea0-40fa-b8c4-5f64d396a837",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802c9100-46b7-48f3-833a-bdf067763d6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "305604f9-c4a8-446d-8640-fdd5309b222e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0542b1a-ca22-4af3-912b-ee66b11af57e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2580bc58-4c11-4618-bbd3-a3f35c10e4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87d21d6-1ecf-4b07-b60f-01d91b531ad5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913a2eab-f295-46dd-b00a-d54c9db23ff1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0942c610-2810-4259-80c0-6862a2864023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "203a6343-e071-4904-989c-9a81fe1cebf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa790ce2-ad9a-4fa9-a942-6c3f7df54937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2e0618-0f18-4178-82ea-8ad05a3b2015",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24730f3-9dc4-4e6b-bab9-b70ec6b2593f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50a6e269-d541-44f1-a68c-72f665da51bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc482c8-1839-4aec-b082-a949ef0c2125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27fb9fac-6882-4b90-a056-ebf4450f504a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f7aabc-e0a3-451b-bbab-2944b5aa567a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2944cd7d-1376-4692-ba16-66722aa95dbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e93f0553-9952-4c3f-b517-e4858115fd84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b921ef-d8f0-4425-9780-71cdcf02317c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3af72ec-6716-498a-90a6-c6a0961735d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa114de8-85c9-474b-adae-549a12d0b5be",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a3fb14-d410-42cb-bbfc-036b83b06ec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ceb5001-5fd0-46cb-95d2-4aa972198527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d703477e-452d-493c-9007-af9a66551dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33604120-2765-4c95-8138-453d8c3721f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231e6cce-6219-481b-902a-6e5014fa9f3e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f72c6b9-250d-4b45-ba86-3f883cf972e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e06043b1-1247-4f76-a7a6-103c9776d8a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9de1cd-f787-4672-a35f-dd4598be1a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e5eb1a7-8de5-485b-a31d-4ca0fd567d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db12d6c7-4f0d-44e1-a083-54cab404fe35",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603e8630-f3a2-4735-9fad-3c6795bb806a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "348a0dea-fd8b-4d30-930f-4e7f606e5c99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a190b461-3589-4642-a6cd-c2266893ee9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44546934-7560-4034-b598-91371be6e7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05d3082-4aa0-4192-bd7d-d846c7549fba",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38c8ee8-ef40-43c7-8adb-ad58406fa8be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e7dc577-69bc-482a-89c7-34d12383c81c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4e0081-8642-4de8-b79f-8e96cd0a7055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bac613c-90d7-42f3-83c4-6f42504499f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9c3a55-1b4a-4de6-b554-89bfc176cb9f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8fc82d-b511-4073-b6e5-0a73905fbbae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3602c5b1-f1fd-4cae-97bf-bafced4591bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "941b81a6-59ba-49d5-94ea-5283d9762ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397ccd68-c678-47a0-8640-a09da874665b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d6da25-645c-419d-9fe8-0ba53c751885",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd52a48-6f6e-412d-927a-4c174507873c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20d6211d-bdaf-41aa-846c-29a0bb536a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f83d2f-cff9-4b11-a9a7-ea7beb95b0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b710e2d-8297-47e3-94be-ddbe1ae57008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d119553-6015-46c5-9dab-b537ec3a701b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0af1139-7fa9-4b4e-b7ec-4894722f9246",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ca774fe-a41e-4277-87bd-c0ab629b7687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1a4d7a-fa47-4a85-8a6e-9e1f99d9d245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95458d8d-9940-4f9e-9e6e-ad094b495c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b45f79b-7a04-4180-9604-9b61c6dbd3ff",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc41d864-7c19-49b5-bf45-96aa2423efe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0dca01b-985f-446b-8182-022cf10b756d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c633d171-7630-4907-ba63-5c1d213041b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c6abfc-ba78-4bd7-8f04-b28b2e35af3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194e55df-2416-46fd-842c-aad1acf6e172",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ca48d2-a72e-4ddb-b52c-a322ed1f5b98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30ee81e2-ce5c-46f9-9390-b9f332bd1cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88c6246-7dd0-4beb-9b18-b1cb46325044",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7356bdfb-45e3-4bb4-b278-38a61706da32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4dcd9f-e904-4c36-8a6f-e099f2b86f59",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d633a4ec-b0f2-462b-a7c4-2e5ebe05c020",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b4b75dc-e946-42e4-b5a8-c48e5df8de6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad15e4e9-1018-4c29-a684-30601a055c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38ddd11-abec-4ada-9cdc-d46dcf8fe76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbc8eaa-92d1-4df8-88d7-e7ea2f0d3e18",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1115838a-6afe-4956-866a-3df151bbbc3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79d5af5c-1939-448d-9d9c-f9cb5bd13f1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15d65d5-5180-4540-9709-a2f8047189c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd26eaae-f5c4-45c0-b4d2-26683e51f470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c601438-9180-4666-9c4c-8d3de046b24f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fccd7b-ec7b-4f8a-b791-9ba604bbab48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee6b448a-a444-4c28-bf7b-34e9bf7b7778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f1fbb3-79cf-4ac9-b627-d764ec36740b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6bf1fb0-fc7c-43c3-a3a5-ddb01dd3a6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c167c7-60f9-41bc-9ae1-387418e4e50b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f99fee1-c21e-4562-a61a-3040d54482b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "798fcdda-a132-49ce-a069-2dc37e39616c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "080e516c-f285-4d48-99a0-b5520b67429c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ebaf92d-53dd-4060-a425-2984c7302cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31aa219a-edb8-40bf-9746-6d645d5c0ba5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34683f2-e3f7-47f3-83ea-bbea07d382c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a72da57-7672-4960-b425-0305238a022a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2cb51e-b3b6-49a5-9b8b-9c75c36d73ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5455bb-9dcd-44e2-a07a-548ddf8891ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7739fc-ccef-4dd2-85b9-8f9a8643733b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c74d7f-78cc-4612-b581-e2a90b75e502",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccd8d5b7-edf0-4aee-bc5f-dfe65666346b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d4bcaa-15dd-4a69-9a0c-9bf20a1838ea",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed78af78-aab5-4df6-b286-76afafc5af30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddd5cce-7706-4048-a70a-d14bafc5f838",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd809007-04fe-4515-b425-bd45d9675a3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b75dc19-f0fe-4005-9371-1ec8e7dff98c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c891b202-51f9-4a0b-8830-5d2bd0722e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e2ccc72-4904-4856-8f77-229743948a97"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "473143e9-dad3-4e07-b50e-a68a96056592",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1e58e30-8c8d-4296-812b-9b5acecc4eff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6121d7d6-bf8d-4d46-bf29-25ac89063f0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b79358ed-5f55-431f-ac36-39d6e8a522a8"
                    }
                  }
                ]
              },
              {
                "id": "539a529a-f21e-4ff8-8c0b-d5b0565ec388",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "54849cba-abda-4de2-bd6e-c7b86f9b4740",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346ab45a-0fa8-4958-9862-f2f0ffdc5241",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "141e063f-a5d9-48a4-afc8-bb92257b6073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3da9825-0b5f-4dc4-ab50-31ac53a8cfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c580afd7-d94c-4e01-bf46-82e3b41b8760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001d59fc-e276-4e62-aef9-e8729d8ff7f7",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d7fa0a-af02-40a3-82a4-8d81592f0531",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6a290de8-44c8-42f5-bbc7-1c90917b89f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a12cb93-800f-4fe4-92a3-52fc8ec8b3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edd74f62-94f7-496f-870d-006194470a07"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "314dfb82-088c-423f-9892-c96e88e98726",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "125d162e-f671-46db-89f7-59d7f0d072a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b032604f-5377-498c-a7d9-625b20d64fc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98c57702-6905-4ec9-97b6-b1535a78fb77"
                    }
                  }
                ]
              },
              {
                "id": "c84d26e4-613d-4d43-a870-c2bd38df8a99",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "22bb16a0-5336-44a8-9aed-c81cc587020c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c21691f-cc43-4f9e-beff-45c9d2794a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "430ab059-e0e5-4299-8d9a-9ebd07375ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34208a62-021f-4599-b1b8-ddaf22d3eba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9921029-1910-496f-910e-56685b6b1541"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7f229613-3e5d-43fd-9660-46af9e064d49",
            "name": "Positive Testing",
            "item": [
              {
                "id": "722572a4-8f61-4641-a1f6-bc9f85bdd7da",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "825acbed-63e4-4af6-bf77-150062febbec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "658f89e7-5c09-44b9-a48b-6538a57f9a56"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61cefd46-5902-4122-8609-2f2787cae1e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a035356a-b217-4472-82a6-85b5fd717d73"
                    }
                  }
                ]
              },
              {
                "id": "d636ff78-b5e1-4f02-8eb3-a00dad5091fd",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8c99187-6af6-41b8-a814-e9b90e44daa8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f6869d59-32c9-49bf-b4c0-5772a52a6c7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e408b8f-49df-425d-b7c1-8ff6ea674287",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2fb9862-121a-422b-b5ec-23909c04d392"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "380f42ef-2859-40d3-8503-4ead4cfcc268",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3fbd8ae6-9fe7-4c4f-9b96-4c5c32a64ac7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7dcf8d34-57cd-4b66-a56d-8e96d2d9e95f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1a983d1-422e-4cab-91f9-53599121a3e0"
            }
          }
        ]
      },
      {
        "id": "425e4386-c709-4caa-bde9-0faeca225222",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "815b42ed-ea7a-4024-9259-e978a706e53d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee37dc76-dfdd-41a9-a23f-9ee6773ffae8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b4c1b00d-9f63-4616-91d7-522dcd8afe75",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323025c5-0a9a-421a-89a3-85b1c2d66571",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bc002d8c-c91f-4568-b712-6bdbffcd49b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4d3cad-9972-4263-a2b8-b24e2a0461e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a542acb7-2256-4116-bf59-6e9c808c59ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f868b4b1-6d2c-4bfd-9154-26e74141cea1",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21791516-ef3f-453a-b83c-b5e44b0394d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2e3041d8-9c76-4cad-8f33-9b095caf554c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "527846d3-a078-4faa-b44a-fde9a18f42f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37ac6167-a3c3-4693-bce3-532f87629485"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44bf9e93-6c23-4e85-ad74-8aca2e6acbf5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1de5af84-30ba-48e0-a25e-7849872b4aa0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "af392768-0961-449e-8c8c-fe1ebdf65505",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "803ba394-6d52-47ed-8c72-d7ea0de67a19"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48e13dbc-a15d-48fe-b905-9a84d24ea1a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "27c5cd62-e9ac-4f86-9915-7f496bde7de2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3211218f-470e-42eb-8ddc-f7808d821a12",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a1a45dc-8f33-4731-a10f-9445244964c6"
            }
          }
        ]
      },
      {
        "id": "50283bcf-9256-4157-b200-994b1c816b24",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e96596d2-7b66-4a00-8b2d-7a5acb5b6617",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af7a265e-1be4-4fea-94e1-da2763da0378",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0399c960-e19b-4290-9249-8ef07f262d2f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a5fcc5-7142-47fe-9a39-ed5b9eed9f65",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8efd99f3-7ad2-48b9-acbc-79d00b27b322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f307335e-520b-4426-babd-8d7dcbb1bf34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6ac8800-60c3-4941-a934-3cedea80f463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8452fb32-32d7-4ceb-b36d-a0d01f61f775",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4b0aae-2d43-4d05-b1bb-302fb078a97a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "69fce5ef-8e60-4263-b6a9-82b192e4f117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c53700e-1e40-4f77-93c7-1ecd221a3d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "baf9c2c0-38fa-432f-b1d9-5225a92c089d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c823941-e095-4142-a109-4bd49f1eb859",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9dbb7134-d16c-4794-91c3-639c761ee024"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "96beb8aa-db61-4a26-8f7c-83b67b113b31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87ce2376-6ced-4dd8-91d9-221000327ad9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46c5f0e1-5eb1-4347-8212-3aa82562de60",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0f49ac32-b2ba-46b6-af4f-2898c9a0aee7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c139216-5980-4e56-a19c-6920ddc48521",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "66376a23-e92a-4c7a-9374-2842ddb9fdd6"
            }
          }
        ]
      },
      {
        "id": "4d23dad8-5499-4dfc-9621-684c3721e13f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0aab4692-ad7c-48fc-ab85-bf6126a7d2e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6c43dd8-24ab-4c36-a0f7-62846f2f4042",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a5e01774-2b62-48a5-8031-1e96a6781f79",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520b0160-6bb2-4612-9d16-8efbb42b654d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2626a230-e097-4a99-ae78-ccec7b78298a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6db1f6a-c303-4db5-b7f0-2c4a1ed5b539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fd99d71-1e78-4692-8899-e5ce2369c8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b2c4c6-7576-4946-b8bd-c03936a969b3",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b655ec-dc87-48da-a562-b41ac5a012d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e07ac357-26f2-4d2e-aefa-b0b8f3376dda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e491a7d-5bb9-4210-85a6-246d51347f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1e43b86-9eb7-473d-a97b-9ef0f653aeaa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2837c9de-8f26-40df-a3f3-aee2ad71dc49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e8aa828-9491-419a-9193-5071aa6ad37c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "421bb20f-7bc9-4501-90e2-1f4ef315c2c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "525eb71b-2253-45e4-afe2-1b4b99ae3759"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5e63049-135b-4186-ab4e-6ebe817ab64a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "68334c54-d1e5-4336-b91b-9f76bf64dac0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cab84148-7e69-47b2-87e8-59ace0c162d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ea2452b-7ecc-407a-8433-55c76225e6fe"
            }
          }
        ]
      },
      {
        "id": "3fc5e773-0f64-447f-8342-d5edceae944c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "598c85e5-e732-4204-a2ef-9cccd47914aa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f613c22a-3886-4cc0-a072-028e6e52ca83",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e037025c-8680-4380-aca7-4a643cca7d38",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f08cdf15-df99-4283-9d8b-8b16a7c41354",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12b59513-9958-407c-8907-b81d7366fefa",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 23
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 537.2442748091603,
      "responseMin": 13,
      "responseMax": 4291,
      "responseSd": 629.1887372222857,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1671842004653,
      "completed": 1671842159096
    },
    "executions": [
      {
        "id": "22f5cb30-4828-43db-a125-a0a2daa86faf",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "95517283-dea8-4571-a8b1-0628cbf076eb",
          "httpRequestId": "9b46c174-80db-4048-b3dc-d38f4806954a"
        },
        "item": {
          "id": "22f5cb30-4828-43db-a125-a0a2daa86faf",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f24c7c58-33a7-4fd3-af85-98c024a83256",
          "status": "OK",
          "code": 200,
          "responseTime": 101,
          "responseSize": 0
        }
      },
      {
        "id": "7a8f437e-c15d-42a7-ab02-e5ebda6beeaf",
        "cursor": {
          "ref": "7f355ed1-1c52-4c83-93a3-5902f6cce4e7",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0c7c956b-5944-4ca3-9e37-edee5d6478f8"
        },
        "item": {
          "id": "7a8f437e-c15d-42a7-ab02-e5ebda6beeaf",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7cfe2029-d04c-42f4-839e-879693541a74",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "c085c3ac-1009-499d-9942-778b605c3b0a",
        "cursor": {
          "ref": "cc765afa-cafb-4deb-8c13-9f2837d030f2",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "29cb2a59-a042-42a3-aca5-008a50fdaabe"
        },
        "item": {
          "id": "c085c3ac-1009-499d-9942-778b605c3b0a",
          "name": "did_json"
        },
        "response": {
          "id": "487b2bb9-970a-4cb6-92c1-0867e3b69bfb",
          "status": "OK",
          "code": 200,
          "responseTime": 703,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287ea67a-b035-4ca5-bc30-e0a72aaab606",
        "cursor": {
          "ref": "4ef4b4a9-f2b1-4af6-b40e-5064128ddac1",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fd675489-876c-4bbf-93a2-ddf6e4d1eaff"
        },
        "item": {
          "id": "287ea67a-b035-4ca5-bc30-e0a72aaab606",
          "name": "did:invalid"
        },
        "response": {
          "id": "e49ed5a8-10c3-4b0a-9931-93ab37d8692e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287ea67a-b035-4ca5-bc30-e0a72aaab606",
        "cursor": {
          "ref": "4ef4b4a9-f2b1-4af6-b40e-5064128ddac1",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fd675489-876c-4bbf-93a2-ddf6e4d1eaff"
        },
        "item": {
          "id": "287ea67a-b035-4ca5-bc30-e0a72aaab606",
          "name": "did:invalid"
        },
        "response": {
          "id": "e49ed5a8-10c3-4b0a-9931-93ab37d8692e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968217d4-962b-4d21-9fc4-945d3d26ec89",
        "cursor": {
          "ref": "dc87b5ea-3e76-4c81-9119-49acbb821437",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b68b3a8c-cb77-4ead-994f-aeac7b5a7d67"
        },
        "item": {
          "id": "968217d4-962b-4d21-9fc4-945d3d26ec89",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e837fedb-7c93-4328-8b45-25c2604e5924",
          "status": "Not Found",
          "code": 404,
          "responseTime": 580,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc37ad2-5667-4c56-8c78-963421a7b178",
        "cursor": {
          "ref": "6ebcddb7-98da-476a-90f8-c11020abdfab",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4171713a-138c-4938-81db-de959e328f5f"
        },
        "item": {
          "id": "7cc37ad2-5667-4c56-8c78-963421a7b178",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "77fb45a8-3792-4619-9334-fcb4182469f2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 497,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad20fa7-8d4b-4424-a0c5-5575bfe11de1",
        "cursor": {
          "ref": "afbbe2c9-7b85-4dff-8ca4-e95e0477ecb8",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a7db285f-9b20-43be-a6fe-6409d757076b"
        },
        "item": {
          "id": "0ad20fa7-8d4b-4424-a0c5-5575bfe11de1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "decd4ba3-e196-43c5-bbb3-6e57efc8dbed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4ff29b-11d1-43ed-b21a-589fe2e54277",
        "cursor": {
          "ref": "08ca36de-e6fd-4a87-a510-584b27e2fa99",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ec519321-a626-4937-abe5-3f99acc9026e"
        },
        "item": {
          "id": "ce4ff29b-11d1-43ed-b21a-589fe2e54277",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "693d126b-9199-4bca-8bdb-e374ac07dd8d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 486,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4ff29b-11d1-43ed-b21a-589fe2e54277",
        "cursor": {
          "ref": "08ca36de-e6fd-4a87-a510-584b27e2fa99",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ec519321-a626-4937-abe5-3f99acc9026e"
        },
        "item": {
          "id": "ce4ff29b-11d1-43ed-b21a-589fe2e54277",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "693d126b-9199-4bca-8bdb-e374ac07dd8d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 486,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0dfa38-692e-4153-97cf-a65085048581",
        "cursor": {
          "ref": "5dfed082-73bd-48ff-a190-1f2bcde2478a",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f23bd050-7eb3-49af-9d7f-91ef343c9e1a"
        },
        "item": {
          "id": "ee0dfa38-692e-4153-97cf-a65085048581",
          "name": "identifiers"
        },
        "response": {
          "id": "b207ab28-7e2e-4964-af47-4d5c8e68ac92",
          "status": "OK",
          "code": 200,
          "responseTime": 834,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65ae373-06f4-45f8-896c-664b19dd62f6",
        "cursor": {
          "ref": "2af6f328-0d70-46af-82c0-044655cdda15",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f5e5a70d-bcdf-468d-8a63-7cc13d61ad08"
        },
        "item": {
          "id": "f65ae373-06f4-45f8-896c-664b19dd62f6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "aac5183c-7700-4ecb-8314-5e50eff7f883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65ae373-06f4-45f8-896c-664b19dd62f6",
        "cursor": {
          "ref": "2af6f328-0d70-46af-82c0-044655cdda15",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f5e5a70d-bcdf-468d-8a63-7cc13d61ad08"
        },
        "item": {
          "id": "f65ae373-06f4-45f8-896c-664b19dd62f6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "aac5183c-7700-4ecb-8314-5e50eff7f883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d066a219-c7c3-4d21-be0c-1f3f81bc1384",
        "cursor": {
          "ref": "7767f9c1-c7ea-4fa1-b14f-de2bec582f06",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cecf543a-f31b-4270-8641-851c079767d8"
        },
        "item": {
          "id": "d066a219-c7c3-4d21-be0c-1f3f81bc1384",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9eefa510-fe6e-4828-a093-aaa42b806133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7709be-7af4-43ea-a557-5af925d71fb7",
        "cursor": {
          "ref": "23114a1c-5fa7-463d-8d5f-79065bb434e3",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "42f8ca35-04d2-4d2d-8401-21b409f561da"
        },
        "item": {
          "id": "4d7709be-7af4-43ea-a557-5af925d71fb7",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "394ee968-c2a5-4f60-bd51-ebf500d5619c",
          "status": "Created",
          "code": 201,
          "responseTime": 2658,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "f39f7baf-380b-4071-861a-3b3ff43ba6a3",
        "cursor": {
          "ref": "3a182c4e-f605-42ea-bad3-3843a7df67ac",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7e52d4df-ea41-4cb2-8c7d-e8bd95aa99e1"
        },
        "item": {
          "id": "f39f7baf-380b-4071-861a-3b3ff43ba6a3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "dbb2a47d-508f-47de-aea7-971946fcdae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477b1ee4-b4fd-4013-b179-7dfd8c5daf23",
        "cursor": {
          "ref": "8e5058f5-4f22-4236-bbcc-e066c9db66ff",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "18412839-f384-4029-bf8e-b825dd06fc87"
        },
        "item": {
          "id": "477b1ee4-b4fd-4013-b179-7dfd8c5daf23",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b3e3b3cc-6a7b-42bd-8abf-3a25cfe3bde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783bb04f-3834-45a3-a4a8-2ff92cc80bd9",
        "cursor": {
          "ref": "9b83d74e-966f-46a9-b7fb-efbe5129c46e",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1d5fede0-697f-42b0-9dee-77e7537e19fd"
        },
        "item": {
          "id": "783bb04f-3834-45a3-a4a8-2ff92cc80bd9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d3631258-8225-4b58-9208-fea6b13f8ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc21fc65-8602-48db-a9e3-6b05a76a8499",
        "cursor": {
          "ref": "7c8808d5-2404-4b49-b9e5-399b7d358dcd",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1183b82f-8126-4bab-aa17-77687e899f8e"
        },
        "item": {
          "id": "fc21fc65-8602-48db-a9e3-6b05a76a8499",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "24b0b091-92f6-4928-9f50-aba07532801a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67c1849-746d-46e8-88ef-53720cfb94e7",
        "cursor": {
          "ref": "4e981f8d-df49-431c-b97b-dbbc8b99c4c4",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0fc2286c-19bd-4832-a1ce-31b730ebf73c"
        },
        "item": {
          "id": "c67c1849-746d-46e8-88ef-53720cfb94e7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "96870019-38d8-4b47-86b4-e9cb583a7d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeeecc86-c6a8-4dff-b19b-d02b6953c142",
        "cursor": {
          "ref": "a6475a6a-e518-4239-ab3b-6356b553834f",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7cd45b4d-1fff-4eb1-97b2-09b4f39b13b0"
        },
        "item": {
          "id": "aeeecc86-c6a8-4dff-b19b-d02b6953c142",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3942aceb-2b40-4c40-bca4-8511bd5abe74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47c38c6-5348-4690-981f-29bc0896c212",
        "cursor": {
          "ref": "315039f3-814e-4445-8121-5473fa64b377",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c6efad02-1967-4fe4-b578-6a8c220ea861"
        },
        "item": {
          "id": "e47c38c6-5348-4690-981f-29bc0896c212",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b5cb3903-293b-451e-a280-1a3185b07962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1b0a25-c824-4735-8678-503b545fca27",
        "cursor": {
          "ref": "390a3ac8-1f5e-417c-9bd4-fbbd2c43ee37",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d6b24cde-cecd-44e5-92ba-f730382018bd"
        },
        "item": {
          "id": "ae1b0a25-c824-4735-8678-503b545fca27",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4215b1dd-e228-4afb-aedb-1b47121144eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fc7216-7f8d-4ff7-b8b5-cc9b0162be90",
        "cursor": {
          "ref": "5ff443dd-1140-4d45-99fd-05b5144e7a51",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bcef364f-f1a6-4d99-9241-affd523df343"
        },
        "item": {
          "id": "31fc7216-7f8d-4ff7-b8b5-cc9b0162be90",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3bdcd526-5854-44b9-9218-c9cd2f0a81cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd2e177-22db-4ae8-b7fe-109f3684739a",
        "cursor": {
          "ref": "63a97988-2865-4bc7-8bf7-b59db3535b34",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5ed43949-ba7a-4337-8727-53b62c89037c"
        },
        "item": {
          "id": "4bd2e177-22db-4ae8-b7fe-109f3684739a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ebea75b4-b560-4128-bc9a-d1f172de82e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bf527d-595c-419c-8723-7f6f4a8b5664",
        "cursor": {
          "ref": "16af124f-7278-47b3-b70b-034fc3edd95d",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e9e7366b-2513-4ebe-8c43-892cdd09f121"
        },
        "item": {
          "id": "58bf527d-595c-419c-8723-7f6f4a8b5664",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "9aab43ab-03cb-4f40-9ba9-31c76560a6b4",
          "status": "Created",
          "code": 201,
          "responseTime": 4102,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "16e536a6-2aef-471a-9b3d-85f5d22acaa4",
        "cursor": {
          "ref": "3b84c7b8-838b-4f29-96e8-6c6a388d4798",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8724d8f0-a63b-484c-9ca7-ee3363a0d68e"
        },
        "item": {
          "id": "16e536a6-2aef-471a-9b3d-85f5d22acaa4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a22a1c5e-d214-4e16-bf56-8776211cde75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bec7697-a6fa-4e93-8977-4a0d7208f386",
        "cursor": {
          "ref": "67ca8158-bab7-4688-8616-8308f38ec6c4",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "69bcf477-f9b8-4649-9ed8-8dbf940b2ec6"
        },
        "item": {
          "id": "8bec7697-a6fa-4e93-8977-4a0d7208f386",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ac6ae3d3-cb0c-47b6-b0f5-675818dfcc01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95eb6c1-a47a-455a-a64d-972de6c28903",
        "cursor": {
          "ref": "4dab495a-bc0f-4bf7-8df9-0260fe5ceca1",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bb2b088c-7e02-47a7-9455-6a7b41519579"
        },
        "item": {
          "id": "a95eb6c1-a47a-455a-a64d-972de6c28903",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2d9e3738-682e-4046-b858-de3715550185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c3130c-4c2f-45be-af0f-87764f0af592",
        "cursor": {
          "ref": "6177e5a1-2063-4ba8-aadd-9e11136c0594",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "58ec116e-cd1e-4a54-8fc7-71cca8fc2df6"
        },
        "item": {
          "id": "79c3130c-4c2f-45be-af0f-87764f0af592",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9360d3b6-fe7a-4c23-9e90-8b4f4c433575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee83777-d605-423f-8542-55d16558b1da",
        "cursor": {
          "ref": "6cf4f924-fe7d-4031-ae40-5ea0f61806b0",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0f187903-48b2-4f7e-b9d0-7d1f3389784e"
        },
        "item": {
          "id": "aee83777-d605-423f-8542-55d16558b1da",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8a67eece-c585-4c4e-a25a-1dfe348d1f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9086e7f-5fed-4388-ab6b-8e72f8ef5318",
        "cursor": {
          "ref": "63ba4131-133d-46e6-b7c5-019e60ed49e9",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3c0cbb79-87fa-4e6f-b4f8-81b9b9e965bc"
        },
        "item": {
          "id": "a9086e7f-5fed-4388-ab6b-8e72f8ef5318",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4c4c8eb2-5ea5-410b-92b6-da362986d909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c663a6af-fb57-4388-8b2e-bbcef5f365eb",
        "cursor": {
          "ref": "1f3a4cd1-5b03-4a35-9ce4-1d60312bd918",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4dea0414-70d8-46a8-969d-08be610906bc"
        },
        "item": {
          "id": "c663a6af-fb57-4388-8b2e-bbcef5f365eb",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6f7bf170-85eb-42be-972a-550560c1dfbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a2be54-645d-4a5b-a64f-e92869a57288",
        "cursor": {
          "ref": "31acdb43-fd77-42d7-8b78-30564f807ef4",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9ac523e8-8fc9-4378-9da7-ce079b66536a"
        },
        "item": {
          "id": "45a2be54-645d-4a5b-a64f-e92869a57288",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "93deda57-955a-4be3-b131-3e0f1a4cf64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c44c2b-1713-4d57-99e6-6acd5cdc7728",
        "cursor": {
          "ref": "fd235db5-a6d8-4e5d-b355-4a3059bc0a16",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "43b39f18-cf50-49e5-bf2a-63451c36641a"
        },
        "item": {
          "id": "f3c44c2b-1713-4d57-99e6-6acd5cdc7728",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3048157f-58e2-4f74-9f33-14fcb251be24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ced6e1-cdd7-4215-a5a1-1bf0a05ff62c",
        "cursor": {
          "ref": "d764d6a6-1560-4267-b038-ce3d5d5bd4dc",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3868c48f-b753-4cd8-a1c6-b9fa57819938"
        },
        "item": {
          "id": "43ced6e1-cdd7-4215-a5a1-1bf0a05ff62c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "08ac1700-4c54-43e2-a0cd-825f3602f163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e1a64a-4152-4a0c-a9d5-6fe519d75049",
        "cursor": {
          "ref": "f3f70269-4ae2-4de1-b1e0-773df9e4f6f6",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "57153194-203c-45b6-baaf-3ca0ef1408d1"
        },
        "item": {
          "id": "d0e1a64a-4152-4a0c-a9d5-6fe519d75049",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a1403c35-75e6-4e4e-9380-fd42ec8b7657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334858f9-d89b-4b6a-93a3-78c617f7e374",
        "cursor": {
          "ref": "2e923f68-d14c-491f-8334-7cd8d8895326",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "00b96172-7848-40e3-bbfb-6a89c1602f7f"
        },
        "item": {
          "id": "334858f9-d89b-4b6a-93a3-78c617f7e374",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "eb502ed9-9aee-46ae-96b7-231bb0be8e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cb39d3-c275-4cce-b105-36414a56eaf0",
        "cursor": {
          "ref": "7175180b-a635-4eb5-8300-31ce711ca961",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ae2f3e05-5a98-493e-bc29-35ce6c2a4ad7"
        },
        "item": {
          "id": "62cb39d3-c275-4cce-b105-36414a56eaf0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0c70f8db-3356-45fe-8f09-9cfdfd51bcea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e09e47f-a69d-4103-9db3-dcb16e4b5240",
        "cursor": {
          "ref": "9c1f75db-a6da-4d57-8721-c96d0e503f53",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ffda06e6-8b87-4b38-a575-3371510f297c"
        },
        "item": {
          "id": "8e09e47f-a69d-4103-9db3-dcb16e4b5240",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f44249f6-a5e5-4b7e-b8c4-4ab809b48a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ab6ecd-5397-4900-b13e-e11a9e3de097",
        "cursor": {
          "ref": "cccc7ac4-4729-40b7-903c-d040ad8b849f",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a2edc72e-a137-4635-b389-40b797a76622"
        },
        "item": {
          "id": "e4ab6ecd-5397-4900-b13e-e11a9e3de097",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "70b7a353-1bfa-4122-ab6c-c727e7d49034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ea5e8a-4e5f-4c86-805d-b2836a772fe9",
        "cursor": {
          "ref": "acbd64a8-fd99-454e-b1dd-c2e294da83d7",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "737437ee-9c17-42c5-9736-4be86c5011f0"
        },
        "item": {
          "id": "02ea5e8a-4e5f-4c86-805d-b2836a772fe9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3464aaae-f751-43cb-bde3-1bf2ce68041a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f572a4-a04b-43f4-bdae-1437a3dece05",
        "cursor": {
          "ref": "58bffc7f-4e9e-405a-812e-c144cdc103bf",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1f900d9b-3583-4bfd-a783-ceb571b2329b"
        },
        "item": {
          "id": "d1f572a4-a04b-43f4-bdae-1437a3dece05",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f4bf8a31-d646-41a4-bf8b-73bbf4e758d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a37a644-d02c-4cfb-95d6-83bf0ca7bc3b",
        "cursor": {
          "ref": "8d2d6599-d7ed-431a-ae2a-0301b0c0111a",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ccefcbdb-e5af-4b09-a373-eacb9661ff2c"
        },
        "item": {
          "id": "3a37a644-d02c-4cfb-95d6-83bf0ca7bc3b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7216fcb5-ee99-4529-a151-817a29ffae6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a436d60-65cd-40ee-ac66-aedf073e8eec",
        "cursor": {
          "ref": "3c82e024-e4f4-47bc-b58c-ce9275ce6aa4",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "48fab964-03f9-416b-a38d-e8387fea70ef"
        },
        "item": {
          "id": "5a436d60-65cd-40ee-ac66-aedf073e8eec",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "dfbf96f4-c2c1-46b5-b6a7-178ab82a9ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f6f2d9-0b81-4ea2-8599-642bdf4444f6",
        "cursor": {
          "ref": "83a96f2b-9ccb-4ca6-9188-8c5559a14776",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "039dab91-2498-4bef-ad71-385d7043c0ad"
        },
        "item": {
          "id": "f4f6f2d9-0b81-4ea2-8599-642bdf4444f6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8ee69698-6c0b-4d0a-97ba-977a0b16e94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b18c478-9511-4390-92d3-1c80fe7c6dfe",
        "cursor": {
          "ref": "e7c0c9c8-cc2b-4b26-9ff8-f07dc6690978",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "90aa17d3-98a1-45c8-8553-0fc5df94568a"
        },
        "item": {
          "id": "4b18c478-9511-4390-92d3-1c80fe7c6dfe",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "59a89025-cbfb-4212-8708-513634f029e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43201cfb-d437-48ed-9a60-1ead61b13f07",
        "cursor": {
          "ref": "b81061a8-d755-4727-887a-1ac282fe7ac0",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "81cd837a-4485-4164-9086-b5b80220f20e"
        },
        "item": {
          "id": "43201cfb-d437-48ed-9a60-1ead61b13f07",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d1f462c3-3206-492f-90b4-aec75bbbb0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab8f97e-4fe1-46a7-a70d-4f54346cbc18",
        "cursor": {
          "ref": "de102363-c1be-44b8-abc7-9f912faaaa55",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a635eb33-875e-4e10-9e8e-755bace08982"
        },
        "item": {
          "id": "2ab8f97e-4fe1-46a7-a70d-4f54346cbc18",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4a149325-7ca7-42dc-b89d-ada888be4978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba8edaf-7ee1-4529-94c4-09b1a04cdcbf",
        "cursor": {
          "ref": "11984ba7-7c43-4f77-aece-b301b92b39e6",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1a7d7e8c-49d9-4f6d-8681-33679ff3e231"
        },
        "item": {
          "id": "5ba8edaf-7ee1-4529-94c4-09b1a04cdcbf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b61dc66a-0608-4430-8f73-1973ec969e19",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 557,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1dd79c0-7a79-4caf-9663-8e0b4198ac1e",
        "cursor": {
          "ref": "0098cb1a-e179-4309-a373-a65e5fff146a",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a6a116c7-ca7c-4a61-9623-c671b87bafb9"
        },
        "item": {
          "id": "e1dd79c0-7a79-4caf-9663-8e0b4198ac1e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f59628f8-9542-43e1-a95b-9c672508d8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2ba5b0-4ae0-40a1-aadb-9891de3e0927",
        "cursor": {
          "ref": "8dc701b8-0424-43a7-bad0-18da2875a109",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0e585a4c-fe43-454f-876c-245d95d805fa"
        },
        "item": {
          "id": "3a2ba5b0-4ae0-40a1-aadb-9891de3e0927",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f3234cd1-0e79-42e6-bc65-61f7cbe74214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db371246-1f44-4b14-bec5-f1a070cb5ed2",
        "cursor": {
          "ref": "708b07d9-3b77-42ec-b1aa-d30775ef934f",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e822cc29-abcf-4bad-91b0-e520d5c5e30c"
        },
        "item": {
          "id": "db371246-1f44-4b14-bec5-f1a070cb5ed2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a46c9353-dae8-4034-9324-0b6f8839b581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4fb19c-1932-4c9a-8340-68f440cad8c2",
        "cursor": {
          "ref": "8b4e70e0-dc49-45cd-ae66-6fcbc9ebf2fe",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "88320ef9-23df-48c8-b2ff-6b4fd9eac08d"
        },
        "item": {
          "id": "7c4fb19c-1932-4c9a-8340-68f440cad8c2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "65030637-4391-4216-ad54-103ca019e5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d29fbc-6ef4-4e38-a7a4-ed362ccd8170",
        "cursor": {
          "ref": "8d131ed9-cb89-41b8-bd97-2df10ecadac8",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "92fde047-6310-4735-a43e-eb7ccb4a819a"
        },
        "item": {
          "id": "47d29fbc-6ef4-4e38-a7a4-ed362ccd8170",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4f8f914d-b7b1-4920-86e9-f28540ee103e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506e690a-be18-45b3-978e-1488ec685f41",
        "cursor": {
          "ref": "8cf06ab5-156b-4dcb-accd-a1fcd31f8051",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "54da04ca-3424-4b7d-9544-d067cf57688b"
        },
        "item": {
          "id": "506e690a-be18-45b3-978e-1488ec685f41",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cc22ac21-b0f6-4e54-8ca1-27d9c472b78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07e4a9e-0834-4adf-930e-08000d03499d",
        "cursor": {
          "ref": "54c84683-aa84-4774-afb6-56630618e6a8",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e93c0ad9-d894-4573-a6f3-6e10e55d1d90"
        },
        "item": {
          "id": "d07e4a9e-0834-4adf-930e-08000d03499d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3c909eb8-2145-4520-94e7-d9ac3511e7f2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 564,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f854b7-c8e4-4e7f-bf10-9b30efe4a72a",
        "cursor": {
          "ref": "95c8e68d-d10b-4180-90c1-416775fb31d1",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9c30d6e2-0b44-4bc0-a974-4b4722c66c30"
        },
        "item": {
          "id": "01f854b7-c8e4-4e7f-bf10-9b30efe4a72a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b920e9c3-f336-44fa-a2db-becca132be12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb4d04f-e2fc-4b00-9ecc-a97d07530d3a",
        "cursor": {
          "ref": "4fa9956e-83d5-428d-a878-a773d63923c4",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2ca7a1a7-6367-460b-9442-341fe92f59ce"
        },
        "item": {
          "id": "afb4d04f-e2fc-4b00-9ecc-a97d07530d3a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7e70f626-7958-450e-a9e6-70cd76826434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6474ea15-efbe-4541-a934-981a8ca8fb30",
        "cursor": {
          "ref": "638c5161-8d42-4265-9a66-f9292a08f208",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "117fc5fa-76f6-40c2-a7f4-80a1a9631dcb"
        },
        "item": {
          "id": "6474ea15-efbe-4541-a934-981a8ca8fb30",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "73352808-c9ed-45ff-a34f-caa77c3bd249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c9feed-2ea7-4fbd-9494-e7f334e5f820",
        "cursor": {
          "ref": "edbe233d-cb36-436c-adfc-8bc1b0578191",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d1c70de5-3dce-45e8-a86f-04dc84bad6eb"
        },
        "item": {
          "id": "d7c9feed-2ea7-4fbd-9494-e7f334e5f820",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fcd35a7f-c222-43c5-8bd5-e747e7cd0911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09e4c1b-5cfe-4e95-b7a4-98cbd69f8b93",
        "cursor": {
          "ref": "28762c94-e3f3-429c-b744-3a95b80c6a2e",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9630d396-4e14-4a7f-8bcb-6f6aa6c1eebc"
        },
        "item": {
          "id": "e09e4c1b-5cfe-4e95-b7a4-98cbd69f8b93",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8025b57c-10c3-44b1-855e-3a0fc66c5ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb645560-59b3-483d-9400-125f6b3d6cbb",
        "cursor": {
          "ref": "2757d4c9-7eda-4fdd-9538-ed78df0409e2",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cbc368d7-ea20-4397-a0cd-1b918e73e9d6"
        },
        "item": {
          "id": "cb645560-59b3-483d-9400-125f6b3d6cbb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3fe87dfd-83d0-4aac-b7ec-6f7488c1bb78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5df48d-8ed8-4ec5-b849-f4addc4014f3",
        "cursor": {
          "ref": "dc165d75-1aeb-4519-8b61-9de93044da84",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c22e2ee1-60dc-4645-a506-0ee90546b6ea"
        },
        "item": {
          "id": "cf5df48d-8ed8-4ec5-b849-f4addc4014f3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2d452dbd-83d6-486c-b282-a1baeb14db2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0675234a-1c93-4748-811c-fd12ddd541ea",
        "cursor": {
          "ref": "81757d8b-a427-49a1-ab47-e805c0969fb6",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2fbf1a4d-cca2-4f3d-b810-9bae6216e1fd"
        },
        "item": {
          "id": "0675234a-1c93-4748-811c-fd12ddd541ea",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "589ba3f5-50fc-4092-b9b8-31dc61997c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68aec5c5-c814-414c-aa6a-bf9dc5e0ea5d",
        "cursor": {
          "ref": "ff707c01-e3ca-4bcd-afc5-337809fee8b4",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "53685da4-c70d-477d-b002-00ebbfeb775e"
        },
        "item": {
          "id": "68aec5c5-c814-414c-aa6a-bf9dc5e0ea5d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "517de897-ccd3-403a-acab-1aacb2b7febd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e861e651-1134-43fe-bd65-73eede49b3ad",
        "cursor": {
          "ref": "1c8f57c6-8063-41e9-b933-48c2e06ff6e0",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a6c7e5ec-e4e0-4aee-bd3f-c56539bdd52e"
        },
        "item": {
          "id": "e861e651-1134-43fe-bd65-73eede49b3ad",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0eebf6b6-2d08-409c-8f41-992cf6f3d74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9147bd90-91bd-4e8e-8bd1-ea96eac08c71",
        "cursor": {
          "ref": "6a0b4f5b-324e-4922-b952-e01157743f7a",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b9ddf22c-c6df-49d7-856e-e2c3248c0335"
        },
        "item": {
          "id": "9147bd90-91bd-4e8e-8bd1-ea96eac08c71",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "96e67e85-7e63-492d-8397-c12dff8970eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44703a16-c023-418f-983a-7d5965b35730",
        "cursor": {
          "ref": "e501fced-ddb0-4a17-bf1b-6aa0432a5865",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "af923bad-9936-44d9-8271-3c059d51bcb6"
        },
        "item": {
          "id": "44703a16-c023-418f-983a-7d5965b35730",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "73202f24-301b-46ca-abc2-9fa6d8a3d868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74419da3-3742-4a80-8b93-8744893b942b",
        "cursor": {
          "ref": "684ebe59-960e-4c4a-bf84-4d7999e0545e",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "edf727f4-fdc1-4c12-bfab-12fed17c2dfb"
        },
        "item": {
          "id": "74419da3-3742-4a80-8b93-8744893b942b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bae6244f-22c9-4bb2-861b-c46dd4d8980b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52160e1f-7b78-4440-8b4d-65a356a24231",
        "cursor": {
          "ref": "24a0c161-dd16-4af0-be22-e6f092c6ae39",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cda179f5-fdc3-40c3-8a40-e3d95eca4286"
        },
        "item": {
          "id": "52160e1f-7b78-4440-8b4d-65a356a24231",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "df99ea1d-a2dc-4ee6-a23c-34c6e65a78f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb256c4-4e29-4b4b-8bea-ae47f9e1c598",
        "cursor": {
          "ref": "58edbd7b-5ad4-4b2a-b6b3-c9189ee34728",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "287ebf07-ffe2-4fd4-b1b3-aa134037fe02"
        },
        "item": {
          "id": "dbb256c4-4e29-4b4b-8bea-ae47f9e1c598",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3bcf1aa2-20ca-4748-afa9-e2276bfc5d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a02471-d21b-42d2-9aca-9fceadbdeb58",
        "cursor": {
          "ref": "3e7715b8-26f1-4285-986b-5ea80a335df4",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "60a77dda-8a32-45e4-8adf-a1bda967e0f7"
        },
        "item": {
          "id": "e0a02471-d21b-42d2-9aca-9fceadbdeb58",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "416d0546-703f-47c7-91e2-ba56d4e0eb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f94a46-8e14-4000-8b45-b4b4fa53dcb0",
        "cursor": {
          "ref": "2a550474-7c2c-4d26-8bc2-36d53065ba29",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7d76cde6-6988-4c5b-96db-2ad78e1ec1eb"
        },
        "item": {
          "id": "63f94a46-8e14-4000-8b45-b4b4fa53dcb0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7b04cb44-a58a-41ab-a235-e0947f203554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e607ad6-eec6-4150-8f1e-da0b63d767fc",
        "cursor": {
          "ref": "4d018766-913d-4f8e-aa23-9db48795b4c5",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0a163361-efb5-4931-9aa9-45ab2067102d"
        },
        "item": {
          "id": "6e607ad6-eec6-4150-8f1e-da0b63d767fc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a184133a-bf0e-49d2-bbd1-4bc85d42c5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15521b12-6ef2-4dd3-8f7c-779ba04674a0",
        "cursor": {
          "ref": "69aa8186-a297-4317-9c0a-b1d1db1dd084",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f9e4d56b-f5be-4a19-8f62-ddebb5b495b8"
        },
        "item": {
          "id": "15521b12-6ef2-4dd3-8f7c-779ba04674a0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b0c0fbd6-13d9-4b5f-bc99-e54bc38387a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff76199-aa07-41e0-9061-d7c928f90a1a",
        "cursor": {
          "ref": "2a2b8ae2-4be0-4a03-b168-2c2ba870867f",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "cf35ae2d-9db4-4690-b66e-8b0d54e341b3"
        },
        "item": {
          "id": "fff76199-aa07-41e0-9061-d7c928f90a1a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "826cba46-8f9e-4fbe-9d04-7aa4359768dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26fd19b-7b57-404a-afba-7b185f51ec22",
        "cursor": {
          "ref": "93579a03-7c2b-47cc-93d9-4eec6bea55c2",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c7decae3-e3ec-417a-a828-712111176583"
        },
        "item": {
          "id": "c26fd19b-7b57-404a-afba-7b185f51ec22",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3208b238-84cd-4a1b-bc36-677a2ee03108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99c7915-1821-4851-83a3-9e89d14d0c4d",
        "cursor": {
          "ref": "5119687a-c775-48fc-b837-336a64b243ba",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ccf8cda9-c706-4c0c-b6c4-e874deb6957c"
        },
        "item": {
          "id": "f99c7915-1821-4851-83a3-9e89d14d0c4d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3ba62cf5-5d2c-4cc0-9f9e-7ffa8a191ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd3723c-d780-4a65-baea-7570990f0bca",
        "cursor": {
          "ref": "ae9aac59-29ae-4c44-a8ad-05d8bad8eb10",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "857088b4-c8f1-46d5-ab11-87b42404ba48"
        },
        "item": {
          "id": "6dd3723c-d780-4a65-baea-7570990f0bca",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "74dc8cce-532a-42cb-bacb-dde55663ee25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10386fb-1eca-4a84-a423-35c106aae3e6",
        "cursor": {
          "ref": "a2c4fc33-ce46-4ef7-8a86-98c514a0d85b",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ac1e1981-0c7c-4353-b813-833a9edb197d"
        },
        "item": {
          "id": "c10386fb-1eca-4a84-a423-35c106aae3e6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "de3c0391-82bc-4584-b43e-0b122d555a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7459890b-032e-429e-a85f-2b7f7b74e09c",
        "cursor": {
          "ref": "dcefb0fe-c6b3-4473-bb2e-6b8e4ed1f19f",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c9dbed45-2a65-42c3-ab24-f89e994c1371"
        },
        "item": {
          "id": "7459890b-032e-429e-a85f-2b7f7b74e09c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d2a190cf-6033-4e02-b92b-f94633568d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c22029-b6f7-4256-83e1-1ebc198b9b6d",
        "cursor": {
          "ref": "54d17184-bcbe-490d-8da6-9141f66b0858",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "36cba71f-30a7-46af-bf64-eec9902b87f1"
        },
        "item": {
          "id": "12c22029-b6f7-4256-83e1-1ebc198b9b6d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "209fa9a4-902b-4648-8a6d-1e0a006f54a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eccbe71-641a-432e-957d-830faf611f88",
        "cursor": {
          "ref": "33e47347-3133-4af3-9349-2e02e073a6d8",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "29e3b405-3de8-4174-9d41-435e745408b3"
        },
        "item": {
          "id": "8eccbe71-641a-432e-957d-830faf611f88",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e940aee0-1518-40f2-aa85-1195eba382ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad8ebec-b68a-4785-8d76-095364bc80b0",
        "cursor": {
          "ref": "c6121be1-e204-45da-9537-65d3f2608223",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e270a828-0c3c-47d5-a661-fc5cc80b075e"
        },
        "item": {
          "id": "7ad8ebec-b68a-4785-8d76-095364bc80b0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d4a48f22-e576-4489-ab06-21a6801880b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d8142f-8fb2-49de-bd8c-e89345bae673",
        "cursor": {
          "ref": "150765db-c529-40ec-9cab-42dcf06010f7",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "62d59ab8-a7ea-4563-9d6c-21a6d2e5a6f5"
        },
        "item": {
          "id": "a7d8142f-8fb2-49de-bd8c-e89345bae673",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3b914bee-662f-4ed3-a7ef-e85eff4bae8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa551ab8-71e5-4b41-bfdb-0b42f9fe98e2",
        "cursor": {
          "ref": "8c7c7bac-1234-4cd6-8400-18a3d909d1d7",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "355e5904-3407-488f-b6bc-7e95dbc4860f"
        },
        "item": {
          "id": "aa551ab8-71e5-4b41-bfdb-0b42f9fe98e2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5b00bc9a-491d-43e5-968a-34c8a6f735ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b092634f-cbb8-47ca-b8f0-1a7f4a8a4b6e",
        "cursor": {
          "ref": "dbe2a630-6e69-4f2e-bcb9-50a1ca8b2f1a",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "02e8a4fc-aef6-456b-88c2-d5b900ac2ac6"
        },
        "item": {
          "id": "b092634f-cbb8-47ca-b8f0-1a7f4a8a4b6e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6aca1537-da3c-48ac-93db-a4a7098def63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcf95ac-6f85-4eff-af6e-8995ee942ac0",
        "cursor": {
          "ref": "7e60503e-30b3-4c58-a875-65bd0e83bb02",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d19cebb4-71cf-4c1c-b953-89059c4d384e"
        },
        "item": {
          "id": "9bcf95ac-6f85-4eff-af6e-8995ee942ac0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fdfda286-e198-43cf-88bf-a5ba9b8ae025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d970d923-cb0c-4754-9ceb-ba32f6c69f03",
        "cursor": {
          "ref": "72fb26c2-1b54-4083-bbef-18cf95c05531",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e1b5e1a5-0d44-49c0-b488-961362513720"
        },
        "item": {
          "id": "d970d923-cb0c-4754-9ceb-ba32f6c69f03",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ef508618-720f-4d80-a0c9-3f92fc660b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5aa8c26-dcd8-4ff1-8722-a0f424099343",
        "cursor": {
          "ref": "eef7626b-ede7-47c5-a369-7e6b48d7fe68",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "132c56bc-c51d-4c99-8eca-85061d487445"
        },
        "item": {
          "id": "a5aa8c26-dcd8-4ff1-8722-a0f424099343",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a184855d-77d4-4ef9-8013-367d7bebf018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b025dea-db2f-4100-b537-f68991458682",
        "cursor": {
          "ref": "63e4f967-0e3a-46a1-b357-655c15fd7857",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "87de41ee-2f47-45f6-9a12-1a18f924bf95"
        },
        "item": {
          "id": "1b025dea-db2f-4100-b537-f68991458682",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "50586557-0e89-4f48-b662-802fb45bc0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4f45a1-30f8-4eb7-8aaa-e38b744dd280",
        "cursor": {
          "ref": "9ae79a89-cb22-41ee-87fe-97ab7f776874",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "14d6d6df-69a8-4fbc-afb4-b47ff3f3000c"
        },
        "item": {
          "id": "fc4f45a1-30f8-4eb7-8aaa-e38b744dd280",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "485fb90b-0ea4-4fdb-80c7-fc8561658e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec7c575-63e9-4767-abee-eaa567fd9c1e",
        "cursor": {
          "ref": "02967be6-c9dd-4657-a756-e6df9db62490",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c638cf7e-e1d3-4b33-b7f0-b46c4439e5f5"
        },
        "item": {
          "id": "bec7c575-63e9-4767-abee-eaa567fd9c1e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e748aed4-a5dc-498d-be79-4e930d230f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f068ca-5993-4a1a-b766-dbba6fc0c5dc",
        "cursor": {
          "ref": "7b68d946-79c1-4303-854e-b70aecd1c666",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "30a3dbdd-0a9e-4fdc-8283-d10b49eea431"
        },
        "item": {
          "id": "f5f068ca-5993-4a1a-b766-dbba6fc0c5dc",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c06c8803-d2eb-4337-bb2a-4e5de24cc729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57940c4d-d541-4f25-a405-325523eb4ab8",
        "cursor": {
          "ref": "e9164463-a60e-4ae7-985b-5fa2a4c9927b",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a5e4496d-3282-44d1-b3f5-fff8835cf69d"
        },
        "item": {
          "id": "57940c4d-d541-4f25-a405-325523eb4ab8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0106a3a2-51d0-491c-a8a5-e4a67c82fb20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220ee2f7-ed63-4354-85e3-81afc0d7f5f8",
        "cursor": {
          "ref": "b70aaf13-5909-4c29-b5b6-a1b8364a78ee",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6e1b556b-0f40-4fdb-8d0e-03de8a166d52"
        },
        "item": {
          "id": "220ee2f7-ed63-4354-85e3-81afc0d7f5f8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f118c7e6-bd1a-46a3-a049-e7c7c26f1f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49721cd0-e1c4-4f4a-b95a-6fb9782ddaa5",
        "cursor": {
          "ref": "02a5f755-e905-43be-ae2f-f769d68dd343",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ce1e6fce-960e-4c29-92da-155dcd262d97"
        },
        "item": {
          "id": "49721cd0-e1c4-4f4a-b95a-6fb9782ddaa5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "482b379b-d580-4760-b8b9-077f274ac5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c07934-b65a-4878-8f71-81cdd518b674",
        "cursor": {
          "ref": "653c3f24-dff9-41ee-9beb-8ef0a9acc263",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d8bc5bab-f294-473e-a696-d65c1c46aac5"
        },
        "item": {
          "id": "86c07934-b65a-4878-8f71-81cdd518b674",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "50cc7510-75e1-4e7f-9de3-5aa00530db94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34519b6b-c596-4247-bad6-c26d2e972623",
        "cursor": {
          "ref": "a9fbadd5-71b7-4b25-b334-6f922deb1281",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "61693181-2454-4a49-951f-b127fc141efe"
        },
        "item": {
          "id": "34519b6b-c596-4247-bad6-c26d2e972623",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6cd1a845-50f1-4124-a7a7-3cb2e7a15b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44c08fb-31c6-4986-ac1d-a196c2e0278f",
        "cursor": {
          "ref": "83cc77df-7229-40c3-812d-d3cb8e81e2cb",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "43ccdcfa-2d9c-4ba6-83f0-652fa372c335"
        },
        "item": {
          "id": "d44c08fb-31c6-4986-ac1d-a196c2e0278f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6dbb1bb6-4b85-420e-af06-a59d671a8773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d508bf81-1e56-4b78-b6d8-201cd353041a",
        "cursor": {
          "ref": "5e6736f1-0966-4dfa-b28c-13377b509d2f",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c09bbefc-c489-4894-83a7-7312562eec29"
        },
        "item": {
          "id": "d508bf81-1e56-4b78-b6d8-201cd353041a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a576f8f1-cddd-4b8d-9642-7931218f5e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a39d97-3e6d-460e-a4df-e0b6e08cae4a",
        "cursor": {
          "ref": "439563aa-228e-45a6-9c3d-0554055220d4",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7dd9f685-33bb-45ba-af59-504ea4b270f9"
        },
        "item": {
          "id": "b5a39d97-3e6d-460e-a4df-e0b6e08cae4a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cf0346ef-5454-46c2-837c-e4af0f6063e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2567e1-abc3-4de9-86e2-d931d6520b98",
        "cursor": {
          "ref": "1b4c89f1-c0a5-4158-9e16-303acbb35dfc",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "70502051-2f20-4a61-bac5-6c184c267bb7"
        },
        "item": {
          "id": "ae2567e1-abc3-4de9-86e2-d931d6520b98",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ad36a813-12d0-47a4-88ec-c4f36a6c0cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82a9769-3874-4ba0-afe4-f38bd5ebc85c",
        "cursor": {
          "ref": "049a5b1a-139c-463f-936a-a2fa3e5b92e9",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a9b27b9c-4e3d-425a-b5a7-31314378b598"
        },
        "item": {
          "id": "d82a9769-3874-4ba0-afe4-f38bd5ebc85c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "bdfca652-19d2-4e1e-962c-689b8b469f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78e406c-b1fe-49ab-837a-f7a9f27f4640",
        "cursor": {
          "ref": "c031e230-5396-4550-90b8-f243b71622be",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "fb80c387-bed8-4ae4-81c2-bedfafcf4f45"
        },
        "item": {
          "id": "d78e406c-b1fe-49ab-837a-f7a9f27f4640",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3a00fdc3-be48-4b39-bd97-a55dbf8db889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbde79e3-4162-47ed-880d-1c701a082513",
        "cursor": {
          "ref": "327b3001-a02b-48ed-a4ef-8d9d0bb7c7e0",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "25a4d4bf-add9-4ae2-8a31-d86301ead0f7"
        },
        "item": {
          "id": "fbde79e3-4162-47ed-880d-1c701a082513",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ca027a61-4fd1-4a2f-95d9-722e8d53584f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec21fcc-71f8-40b6-8c75-70d8195a927f",
        "cursor": {
          "ref": "778ac1a5-c9c3-48b9-a796-30c8cbd675ae",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f0ff3b88-d0a8-4d0e-a23c-8a18c6322bc5"
        },
        "item": {
          "id": "3ec21fcc-71f8-40b6-8c75-70d8195a927f",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "cb82be0f-0740-484c-9b34-4867926a46a6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 493,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f810c503-6a69-46c6-90fa-0b19d8d87b40",
        "cursor": {
          "ref": "90b36989-a171-4f77-a21a-8a31f26d146f",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "56c9336a-b3ef-49f4-892d-dc678c37c51a"
        },
        "item": {
          "id": "f810c503-6a69-46c6-90fa-0b19d8d87b40",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3e1e9b8b-e815-4917-8694-4633566213af",
          "status": "Created",
          "code": 201,
          "responseTime": 3895,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "bdefea2a-5efd-4676-ba69-5c4f9869a1d8",
        "cursor": {
          "ref": "1f02654a-fb8c-4890-937d-3e1bbc26ec0d",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b04bf16a-5f0b-425c-b2fa-0e920770f20e"
        },
        "item": {
          "id": "bdefea2a-5efd-4676-ba69-5c4f9869a1d8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0eb4efe1-5cfb-451c-bf2c-e49e769dab92",
          "status": "Created",
          "code": 201,
          "responseTime": 4165,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "94a5246d-bb14-4825-92ed-821909608a6e",
        "cursor": {
          "ref": "ab1984fa-ee75-41b5-a008-b43e2ee36cf2",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f95ff00f-4c25-4f47-8451-c7cddd114550"
        },
        "item": {
          "id": "94a5246d-bb14-4825-92ed-821909608a6e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2ff14051-0bee-4f18-91f6-4da76f9a9266",
          "status": "Created",
          "code": 201,
          "responseTime": 3754,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "c6bd7c03-ca3c-4ae2-acde-5410dd452cf4",
        "cursor": {
          "ref": "827c91a1-aff5-4689-998b-bd1aca0acacc",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "009e2f98-78b6-4259-a2d3-699d8279a560"
        },
        "item": {
          "id": "c6bd7c03-ca3c-4ae2-acde-5410dd452cf4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "426b7501-ed4c-4eb2-ad1e-43555652e02a",
          "status": "Created",
          "code": 201,
          "responseTime": 3765,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "f34fbe65-fc6b-4a2e-8c43-c5b774f4fa93",
        "cursor": {
          "ref": "8ef38c8f-ec92-4a47-83e9-06a77e3b39b6",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2c3bd455-c52c-4d1e-a626-abc0a071362c"
        },
        "item": {
          "id": "f34fbe65-fc6b-4a2e-8c43-c5b774f4fa93",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6d65912f-76bb-4487-aa5e-abb892e4b473",
          "status": "Created",
          "code": 201,
          "responseTime": 4291,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "77033b67-47f8-4d75-a810-ebb33d11cbdd",
        "cursor": {
          "ref": "c5a51707-937f-48ae-85f5-446304f8f7f1",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4f16cd3e-a573-4bc6-971f-8a42b15e3020"
        },
        "item": {
          "id": "77033b67-47f8-4d75-a810-ebb33d11cbdd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "95bbfb86-8724-4c17-9368-e822312f3f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77033b67-47f8-4d75-a810-ebb33d11cbdd",
        "cursor": {
          "ref": "c5a51707-937f-48ae-85f5-446304f8f7f1",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4f16cd3e-a573-4bc6-971f-8a42b15e3020"
        },
        "item": {
          "id": "77033b67-47f8-4d75-a810-ebb33d11cbdd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "95bbfb86-8724-4c17-9368-e822312f3f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2592b742-2403-4dbe-bd28-2811857b9c14",
        "cursor": {
          "ref": "05960365-8120-4333-b8a8-d565bf64ece1",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "726854eb-53e2-48a2-b3b5-107aa7c551de"
        },
        "item": {
          "id": "2592b742-2403-4dbe-bd28-2811857b9c14",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ef23b5ad-9169-41a3-ac70-e2396607a59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7372a30-a807-40ea-9157-f042920eff86",
        "cursor": {
          "ref": "2caaaf01-1937-40da-a911-5dbaffe5592e",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "578397cf-d017-4bb0-8e47-8e592c992e62"
        },
        "item": {
          "id": "a7372a30-a807-40ea-9157-f042920eff86",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7af8d077-5fef-4b2f-92ad-20ec0a6b621f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b0f7fc-7b5f-4090-bdcb-dad402b7d327",
        "cursor": {
          "ref": "53f463b3-bd42-48c0-9988-77a4b757fab6",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5336b293-7854-4f13-92da-693c9234092c"
        },
        "item": {
          "id": "73b0f7fc-7b5f-4090-bdcb-dad402b7d327",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "29223e89-a96a-4b53-9914-087ddf53c14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ada7f7e-6176-44d2-bcc0-8cc576a86fa1",
        "cursor": {
          "ref": "7635d4b1-fd45-4319-be4e-fd36d5bb3aca",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9546b213-2b8e-44e8-ba4e-84676767f40d"
        },
        "item": {
          "id": "0ada7f7e-6176-44d2-bcc0-8cc576a86fa1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f717921a-f001-463e-8d34-5dee7553b214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9f8d1f-c192-4223-9a48-e678098608da",
        "cursor": {
          "ref": "485764de-9328-48ca-a6e4-5b7b1e12dad5",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bda4374e-8bfa-4e54-ab4d-fffe5379475c"
        },
        "item": {
          "id": "be9f8d1f-c192-4223-9a48-e678098608da",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "656fd414-9f42-4be8-aeec-43279656238e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28257f6f-6da4-4740-b7b3-c6a6973b1409",
        "cursor": {
          "ref": "4dcaf4c3-a91f-4db6-84aa-dbef19f0e406",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "df3e2dc6-9298-49ac-9014-cd245e7b0eef"
        },
        "item": {
          "id": "28257f6f-6da4-4740-b7b3-c6a6973b1409",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "309f9690-7fa9-4ed0-b3ef-0757ebfb994d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afadb22b-4bc1-496a-8c02-48c34125e573",
        "cursor": {
          "ref": "6c40f1e6-486b-458b-980f-b643feb7317e",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "900ec15f-535a-41c3-95c2-09c0d7949130"
        },
        "item": {
          "id": "afadb22b-4bc1-496a-8c02-48c34125e573",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "627c0134-9b15-432c-acf3-fb08a036f668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a5e26e-0286-4ff6-aab4-451456ef4ef2",
        "cursor": {
          "ref": "df12e16d-b7af-4b04-901f-1b33190d2327",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "cb132dbf-e7e8-4dfb-b209-8fa267c5a763"
        },
        "item": {
          "id": "42a5e26e-0286-4ff6-aab4-451456ef4ef2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "372dcaaf-67b5-403f-b170-c7fc08050386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e976d2-49a4-410c-b5b6-07f008a096bb",
        "cursor": {
          "ref": "b1005755-12c0-453f-a80f-4a279aa62ebf",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "531dd490-f819-4813-9824-cd05ef4eace3"
        },
        "item": {
          "id": "34e976d2-49a4-410c-b5b6-07f008a096bb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "33faef53-3a59-4927-90b1-9248b09f8eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe55ec4-e7e2-40e2-b858-40f8423cba1f",
        "cursor": {
          "ref": "32179848-0bd2-4529-8cea-16425ad3dca8",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "007bc6af-4427-47cd-94df-c43dbaffc1cd"
        },
        "item": {
          "id": "5fe55ec4-e7e2-40e2-b858-40f8423cba1f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "36b49a0a-cee7-4573-8965-c7f8354fbfb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02817ff-472e-4a2c-b20e-0433fa1280f4",
        "cursor": {
          "ref": "f0e9f448-9f90-4d2a-8233-ab7cc844709c",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c10ca30d-abea-49b4-9118-cefe155ba8d5"
        },
        "item": {
          "id": "d02817ff-472e-4a2c-b20e-0433fa1280f4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c86f019e-b5c1-467e-9e59-02b1a89f7f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e68ec8-a0c3-450d-9e9d-be39c7057474",
        "cursor": {
          "ref": "64c793d6-a16c-41c7-9b23-de0f752f21db",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "398a25cb-6430-4fd5-8d21-285fd27c51c7"
        },
        "item": {
          "id": "35e68ec8-a0c3-450d-9e9d-be39c7057474",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ed002db6-b03d-420f-9a2e-716cfa46dbc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ecb5de-1351-44f1-93ae-fc847e29a725",
        "cursor": {
          "ref": "1e729ae2-4759-461a-bec1-2956f5c7e2ec",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9b13af83-4f93-43b2-ab6a-e3fa211e82cf"
        },
        "item": {
          "id": "12ecb5de-1351-44f1-93ae-fc847e29a725",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3cb521b8-9f10-4026-b852-470b597d9fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb69a3c-e3b3-425f-9ec1-980858c8d5ea",
        "cursor": {
          "ref": "32bede46-19fb-4188-b623-e3b714bf73ad",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "067d8cfa-45c7-4ee3-9d72-19119280477f"
        },
        "item": {
          "id": "eeb69a3c-e3b3-425f-9ec1-980858c8d5ea",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "069bacf0-3666-41fe-9b18-aa7f29e376ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c21db8f-5538-476e-925e-25744495e622",
        "cursor": {
          "ref": "8cb11aaa-3698-4b12-a143-70d934a28427",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "62b15589-0d5b-4bb7-9e1b-ee49561df6ed"
        },
        "item": {
          "id": "6c21db8f-5538-476e-925e-25744495e622",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "db3d050d-8af4-4e29-8e2b-4bbb6cc6ea30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90017bc2-2457-481c-9741-3fe364ce6ac6",
        "cursor": {
          "ref": "21e82710-1e20-4396-8c8f-783555cea4ca",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fdaaeb43-a77a-4477-ae25-ba52c097f054"
        },
        "item": {
          "id": "90017bc2-2457-481c-9741-3fe364ce6ac6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6404d6a9-775f-4f62-a5d4-671c4c97d676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe24d5b-11f3-4b10-9540-c498e5e44528",
        "cursor": {
          "ref": "bef82611-b71e-45b8-98b7-6fc73d7660f8",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "508ddf51-4e2c-4f6c-81c9-e73ebe28491e"
        },
        "item": {
          "id": "ffe24d5b-11f3-4b10-9540-c498e5e44528",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8d17d1db-f5cc-415c-852a-07d42d8c60e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108f1541-ef73-49a9-9e9c-49ef6c77800a",
        "cursor": {
          "ref": "955a7434-02de-439f-80c3-16117d5a6cfc",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d7530bc1-7e66-4bc5-be44-4bca6d835d06"
        },
        "item": {
          "id": "108f1541-ef73-49a9-9e9c-49ef6c77800a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "13097b7d-3dae-475f-b9f3-f0d43a70c5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375b1134-33c2-4968-995f-a4ce04f7ac17",
        "cursor": {
          "ref": "bdef6b5f-43f8-4947-8fcd-626eebcfcedd",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "534da45d-8c44-4193-a2f7-4b97bc54e353"
        },
        "item": {
          "id": "375b1134-33c2-4968-995f-a4ce04f7ac17",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f137c2cd-1f9d-4609-adb7-a3d653e6d94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4546d0a0-25e7-418a-8c37-78726e841122",
        "cursor": {
          "ref": "81ee8d41-4e4e-49e0-9381-421b80d9cdbe",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ff2971d0-bb21-4c8f-9a5f-f6291d78ae5e"
        },
        "item": {
          "id": "4546d0a0-25e7-418a-8c37-78726e841122",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c20b7dca-0b0a-4a25-9bb8-cec6c9a5afd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc8a2df-9c31-4302-9ab2-cbbb9004d1ef",
        "cursor": {
          "ref": "762e881b-fb47-4463-9f08-eea9d5fbe4d8",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a96caeb3-4eef-4304-a8ab-28c863b97e50"
        },
        "item": {
          "id": "8dc8a2df-9c31-4302-9ab2-cbbb9004d1ef",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ceb8194a-ecc0-4ecd-b375-c4229fcfdda4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a44fed-091d-4e57-b48a-48d6ced70dfc",
        "cursor": {
          "ref": "86db89ce-84ad-4c3a-a6fd-6d3a554eb8a4",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2910a279-c209-4251-a43c-4bbce94bddaf"
        },
        "item": {
          "id": "e5a44fed-091d-4e57-b48a-48d6ced70dfc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "de5c76e0-1372-43fc-a7ba-bf79d429d4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5846b2c0-0128-4614-8b85-e9995f54a066",
        "cursor": {
          "ref": "c14c6663-8a96-440d-a822-e90b3348743e",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "83b912b3-dfdf-4355-9e19-161745f3b39f"
        },
        "item": {
          "id": "5846b2c0-0128-4614-8b85-e9995f54a066",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7676c2ce-7dda-43b0-a425-a259ae133b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f977a620-63d3-4e45-81d4-399938bdbce3",
        "cursor": {
          "ref": "4af05767-3e0e-4431-9942-f6376b0c787f",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fb4e1c54-8e6d-4eac-90f7-9045bbf4f776"
        },
        "item": {
          "id": "f977a620-63d3-4e45-81d4-399938bdbce3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "55f46884-59e5-4565-82ef-4a0d1c8ecd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af73188-312a-4826-a313-11c637fe2872",
        "cursor": {
          "ref": "ef2a7660-6c0d-4c1b-8e3f-561047b83530",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dc489214-f5db-478d-8342-fa3c8c4313d5"
        },
        "item": {
          "id": "9af73188-312a-4826-a313-11c637fe2872",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "106cc2ca-e319-4666-8115-8930c39ca2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5684d6-0cf4-42b7-afb0-d7dadc502db0",
        "cursor": {
          "ref": "1979b478-2312-449b-b081-bd956ea95af6",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6162d2c4-62c6-4b9e-8a04-86d31f8566b7"
        },
        "item": {
          "id": "6d5684d6-0cf4-42b7-afb0-d7dadc502db0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c5a6a10d-bfb5-42f4-bf3b-9276b6e6d699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e17e34-17d6-4c39-9e14-821a6b9418e6",
        "cursor": {
          "ref": "942a3fb7-2f0a-4efd-9dc7-6ef7af308a8c",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bd7ea454-e2f9-4605-9bc2-03a7a8ee2aa8"
        },
        "item": {
          "id": "c8e17e34-17d6-4c39-9e14-821a6b9418e6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b4a3f89d-473b-4e08-b304-d9cc2718e18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654b47ef-4bcc-4460-9525-23a1a87d4d38",
        "cursor": {
          "ref": "88b657bc-e9b2-42bd-ba5b-af8ade486a15",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "78b070cd-1789-45d1-a6f0-1ca5cefc4c18"
        },
        "item": {
          "id": "654b47ef-4bcc-4460-9525-23a1a87d4d38",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "511f161d-9863-4980-9008-5015ab889be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20d6537-760d-4d67-a15f-3a4cc2e8e163",
        "cursor": {
          "ref": "482520c5-dc56-4cca-8726-d1e8472b9406",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ea508c3a-d007-43f1-9d06-23d2013b5eac"
        },
        "item": {
          "id": "b20d6537-760d-4d67-a15f-3a4cc2e8e163",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f510646c-0b1f-49cd-b1ac-1a97b4969dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d4c583-9510-4c2b-adb8-d957f86c2a04",
        "cursor": {
          "ref": "20d1c100-d256-4c3e-a338-abf9456a08cd",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "732109a3-9413-48d5-be8d-0b279bdee879"
        },
        "item": {
          "id": "77d4c583-9510-4c2b-adb8-d957f86c2a04",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8b5ab99a-3574-43c0-9e89-676729d15062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b88815a-597d-492a-960d-4e033e9882e3",
        "cursor": {
          "ref": "9e6c6928-0b02-4cb9-bf16-163c9a3ef0e0",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f0996686-668b-49dc-95c6-59f335001e23"
        },
        "item": {
          "id": "8b88815a-597d-492a-960d-4e033e9882e3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "910ba09a-b5f5-46cf-b815-bcc39eed46d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460cfc09-fc15-4708-8dab-92276efe61a3",
        "cursor": {
          "ref": "2d26edf4-cb56-4be2-8760-5e4534fe7913",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4251d3c9-d250-4c9c-9c27-6079da47d2ac"
        },
        "item": {
          "id": "460cfc09-fc15-4708-8dab-92276efe61a3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3a9a0012-19df-46f7-8138-02eba4652874",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3207fa5f-d656-4c45-8082-da38918fbacd",
        "cursor": {
          "ref": "a8011612-55af-4929-966c-3d39935f0147",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7f4684f8-4e6d-4ec8-a58b-f6b3ff7d924e"
        },
        "item": {
          "id": "3207fa5f-d656-4c45-8082-da38918fbacd",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "f5d31fcf-dfa7-4b30-9605-8d15f5ae0094",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 488,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261d37ac-1c47-4953-98a2-b245a6d983c9",
        "cursor": {
          "ref": "16c603d1-00c1-4ad0-b59b-fd5e95a176c4",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7bb765e5-9379-4944-9683-123685745fd7"
        },
        "item": {
          "id": "261d37ac-1c47-4953-98a2-b245a6d983c9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d0efaf36-32f1-448f-9320-2aeaea7c4884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261d37ac-1c47-4953-98a2-b245a6d983c9",
        "cursor": {
          "ref": "16c603d1-00c1-4ad0-b59b-fd5e95a176c4",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7bb765e5-9379-4944-9683-123685745fd7"
        },
        "item": {
          "id": "261d37ac-1c47-4953-98a2-b245a6d983c9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d0efaf36-32f1-448f-9320-2aeaea7c4884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e6324d-a48d-4b3d-bcd4-5f5cac2bef11",
        "cursor": {
          "ref": "be434898-542e-467c-9ee7-2f4988f34544",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fdf83788-f762-43ac-8b2a-a9bd46126b1b"
        },
        "item": {
          "id": "66e6324d-a48d-4b3d-bcd4-5f5cac2bef11",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0889f2b4-6d7e-4c5e-ac36-340af011cb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9389695-fc16-4b7e-ad88-422ad48315aa",
        "cursor": {
          "ref": "5b834342-0356-450a-bb7d-e68d3716cd5b",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f22d7ff7-481d-4e2a-9e80-fe48e8e27b02"
        },
        "item": {
          "id": "f9389695-fc16-4b7e-ad88-422ad48315aa",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e379f532-3887-454f-89a3-69b6fff576cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35a3716-6c70-4c53-854c-a11a9964d0f8",
        "cursor": {
          "ref": "94f9c16f-dc9a-4e23-af92-e5b6ad88387b",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4b731c55-f5c8-4d8d-b55e-c940915763cc"
        },
        "item": {
          "id": "e35a3716-6c70-4c53-854c-a11a9964d0f8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "782d35ae-2899-4489-9a92-26ce66fc3518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad849ac-b5f9-4fe8-b45b-33d93773026c",
        "cursor": {
          "ref": "28fb8d0f-3eea-41bc-a370-e69677112f3d",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "18a0aeaa-0f47-48b9-928c-62381ac96f96"
        },
        "item": {
          "id": "aad849ac-b5f9-4fe8-b45b-33d93773026c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bed97d7e-4264-47ec-a66f-c96cb086f4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad608f79-7dac-44d1-ac6c-a0239c041189",
        "cursor": {
          "ref": "6cf2f2bc-0622-471b-aa2e-10d163a08c79",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a48331f3-0259-4c94-917b-50e933f328d9"
        },
        "item": {
          "id": "ad608f79-7dac-44d1-ac6c-a0239c041189",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7dde90c7-45ce-498f-9392-ef1639cbb416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c261c37d-46ef-4ed8-9595-6b5dbcad8752",
        "cursor": {
          "ref": "5b3177dc-eab3-4bb5-b273-0d5bbecaa3bd",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a15b3c5b-4145-4533-9935-a4893cac5d63"
        },
        "item": {
          "id": "c261c37d-46ef-4ed8-9595-6b5dbcad8752",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0f9b436c-a0c3-468a-a08e-f54a33c342f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368eb11b-9765-4b7b-9997-14baa55e9afe",
        "cursor": {
          "ref": "dc71fb43-1a7d-4bad-baf3-8ca22823f18e",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8c67f696-2b58-48d8-9408-0dca7fd0a063"
        },
        "item": {
          "id": "368eb11b-9765-4b7b-9997-14baa55e9afe",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3b6d24a8-b226-4c88-b3d1-e07871e8b36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3541af2-2232-4ab4-9641-aabc2ffb8bb0",
        "cursor": {
          "ref": "2948eefb-27d2-4c70-85b5-5acfc90c1ee6",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "93f5bd1c-3919-4c43-880b-467e55a8c382"
        },
        "item": {
          "id": "f3541af2-2232-4ab4-9641-aabc2ffb8bb0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b89bddb1-11cd-45f4-a56a-d5945bfcc1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310b4365-002a-414c-8364-f0278c908dce",
        "cursor": {
          "ref": "92002c8f-aed6-48d3-b4b5-180d954a2c7a",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a4b50daa-babf-47c9-a6a7-5b8eb7b73869"
        },
        "item": {
          "id": "310b4365-002a-414c-8364-f0278c908dce",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ff0b9066-4bc1-41ec-acdc-62ee5e94e4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21501009-2df8-4909-9024-37dc80710b59",
        "cursor": {
          "ref": "3d817ba6-64ab-4fac-a4fc-adef8d1d9806",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9589e199-7f3d-49a5-97c6-931a3f4f17a8"
        },
        "item": {
          "id": "21501009-2df8-4909-9024-37dc80710b59",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e08476c3-fd4f-4d2a-a39b-7b2c89822e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4f5b6f-87dc-456f-a6cb-4698029f7c09",
        "cursor": {
          "ref": "85b77d1c-26ef-4cc2-865a-ca8738e76867",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a6116963-ebe7-4275-8b32-8dce0fad938b"
        },
        "item": {
          "id": "2c4f5b6f-87dc-456f-a6cb-4698029f7c09",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4b9e8615-5a5e-430b-b195-1383e1b30903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa21fcf-feb7-4b47-a760-5ff993296f4c",
        "cursor": {
          "ref": "5efe6491-579e-4699-8840-666b97750055",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d22b818e-3006-45e4-b8a9-33a4e053d1e5"
        },
        "item": {
          "id": "1aa21fcf-feb7-4b47-a760-5ff993296f4c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6877d648-ef84-4d13-a2c8-d6d56a0c91fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ac5046-4acd-412d-a969-7cef89995cef",
        "cursor": {
          "ref": "bb419062-dc08-4e01-a9fa-ab0b06eeba19",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "eb4997d4-7b9e-4230-847a-cb17039d6237"
        },
        "item": {
          "id": "e4ac5046-4acd-412d-a969-7cef89995cef",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c4704ae6-c791-4da5-a5b6-6e5b56afb4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff45a3c-ed25-4897-9422-9f245a63c8ec",
        "cursor": {
          "ref": "b25ef5bf-4a8b-4bd7-8b7b-8d68799a2073",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "79660ed3-2a01-423e-a761-91b4d0b4dac5"
        },
        "item": {
          "id": "1ff45a3c-ed25-4897-9422-9f245a63c8ec",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "92988404-f257-4364-9bcb-a026b5a90037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e45c918-e707-446e-8c0a-8130405c2dd6",
        "cursor": {
          "ref": "4e83391e-4b28-47ee-8713-f35270d48cb8",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b94ba1a3-5eb5-4646-9b09-771a7e015253"
        },
        "item": {
          "id": "2e45c918-e707-446e-8c0a-8130405c2dd6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e9e085f9-8792-474d-a032-f9321bdce7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cac4ea-94c9-4d41-b3d6-96eec8cf7ad3",
        "cursor": {
          "ref": "51feb78e-1961-4e00-964e-abbaf02ade6a",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9c998ec4-f13b-48ff-9a84-8f7214aeb581"
        },
        "item": {
          "id": "03cac4ea-94c9-4d41-b3d6-96eec8cf7ad3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6902c395-b35d-41c8-9a7a-b1649bd5d326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbdc70d-108f-4e6b-b101-e78dc82dcf6e",
        "cursor": {
          "ref": "e4aaad30-da5c-4b4f-931e-f57ffbe47517",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0075f404-4cc9-4c88-9722-8739e85fd10b"
        },
        "item": {
          "id": "dbbdc70d-108f-4e6b-b101-e78dc82dcf6e",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "828b2eae-c082-45fe-82d8-e1857960b2f0",
          "status": "OK",
          "code": 200,
          "responseTime": 3219,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "b377d9e9-1c5c-4f81-aacb-8ae33d504d55",
        "cursor": {
          "ref": "196ca7b5-25ce-438c-8082-9894511f0d8a",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "16d7af40-2bc2-45a0-8227-34d4c0593dda"
        },
        "item": {
          "id": "b377d9e9-1c5c-4f81-aacb-8ae33d504d55",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5d0d6e50-f46a-4b8b-81f9-9b5ce6791c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce4271e-666b-4aad-8d52-973a96024eff",
        "cursor": {
          "ref": "654a6f94-9081-4ebb-9619-fccbb5467b73",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5420bb83-d796-4a3d-a6a7-a98c6d111a60"
        },
        "item": {
          "id": "3ce4271e-666b-4aad-8d52-973a96024eff",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fdf14e6b-6b5c-4e18-9a50-d41bf7382449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817611d4-fb4c-4697-997a-4fde7fd05725",
        "cursor": {
          "ref": "61dcef8c-f76e-4206-86c4-4c8f47712450",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f8cd9dbb-23de-47cf-89ca-686cf17c3e20"
        },
        "item": {
          "id": "817611d4-fb4c-4697-997a-4fde7fd05725",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7121d4b1-0c6d-4a1e-8780-33cde7aa4cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68bb1ccd-eff9-4f10-96f0-7ca24c6977ce",
        "cursor": {
          "ref": "ef0a8f0d-a2df-40f5-90c2-cfb496dbc656",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5ba3cb28-e529-496a-971d-8c7aee537cda"
        },
        "item": {
          "id": "68bb1ccd-eff9-4f10-96f0-7ca24c6977ce",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fc076d15-fecc-486b-9cd7-636f81d5b8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc59c48-6d1b-4bea-b67a-01e7b0d87fe6",
        "cursor": {
          "ref": "643347ca-1587-4a42-9308-5925200366aa",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4ce572cb-20fd-4c4b-8ef5-fad48ce173b3"
        },
        "item": {
          "id": "ffc59c48-6d1b-4bea-b67a-01e7b0d87fe6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "63785c52-0183-4587-984b-0d0113de2452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1263c57-6ac3-4b81-a427-69be8c6299c4",
        "cursor": {
          "ref": "dda2a275-a977-41c6-865c-d05a0ee98758",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ec051707-e63a-474d-a4bc-f85367f6e00e"
        },
        "item": {
          "id": "a1263c57-6ac3-4b81-a427-69be8c6299c4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fac28cfe-9c4c-4c50-b92b-a93307958908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9315e7b-6eb8-413f-ad46-12f85389d73f",
        "cursor": {
          "ref": "ecfbfe78-6ab1-4dc8-8700-615701059fd4",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5e4d86bb-bc03-49f8-8ccc-109f45c33c78"
        },
        "item": {
          "id": "d9315e7b-6eb8-413f-ad46-12f85389d73f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "76393669-ce5b-4703-92c9-cf531272b1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4716ae3-44e3-4ccf-9738-2d8cf6be124b",
        "cursor": {
          "ref": "7b823225-a6ab-478e-b807-60d886795da3",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c8baa29c-d519-4976-bd66-bbecf0a448af"
        },
        "item": {
          "id": "d4716ae3-44e3-4ccf-9738-2d8cf6be124b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "829226ed-0d35-4940-8b8b-e5d0f3f6d0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d2ecd0-ad4a-475d-84f2-1fce9f400310",
        "cursor": {
          "ref": "6f84c62b-a15a-42e5-99fb-ada461d3a660",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ec173ecb-5792-4ff4-ae99-cf22e681d77b"
        },
        "item": {
          "id": "a9d2ecd0-ad4a-475d-84f2-1fce9f400310",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6cd7bbc6-0530-4d76-ab17-10bfbadddc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ff11c6-ea1c-4247-8cf9-c7fc25848b2c",
        "cursor": {
          "ref": "c463a8ae-7295-4e34-a8c6-5b2a79dbbda6",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "23576bbb-48f8-45dd-8f1c-4d8e2447c6a1"
        },
        "item": {
          "id": "f9ff11c6-ea1c-4247-8cf9-c7fc25848b2c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d4328b6a-12f3-4b57-b3d6-c26254fd9589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1012ec4e-7aa8-4b64-95c0-ea4aac8282ad",
        "cursor": {
          "ref": "a6361476-b6bf-47f9-beb8-606a23ce2368",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "803f0776-6918-41f6-8413-936b42e052ad"
        },
        "item": {
          "id": "1012ec4e-7aa8-4b64-95c0-ea4aac8282ad",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ad3ccb21-9950-423e-b042-3c288efe9eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a7d639-a4a7-4802-9c59-578d3fb76eb9",
        "cursor": {
          "ref": "555632e6-2477-412c-8e55-4574f76aec94",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4c737ace-fd94-4e53-a028-00653e7dfa62"
        },
        "item": {
          "id": "10a7d639-a4a7-4802-9c59-578d3fb76eb9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ef7e0071-791e-49ed-9602-754dcd48b57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8e565e-4001-4c3a-b55b-f5f441ad2a69",
        "cursor": {
          "ref": "ca15c65c-cead-4a57-9f34-d98fa2716540",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0394390e-ed73-45dc-b6c7-5d32cd7767c0"
        },
        "item": {
          "id": "8b8e565e-4001-4c3a-b55b-f5f441ad2a69",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ea6351ae-124d-4a49-b9e4-e6193255e1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9cc6a4b-38a6-4f2b-8cc1-7d99766e2baf",
        "cursor": {
          "ref": "287b54d1-5a74-42b7-937b-d7fb812a4d4b",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "dae89e56-8189-49f5-9f31-d3cfefab61fe"
        },
        "item": {
          "id": "e9cc6a4b-38a6-4f2b-8cc1-7d99766e2baf",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3cc74bfa-30cb-4c52-bdc2-47441c8d08c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f325e7eb-1d60-4b44-a003-0bc5a456ca92",
        "cursor": {
          "ref": "fff5c35c-147c-4b3a-8d8a-bb703fbeb068",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7a61a248-832e-427b-b50d-865f41a3b330"
        },
        "item": {
          "id": "f325e7eb-1d60-4b44-a003-0bc5a456ca92",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e30fea29-f74b-4426-a006-630e904f49ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1392315-697e-4556-9d15-b674317d3ed9",
        "cursor": {
          "ref": "48bb74d5-976f-4b68-95bb-8cf96dfa5a77",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f78bbfc0-6a01-4b2d-8de7-6a632df55258"
        },
        "item": {
          "id": "e1392315-697e-4556-9d15-b674317d3ed9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f32ed9d4-9601-4e52-8254-69736210a2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13dad9b-d11a-4108-a173-ac5b5db238d4",
        "cursor": {
          "ref": "c4586ea6-ee77-49ca-8119-f8ede07d1d6c",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "01ad5284-0ae3-44da-915b-3d34eac941e4"
        },
        "item": {
          "id": "f13dad9b-d11a-4108-a173-ac5b5db238d4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3d9c6e05-88a0-46fe-b02b-a42c53dc1d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291e5a6c-316c-41a2-9876-eac013241648",
        "cursor": {
          "ref": "0774d96c-6eb7-44b0-b5d1-0721cb0fdf8e",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d63384cc-d6a3-4955-bfb2-b1468dd3efcc"
        },
        "item": {
          "id": "291e5a6c-316c-41a2-9876-eac013241648",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "973225c7-3eeb-4338-9748-0a0021adb428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264321f3-0a7c-4e61-80af-051bdf2ee605",
        "cursor": {
          "ref": "ad1a8d00-f060-4490-abcd-31e054d809db",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4cfbf1a0-8d62-4dc4-9d7f-0659ef3d24ac"
        },
        "item": {
          "id": "264321f3-0a7c-4e61-80af-051bdf2ee605",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "84c710fd-b3be-46a4-97ec-19773794de37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce17c0d-de6b-475d-9364-954c39632a1b",
        "cursor": {
          "ref": "a12053d7-8ca5-427a-b35b-b0d96b752bb3",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "127a74a7-e8d3-4701-b7f7-a0e731b749e9"
        },
        "item": {
          "id": "7ce17c0d-de6b-475d-9364-954c39632a1b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "84e9b976-6846-41f2-8f9a-d21eae498ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573b3495-3f68-4215-bd6a-f2f853773380",
        "cursor": {
          "ref": "36dd1a87-ab61-4977-a874-5a896b08a570",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a046536a-a4b3-4a1f-b021-bfec726f5c40"
        },
        "item": {
          "id": "573b3495-3f68-4215-bd6a-f2f853773380",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7cc6ddf7-ac19-45d8-9627-c8f9c805a36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d587f43-1423-42fa-bd0d-9d2f361d2ce1",
        "cursor": {
          "ref": "1c4b67d4-5d0e-438b-97f0-9e1cbb9226f8",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5e4db4f0-bb49-4e37-b12d-bc4062de02ac"
        },
        "item": {
          "id": "7d587f43-1423-42fa-bd0d-9d2f361d2ce1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "298103e7-9fc9-490b-8d0c-b2095d682dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9055cd-1b3b-4016-872e-49e34fae8657",
        "cursor": {
          "ref": "a822399a-53b8-42b0-aff7-ecad70805f6b",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cf343e70-9cf6-4266-9aa8-ea37f0069685"
        },
        "item": {
          "id": "6c9055cd-1b3b-4016-872e-49e34fae8657",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "be72f952-82ae-48c0-b74a-87c1c5f5ec93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5441ae13-c39f-4dea-820d-7e3697ba630b",
        "cursor": {
          "ref": "870f9d92-1915-4e0f-a2e0-0d088f413111",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "772b43fc-441d-47a9-86a3-9ab8c3876357"
        },
        "item": {
          "id": "5441ae13-c39f-4dea-820d-7e3697ba630b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "dcea9e96-abf8-439b-abb5-a90d90e69080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c038898-f886-4109-8054-179f499c6b71",
        "cursor": {
          "ref": "dbfa58d5-13a8-48f8-b90e-b2313800350c",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "da7c54a6-aead-4b83-abda-fef8455bf671"
        },
        "item": {
          "id": "8c038898-f886-4109-8054-179f499c6b71",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f4ac4eae-aedf-4500-94fa-4b21d2a850f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6c8288-87b5-4881-a2c3-558f7d721fc7",
        "cursor": {
          "ref": "3d6d3279-dc4d-4110-a95e-cff98a6cd8f0",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3e50408e-f46b-43ff-9cf8-c563276ee3bd"
        },
        "item": {
          "id": "ce6c8288-87b5-4881-a2c3-558f7d721fc7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0257ff10-6f92-4a0e-8426-54896754da04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce39b608-847e-4032-a3da-0ce516793be0",
        "cursor": {
          "ref": "1e8f31fa-3d97-4a90-8310-572194036fc8",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "84125f6b-a967-4de3-931f-7e6575264250"
        },
        "item": {
          "id": "ce39b608-847e-4032-a3da-0ce516793be0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9a1d80c9-2d38-470b-ab58-a72ead7ed3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b045bf51-263c-47f6-bef5-3830d612b92f",
        "cursor": {
          "ref": "537dcb17-1d05-4a65-a899-46836767bcf4",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c28edb65-2e6f-486d-98e6-e69e4136af33"
        },
        "item": {
          "id": "b045bf51-263c-47f6-bef5-3830d612b92f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "85375657-6246-44b8-afc2-49b18ac4e263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabdc7d7-99ad-4b27-aec2-bb0f5bdc69c3",
        "cursor": {
          "ref": "80ad055e-1b49-47d8-a849-16e3f0b5459d",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4f925aec-54c3-48bc-b8d9-fbbe80823d31"
        },
        "item": {
          "id": "eabdc7d7-99ad-4b27-aec2-bb0f5bdc69c3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0de2e742-8eb1-44f0-86f0-e796797fd63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcc0041-cc82-4462-86e7-ff570ab26b7a",
        "cursor": {
          "ref": "4312ad8a-9b0d-4b7a-8bef-cc9253c6ce8a",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c2545432-1844-4f04-bc39-72698933a9c7"
        },
        "item": {
          "id": "ffcc0041-cc82-4462-86e7-ff570ab26b7a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a4bbfdfb-95a6-44fe-9940-afb7789870d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2c9d04-29bb-4940-b3b8-10381eee7b31",
        "cursor": {
          "ref": "1483b964-2d44-4645-afd5-7d545e18eb73",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3ca0c967-c5a8-4ce9-a738-294cdec790e9"
        },
        "item": {
          "id": "cd2c9d04-29bb-4940-b3b8-10381eee7b31",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f2c4a862-eee6-461c-9de2-2e979e3dd5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f575998f-9c2d-491a-a4a9-1f924ef09e8f",
        "cursor": {
          "ref": "ea567ff9-c3ff-43d8-8339-1aed050b6d89",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5c7b6c65-76bf-4ade-97a5-f3ff678a148f"
        },
        "item": {
          "id": "f575998f-9c2d-491a-a4a9-1f924ef09e8f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d386220e-4647-4ae8-b571-2f128970cf23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5881d8e-1e6b-427d-953a-ab6ef1f68445",
        "cursor": {
          "ref": "e872cd1c-952c-493e-be80-b191abeff5e0",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "673db45e-60d8-4313-9082-bcb4b4305d37"
        },
        "item": {
          "id": "d5881d8e-1e6b-427d-953a-ab6ef1f68445",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "01d10bb8-efc9-47be-8634-ed164c16489c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c88b110-553e-4954-84ff-6385839c9c4f",
        "cursor": {
          "ref": "c2c1ef2b-f9b0-4c32-945c-23e044564bb4",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f9496fa9-7ac3-4c86-bb7c-92fc55698c00"
        },
        "item": {
          "id": "2c88b110-553e-4954-84ff-6385839c9c4f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d5a163e1-6d70-4d81-ae83-4b57b16f8159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20328726-60cc-44c1-b1be-674d680d9ced",
        "cursor": {
          "ref": "887b68f6-2d73-4cc8-bd4a-a5fc6f6144d7",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0bb7f03d-93fd-4ab0-bca4-9b20abf41896"
        },
        "item": {
          "id": "20328726-60cc-44c1-b1be-674d680d9ced",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a7d5851a-da74-403d-bd1b-fe25ea5469a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8db1c86-d24a-4633-a0f9-1465c64c26f8",
        "cursor": {
          "ref": "3625a2d8-f5ae-47ee-a379-a2eec56e8bb0",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "adf65597-3e2e-48b1-9bb8-0182372044e8"
        },
        "item": {
          "id": "b8db1c86-d24a-4633-a0f9-1465c64c26f8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a9837abf-0dfe-41a7-9435-831a95626c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5fe5b9-6308-42bc-8516-33f17ac6883e",
        "cursor": {
          "ref": "deeb01d7-253a-4039-9b4f-c6d2016d418d",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "706975db-1eea-4ebe-a59b-2ec58c0f6aff"
        },
        "item": {
          "id": "6e5fe5b9-6308-42bc-8516-33f17ac6883e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8079c71f-038a-4c18-abe3-f9872ba45d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3f276c-f1e1-440a-861d-9c0353c3a723",
        "cursor": {
          "ref": "3bc31281-5aca-49b3-9619-4e03054e243b",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8473ceb0-754f-4420-8e36-a19b8baeeca6"
        },
        "item": {
          "id": "2c3f276c-f1e1-440a-861d-9c0353c3a723",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a9f8d061-2800-4b35-8d5b-9158c9d1ad62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7594028d-922d-4776-8f86-0779835013e7",
        "cursor": {
          "ref": "f9fdc607-6095-4e08-8b81-4d0eb51a9740",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c9811440-47b8-4d2e-b3ec-f8bce7cbaa0d"
        },
        "item": {
          "id": "7594028d-922d-4776-8f86-0779835013e7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a0a7bb76-45be-484a-a4f0-9741d017eb90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d31e7a-60bb-43b5-8810-5c0c289ea657",
        "cursor": {
          "ref": "f5ce01e5-2f3b-4cde-bc38-44f56e05ca30",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c3bbea29-f210-4aa5-b0e6-2faf7307b4d0"
        },
        "item": {
          "id": "a3d31e7a-60bb-43b5-8810-5c0c289ea657",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "91c4b323-8b6a-4f7b-b269-f12adcc2ce7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd25286-7074-41ea-8bc4-8969ef7627f3",
        "cursor": {
          "ref": "8f6c26a9-8b67-49ab-85db-fb7a0945f335",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3700a64d-0f45-4e53-a986-ea4bcbe62223"
        },
        "item": {
          "id": "bfd25286-7074-41ea-8bc4-8969ef7627f3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bfa49a23-3586-400f-bc0a-37878b0a4ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfef129-b588-46f8-a5b1-292e4d76f9a8",
        "cursor": {
          "ref": "7bd2170d-d541-4e54-a7bf-79c7ad8945c3",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9458fb30-fb08-44b7-b2f4-e399d3b3a626"
        },
        "item": {
          "id": "dcfef129-b588-46f8-a5b1-292e4d76f9a8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5cc92850-f4d3-4bdc-aafc-9f7d2790fd43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db46205a-4631-454b-ab32-6ac154c5474a",
        "cursor": {
          "ref": "36b08cfe-f888-4cf0-9357-5d3126f838d3",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e95d261d-8165-4004-9991-c75a4ba523bb"
        },
        "item": {
          "id": "db46205a-4631-454b-ab32-6ac154c5474a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2e9b69ad-4037-40a3-966f-6aba46f9eb84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6fb9e2-5650-4c3c-9bd9-ccb67d858ada",
        "cursor": {
          "ref": "3d1bd99c-106e-495b-8723-dbc59267e6bb",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9819aeca-8266-47fc-be25-d1ea95ebcbb9"
        },
        "item": {
          "id": "8b6fb9e2-5650-4c3c-9bd9-ccb67d858ada",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ea45ac41-1064-4b02-a5bb-4c11b2eb3932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc206678-c834-480f-9d10-72fa665bc7af",
        "cursor": {
          "ref": "ac839fa1-814c-4c01-9825-c148b85e6782",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9c9a8e62-eec1-4c17-b66c-ed010ec4df9f"
        },
        "item": {
          "id": "bc206678-c834-480f-9d10-72fa665bc7af",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "377f66f2-2437-458f-ae0b-63e5e0c0e361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b41feaf-c554-49ec-a326-770964326b3c",
        "cursor": {
          "ref": "e4da0a62-40ce-43c2-9124-f0350330e071",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cc08244f-f89a-4407-a91b-d6fc280264d0"
        },
        "item": {
          "id": "1b41feaf-c554-49ec-a326-770964326b3c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e4f165ef-b41c-495c-ab70-7b864f3be689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b377bf86-685a-4b27-b99a-3c0c99e45e28",
        "cursor": {
          "ref": "3e9b540e-04fb-4924-b984-cea4e717270a",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d13502d9-267f-45db-b7b7-3b8d2d8b1cb5"
        },
        "item": {
          "id": "b377bf86-685a-4b27-b99a-3c0c99e45e28",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2874f0cb-fe77-417d-b752-78e89d7d3f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd80475-6582-465a-8fa6-168fc1bb0cec",
        "cursor": {
          "ref": "bb167514-e588-4f3d-8186-7ce2de832e97",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3ed28552-7996-4632-a387-b4b0fb9cead6"
        },
        "item": {
          "id": "dbd80475-6582-465a-8fa6-168fc1bb0cec",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9d5b02f2-05a1-4b30-9762-6eb920af3d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8ddddd-e9f8-4da7-8456-4205c589fc29",
        "cursor": {
          "ref": "a6478c44-9b88-410d-a899-e57aa1e1e1f4",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2a9fa198-a369-46d9-811a-a2907e0b4f4d"
        },
        "item": {
          "id": "1b8ddddd-e9f8-4da7-8456-4205c589fc29",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "99e2fb02-afd6-43f6-9d47-c9b0b5df57d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a8f697-def4-4b47-961b-ab6081803bb8",
        "cursor": {
          "ref": "707facd3-f00b-4054-93a4-a030cc8f6416",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1747181b-ef6a-4f60-8ce0-86643f470c64"
        },
        "item": {
          "id": "e7a8f697-def4-4b47-961b-ab6081803bb8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b3a293df-0c43-4797-a247-c421e66baf0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3265262-a3a8-42c8-8d2a-55b612f1bf83",
        "cursor": {
          "ref": "33bb69d8-49bd-406c-bb79-bd08a4121e7a",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "87ddd654-8766-48c8-97d1-6f32ebbc916a"
        },
        "item": {
          "id": "e3265262-a3a8-42c8-8d2a-55b612f1bf83",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "15dfc7e0-8128-4fa1-b183-16319ff57179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc6df23-fc88-4c01-9867-afbde6b185ee",
        "cursor": {
          "ref": "f9558346-702c-45d0-8f7f-20249b0f5f72",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "55c4f9fc-0bb7-464c-ad05-f3a4710389e0"
        },
        "item": {
          "id": "4fc6df23-fc88-4c01-9867-afbde6b185ee",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ed6ca1d0-7219-4dc1-86da-df152e8b3acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8156f59-038f-4d39-ae14-b5001caca05f",
        "cursor": {
          "ref": "6791a6df-c4fa-4a61-b686-e41aa945fcaf",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6c6d5ba1-0414-4d40-8703-480442c9bb8e"
        },
        "item": {
          "id": "d8156f59-038f-4d39-ae14-b5001caca05f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "92464776-8670-42b9-8c3e-9e81b862ab51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d7cc68-2b83-4bfa-b226-7c339c95265a",
        "cursor": {
          "ref": "06a11d1b-3bfe-4bb2-be94-0f6c339052ce",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "22854b03-7587-4fbd-823a-b7d8b78e944c"
        },
        "item": {
          "id": "14d7cc68-2b83-4bfa-b226-7c339c95265a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ad27d9ee-f0bc-4580-abb2-6112b6c41a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe16bf0-9363-4ebc-8bb1-1695488028c5",
        "cursor": {
          "ref": "a02936c1-9dd0-4d7c-b5ad-bc354c5b767e",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7307e2ec-1d1d-49bc-9476-7908b929d784"
        },
        "item": {
          "id": "3fe16bf0-9363-4ebc-8bb1-1695488028c5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c91ae017-c19b-42e6-a75b-7bcb08b87b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dde27cb-1fc2-4577-ba82-e4fcf0ed4cf2",
        "cursor": {
          "ref": "11ec6680-1713-4431-90b2-fc5c3b67ffb9",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "17e318a5-20e2-4abc-b3af-088ea7d9908f"
        },
        "item": {
          "id": "4dde27cb-1fc2-4577-ba82-e4fcf0ed4cf2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "895d296b-935b-40a8-9e9e-533f2611deae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bd834d-8a8d-4777-be5b-69412c9f334a",
        "cursor": {
          "ref": "999be75c-099f-4605-913f-916157ec0607",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "461e9710-2a58-45fd-a9ca-4164bbbde1fe"
        },
        "item": {
          "id": "c7bd834d-8a8d-4777-be5b-69412c9f334a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a43ac249-5e84-42a9-821e-0a8290779b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc87d93-2a0c-48d2-bb50-21a5c6bf5ff0",
        "cursor": {
          "ref": "498786ea-e201-40e6-b74b-1db9d856ffaa",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e16cf611-245c-411b-826f-b66fd4d2ba5c"
        },
        "item": {
          "id": "dfc87d93-2a0c-48d2-bb50-21a5c6bf5ff0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a7bc040e-319a-450b-ad8b-4eeb67a2ef3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d35b982-4831-488a-8bba-e6b95faadcf9",
        "cursor": {
          "ref": "b2212da4-8049-4083-a583-54ebd7e9231f",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ae677a69-f84a-4e9a-97fb-329acbe5f80f"
        },
        "item": {
          "id": "8d35b982-4831-488a-8bba-e6b95faadcf9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4654b42b-f802-4f7a-ad26-ac73b00f1b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5cb172-181c-4206-b79a-2f9e78ea8437",
        "cursor": {
          "ref": "3cd79ca1-7756-4044-a91b-7287a341f6c1",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8f5ea8d7-a6d5-43fb-9e4a-ed487ed17a01"
        },
        "item": {
          "id": "fc5cb172-181c-4206-b79a-2f9e78ea8437",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "59abd334-b2fc-475a-b9c1-d42f23e84dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971f101d-cea0-40fa-b8c4-5f64d396a837",
        "cursor": {
          "ref": "c4ac42b8-5cde-477a-902e-744289d61d13",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "40a0b4d8-db16-4931-8160-b486d83dfc52"
        },
        "item": {
          "id": "971f101d-cea0-40fa-b8c4-5f64d396a837",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "62daf5bb-4e29-4a96-b3a8-ead250702291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87d21d6-1ecf-4b07-b60f-01d91b531ad5",
        "cursor": {
          "ref": "08df6479-aaa9-41fc-b548-737b19c77273",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9b9bfd87-f3f1-4109-bc1a-f92299a5c835"
        },
        "item": {
          "id": "a87d21d6-1ecf-4b07-b60f-01d91b531ad5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5b9258e3-3653-4569-b828-10c5874720b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2e0618-0f18-4178-82ea-8ad05a3b2015",
        "cursor": {
          "ref": "8a840bae-0cb7-4409-ae48-39486b7d0ac4",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "27f1f701-611c-4b8e-984b-f7a2e2463458"
        },
        "item": {
          "id": "8b2e0618-0f18-4178-82ea-8ad05a3b2015",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2dd57984-00d3-42af-98f6-0626c1a16788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f7aabc-e0a3-451b-bbab-2944b5aa567a",
        "cursor": {
          "ref": "7b77d27b-f7fc-46c8-b494-4dd140b86357",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e3650e02-f35b-47a7-88f8-d0fcfc0eb230"
        },
        "item": {
          "id": "13f7aabc-e0a3-451b-bbab-2944b5aa567a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f5fe9f48-a3b6-4694-b091-3418481ccd24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa114de8-85c9-474b-adae-549a12d0b5be",
        "cursor": {
          "ref": "f424170e-5b90-4d89-9bd6-508097583069",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6e8099de-c784-46e7-83aa-c826293b5d82"
        },
        "item": {
          "id": "fa114de8-85c9-474b-adae-549a12d0b5be",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e3434379-15dd-4da2-b16c-8344a53e3ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231e6cce-6219-481b-902a-6e5014fa9f3e",
        "cursor": {
          "ref": "3958cc36-831b-4311-90e1-1c3c51ce39b4",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9d571809-4c98-4c24-87b6-500f602c5d73"
        },
        "item": {
          "id": "231e6cce-6219-481b-902a-6e5014fa9f3e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "28460f94-9c24-4ea7-b3bc-ce6d2c43ba0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db12d6c7-4f0d-44e1-a083-54cab404fe35",
        "cursor": {
          "ref": "18bb1ebd-dfc0-442b-b55d-37e2886a313e",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f29b86e4-18ec-4b00-a4e9-34f369d5a593"
        },
        "item": {
          "id": "db12d6c7-4f0d-44e1-a083-54cab404fe35",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ee812958-efef-47bf-9e3f-d487e6e6dc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05d3082-4aa0-4192-bd7d-d846c7549fba",
        "cursor": {
          "ref": "ccc88b7c-ca6f-4569-b0c9-f588203909fa",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ec97859e-f376-4c66-a8e7-3d79431e5874"
        },
        "item": {
          "id": "c05d3082-4aa0-4192-bd7d-d846c7549fba",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e5687761-d892-4b2e-9fe1-ceed000ca36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9c3a55-1b4a-4de6-b554-89bfc176cb9f",
        "cursor": {
          "ref": "ca4e7382-ba0f-4911-98a2-d92a8e208de3",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cfa45a20-60cf-415a-8a34-cc76898be07f"
        },
        "item": {
          "id": "3f9c3a55-1b4a-4de6-b554-89bfc176cb9f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "242e9827-d3ce-4236-984e-69405ecedd4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d6da25-645c-419d-9fe8-0ba53c751885",
        "cursor": {
          "ref": "499a1851-919e-466a-b577-bb6cdaaa64f4",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5ad5cf2d-c481-4021-82b8-d50ad2a158e3"
        },
        "item": {
          "id": "99d6da25-645c-419d-9fe8-0ba53c751885",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7233e858-a0b5-4109-932e-942554a4eecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d119553-6015-46c5-9dab-b537ec3a701b",
        "cursor": {
          "ref": "b72efd6b-5c8c-43eb-88f5-1f4d2238378f",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8b084cb6-32fa-4ae4-a4a0-801e57d3a614"
        },
        "item": {
          "id": "5d119553-6015-46c5-9dab-b537ec3a701b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "80b035e6-5afc-4286-9ff9-ebc85fb8383e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b45f79b-7a04-4180-9604-9b61c6dbd3ff",
        "cursor": {
          "ref": "f869ad1a-fc93-43a4-8e0e-a97937d46e3a",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0f51c8c1-4e0e-484b-acbc-5bb790ba4c0d"
        },
        "item": {
          "id": "8b45f79b-7a04-4180-9604-9b61c6dbd3ff",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "901a3bbe-c7e0-48cb-98ce-e49708f8d293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194e55df-2416-46fd-842c-aad1acf6e172",
        "cursor": {
          "ref": "e1749cfc-bae7-4240-a69a-6d0163f4c0ce",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "05d8f1b8-71b7-4207-9d0a-ca984616aeb6"
        },
        "item": {
          "id": "194e55df-2416-46fd-842c-aad1acf6e172",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c7d97429-e7b9-41d0-87ec-a08bdea84301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4dcd9f-e904-4c36-8a6f-e099f2b86f59",
        "cursor": {
          "ref": "e0530acc-c842-4d20-ac86-62ed66d16130",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b0f864e7-a6b1-4d40-86e0-8e29032ae59b"
        },
        "item": {
          "id": "bc4dcd9f-e904-4c36-8a6f-e099f2b86f59",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "db1fd05f-e2dc-4e43-a3a4-45b725ed1552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbc8eaa-92d1-4df8-88d7-e7ea2f0d3e18",
        "cursor": {
          "ref": "369f58f0-f217-4219-9e73-b14302e2ed2f",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "57042dc5-a1c0-481d-9e8c-a5a001f164a5"
        },
        "item": {
          "id": "cfbc8eaa-92d1-4df8-88d7-e7ea2f0d3e18",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "afff12af-8502-41c4-bf44-515c539e5ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c601438-9180-4666-9c4c-8d3de046b24f",
        "cursor": {
          "ref": "531d92ac-8381-4ec7-80f7-ca78f1d4af43",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0f04b428-84c7-4193-9a0a-bfca618ddcb9"
        },
        "item": {
          "id": "9c601438-9180-4666-9c4c-8d3de046b24f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "49eab47e-39ea-4c86-a2f9-34d04e6523a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c167c7-60f9-41bc-9ae1-387418e4e50b",
        "cursor": {
          "ref": "de9ad8ec-b9fb-4c16-94b0-792cb6ac5a77",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a571ffc0-7e6f-43c9-93b8-4013145138b6"
        },
        "item": {
          "id": "60c167c7-60f9-41bc-9ae1-387418e4e50b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2cb66e08-8e20-4fa4-9eec-7c62e06541ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31aa219a-edb8-40bf-9746-6d645d5c0ba5",
        "cursor": {
          "ref": "3e18630b-5482-421f-998b-def9da88c5f6",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a29a5dd6-4c88-400c-b12c-694f4669f5c4"
        },
        "item": {
          "id": "31aa219a-edb8-40bf-9746-6d645d5c0ba5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "259a5435-4d47-4258-aa22-9322c4f4a072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7739fc-ccef-4dd2-85b9-8f9a8643733b",
        "cursor": {
          "ref": "8f479c87-2b90-4af3-9bab-2cd31738bc48",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f97ede2b-ed1e-4526-88b8-515b6d2fa244"
        },
        "item": {
          "id": "cc7739fc-ccef-4dd2-85b9-8f9a8643733b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9fff58f5-0cde-4720-a645-9a66a5862306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddd5cce-7706-4048-a70a-d14bafc5f838",
        "cursor": {
          "ref": "6a731eb9-8040-460f-b313-6c50f54e7a7f",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d6545a2f-6294-481d-bb5a-056bcb309d78"
        },
        "item": {
          "id": "4ddd5cce-7706-4048-a70a-d14bafc5f838",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7415fc57-4202-4d34-9fcd-dbd4afd87909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54849cba-abda-4de2-bd6e-c7b86f9b4740",
        "cursor": {
          "ref": "c58f7db8-76fe-48ed-9644-538060cc1615",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "65dcb077-a8ff-4aad-891d-65e8a942437f"
        },
        "item": {
          "id": "54849cba-abda-4de2-bd6e-c7b86f9b4740",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3387e384-b5b3-4be2-9818-575a46a959d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001d59fc-e276-4e62-aef9-e8729d8ff7f7",
        "cursor": {
          "ref": "db2dd86c-42d0-4b3d-aa27-5fecd1c57361",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e16016b6-cda9-4cfe-9b9c-98af5a158415"
        },
        "item": {
          "id": "001d59fc-e276-4e62-aef9-e8729d8ff7f7",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "98464209-fe78-4ecd-98ab-01612f77e8d6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 281,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22bb16a0-5336-44a8-9aed-c81cc587020c",
        "cursor": {
          "ref": "255db860-4023-4a7f-9011-5960e94997a8",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9561dafd-5eee-4882-abeb-a30e2801486a"
        },
        "item": {
          "id": "22bb16a0-5336-44a8-9aed-c81cc587020c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d15b10e5-1060-4cfc-93f6-3537e2cef421",
          "status": "OK",
          "code": 200,
          "responseTime": 353,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "722572a4-8f61-4641-a1f6-bc9f85bdd7da",
        "cursor": {
          "ref": "8e71fc4a-7cd9-490b-9afe-639e1cdb3905",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "886930c9-9168-4e8c-bc81-f5c6514fc321"
        },
        "item": {
          "id": "722572a4-8f61-4641-a1f6-bc9f85bdd7da",
          "name": "credentials_verify"
        },
        "response": {
          "id": "79a3822f-cb94-4eaa-92ad-a47991dfcb65",
          "status": "OK",
          "code": 200,
          "responseTime": 2954,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d636ff78-b5e1-4f02-8eb3-a00dad5091fd",
        "cursor": {
          "ref": "1cf443a2-b417-4eef-8e94-b97b693e5d21",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1bdcdeeb-819f-4d82-9a83-d2ecff40e347"
        },
        "item": {
          "id": "d636ff78-b5e1-4f02-8eb3-a00dad5091fd",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9a46eca9-40a2-4e2f-99a1-3460b3aa140c",
          "status": "OK",
          "code": 200,
          "responseTime": 2766,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c1b00d-9f63-4616-91d7-522dcd8afe75",
        "cursor": {
          "ref": "7632e275-81ca-4d60-b014-2b8635e6f497",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "50412659-0e6e-414e-b581-6b2f042b2485"
        },
        "item": {
          "id": "b4c1b00d-9f63-4616-91d7-522dcd8afe75",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a7401f3a-586c-4f92-a118-45be556b081d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c1b00d-9f63-4616-91d7-522dcd8afe75",
        "cursor": {
          "ref": "7632e275-81ca-4d60-b014-2b8635e6f497",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "50412659-0e6e-414e-b581-6b2f042b2485"
        },
        "item": {
          "id": "b4c1b00d-9f63-4616-91d7-522dcd8afe75",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a7401f3a-586c-4f92-a118-45be556b081d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c1b00d-9f63-4616-91d7-522dcd8afe75",
        "cursor": {
          "ref": "7632e275-81ca-4d60-b014-2b8635e6f497",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "50412659-0e6e-414e-b581-6b2f042b2485"
        },
        "item": {
          "id": "b4c1b00d-9f63-4616-91d7-522dcd8afe75",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a7401f3a-586c-4f92-a118-45be556b081d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f868b4b1-6d2c-4bfd-9154-26e74141cea1",
        "cursor": {
          "ref": "451ee4af-8d32-45ca-a955-a89608b9f47c",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "bc8bd6b7-5b36-4fc7-a1c9-5b28b6d2ad30"
        },
        "item": {
          "id": "f868b4b1-6d2c-4bfd-9154-26e74141cea1",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "34da0c0d-35fe-48c3-b77a-32cb13a0fcc0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 303,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0399c960-e19b-4290-9249-8ef07f262d2f",
        "cursor": {
          "ref": "3b953e29-f7cb-455d-8ac1-187430d13780",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e99f141b-d03e-4a4e-a9e3-6cfa7d407102"
        },
        "item": {
          "id": "0399c960-e19b-4290-9249-8ef07f262d2f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fdd2cd8b-31d2-4332-ba5c-957c364ea4db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0399c960-e19b-4290-9249-8ef07f262d2f",
        "cursor": {
          "ref": "3b953e29-f7cb-455d-8ac1-187430d13780",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e99f141b-d03e-4a4e-a9e3-6cfa7d407102"
        },
        "item": {
          "id": "0399c960-e19b-4290-9249-8ef07f262d2f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fdd2cd8b-31d2-4332-ba5c-957c364ea4db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8452fb32-32d7-4ceb-b36d-a0d01f61f775",
        "cursor": {
          "ref": "0fa1bc91-7b38-45f0-afbc-fa8c41edc7f3",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "97e1123f-a933-49a0-bf21-33145ac3aeaf"
        },
        "item": {
          "id": "8452fb32-32d7-4ceb-b36d-a0d01f61f775",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "22966737-2b83-477b-a422-7bfdbf89e28a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 514,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e01774-2b62-48a5-8031-1e96a6781f79",
        "cursor": {
          "ref": "2402bfbe-869c-4327-b002-649ce2cb3e4d",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "bc183b8e-75d8-42cf-938d-9202f3b5ecef"
        },
        "item": {
          "id": "a5e01774-2b62-48a5-8031-1e96a6781f79",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f40e3bfe-6a6a-40db-bc19-c938dd46c872",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e01774-2b62-48a5-8031-1e96a6781f79",
        "cursor": {
          "ref": "2402bfbe-869c-4327-b002-649ce2cb3e4d",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "bc183b8e-75d8-42cf-938d-9202f3b5ecef"
        },
        "item": {
          "id": "a5e01774-2b62-48a5-8031-1e96a6781f79",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f40e3bfe-6a6a-40db-bc19-c938dd46c872",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b2c4c6-7576-4946-b8bd-c03936a969b3",
        "cursor": {
          "ref": "ebdd20c8-d7f6-4167-a316-dde98136e311",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b0be5935-e497-4333-92a8-f26cf1a1b6a0"
        },
        "item": {
          "id": "a9b2c4c6-7576-4946-b8bd-c03936a969b3",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "49182fe7-90fd-43c9-afa6-53b52e9ef8c8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 512,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}