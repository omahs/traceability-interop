{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a2533752-f03f-4365-8e37-42fd1caddc6b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f603fff6-5f69-4eb4-b44b-6da6c9c4a46e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d22941f5-e3fd-4076-8ca8-7619d68ade5d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "56c0fd9d-c27b-41bc-8ed3-739e63d7cf46"
                }
              }
            ]
          },
          {
            "id": "612d7d4e-ab42-4f86-9350-0d326d680718",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4c2dd2fa-4b49-4b03-ba36-e3e340404766",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1333461d-fade-431c-8b0b-5cb8a0c1fb32"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "729aa797-a8cc-44c2-a231-87a053b06723",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "17cb0368-b667-4aac-8d6b-d90182979f0d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "07b569eb-aabc-488b-9609-aaa648e0fc4b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7868639-80f3-4470-8c6e-391a6bd08f16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82915039-2383-4032-8fd4-217afd595de7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e80d172f-a16f-4ac8-bf8c-8c3fd56ee24f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a9b9b137-cc38-4369-8eb8-acdbf224bd9d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cf92fbbe-174f-49a1-ae20-63c8c167da84",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09017aa8-13d0-45fb-8869-62b697323fec"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3de908ae-7cfd-4f1f-88c8-4001afb7768d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2599f6ca-0a2e-49ec-925a-ace513a4b89e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c5a9617-f06e-4a04-8458-6229e2b58d95",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a74b8c7-1c13-4944-b0b8-d89f8a5a1f78"
            }
          }
        ]
      },
      {
        "id": "7dd642ed-cc57-4f19-a678-84842804f842",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "adff77f7-f43a-48a7-b18f-c141400946a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65a3f0ec-d986-4227-9fa0-d44e28b6a894",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "57f3d8c5-0f48-43ea-9652-e7dfbccdf8ef",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9035650e-6163-43bf-adff-996b7a634bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "938f88e0-3a2d-45a6-aeb5-a95fbaf2b7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f79c0ce-f972-44dd-9dcc-d0aacb055dda",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ae7186-7224-4760-80fd-2ed4865750c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "442c5427-dea4-4d7c-8f67-a77be29e5584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7078b828-0c21-43c0-85a6-21c59deafa2d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8cc11e-36a3-407f-9a6a-d571613c0a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "943f9ffd-c31a-427f-b67e-4d7b36ec5920"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "72eb487d-b38f-4392-a7e3-100209115641",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41d38e62-79f1-4b62-8f18-6c6fd18c4085",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce44be3-d99d-47b0-b0f6-2ff484e63fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79bd5ce9-ed00-48a2-8f26-bb4c64cd55ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb646fb-41a6-4165-99fd-a596f506fe15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb109f3-3627-4499-8cba-bd7c3e0bfd6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823e0477-9456-46de-9102-fb1129445923",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4a0966-ed97-490e-a520-c0a6bc80b310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2465e09-7f9c-4e7a-a167-8f9ce433356a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421c08c9-7873-4b48-8a11-01e4061abfd8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "e1171446-5c54-4699-8f79-801965297a2e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "45394cd0-8e91-4a37-90e4-9cbb2005fea5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6f62cbfa-fe2c-4387-af60-2bdfab89b40f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ab5b86e-be4e-4b64-82eb-fd60fca95abb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7bb068d6-b18b-42d3-bb3c-8b0cd863f35a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a213334-ace9-4f0a-8037-ba81eb02a006",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "e9f2facc-2577-494a-8084-616accc7f998"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8287d3cc-b1ec-4a5d-8229-1da35dc8063e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34d3785e-4701-49e8-8aec-0f127da8f8fe"
            }
          }
        ]
      },
      {
        "id": "900fa72b-d033-4602-a1a2-35580a768190",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "25972b64-9f5f-48f9-ac27-893234a5ce52",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe69abf4-0571-4b9c-b2e0-122073311d6b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "60dfe5ef-226b-48d5-9ae8-269112732e65",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d9c9ff-edbd-4fec-a5fc-bc07ddf49138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387f1aba-0568-49a6-8fe3-4a9cb01b2092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579c83f5-fb67-42a7-9be0-b24ba1758b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43fa74a0-13c8-45b1-b654-d1d0c4ed9736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e6ccc4-af61-4951-9df9-1f37ae047356",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3639cbb-512a-4138-bad6-15eb1f050f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e70143-5ae3-4d38-b0d3-7cbb3fe69ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607931cb-f1f5-4a12-861b-f35bcc685414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89dd1ec1-1673-48bc-9fb4-98d8572ff83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ce2139-3d98-47f4-9a09-1079e99c971c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42aa067a-0ad4-4554-b681-ae91f753bdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166509ca-3f62-440c-a8e2-0adcacd37fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2af375-7006-440b-9b1a-78133f6f6808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a8ef82a-6cd2-4178-af22-11804651ad56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790952d9-ec8f-4d88-8176-49e8b983ab90",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb248c65-b9ce-4284-9fb1-fb7164dbe888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1eecbb2-1265-41cf-84ad-ef990e930da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfeefa9-801c-4f9f-bcf2-d36b96f21418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9f1a318-8410-46c4-a847-33f6ddbc205f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ca98a6-04f2-4293-bdee-c1eece3f5e75",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b99d094-94d3-4d17-a1ff-e43e4d40869a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465e2927-58fb-44dd-845b-ba893ac5c91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f6ecd2-5ad6-43b5-9e39-3fc04d296d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e6397de-b1d7-4501-853d-61936bc56af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aef0de8-d7d4-4411-956a-13cd149aa0a0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064dcdf5-2a11-47c1-b58c-5a827d3bda4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717286e7-5157-4840-bf11-599bab36eefb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e8d05a-94b4-4626-bb21-9b53403422a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd651958-b627-4468-9ab2-45e723ce77cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beae097b-9832-489f-a6ec-c5287d20294d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8ba676-d4e0-4799-80aa-9a29ea71e828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "700bf542-71bc-4b24-a239-26ffd76a68c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393384d6-a56b-4fcc-9192-9b9a2e8e2587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59795e4f-0da6-4708-847a-df14fa4f73df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e160765c-bd85-4ff8-9bb9-c202dfb93ebd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e40047-28c9-4a49-a6b6-15a46644b319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ee8cb4-bcc9-4d51-b945-6885683c9f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b59e17-fa76-4f02-9e20-b40e820d01b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3eb7edf-779f-4cc1-9ee9-6efc7800d4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9c2b5c-8ce4-419b-b589-adafa9e215ab",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c10185-caba-4127-a3be-2f3ee9c0096e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec4d951-747e-4469-9d52-f6799bbafa5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd90c1a-825c-4990-a420-3e348c6e618f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25d9007b-399d-49a4-b541-ab46d027fb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1dd494e-40ee-4eac-8cb7-a4db763da48f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2581697d-615e-4ef3-aff3-0623687cd789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e5f229-515c-41f9-ba31-68990b76af3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16370ca6-5104-4491-a2d9-97b298e49a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59a67404-a170-47d2-a1b6-1bdc9429667b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5d3bd4-e5a0-4f94-b1d8-d9ad805b2142",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c57a830-e06a-4db3-bc76-c9663ce325e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcba5ef2-b0c4-4f3b-b1bb-15eb020c97ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd67035f-2a6e-48c4-925d-31e4955b0970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a401c3ae-667f-4763-836d-0c5e41c08d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50db59c-185c-4fd8-bcdd-acdf90a6673b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e27112-8235-4125-a40c-ec66916ca17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc4cf7c-81aa-4cf0-9c7d-ac1c5059b506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ebb29d-4423-4cef-824e-3c8b1f536ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb5e04cb-4e9b-428d-87b3-8d94cbf12839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a3cf96-161f-4e7f-8af6-cc8d7ace6c25",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44667769-51ac-4a79-8b0a-4d5d93c357d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c99fc36d-56b9-4964-8184-549a89455516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fa6e7b-1ecc-4b22-aa5c-ca9d403daab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aca69308-4b51-4d9b-87d6-615f3cd267b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af98c6c-f3bc-45da-919d-133a53fe388b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3ce667-39e3-43b9-bd3a-8309c173e7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0762f43-96e5-4ada-a184-297d6fa555d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01d558c-fc9d-4906-8779-d9ec05d9c1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a7d3548-d3a9-4891-8e70-ab533d5fcdeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d7bf45-7be0-49e1-88f0-631e76542ff6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3d6899-5f0d-4eeb-8f91-2eb4b67f5ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3748c66-2d9d-40e4-86ab-f8edcfe2fd3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ad765c-8346-4208-b2ce-c964ca50bc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dc7e9b5-0c4f-4378-a220-7ad93210ab22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edd2359-8a25-4f2d-bd49-25945de602c2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3a91f8-aaf7-41da-93be-1c78a9dd4f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83cda47-d718-41fb-a899-a4e2fb488935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29538018-ccd6-4a5b-94c4-f6218d166f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc526f04-a32e-4d3b-913f-8d4cb4b0c78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4ded62-15ac-4963-b458-8b624ab99356",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801e9def-a909-4b73-8e4e-380839f44967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321f9185-829b-4b6d-83fc-c6eec29cc090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5674d89-ab29-4091-80eb-daf623918d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1175eb99-203d-4967-99cd-d3cc00e4e817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6193abe2-e294-44b3-b76e-919e43338920",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eeb2da5-b698-4650-833b-4c4d17489a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2197260-035d-439f-95f0-f8f0ca72782a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc376a5-e7b1-479f-9772-51bb4efdb8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d528610-d274-492e-b0fe-1d65e85500ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b9272a-b13d-45d0-8138-30e20a189212",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68799860-2f0d-4f79-8df3-1d46995ebf19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ff6f66-f261-4b89-bbe6-b6cf478990f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1dd22cc-a437-462f-9556-eef634799a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98e69c73-3cd9-48f3-92d4-601840454894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056cb81d-4780-48d4-82c8-644fe8e5aea2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50c4b79-9e6d-412d-8bae-cdad2fa274de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8978998a-9b09-4dd2-b146-d665b8095a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a32ff7-24df-402d-ae4c-c08019ad724e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a06557e-5caf-4dae-be6c-340d47459ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e0d880-40a2-47eb-ab4c-6fb30a16dfc7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1420ca-2006-44d2-8415-2cd917f332af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba70297e-5c8d-43b1-b6e3-29b0d88765ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ce210c-924e-4517-9e44-e331fbd09972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e040d2a-2bf6-410f-9891-6139161aad13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796389ed-fbdc-45c3-95d3-7ab537646d3d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d518a72f-4b14-477b-891c-14e8af7f863c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21590564-64ce-4836-b59d-b455ad18111d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ad5933-4505-4a22-8615-4959cf5772f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1b3ce3-1a2b-42c7-be54-e020d5ecbf08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d111b1a-25ac-4bf9-b228-9e5cd8ceab7c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d510f40-2a52-4528-ba76-09fcdc9819ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec902c2-1f81-4e07-862b-43c9489f676e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11aa966a-26d3-4603-832e-9dd318f1a8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9a2a67a-81bb-42fc-b47e-7b3eaf437476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231a38da-89b3-438e-9cac-64d7c111fe07",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fc0842-c8d1-45f4-b663-4d4ed901b6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800986fa-6250-482d-a076-8ebedbe1ee06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d740297c-cbb1-4e4e-942f-97491a050390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "53e8fde7-8a89-4e56-8b98-f71ab9eb98ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a05789f-7b0b-4ee5-aa46-0331e9d0eb91",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "466119e2-11e0-4359-90c1-7145b4e6bfb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d64e5ac-cf10-445f-869c-e2bc1f231210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadfa36c-2c20-4537-b31e-95ba35efa09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "54da5871-5f70-4c48-9a51-1c004fb341a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a12d65-eaa3-4a9f-988b-722808ee5a24",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7abf042-6ef1-4f1a-b95a-e45d599bef09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a78a21-c282-4319-b7ab-a25bc9ae8274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02892515-2263-428f-a543-94b33727bf79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "088a3c18-5f9b-4d8b-96b9-eadefe4574ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bdaddb1-db31-4aed-b1e9-66393adec8f1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d7d73d-36cd-4c85-8722-b9297a49f111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa5fb70-0b78-4644-8796-33b2d30a1611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed7e421-0343-45cf-a6f4-b139f802b593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcba7e9e-8cf6-446a-9b9a-b3c102ce557e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2a783b-98c2-46c1-90f4-4be2c2d073bf",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4ad5d3-d07d-465f-9adf-3f857f6955fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fae6963-ff90-49c9-b77c-b7d96ca97297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02782b8d-f14b-4dc4-8d36-73057b0ec94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9f6c18-d466-4788-aaca-00ecf6745073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c38a08-f8ad-4f40-b3a4-29d42e483bee",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46baa85-9459-4acd-87fb-1d66f4326c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210a0229-2e92-403a-9898-54a92243fd0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22387d9-7ec0-4270-8450-c6c3c45c6933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18b84f89-edf6-4768-986e-521398591c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d02a73f-5909-4d46-838a-07c26c48c208",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aea494b-4bd6-4e88-b014-d8b29111322e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8480f578-5519-470a-9ae6-c016e3be077a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be404b7-ac28-4cb9-a1ea-a008ac4fd7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "86d56535-5f27-4fa4-b511-59b537f15f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efa0e0b-42b2-4af4-87ff-64e4b45566e1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e228b2a-b221-4dc5-8bbd-cad3b39f9a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30050e78-9716-4c8b-a600-c20173d60d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf2a35e-687d-43d8-939c-1b424841886e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6a7a2a-91bd-4faf-858b-519d3f9d34fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a4b8a8-065d-4b52-a672-91395de97e6a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf99acf-aefd-4699-b02b-549e2ebaf6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4acf489f-5053-4e47-ad04-d6f6b8298c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e889a02-b32e-48f3-8972-34452c28c2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60439989-1345-442a-8b22-f1326d50d81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2401599d-b472-4fe4-9676-3b71d10c5c81",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "297d74d4-777d-44ce-af41-33c6e5e96fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0455acc-8a1e-4384-873f-75c1f2dc6488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f982c84d-9a6c-4207-8253-2024226a1be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf68afa7-8750-43b9-a4e0-e965dc46f9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cbb11e8-e2c0-40ff-b828-0678421de123",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be69f7d-15bb-4e2e-adb6-d79aec2e3dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb553b94-2c5e-4e1d-a508-ef539dbde749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd15268-6da5-4ac0-b3ce-7a661c32fc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91e31157-1a5d-4f8f-8285-12edd938d9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3861ebd-c3a9-4d06-a7fe-74a21970a610",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306d196c-150b-4ce4-b68a-52449d7fe995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c470ec2a-9850-4684-be2f-1d5e3218b67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d4a9f0-90cb-49ff-86c8-737b97140fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2f904aa7-91ea-47d1-9682-169d1db5b031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e9990a-6d87-4f7b-b6a8-e0e8602b7d41",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd76fd0-838e-468e-9c6d-02cee643f344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a5385b8-f862-4bed-a3ac-a7505542541f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab1360f-297f-4957-a32d-7792f7fd84b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b846f639-645c-48ce-a08a-7636c233bce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cff671b-eca5-48b2-bde5-e29b1f14d987",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eff187f-7186-4831-83ac-b4bc38fb64a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f2bffb-8945-4b28-842f-4cd882447ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d576b466-b1ff-41b6-8ed8-e0c0db878d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd3a1b22-71e9-4702-bcb7-e64f9a484cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564fe44d-79a2-46bc-857f-2e4641bf9cda",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1021cee5-ebf7-4d3a-bff5-a415710f023a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad529e3-14b4-470c-a11f-456afedaf2d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ef1237-46e2-4952-8fed-b9f32f748ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "510e7fee-cd33-4429-8854-de34e2560fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a589ddc1-1258-4362-9efe-a4500d4530a0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c49c365-026b-4bc2-ab95-891f46a4f854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de784105-baf4-497a-bc9e-4b718933fb51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71c696e-f13e-49d2-8d69-1721c53a610d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c655ab3b-4f3e-4a4d-8783-1f500bef044f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c844e015-7b8e-4829-a5c2-fa636230922c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c98d0c-8d3d-43c9-aceb-3b129fadb752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a17c3b-8f13-41a9-8a63-3b70cf785a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f2f316-8932-4261-a25c-18ae291f18d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "554538d1-1995-49d6-bacf-8cebf20e8afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5038cbe6-1557-474d-9fb9-8efb58a507f1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed83a9a-5ddd-452f-a5ac-d06aed69e560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08b2bc6-6762-4ecc-8b6c-19952e9f03b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654a5890-be68-40ee-9f61-607181d10253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "47db9337-9bad-43bc-abc6-4a8527a3a6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf2e7c2-9216-42ff-be86-ffade6d072f1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab278f80-5404-40bb-af45-6e18e5bd6e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fae0f1e-aaf8-407d-b011-adddf5578ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c106c4-11c2-461d-9c00-a820f49c7248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf9a410-94f8-4c64-8ac8-30ddf746aacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8a93b7-4407-4c68-a408-ad2d50c0b4ff",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303a8c2d-d605-4629-9754-6913b0e6b42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14156722-80e7-4d67-b77b-7475dcb0e436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa2a27c-285c-4cbf-8c84-fadbe1eb8b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0725f04a-f06c-4e58-b732-6454c18e91f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11b897a-3dd8-4861-995d-997092d8208f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7776c3da-6860-4640-9f0b-4bab42385d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77eb2a15-91a1-4228-9d82-2b7651e037dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995dbc32-e887-40c7-927e-982b2ed7cadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e52006e-0425-4da9-8d9c-03bed9aa6ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7506de83-5b08-412b-aded-35eab4fb09aa",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b376fd5-717f-41b6-b662-4af94bc86005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f66f562d-7d65-416a-83f3-c14f1e4ac4a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7687b9-3c50-41d3-b8a9-f7abe6bdb730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5696ee0d-777a-478b-84e3-d1f4b30ad1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1640639e-8761-4430-945e-0357a8c17fcb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4779480e-6667-4c6f-bc33-98df359a90a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7462350-bd49-4a19-86ce-dfa6256c29f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4c7e8f-6e23-4ced-a650-2a0dca63ad75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4efefdc3-0712-42aa-a508-c5d725eaf1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2478d08-6489-4afa-9fa0-21f1c9242252",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0658015-2584-4b25-af20-924dd43fd267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8cdc62-f7d8-4370-91e5-dd47bd410594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae891930-a459-4229-8444-eaedd7002615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "532755bd-fe86-41b3-8c41-299f3e2a185b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a274b08b-60fa-4327-ae0c-c7339e854e38",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ab5d9e-d502-43ef-8210-bdc9e3a9c635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65c9b07-7234-4922-a2ca-fc503eb2e51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4388f6d-0de0-4be5-83ac-e1c822076e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d7bccf7-e0a9-4301-83ac-687a071201ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa255015-4733-4744-b853-47e2dbab2313",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b26f32-4d92-488d-94f6-8bf7f108e90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2492dc58-bfb5-44f9-9f08-119dc2e6a5e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b60f2d4-f936-4c70-8711-d74821d7273e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c662dd9c-67d7-459f-964c-b7f5947a5a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a568a8-04b7-4027-8d96-6f99ecf914c3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39bc9c96-749b-4b8c-932c-bd391eb2407f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19e0b9d-2657-40fc-a4bc-9f04ef66b28e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90211ca-a8d9-4229-ab73-7c0a437a2096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc1f2d1e-aca8-4e5a-91cd-88fb2d28ed0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfd8692-d057-45d6-ad85-1c39913d9099",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c884f6e-c185-45c8-a41c-23895db5d747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799cbeb0-39ff-469d-90ff-accf373d5fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c365b6a-13c2-4709-a9b1-148318127e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e24bbc3-8c94-4c74-aa51-f6a07e8a7d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2ab35a-d0f3-4497-ba2c-b82946e1fc81",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42536bb-fd09-47a6-8221-516d3b8a5f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162bc9de-b5f7-4fa6-a3f2-ffcc6ae4c888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bd2960-1cf2-4a22-989e-4cd12c9f5837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cce10be-60a7-40aa-ba1c-2ab6729c87ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1356e60-1fc3-47b4-a342-d1cad4de01bb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d63625d-5fe4-44ed-9a62-5e5e4d886500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9533b42-ee34-44cb-82ff-15c1389176a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22062be-4410-45dd-b855-4f6ff0f035d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e1ce162-56b8-4fbe-a867-668efd308368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5bf524c-6c40-4003-9a2f-6871bb63544d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619634da-41c5-44c7-bb8d-64533b3ebcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1284875e-11ec-4d45-ac5c-ab929325ffc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e508b6-2b91-4a2a-9e19-fc260362347f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "026f1f2e-ded6-4a0a-bb4b-906e6a7139b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b4583f-4d8d-4cb8-b798-ac59d1c3cd1e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d4e72e-2866-4acf-bd42-7388e392243e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13fdcaef-e0c6-411a-b101-8c6ddfda3f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0729c7c0-f898-4b91-acf2-b0a86163e93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a791b407-2605-4acc-83ae-2a14067fa495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb27f19e-e35d-46c4-89e1-1bced6de0ad2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec51630-f794-48b2-9efa-fd3a4c005aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b014b039-ed54-4c29-9c5d-978730932bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecc7661-1278-49bc-9c66-a23e2a25e2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "96876548-2acf-49b2-83de-9b7194063df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d822ae7-3387-4659-aff5-b14926fd4b13",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c472f7ac-9ac0-4c7d-a0b4-80252c314764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da980a8b-51bb-4349-a1f8-c19fb1fde322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2476c992-e13d-4230-9d7f-585dd9be30a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "746d3a91-5b59-48fa-86fa-6c2244328bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5de2dbd-bae6-4104-80a4-87e626c643f9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc194f04-9782-4903-b54f-38884ced5eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c74a6f-4ee4-4e61-a1fd-dc0548429d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9034a4f-c26f-4b73-a819-93b482a762b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "78faa46b-ea14-4c12-8640-9b000e0f337c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58707877-0ee3-487e-aa8e-466333f4636b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452056a1-31d8-4d3f-81da-47b0389556d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5dbd79c-7d25-40ef-bf6e-64144e6b6d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3bbd269-f51a-408e-abe6-74bbf145ce75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8dce396-3e4a-4b12-92dd-3e7debaa953d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b50dd81-7c3f-4a09-9a10-d540d0ec5b18",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee0b4f8-e41e-47ae-8fb2-cdbf343bba37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e17b3fdf-6be2-459f-b59c-7eecdfe3e648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805d6144-be55-4d71-b47d-8635ed558731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "155a2b2a-b024-433b-adc4-a59abb8eebe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fded2a0-2e5d-48ba-b646-e7ab20a3fd86",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb55339-3458-4f21-b851-5465d5ad2897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2317a5d3-7600-4880-89b7-44012df92e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f37a3c1-e84a-40d4-bc26-d254e9e10f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3970a1-2890-43f0-ab81-0b668726c098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7caae927-a6fe-4164-b339-54cd3d0807cc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff41102-5b7f-42d9-9dca-b041d6bbdc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "298e63b1-5a5f-4edc-a211-9c37a3b4bce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7323148-9c36-4ce1-89e8-1091ea213ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a5404d1-d1c0-4126-bbe2-a5f122e9f570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4234a0-3aa6-42c8-adf3-ce89a726be32",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a293583b-c1e0-4d46-9a21-b52d2e533db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60525094-57dd-4a74-a93f-050c14c761cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac0c08d-bd9a-4ffb-902b-3f2efa646d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a29446fe-6934-4b1a-92e7-91a8c6490b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9c6199-34f9-479f-9f06-c4c762846bde",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3697c572-0977-4468-9565-d1b7a1c656a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2275a4b4-6424-45f6-9b9b-e614382b59b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d41e8d4-e0cf-4c36-9a74-129a3b43e710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67b1b59c-d9eb-4d6b-ad0a-7eb5a6a85c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63486766-599d-4cba-bb67-caff318dadd5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bf6495-0e4d-441b-9d0c-6a45aded67dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea146b1e-3829-4903-8a91-d0f9446656ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3765aa5-9fa3-446a-b52d-1a2229f137d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "619eeafb-d55d-44bf-acae-31278b62c6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abd70c8-6993-41a8-9a5b-b327ac8933f3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71f3f8a-3f23-47bf-9ccc-cf3abd851124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51691620-44c5-45ac-932c-7b833194664b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208031ac-581f-4a1f-94a5-6ad88d89e959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "747d16cb-9a49-431f-8fb9-9938bb7915b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5abc69e-119f-4573-8895-39a1fa19e5ea",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31041fb-41f5-4de4-a550-a2073cf2ac62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eaa30a8-1518-41b5-9838-d17f80400a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5447e49-beba-45a2-82ea-ddb1bd1b9e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "211d0dbb-7aca-4a8b-aa5b-b5114a0f054c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d604f8a-a2aa-4800-8354-07fc35519309",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974e0480-d593-483e-b26e-9fc44eb1e4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5686a094-5d75-47b6-8e76-888f85e4089c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ccb396-e90e-4d30-b0e4-e26471d995c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "924ef504-ef40-4910-af6d-8a2472d9f563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd39f8c5-faef-4202-a570-91c8b172541c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c958150-f379-4e19-aa43-498289e765a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bcd1adc-056d-41b1-9da6-3e7a16582f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0aa0e6-7cba-40cd-8ec3-8c59c0cb381a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f110c35f-a0f1-4a9d-8ce3-bcc5769da68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e375da51-f1d6-4ab0-a18d-61228494ef50",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0300e544-aa4e-4cb8-9dab-d0709d94e65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae2762f-7c12-444b-8a65-75be8df5d8a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5869c878-1bfc-4138-b702-88a1e976947f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bea3507b-4368-416c-82d9-d37907f72fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b3044b-4bbb-43fb-8cef-c37f0dbae36b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661343be-ae98-4bd5-ab14-a5051dd68a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccab16fe-1643-49c0-bead-dfea70cee103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7888fe59-5425-403c-8055-d0d88bf2f02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be32eb29-affd-4590-a41d-a1d3f1125e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f39d73-1779-4f29-b202-9350a82d58c5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd65248d-aabb-4144-b366-fd90d75d6193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6847eeab-7d6d-4737-901c-4c058b14df14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8023964-4b52-4d63-bd23-27441cfbdbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07685c66-3d39-4da8-86bd-999aeab9cb10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c567465b-c660-4b18-b9b0-6656c83b5e25",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea31440-da11-4b72-bdb2-f19fbfaceae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d85492f9-f070-4d7c-839e-e560d678bd53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a2941f-2c7b-478f-8f96-bd1fd939e8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "699d672d-7b3e-45c5-a6f9-9a63f4f46a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f7a5d3-3553-49a2-b58b-06d19e407b49",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69374696-a446-420c-b7d4-ecd85abe1eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b360ee1e-3a85-4535-897c-c56321a8fa26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ec52f0-c0fe-4b6c-8d5f-1d0dfc01a99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5560547f-ed85-43e7-a4cf-43e8b243325a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d209d68-166f-4b35-92b5-3cfc969d9d30",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81cf35c-cbd0-41bf-8936-e3d6bb60c562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "771a833a-2c88-4197-855d-9cb4a263febf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec630a5-831e-4036-ad38-e95835d28caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "13ab471e-7156-42ee-982c-e362bbeffed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd717b0-b86b-49b2-a2ad-93885936fa15",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674454b0-3aa4-47cf-a0dd-b2c52a8abcb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340361eb-ad63-4123-9d68-bafad71eb6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1ed590-81c2-410a-bc0e-f81e0112f58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f47d401-d082-4fa1-ae4d-79cfff386dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7336d95-b19a-41e3-a0ac-12e550ec76e6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3d452e-e1f2-46f2-b50d-9519e7829574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a91beb-66da-4db3-a4b9-20086ca681f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c1cce3-5423-4cf6-a129-0a00c9581bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d349ae-4dc5-4a7a-ba82-b28d62546315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de2252e-6b2a-4d4a-80e4-d7ba486b9c31",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8323fb40-e23c-420e-9f25-da5b20d9b34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7faf5a9c-cb6a-4624-b70d-4d4f91faffd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be64d53-22d2-48ef-a9b9-e1930839c859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7035e97-5390-4c7d-b512-e74c125b47c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57b977a-03d0-49d9-9f9e-0276a0b8c1fc",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772e2fdb-14e6-4ddd-a8f2-3f191d27f40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893cb39e-55cd-4040-a5ad-a64d1d5eb9f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c82ceb-1178-4ddb-8d35-9e5d4751bc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "699269a7-7936-412c-bd4d-e1cb8b3a09c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25242030-226d-481b-96f6-6af522fe1eea",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4301d199-1522-4b1a-a363-68b062fa1e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9adc6e-1a07-4976-9a41-145b5f5c883a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccb4f1a-88ec-4000-b37d-d52484952b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92699b6d-1470-451e-8eed-b41dfae8c656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa45177-622e-49aa-a3ad-4d0fc4e133bd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21097f6-7e37-415e-bcb0-9d7800545e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e6fb46-695d-42f7-ad99-4495c4ebd535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c58b83-860e-4c1d-bff1-20150fec64bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce9c575-e186-4207-818b-417fdad990b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e282c1-6dfe-4950-bd0b-76b41e590138",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136a2f6c-95c2-4bbd-a9f2-863839fcafe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a662001-3119-481a-8984-c0c92cda2d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246fc30e-fdf8-4ec0-90bb-c912182453f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ae22d9-c191-4b6e-ab0b-6c54a3e10088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc4d449-a244-41d8-a814-f7a164ab337a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee403690-7b08-4bba-a850-059bf059a404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "527c458d-a563-42c7-a113-9919108bee71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc126233-5bca-494f-9459-45b4d7c7fa1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed7fc4b-a22b-4d3f-a1fa-70bcc1c46bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33179c8-feec-4faa-9282-67bc3cbdec1d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13711558-7edb-4388-82c9-3b90e999695b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205f7fed-704b-46f4-a296-50c966d0bcc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f86c593-d874-4ecb-b606-7149ca8d7073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc1cbbc-6173-4717-b4d3-0ef09dd4a666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e420ac-af23-48c0-a431-1669b195bb02",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8b8daa-ee5d-455e-b438-160741a5e265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76dec388-3d20-4c76-aa9f-89679b7d84e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3371618-c9a0-4a6f-b33c-3cd95c05b85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33dae02b-3853-4056-a0ed-97feb6e32759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d553dc8-2dd1-4d5a-b2fb-cea0fcc34c14",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7655745-0375-4a31-b2ab-5c3b57d6af06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a5f1e5d-0a80-4bd2-bb5b-2c9591566b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df1f8e4-9da2-4bcb-90e4-f6c2c13c9d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1de5b1e5-a1f4-485c-af86-eda203cdbf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e072cc58-06fa-4cb6-bc22-9a7254f2b8fd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd823cbc-a66e-4549-8c98-342d50532507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f8d42c-c056-4dab-9bc1-af1725dddfa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06464c03-aed6-4466-b95f-31d31bfb47da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "487c1c26-55b6-479a-aace-8ff2929d7bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e3938b-67e9-4ef9-b4e9-893cca53f9c4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ea30f6-341b-40c4-8c92-3402398493be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f364d9-89a7-444c-aae6-ee0a142c7d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e6c6da-4984-487f-bfd6-9ec86d5b68d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "18e142bc-a759-4bda-a1de-fc7bbeeafbc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5bb9b4-f113-48f0-a8bf-74192b96d9c2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4454252c-ab76-4270-87a8-5979508e2a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55804adf-2806-4c89-ac20-902b52f1e5cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69919675-3c63-4113-8a0a-310343b09634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9da05b5-643c-4677-b777-56b731df420a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700e079e-df05-4e3d-a1e0-79baeb4dcc97",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5135cc38-3cb1-40c1-8b90-a5c7380d0662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09272fb6-865e-4612-8a6c-7cd1e5a407d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466e5b17-264a-47b7-88d8-82370d094905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "78d7d926-f6ed-4ff1-886a-8b31c680d910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee3e413-0ed5-4852-86d0-f726bc68af8e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2297d05d-0b7a-4987-a9f5-bf8b1d138a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1c50bf-a88c-43f6-898b-f848ef15dc4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f986137a-c3ce-4129-a113-2a8f79846ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b0a1a0e-3ea8-42f0-8a3d-fc8aff88a14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fa099f-9596-4346-9432-4379f030def2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3adecc0-b5a7-41cc-8570-b179be9dbd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "819fdfc5-7d30-4af9-9a26-277974624a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29e133c-c7ec-418b-9058-0bed5e7a331e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a661bbea-3742-4bea-bf0d-2492a056e93f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a9a65785-9c15-43a3-badc-05e50447da11",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "037db041-b664-4988-a78a-2a9201180351",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4cf408-ac50-4b40-87dc-ed357b51b852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f3f6ec9-2951-461c-9759-f57085f850be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7fffe1-01da-4408-b25d-e5884c278458",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "cc84b0e1-aa0f-4ca0-9e8b-c774230c424c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d569bdef-718b-4186-a9af-58ed5996973d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48c0d17-e0f6-4a6c-9bb0-0236cfedf557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc4484af-398a-435b-bd3a-f7a63da6a5f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5ec4fb-2122-42f2-8ff1-d8784ea1af25",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "5318b45e-5b90-4fa7-b3ad-1785fa4381e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f24e4aa5-e098-41e0-8b05-89e077d3b07f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6e21f18-5013-4795-b976-68d379bde2e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0668dcb4-647b-4058-b815-7b34172b8b31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7a06f1d-b113-4362-a40d-21a28951e844"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4dcc1dd2-d254-4de6-b498-94fa45060042",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c886e751-f42c-400d-bc37-6e499b033a24"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "50001dd3-44bc-4d9b-92e4-cccfae4c3563",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6f004e86-63dd-4cb2-a027-49fe6ecb1a85"
                }
              }
            ]
          },
          {
            "id": "fa407f83-87c2-4aab-905a-74a14e9d1ac7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "62e82101-7383-46fc-9496-36211e2dc28b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85afbc9a-0339-435d-a3f9-9a336acad027",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e5b16411-03ae-4f35-8284-29091f12d052"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "515379ce-3044-423c-8420-e1c628016daf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "23ad1774-1168-4bfb-be13-e022932bef96"
                    }
                  }
                ]
              },
              {
                "id": "530f1992-62db-47f8-ac76-a5192c447057",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97c438ae-c0b9-4c6b-9727-6d716e6e14fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "695a934a-ef86-47aa-8db8-2960a22e51d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccbcded7-4bc4-4ab9-9a70-f51bedb693b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "710cef45-6b30-48ba-b5a4-6f921c91d71d"
                    }
                  }
                ]
              },
              {
                "id": "5656e210-ea70-4afe-8c48-288b7b050077",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4836da88-3e3e-4691-958e-2620db196f59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03f27e77-e6ca-4175-b46a-b5d473299330"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2881bc56-3448-48bd-b4c3-7428b7254bf7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cf0e4aa7-c15b-4c46-b0dc-28cff6319a1d"
                    }
                  }
                ]
              },
              {
                "id": "68c06b58-1565-4e9d-a649-db8472fa6cb0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56a9154c-efd4-4da4-aa62-42bc7ad64b3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71901168-9a05-4be2-a0a0-3a8973e60d5d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0d9639b-93ec-4eba-83a3-78b567c69718",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ed989263-d115-492d-b09d-aa722de806c8"
                    }
                  }
                ]
              },
              {
                "id": "3c68f628-ea2e-4a00-9857-164cd5cb4c74",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8225a71f-4ff4-4cf3-9cbc-526e769d509d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63f79ded-c6b2-4f8b-94a2-a9ed1183804f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eae47cc9-2f92-4004-945c-88f9d9b3ee1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "acf10e10-58fd-468e-8fda-fe9a950c2509"
                    }
                  }
                ]
              },
              {
                "id": "d82696d7-e9af-40eb-8852-9b61a63b067d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "15bdbfda-82c0-4768-97ad-dcf7c27ab4c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a714c70-649b-4d30-8854-1c99d860ba58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0356814b-ce8e-4b1c-bf35-bd467dbc28b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7768c52c-bcf1-4a9d-83fc-98fec15287a5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aab24e9f-cac6-4b4d-9ed6-56f5ea300a0c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7b43c3b8-7a29-4e9a-aa94-b5a457837be1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9c12545e-2c6d-4f0e-9973-0d9c5813b562",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a2eac463-887c-4503-b896-4c8f1e289f2d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c604ccf-5e3c-4e97-b1ff-11b41e24d23f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "20b0a617-70b4-4720-8715-3f0491f5394c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7952c70-5852-4f85-abe4-d257ab9008fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "077c589d-00e4-49fc-ba16-878e5619cb70"
            }
          }
        ]
      },
      {
        "id": "6784b5ef-27e3-4524-a802-63b6cb9bdf8b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5a1a1b64-ce19-4c8b-b553-fabdbfe74bff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "656e7133-fb9b-4ce0-87e2-5f87eb6e2fd4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be2f62de-da9f-47ae-a626-952b774c422f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e84465-28eb-41ce-8f05-266f5a5f233c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e77cd31-f37c-409e-b9a9-46904c9a7434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2507decd-23c2-41de-a9a1-e6aa32acdd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ade596d5-5288-4feb-86b9-ffc73f7a3231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01ff907-c050-4d1b-abfe-3c95a19ee98c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4a1d38-e541-418d-8abf-ba9b03266ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af9597c6-95fa-40fa-b2f6-2eb22b9e8ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9551bb68-f0b3-41b3-97e0-43aad2ca86a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "55dcbc19-b40a-47c3-b7cc-295a98f0fc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d679af-3823-4e5a-bbfd-ec6e4a47328b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78500179-9862-4d1a-b7ee-f947b83574b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b121f7-5674-430c-9573-9bbaa8303818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac27783d-cc48-46ad-b415-e7a46f8a8f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bac115b-3660-471f-b118-32336801272d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51718a3-2078-4f92-8575-bdf071c91afc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09797312-b55c-4430-bbb8-bc7e4a7dae86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "917b6313-bcbb-4357-b10b-0954bc35f775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7baaabce-d7f8-4e65-bc43-5efd8f4e3dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2271f89-06f4-40a1-af61-5000c96088ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4db28a-1814-4580-84f7-09493bbf4413",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8490d465-41db-43d8-8aa6-1637f0023f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1407462f-4b8c-4561-a389-404ad4e4f1e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20618576-d546-4b96-907d-43ad7e830a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7d7fe0-2e50-4b8a-8ea6-9fbeda75796b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b041b5-9a03-439e-ad85-fe5b5871e146",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e883fb3c-edef-4081-9797-3537d4eed7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6846ad1d-0f4b-4ee6-af85-c8e272b00293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73424f7f-82cf-4cc7-af67-20d642dc47e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b220df56-2710-439d-937e-df1507458399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e554393-cdba-4412-bd0c-f6d869b3fd0f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4289c2-8f8e-404f-b8fd-927f481c7b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c848c3-ab92-4f30-aa56-b5de705dafba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5885617b-aef7-4328-937d-279ba7e6c9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ba5474-eca5-4845-9ebe-64080b59b4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d92170-378c-4f0a-aa32-493caca74dc0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1738e500-01dc-490b-9d2d-367f33d69433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d095a388-c0ef-4acd-9de1-7e101934f2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ebe7df-5f0e-46fa-b4ab-a878af9f2dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "475cd43c-d5ac-4df6-9d15-0f3b1da9d995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b561032f-b2c4-4c82-bfa0-09d1bb5b9b44",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86341fa7-e301-48b7-abcc-44a1fa8c4bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9020966d-7cfd-467f-bbc6-fc04d5de1ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5106b0e-20d0-4979-8769-f7e3ca12e4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd43088a-fd83-49c1-85ba-eee84ecb4549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fbc35a-45bb-483f-aad7-42b7fbfde169",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efcbef4-a316-4dc3-8b6b-cfd3fb93919c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d45aad9-12cd-49e9-9d9c-b99dfc6fa218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48758d77-52b4-4a07-9341-92923103002f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f06ca8b5-1e74-4694-9027-e1410676472c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504df169-0e87-42af-8ed0-07d0d95a989c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef8898f-27bb-41ad-8cf6-4b1049de7ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7532455-157b-4525-875b-899a6a295d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6311f2b-4d3f-423f-a779-0e7432a074a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "69a0811e-fdfb-4a4a-b01a-96dcc04fbd75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ffdb33-c7ea-43d0-8d44-20fdb0856f7e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef59cc0e-b03f-431f-94d7-d3d2ccd5e13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac7746e5-f6a4-4fff-8f57-4ebc3a0227a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd3aaad-4aa1-4769-b71c-6b680ddaac9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e2f39b-49c1-4126-bd46-39a6e0f73e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c382ff55-73eb-403a-8264-5cd644bb9463",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdae7af-6c5c-4179-bf8d-ab97f177c69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9e3c87-3103-4f94-a40e-15608e1f0825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c925eb96-b3ce-4781-be70-02525fea84f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c92706-4866-4ce1-874b-13003d906e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6c8f4a-0689-4f06-8048-bedcc2c6d061",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438a7a51-eb41-4d62-965a-9d55e29aed38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f92892-137e-4ff9-b510-6f2b263ba562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0ac655-5053-4f68-9b62-ba34679b963e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "792d2047-ad00-4cd5-b974-22fcbf631c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd087bf-4df5-45b6-bf1a-563400d24cb3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b3d433-d1e3-47b9-985a-95ce6b10c496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b733d74-3798-4f9d-837a-94d4eed962ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7df6e0b-bff0-4282-b72c-3b9b5ad2fd13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d79353-2584-4595-a0f6-13280de7d676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44351118-b371-474e-bc8e-4b8781292f37",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2cc4bcc-b4a3-4e4e-b824-a15377537a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5927883c-c349-4c1b-9dae-0515e8e1513b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2b12c8-75bd-46ea-8139-484681da1af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2faf8267-1cd5-4dfc-9ec9-79f1dca31ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c30c5d0-7a2d-4e94-bfb6-feb03181432f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "800bc897-b896-4689-85cb-a3ec10c3a0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eee4843-998f-4c97-b14f-ede6fdeb5681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62bfb1d-ec65-4fdb-977b-c323463dbefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "848af80f-e383-4bbc-a30b-c4c99e8bb427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb54558-0f29-4d8d-b80c-356d0a08d5ee",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4885f0a-5e14-4b1f-9bf5-8a3c6917aaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf8d7ce-bdd1-434b-b9e0-4fc3464e41ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460a37ce-3fcc-46ee-a665-7b3d3b60d6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f418d0b-17b4-4e96-9455-03a3711265da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bff80d-ad56-4027-827e-094b1cef8280",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1662a65d-5d6b-4db9-a071-2869a2aa353d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f0574d-2c40-4f0c-b360-59c3c47f272e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f568cf04-2a93-4321-95c0-0051414846c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45274f96-11df-4626-9d22-d0a94a15763b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb840012-3080-47d9-8c4a-ef9268a0b3f4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b2611d-9730-455d-aa60-5c7cd27b177e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59378eec-11a9-4989-9cc0-c22d29d6d64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21835104-227c-4524-aa4c-ab57163b0cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15222253-cd2c-42fd-9205-acb937668a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdef7693-8924-421a-8920-9882b658f943",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d087ef-54ff-459e-975d-abf3164ee55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b6c990-74d2-4b07-bc21-0d8aeec4e5b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd3ce00-881a-406d-923e-d1c56d9a4185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "832b2a9b-71b3-4007-b6c7-82ae5a228ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11414656-4e6f-41dd-ae76-7f221e542866",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ed91a5-4e4e-4583-b811-8ab6a5a3200e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40bf7696-7d9e-4543-b9c2-8238151fd436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27301aad-73cc-47d4-b6c9-db84f8bcf993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02329795-95f6-4083-8a5f-1b450c0dd662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9ac36c-497d-41cd-a10a-57aa84223a33",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7861d663-6365-4832-a5d8-a87ae0323ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f047ea7b-d362-45e8-97f3-a6766619db63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df69f6c-1d61-4b0e-87f9-7a703befca19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a627fc7c-6742-4ca1-8009-d1d26c98ac76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2627f73e-f1d6-4ad4-87cb-ee225f3b6a85",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d65f2e3-2bed-436b-adf0-a153508464a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9714f83d-11a1-4950-a52c-9982a1a4fa79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055fd863-d64a-4d65-b044-c6842e9a79a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c55ee14-45a5-42b0-837e-2532c7b046c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93e2965-8f74-4d15-937e-7fd9c3824ae8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ec81c1-0952-488b-8c76-b45a2c93972e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840da057-f89c-493b-8492-5ef101a48a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cebbac1-3fc1-44e8-8c2a-aec5bfed2f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc3edb89-5440-420b-8143-e56e6ef70cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd1d1d9-7567-489a-a38d-662ad8af7f49",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ffa2c7-aa48-41bb-93e0-60e87c130b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77398a2f-be03-4e9a-825d-a91133f9e4a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e27012-a898-44c5-99aa-4b2fdd79d17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "813d5aa6-98e0-44a8-b894-0cf37256655d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fa56b3-8b40-4f2c-846c-3fbc732892b4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1873bfb2-6b52-441a-b7fe-e8a626fa09b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8a6e73-fbc3-42c0-8101-60be6a7079e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc24ffc-4c16-408b-8e56-0edf761c2b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3311eb7f-f669-4f87-baf5-717e900c9c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236d4a16-c12e-4eb4-9d1f-5d60cd53c384",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97932ba4-86c4-457f-9402-0b587a9666f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721a1b33-8813-408c-bbce-d271d232f45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4299ac-491f-45be-94d6-f570dbf75ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04d4e4a4-6e05-4db4-92ac-11b11539a46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3434fc-7fe1-4c2c-a9f7-8633791e0729",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3d1808-3838-4bcb-af9b-f57c4011b55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5b3af9-befe-474a-8bd7-248db89b47b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40cf4d90-8f42-48bc-919e-5013f36fa8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0897caac-4f46-4449-b21b-185843acb412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b389524-8326-4b45-9e92-f697fdb2b74b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7b1393-0bf9-40f9-8866-320411787976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac6ee002-58d9-4524-ad2f-ba7bc2fae421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c1ac1b-18a4-409d-9bca-e03e34d62a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "132e9c28-d095-4ecf-951d-ea7b0c0ab9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f30a484-2699-4cbf-a504-e132dd65efc1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1395e99-fe57-4aab-b192-6d04a1f4dc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cffe362-6316-492d-bae0-9495f7e81431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653d6c8b-c4a0-4004-8f8a-1b9fe5961d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73cfedd8-6b40-4ff8-8820-8305549ae2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5f7482-2a19-49b7-b972-09659631eb13",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdd5a7c-c3a7-431c-b196-72081dd95b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ca602b-004d-4693-9b2b-b3657e385492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e469e351-815b-495a-8f8b-e0f27aaa1486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ac8e39-05ec-435e-89c3-8cf46152cad5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a6334650-1ef6-43ba-9453-3f3d0dbd9daf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7cc77b8f-be04-4092-af6a-bdc4103f5263",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf5fae0-5207-4829-a44e-48791557031e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ed5c7f-a77f-48f1-91d2-92ca3769a60b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e8454f-169c-421a-a370-296cf47044b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "325af613-79d9-4310-85b4-d6c59be86193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925ad7b6-7b80-4ec0-a034-c17030fa3c7a",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de92a69-f8e3-4119-9dda-818dcdfd53d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "03a6ac02-a171-4f3f-9793-362773191d5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be03b0c-f6c7-4f1a-8d99-073b7b1c60b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6715617d-232d-4f12-a028-c057498d7b61"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e54e6d7-366d-407e-9f95-835c2de62943",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90933b3e-e106-4a75-ba48-55171c067059"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df5136d1-3713-4bf6-a24d-1dbafd431d5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd708b9e-6ea6-4ca8-b3eb-d8c55207f217"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7da9a2f3-8bf4-4c96-88f0-77b80af2109e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "71619740-6889-4d03-914c-58998f4605e3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3cb17e46-8970-4bc2-bf48-1e1fb8d589e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0fc3e6b7-7b0c-4ee3-a7ab-b0bb469e7ec3"
            }
          }
        ]
      },
      {
        "id": "ab8983d4-d182-49ba-a60b-8c0345fa6acb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "068a7f49-8bbe-4708-832b-afc07f2f1083",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74f064c2-65a7-4485-b337-72e79f8ab1d4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "18dc22d5-9f48-41df-ba28-876878073e2d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250aa068-6dc4-47a5-93d6-c91a5572da61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b48f3e-bdb3-44a7-92f4-d3ec9e410c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac69b27f-97b5-4d1e-8652-4e4e86df389d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3811465a-77df-4473-be0e-e0ad995bbb17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb8d44e-304b-4a95-be7e-bffd5eb59158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2ddcc8-6026-466c-bdbc-4406eddb6e89",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd5e6a3-7e94-42c4-84d3-e13435c37705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb5132c-aef5-4fc5-8fc9-8339f1b040ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e8328e-7c69-4cb6-872c-7388f80dbb91",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a43593c-9220-45ef-97ec-23b5f1e73aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900351d4-73d0-4837-9e5b-155d3dc66cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2707cc1c-22a8-4bfd-87a8-3aab4cc1de7c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c348572-aa78-4f5e-9cad-9004ae1fa82c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b588e2-d386-40cd-bdd3-cc7ac09fdba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2d4092-158a-48d3-b445-9ad9f5525f06",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d627e307-1efa-43fd-935c-bba03dc58d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8f75a1-c7f2-4f0d-a756-8ba0d07576b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc15a827-4e98-484e-8423-f7a82882370d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19956b15-4543-4f4c-b86c-7353c27906b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3817d8-a1b2-416d-b29c-24dad3dd1c4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754e1aa9-db30-4579-8317-65e3c125ab70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f7817e-2222-4726-bd1d-41bc9e57916d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e6e6e6-47d7-4a21-ad3b-ca1ede77a558",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602284e0-c4f9-4cbd-aae5-0478d20d8dc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2120af18-5096-4a02-988e-74f8dac3e25d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb9b410-7618-4e54-a63c-585019d918e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724079b6-36ed-4158-b62d-e49e7fa0a76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5063c77-f2d3-4b9c-a0ec-22fc7ced5af3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8cc6cdf-960a-40c5-a705-7317881ce50b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c073d2f-cbd0-4b21-9348-7776dc5fd22f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6fecc3e-fa43-41d4-8f47-ae38afba0230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1e8ff0-a096-455b-a78a-441618ab17b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cbe301-d5cf-459d-95e2-2e8463ab25f3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba913ff4-4245-4e23-b024-9854041ee11d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8fdeecd-1357-41e1-a730-b97912a5d363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff3800f-bc35-400d-95a6-fd6b66e8cd51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b914a24-3f62-48a3-9079-65b79478750f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0ad3d9-62a6-43a6-a28c-9b5f8e5457fe",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3430f40b-a97c-49d3-8f23-c47930638f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae4d4d2-b009-4a7d-a3f1-0ec847b1b52e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90128faa-37a4-40be-adaf-9487bcd654c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3378c0d4-f200-47de-bd61-b84e84f94a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fa5003-89e9-44b7-b6fd-cd1d11625780",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c59e243-8637-4006-94da-1a2531eadde2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ae9aa5-2c0d-4f50-9e25-39a1c0903171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9f4c6f-49cb-46a5-8305-0b46472542b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eb37306-4770-4e5f-ae75-ef8b2c424d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ddc094-0242-4e93-a87a-482f9a7858b6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a267db-f2a1-4e4a-a7c7-03d4a46ec90e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c87ff6ff-d5ab-4be2-ad9a-1ed9f6738b59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "681f97be-4034-4c43-95ef-8084f8b52474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "143ff119-c51e-4d2a-ab1e-827905f49e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63486368-e2b1-46e2-ab78-2d3d4fa9ab42",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbedb0b-ab37-45c5-886f-851d0ac33676",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b1a4d5a-57f5-4d26-bdb5-dc0e90258ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c5bf43-d4cd-4643-958f-4401329caf43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd997e6-2342-4f79-b484-9dd5b5ed92bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2957fbbc-949a-4c8c-b5e6-20e602f3e8aa",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9060184f-a069-42e5-bd05-b71e0a8c70ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91331f4c-1e65-49c2-af1f-3395eb67afa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d320682e-2fca-4fab-b643-5b266fa15ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b4df3d-b8fc-4a54-b8b4-b1ff4c71cd06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569c847f-a896-4eeb-963e-2a83154a8125",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c289e64-eb83-40e1-90e1-1c3f76a38525",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ea4bf08-4347-43ab-b433-1d47ca120ef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e6b948-5800-4746-8b54-d5ccdd30323a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9531123-cdca-49b6-8a42-95b935b1f89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ff03e9-45b3-4b04-8b6e-3b007726a702",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b423c7-0f4f-46ae-9004-31708bc7ffb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b38ab9-26e1-4902-9f8b-4906cf0a85a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd08425d-9a1b-42bb-bd3d-d66f38e8df22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f9ae17-d784-468d-8ce7-6444faa218e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aca2f1f-717f-40c9-b260-103c8d007f56",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2873e2ac-4404-4f23-ba84-ed878bc0e5ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a6f985-9487-4c2b-b87a-466e016b6796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e9a777-b156-4459-82b8-7d450f7c16c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb060e9-1b0c-49ad-abb3-a9ba3a4432e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b6c9e0-ed6d-4012-8457-59a6b0d1a53d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd31eef-4be1-40e3-9271-b1282bad7df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62586368-d73d-458a-bc3d-6ac21cd40759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "110c7ff2-8f7e-4f09-b683-0d18e7eb642b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc16646-4d06-4faa-90cd-c6358d9dc57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0945ef97-8a40-44d9-aa0f-12b5bdd5c994",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e803317c-3961-4c8e-8e14-9d7e98708f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "511464f8-6199-4f19-8f8d-24d1ef08481b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1e2b3c-9632-4873-991a-218c94bf2ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2e4782-4ac4-48e4-8524-66abcc2e3b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7746be-850e-4f1d-b400-33381c78a118",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a30416-9f36-4033-a6aa-ee1ffe880d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5026b8bd-4872-4555-b016-65b33ebe1e11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe01521-306f-41c5-b2db-70a9bd89dc4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a2bb2d0-2776-436c-ad12-68e07a132dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458350db-ea74-4130-b3e3-35f0b5d5ee39",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0b6c10-019f-4d3f-a211-e70c53cd43f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08014130-78c9-478d-85ab-b239b9d0a609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcc06dd-f15b-4323-bc0f-3cee9696a1ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4edee35-6196-4109-8811-c7a0fed635fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49375e44-1c5e-4ce2-ab76-c968b3c27606",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f100808-6bf7-4e66-9cd7-2b8f3ea36d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff1c77bb-ca5b-4ed8-93ec-3dbf835f55c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfcd3cf-12d1-4bda-bc97-f23b1a51bf5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9fd6b02-8ace-4d03-8ddc-0e14bf406d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf9dc05-17d2-43b6-83d0-127daf526a2b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c71caf-7c6f-46f2-9057-e64c5cb34ed8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "467fcd63-1ff0-40f2-ad27-e4c007227ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ea6b0e-de8c-42a9-b9f6-5092ebd6c61f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "726b1f2b-e554-4e7a-b05e-01f72d529960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479903ae-1411-49f3-a832-fcfbb18081b6",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc39150e-ba82-4908-9eaf-fe8af3325b24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89df9715-fb7a-4cbe-9ff1-d50467a8cdad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66999782-92dd-4414-a2e4-bd4ab13c2cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b534237-58a7-4831-bd59-b7ba7585ee8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b152bb75-eba1-4369-9609-a10a85bf93ae",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a1e3a8-abe5-4c35-a75d-d39e67a883f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e46b9ec-4417-438e-bfd7-4cc3d8ebcb05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fd08ce-6afb-4a04-9e4e-547644311727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91580aee-193e-4074-a37c-8d1fd66ddd1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfab2a07-24cd-4961-b576-f4bb4d82bbe0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488d9d67-401c-4588-8822-f99310ab70c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dfe9c56-10b8-4962-8cf3-c6f0f1102805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3106849e-e6cb-4dd6-8d09-a0bd00cd3c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d5e5eb-ed31-45a7-97ce-4318071ae98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf6a2a6-7653-4454-8b20-cffcdb5177cf",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e06384d-c123-4e14-a822-fc17cd2fda2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d472eb-288b-43f4-80c7-b9bb580dea68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6626fe4a-b0a1-4131-85d7-e1bbb107ba06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21df0b2-6497-4b00-a646-8c0d04ef2c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba4467d-5764-4d9a-b7fb-60d669a6aa17",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a8031c-bc88-4f5d-8f1d-4bf5b86541cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "529d07de-700e-4902-af1b-621d87b1b630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a02968e-0e14-4e07-bc06-3186d5be8939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3104c274-ffa9-4f3a-954f-17486e74afcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401b03f8-6abc-47e3-8077-83e3bd8a9330",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91cc7c87-bff1-4397-b00e-6094ccd7ebfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27051614-c4c4-46cb-94fa-ea6c02d37807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218b42ca-b0f4-47f0-9937-fbe482e293fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b242bd80-50d2-452f-a617-f70eabfca9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbed5b92-bbe9-4bec-a839-6f87ea250371",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39439ea-1796-4918-bdea-ec091ad6de8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6f17196-3164-4eb5-b551-fe42d3cda624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bd1f7d-a354-45af-870d-b8085b5f33fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "323aaeeb-b228-48d5-982f-d887bf52f601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e4405c-f4ea-4926-bac0-2212cdd175a7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5855fd-e1a0-4d9d-be54-e95930cc0e60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28d3f85f-6f81-4e3a-8b82-70f93f4eb36b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63051df2-345c-421c-8c4d-495ee2243ac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0397274-e8b2-4e6b-8aa0-9671ddc21ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3373d677-caea-411c-9d97-cb212f4895c3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5ba651-f27a-42eb-ae25-a9367a609285",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec488450-18e0-422c-8008-73d5c92955fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd999fec-7010-4ab2-81a3-f8dac216b42e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7096a1-41f6-4286-a713-48ddfaf12af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b893bbd-bd71-4684-a38a-368919c48161",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fca59ec-c3f6-4e61-8a7e-d2701388c35b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c9753da-7c40-49b6-818f-bfda4438e4a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7614d7b1-923a-4aca-9945-253d2c906b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5724e685-9433-4626-9c59-a1f2365469e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c465640-c6d4-4fb6-bfd8-83667c5ccfbd",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1a2adc-dc61-49a3-af1a-c56055b0dc7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a8365d-12e3-4c21-8350-9bbbb758118c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c208e540-8984-4e4d-8a81-c92d49b87fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d7dd74f-d15a-4814-b839-9f50e15cb833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd62c242-a59b-4fcf-9f9f-22ab33929921",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca919d0b-bee9-4474-9d76-4fdb2d605700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d5221e-a818-4132-9a9a-1d7ef1010771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8594ea-6b6c-4c15-a49f-79b3cda37ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c129f54-8869-40a1-9372-4a4ea67b1954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f0b3de-9f1c-4952-9c21-b630cb4d468a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8be623e-ddf4-497a-aded-51581de8523b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834c9cb9-d841-4010-b9a8-181a081cea32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f30e26-e54a-4a34-9bd6-a44bf6101f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f341833f-02e4-4deb-b844-bf2c4ebc6ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fadddb-2393-46e4-bdbe-fb332eb35619",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b6c73b-0d42-4b52-8f9a-993c12b0dad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeceece4-5d5f-4cb0-a337-cc5e9b022138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3c8fc1-f67f-41d6-a92b-2e610b7c6a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b22bdea-0cee-4d39-8c19-00500611f95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7338658b-5694-4c50-9ce3-9c56b809eb3e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a3b096-39a6-4b03-a843-1cb53e6da290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29fa33e0-c409-4370-9359-83dc2c623211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f578334-dfb4-4f5e-8cc2-e8b44d7598d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12392b46-8088-4fee-9d43-e80dc031eaa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf56572-0546-4411-9005-f0d61530c2e1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877a150a-621f-4027-a791-309fd5c375c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954e40cb-459d-4f41-b711-4641e4c633f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14157de-3d85-4ca9-a123-0be1554caa3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6f272d-3ac7-40e6-9e6b-57a70c1ac7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a437d9fb-ecf7-44a8-bc1e-e0416d5bab5c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2feeec-da46-4b71-8917-9e10265b3967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33c494e-8d4c-4e11-83d6-6731f8c22a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "895b911a-b523-4d15-9c75-b9c0d6140856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2a9a8a-e2f1-4f21-a47c-52f071b8ae6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb1a085-3a8f-4e2a-a7de-60452a5337e6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4861f2-2267-4820-b00e-f6563b4de8bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f10c90-9ffb-4c48-998c-60b92a713a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa38dc1-9630-4c8d-8032-27990a0e2e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba791cd3-0249-4e13-8155-6e602e2c977a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b38158e-5faa-45e8-bb21-bd116d332eee",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e773f9c0-3e2d-429a-b90e-d8710937dafa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a7e1b6-3753-4f5a-97f8-32ffc77135aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce832283-6439-4baf-a1c7-b99ec4c17745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b5e971-7333-4ac7-8c05-0e99cdc2f3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a357ec-ae95-49cc-848d-9774a2af56c2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b4c443-4b60-45ce-9197-c0052fa08e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec28d0a4-cb44-46d1-b174-9b5d1157261b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cd978a-9654-4323-ba41-7726c8160d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14cbf7d-df8a-4f10-8835-a306b9758ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba1f754-7e55-4a7a-bd75-ec993feb4c9d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de31896-bbf8-48ce-b9b8-3622f65251e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ccd37df-9232-497f-8d28-7c5d4a80af9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a33d74e-b8f2-4a2a-87d3-6e5e0b30c2d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed991685-164a-43b9-83e5-48ab6f1ae36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7913e52-0726-4c74-b8b6-aae37bb698c6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a356b54b-6f95-4858-9cb7-b557712d5f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb811b3-f7d1-40b3-af66-e4b7d4c744d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e889cf7a-ad63-46b9-95d5-edcfb1560b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "787b7a85-539d-4759-b785-384dcd8a1304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c840decf-f5b3-45c8-8132-e61bad03f310",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a32afb-77f6-4489-84ed-3752538744cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8966604b-763b-44a8-9a83-bc48d438fd5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6125a55e-296b-4182-b75d-76b20da84dc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb4051e-fe85-4bfb-ad64-6d4f23878a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f080e3-222b-42ff-9d5d-edb692c491ce",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb78c13-a5c5-4d9e-a9ea-30097769f2f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54678a54-a9fb-4d15-b848-03d603520ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5789fc-dcd0-473c-a19b-6b199dcde80b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "664c4a27-5556-4f7e-b1d7-895e71235d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd96a364-ff06-42da-bcb8-b7054aeca7bd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3176de7-e33f-4ed1-9322-d523b9127ad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96501d55-7a56-4ae2-9987-c508ce9d442f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b6ecc6-e5e3-4045-8d90-2270c6393be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd2448e-31cc-4017-85a7-f9c9fda5fe2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde77c3f-f2c3-48cc-91a3-5f446c7f1897",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3f663f-5980-4e53-a9c4-4db21b40fca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02458de9-b269-4e06-a3e5-3872e8baf7be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a801228e-06ad-41e9-90db-23633fbd748b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e4a078-de88-4332-996f-4a29c4759901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc42d886-b2ac-4182-a53d-709bfbcabcb3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7d2341-ac25-46da-becf-114897b03d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4465c49d-5344-4c32-82e5-2e4630fd37d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb7d16a-9778-4bb7-9152-55de0493e2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e25d5ff-da72-4e33-b645-47cdc468406c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc77d7c4-3685-45b7-b4f9-c7e26fae4598",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e46d0a-274b-48b7-aa61-2a21090ef13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1becfb2b-9f70-4aeb-a1f2-cadf5afc1d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a9e51d-47ba-400b-b0c0-2c9dac2d7baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8332cf49-871d-47d7-b0e1-7fee4f63fd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d9115e-244a-41f5-ab4a-a628fe7e3a0f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca2133f-8319-4214-a71f-103723d09a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c830439-2eaf-447f-9a05-d0344357e902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bac7d2-d61d-4853-8ef9-a30d339834fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "408ae0db-316a-4ed1-ac6a-b9c2bba0e6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7145b0a-4bfa-494a-8302-a4df7655cca1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2701b83e-6d82-4894-9a3f-4d29bd5cee6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc7d31d-2fc0-4f21-a4e1-235c422923f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c1c1bd-3330-4be5-a283-388af0bd5061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9241f5ce-67ce-407e-8a22-5bd32a9b4a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09844557-0a15-460f-b87d-009f7d50ab3b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16530ba8-e43d-41a7-936e-92cf8edeb0f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a490970-a648-4d58-9aed-884a5bcb906f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f47f5e-87b5-485b-a29f-0e9ec0dbcc34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669b7a3b-5b66-4054-a393-ea3d9a6de826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a96db14-6904-45b9-bbd7-951dcb21449e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b602da3-04f9-4124-b141-8de59b866200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e45e00-9d85-4ff8-bc25-4e7c13749bcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90878b4f-0d36-4a27-afed-116045b9ce64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7689eeb1-fc9e-4270-8345-5dd9bc32767b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde928ef-2f28-4968-a772-ba9102cb8c1c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef1547c-8fbf-447c-be23-83fcf53d8e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9a8723-9704-4874-add9-b123121b4b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90954fe3-f341-4228-9b01-06d4a8633a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82dc162e-614f-4d0d-aff3-c18a0e9189c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28610c11-509f-4207-b5b7-8f41d26716d2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d740c4a2-4174-414d-b713-6c7a350c5746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "679f056b-305f-41fc-bb4c-cd1ae0204d85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d1c258-58ef-49c3-b0c0-f81d3d8f1996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2685ceed-05fe-4d01-b24e-40c679ad3f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea4996c-b228-4ce3-afe1-952b883255a2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcf100c-a793-43cd-83f8-af6431c1b531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b3bb1b-0bf4-4e3c-8fa4-00b4bfc86c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3988a8d-fbb4-48ba-b198-016b819a2121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbcc663e-913f-4a87-8a03-3d8ec187b366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d5581a-743b-4334-b4e3-e8257edc392e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6db432-0756-492a-a6b3-71399c1b1f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09c9c0e-f87d-4328-abea-319bd5db8a45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "328bfb70-9707-4dd9-a1ae-0732ff6799e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b088d33-ba06-47d7-bd85-87e4f8a80940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1044e0bd-6876-4ee5-8b9c-83a75719491f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ce3ced-6613-41b1-9e86-3227265d98ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f2a9b2-79e2-4e85-93e5-737be20a8423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee53f81a-27a9-4ba9-9d83-b9995cea3c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e216663f-ffcc-47f5-98d4-5886c5b5f3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76e006c-2b45-475e-b22a-f400e707385a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b03fde-b49e-4761-8f57-a3cca05cce03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40244e50-02ec-4d5b-8cbc-c82a7a168491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca20713a-c4ca-4d0b-a184-09c0c9b272c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e2448c0-2539-42ba-8317-d2c9a549ccd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a06c45-f00a-4150-b2ab-875212d97c93",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a035fadf-7d1e-4aee-b704-c6b73ad49b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1b5698-3e52-4da5-9f07-57676d7da33d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "210cf83c-c63a-4bb3-8e04-d3c7e730d8ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f3a2a34-faac-42f1-89de-311cd8a0cb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed62f8f-82a7-41af-8057-747e8e293a0c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3185d6d5-77b4-473e-922b-6e9c3acd613d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25c87816-0e96-4fc8-a906-8d5f1e725d27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6da60a-ab7e-4f55-9940-bcac5d6c5795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b31d5fa-72bc-43e3-a986-73d8b206e3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d38657-2de7-43f5-8b3a-ca831d90ff5b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695c72b0-c0da-4dbb-aff7-039607a118c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b713ca99-9819-4edf-9ade-11bbd13de018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebea8896-4784-4644-b7ed-36ecfb12acb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dded84b-9f54-4144-a56e-e3db07f476cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fed09d-1c2d-4153-b89a-8552d591bdb6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78695d7-3142-4c9b-9578-11fa67c94bb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "202328c1-7827-455f-80ad-7eb470732819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c4acea-a85d-4f9d-92c4-3076b88022de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf691ae-915d-4cf5-98a1-c1b8c38949b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f54374-de62-4d77-8c7d-87f1dfd1c60f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971b618f-7f18-4b41-9f23-88893e0601a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a74c5eaf-2b79-4a4c-b556-3e4ee0b44d1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2faca3-d0ef-4ba4-8e24-956a86d69773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23b8906-e9a9-4777-a95e-68664f1c4150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4472081-79b7-4959-8a63-ef3d343e56d4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ef393f-92d2-42a4-8499-7a9c27e021bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acb31057-5941-4330-b2e7-9fbb8dafa0b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f04e20-1112-4206-a212-2fa00fe98ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f34303-0361-4702-a540-63b11dd0dd82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e551486c-5125-4f53-93c0-eec1889c7ef6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49507e0d-734b-484f-8942-afcbd1ce205c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0986c49c-1eb0-4d65-982b-c9996115648c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc33db0-01f4-4626-bd6d-8749e7dbc04f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e1df25-fe4a-448c-a2a8-0314df493643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51352c5a-9b01-4089-9a53-ea2f9ce1938d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0412d2e-8189-490c-a6f5-776ef3f5eeca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a73dd575-f097-4249-a399-5618c496fd37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc4410a-4921-4408-b650-f236680954b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e859ae-9403-4d16-9cfb-d9f7cbfed01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f9dc51-20e1-45a8-b46b-1cfd406d51ae",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848da323-7333-4e55-9594-4ca21a2cf522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ddb3419-a429-4cb2-a5fd-c8a9aa8d9853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f62e23-6888-4d2e-8bb8-49ce6002cb4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ee7c0b-7022-4834-8498-d70ba2137589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a41b99-bb70-49f1-8b05-ead1957a25a8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318cd0e7-2ceb-4bd4-9679-aff91c689a78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9ec3395-d010-45e6-938b-6367021a1e28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f6ca7f-5d90-48da-b086-0a8e6a778fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0314ea15-0bd0-46a4-a92e-bdd900d69d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c62fb5-05d1-4957-b2cb-f84831222610",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d6a8f6-0544-43a3-8c4e-dde58759b123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b26bc2ed-e92b-49c4-b95d-b97ad91acc69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ef625d-6371-4db4-ab64-51b80bea3866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41e72c7-5fc7-4dbe-b481-7d2f8774eaab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea3e69e-524a-49e8-9cf0-5f7a8d5f3512",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04df920-09c9-4c02-bb3c-f6b133ad9044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6dc3902-333a-47e3-9bd5-5e89b6735de0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c803d9be-e8df-43bc-82a8-8ef81f3ad811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf4fd81-10f1-46a6-9425-114c1f3c21e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109c7387-cf1f-4060-ba68-1815bbca7754",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8706ec-2e49-4917-a73f-4e0dd25f6ffc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "211134f2-a322-42e1-b09b-39a23ca43036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8480fa29-48c4-43fa-8048-3217a8833d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78dec829-5418-4ff6-89ee-3bc1ad5eca34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da146ba-e042-4fba-8e50-cc3a35cc6b57",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35aefc51-27cf-481c-9556-27674e188426",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b57257a3-41d7-4a64-9e29-9a1067df52e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3d813c-9f57-4dcb-9846-fc66ec2059d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56387a09-4a30-4f2e-8790-a2f7c305a7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab1c6e7-08cc-432d-a50d-2de164db3d6e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eec9975-faf9-4ee1-a43e-582f81e28873",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12c81736-5c96-4799-a6a9-c76ebba78cbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67d0dde-7bb5-4567-a9a4-2c3c6b23a02e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce9f3f6-ee0c-41f9-a822-9e624c7eafeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d64d77d-c1bc-4a7e-bd40-f404191bc184",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65655e3-e83e-4280-9975-f1d05ebdea33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ef89de8-32ee-4533-aafc-d23c1e5463e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d3fa2c-568c-408e-9d51-e4cfcaceaf74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3500438c-16f9-43b3-9002-96168d3b6a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd6a8a0-af38-4617-8740-6826f1393b3f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6dc1419-c9d8-4d3f-bb38-0a47def31f7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b489eea0-d97e-46dc-8ffd-9f24b8f10bce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61ba475-51a5-405c-b1f7-66d118777a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db3bc5a-4f26-47bb-970d-7825f5bf603b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa317a95-9dea-4ed7-9d33-df8033cba0dd",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419b49b0-81d1-40ec-88c8-ffaea3bf6d9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fd62868-dda1-407b-806c-33cedb0b148e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5493d2f9-3fb4-47f2-af92-e561bfa4ca9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74951352-c2fb-4c5c-bb94-586403d49b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc327c77-6965-4e33-b706-2150c91989b9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbd57ab-85b5-47fd-8648-b26da8534d00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e59573f7-e3e8-4069-ad50-ccfb4f4d1819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14223d1b-47f6-407b-9164-0c09347ba9e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f493ed62-25b9-44fe-b0eb-22a00c35596f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec6305f-6b29-41a5-b09a-a9fcce61b825",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe030b47-2021-4e94-9d0f-5366aca9269d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2e1cab2-364d-4928-a627-dd1f84f1b63e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad56fc8-eed0-40fb-bbb1-81815f19876e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495b6839-f424-487a-aadc-a83dd0096abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a314e8f-a54f-4547-a62e-2ee30414b822",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04e9b65-975b-4506-aca4-7ac605515e4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "833916ae-fcac-44ed-a57f-03cc93f8bd65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cae888-8c23-4b21-b45f-a72736991146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9388d9b-cc1b-4ae6-aeea-8334ae56c0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64783f3b-fdf7-4b14-ac18-77a93486aed6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cdc9b7-dab7-4756-9164-bdd049726e32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "289bc818-cd14-4fa7-b075-0f42cecb9a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cecb38-616f-4358-8df3-041f6ac68f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7dc393-18a1-44b4-85b5-91bbc3b99a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70af8ce-cc6f-4e5d-b2a2-1cdcd010d456",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e24c06-aec6-42b6-88b2-e8e1d4881e54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "181f9def-01a1-4bae-9c4d-fec55c2dbe48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f21b7c0-eabd-4841-bdfa-f87a76e7017f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d11e226-58dd-490d-b5e5-02808992d426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd82d9e-9cab-496f-8f27-857b05b611f5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e206ce9-f28f-466e-801e-b415286f1c46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d60c09fa-20ec-436f-8ac7-854f00c38edc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58012458-fcfa-4bdc-8775-5b4a12231455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a68ad3b-734e-4c1f-afd8-01163157cf1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac7a760-49d7-473f-a393-39851f8473ef",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50121915-c802-41e4-9cc3-66ddf0c443ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9512bad7-307c-4b4f-bb9d-c826fde9dc7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7fc7b80-48cb-4e57-a4c6-17007e22f220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069760ea-8321-4e36-9027-13a08e772caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46be245a-b9a0-4be5-9f86-e627e717cb53",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7249d1ae-6b0f-44ab-9c5b-58ad6d0226da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "903cc5cc-6888-44e6-8f33-dc940baf7241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d37121c-4ac0-4ac5-8b2d-cc79b71869a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d80e02-fbef-4902-8cec-72e83fdbface"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40f216f-9970-4883-a227-34dc7aa841e4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7401ec81-c52d-450d-bdf8-fd7b5c2dba22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "228b855c-bde8-4d20-860c-35d78046d2c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d929da1-8889-49c1-920f-4e1abe394cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3fe41d-d93d-4d13-9083-446717927394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bbea7b-c4c7-4377-acdb-fb14897c5eb9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d10415-6883-4fa1-a657-e8f6d0addcf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb00b944-603b-483e-be14-b7d116f11b9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0af9da-3435-4a45-8433-eb7b64439d43",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2b6f1f-13aa-45e1-a63c-1aa8cf94cc74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfc2746-f33a-41fa-99e0-145bdafad537",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3f118f-11cd-4561-a8ef-cdc44d306879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84cc18b5-d828-4b72-ac0e-d0e41d3652d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b5601e-5968-41d0-87b1-2ecc56c61634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f65295d-4fb4-457e-ba8b-49ed0f58f30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725daf44-bffa-464d-a5bf-cadaa16ae45d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ce916b-2f75-49e0-9864-a6824943db67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e855c39d-7ecf-4ca7-aca8-63b5e6a5499b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52891447-a5cd-4cbc-a7d9-4f90a52435da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb539d4-33dc-4f35-bcc8-4e26de53b619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03faed28-179a-4612-b882-813b3980cd63",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a030c04a-fabb-4fa3-8849-c524bcea0dba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faf223d9-bf10-4247-b1dd-a558019a0b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64875d6-c999-4d5e-923b-7df75ba2d190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3aca701-3b1e-4cb2-8a0c-6ca8638cbdbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4110b2-595c-47a9-9cf8-4fbf6828fbe7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130f47a9-9486-4e1c-9de5-e7a7395b6a63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ede2bfc9-7679-4c1b-98f4-59e9fc793fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee5a3b8-9519-46f9-9bf6-fc6e586e6a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e7b4735-61d2-4f07-8a80-175ef1c4ce10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf5d584-b448-458f-b5c0-8588b5c745a6",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957e5a40-3fe4-49f6-8eff-f8a93b8704c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff8b1012-3c14-4843-a86d-a2134cc2c525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d62a26-0469-4d54-b1c1-4fa2499a1afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96777407-87fd-4b6f-8cbe-fb10a81512b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b70eb0a-ce33-4f65-ac79-38447a96d268",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257f5f17-34eb-4d10-9f79-e4b26eae532f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "247ec5f7-a8f4-4e62-930d-041009169fec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6216f61a-efdf-41d5-b16e-c80802c74d5b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4a62d9-4136-4e13-9f08-34f532fa60fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14572825-5cf3-42dc-ab68-001523039a6a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84fe9b15-a2a5-476a-b783-6bc2b2809d06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a75d6551-324d-4ecd-93a7-c1a7ac5a102f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7462ad7-73b6-41a8-afa0-4ddca5b56281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be90a5e6-01f0-4b40-8d4f-b24574730d05"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e84e9e1-f016-482a-8afb-56c208beb66f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94f704cb-b57e-4353-ba8f-a8894f20832e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f9b9957-8d44-49d2-a030-7d38a2996e92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f024ea7e-46dc-4bdd-b5c1-7d75a3826d6f"
                    }
                  }
                ]
              },
              {
                "id": "15714708-2a06-4aed-ac99-84c4c572f92d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3a526e0-d9db-4884-8d77-5a675d65eeea",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fd95c8-7dbc-4539-8439-fa899ca33dfe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4d6a569c-47c0-4493-8c6d-b183e8be088a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77c8f76-8d36-4a91-8355-a43913ea8034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee102ebd-9fc7-4e05-b10a-eb79d5a134a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a2b5d8-4a17-4890-a0d6-ce775b96d8ae",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a2b8ee-3a04-48a3-88f3-81321d1c75f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "45bfaaa9-6d37-425c-a001-91a9c4de661d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b0e901-6cbb-4bca-abf9-d85ab9968758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd5bff59-cd39-49e1-aab9-3eff7cdbf39c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f81bdd11-2310-4e3d-8d25-df7a7a3bac7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a70f450-817c-4ae5-b50a-2e857859fc0e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5542b563-baa7-4fde-82af-9ba6f626cc29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4bbe953-e6b6-4ae4-bcd0-f81d1e5f4648"
                    }
                  }
                ]
              },
              {
                "id": "8ff5b213-ba4e-4443-b9a7-e3c2b49af8e5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ee65e11a-12cf-4ddb-9a39-702fe08d7134",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f8773d-fbfd-49f5-b17e-ab91eb5f248c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ebc24abc-2b65-43f6-a218-d167471fdead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7019583d-fc63-4a5e-8e8d-3c9c58d797c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "256e97b6-86ae-47cf-ad65-d669f8902d75"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "279ae9e3-fa34-40e9-855e-b991cac305b7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2b4f643d-2a36-4341-87ff-0cd5955d8673",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac5aa3fd-d7de-4314-89a6-caae65078638",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c1d02cc6-60aa-481b-92a6-e8e62164b804"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8667116c-33c0-4547-9900-68c5a6c9d852",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15724946-8752-440a-88e2-95f31a89718c"
                    }
                  }
                ]
              },
              {
                "id": "6fa7872b-c0da-4e79-8e7c-807d8dc032b3",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3158c284-4318-4675-bee2-5003ef510d99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "99f1a9a2-7cf9-42aa-adc7-f07427494a83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8a0d5b2-5350-4954-b875-ebd055c6ec93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "810a52e9-51a2-4b62-a659-8379c0325ebe"
                    }
                  }
                ]
              },
              {
                "id": "90594f16-ce6b-4245-ab0e-c31fd905ca39",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0a8ba94-b21a-4f2f-8ac2-f1303d935986",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5f3be44c-0c5e-4312-a36f-2f16196a907d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e81fcf89-15a3-4ddc-aae4-27f56f6fefc6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a5ab893-353d-45cb-8497-fec7d2700f17"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "580b654f-5e62-4077-9890-6b0e5e905bba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8b991073-bb9e-4cbf-8110-efe8c8e6b0e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3732672-8166-46b2-8af1-fb8cf7064aa3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed09b02a-d05c-4f0c-87e9-b2931091f4ac"
            }
          }
        ]
      },
      {
        "id": "7747c594-3406-4aa8-9614-5dc54c579b42",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a36f897a-4216-4cd6-b9d0-69abda1f4f75",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b495e56e-ef82-4670-ab96-60311288ce55",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ff5d242-71fd-43c7-aa7f-d32426773570",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56469cb-6549-43f2-ab50-e5f694f95458",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6bfd8551-dee4-4824-a373-86c7794ea6ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "220288fd-047e-4380-9778-d2c626968d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c43a68bf-556a-44ec-a717-b5ddb37ec66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0cda14e-57c7-493f-8b53-763a3fbeb7ad",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792b8371-f9e8-4e8f-9baa-b9c0bffbe5f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "251ff66f-44ea-4c33-bc67-d7e823cf5046"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d2971f-4185-4a15-8a4b-8fc3d44547f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69772f60-6089-44ff-bcab-7fc5e0d9ed69"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37a8b8c3-a718-43d7-9dd9-5a036eafede5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a937795-1bf4-4ae8-af32-77d3315a0e7a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fddca8ab-240d-4d99-ae94-1adfb84b0519",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12ee77cd-0abb-475d-b250-90c1ff589033"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5943253-be0f-422f-b1da-d6adaff4910d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ffb2334a-08fd-4748-8081-5f9b87f7fa10"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e363170f-47be-4d53-ad6f-e66c0ba861f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15b6bac4-fe9c-4253-adc1-d80b44284cfb"
            }
          }
        ]
      },
      {
        "id": "1eb92c70-0c29-47a2-b4ad-eccf12821363",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "fca4f657-3da6-4ff3-ad3e-db9cfe98f76a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d37586a3-f094-4233-9b51-3d506f99d8a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c4fa4787-26cc-4c41-8e29-bfaef3ca10d9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412aef58-28bf-4d30-aef6-c9cd765538a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c516a744-136c-4ef0-b477-2ccdf41caa71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc905f53-1b46-4485-be4e-637f326783c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7b3c809-8f2b-4333-9e4a-4dec9a206c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a35fb4-ca34-4675-ae62-dc7a6f2d4a83",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a8f73d-a2e1-42ba-99d0-5cf5d84808a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5355d645-c534-4a71-80a6-68938673b7f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a68922-41ce-4e77-bf51-2b7eb3293f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0b4c9ae-cbb1-4978-84ac-906ac5ea7ba8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "591120f5-96bb-4500-939f-ac06684d90a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d71506cd-8bd8-4b53-ac7a-03d139fd5e9c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0adcfc2d-cd1f-457e-bb87-dd79b0653b01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6437a93-51fe-4f1b-96fd-90ce5622097c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3d2405c-ee96-4e1f-a87f-a8c325be19e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e63a49f8-26fb-44c1-876e-52fe17280c00"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1c64d27-ee39-4bf0-81ff-0c9d3ca55028",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a576e5c-11ea-4f5f-9a16-6e0f35eed0b8"
            }
          }
        ]
      },
      {
        "id": "b0046556-cca5-485f-8e14-198b6dea3e4b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "02ba9626-2b7a-46fb-9c31-895b7136c22e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "757b7611-0e2f-4d46-8a80-29f02e97a48e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f5b09ba-c7b2-486c-bc1f-043880794a44",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0518ce85-81f4-41ca-ad80-a52945e8c0c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c9296c3b-8d1d-490c-b53f-3504d888d2e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87f9914-e886-43a3-aa1e-531f9385f888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef908eca-b925-4ff2-921a-c204ecbfbd9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f918f1e-420b-4dc9-8ba7-bebabc237a59",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cccb252b-7066-4cfa-abf6-795181c083bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "13e8b117-9fb1-4b6c-a26c-5dcaef712e63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea96517a-aa45-430c-b276-b2e33808bc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa588fd8-99e3-4db7-8b87-2266384e64c6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21d2e48c-1e48-4308-b73b-d12de394e0ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "996e37c7-cbe0-4b52-8358-d6373f46ed35"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8a70427-ed62-47f0-a61a-b666faf271a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21c894ec-9578-4a6d-a480-9909d5dcd611"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b7f5356-35c2-414d-a4e8-fc5066622154",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ac2d849e-a820-458b-98fb-2628d6e595b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99417a36-de43-408e-a09a-efcb13fcfc60",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b428f079-220f-4f2e-835e-9d9c9464eef2"
            }
          }
        ]
      },
      {
        "id": "4c1fa22d-487e-4eb4-8aea-1f7183e633b6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "750056a3-2ca0-4753-a73f-5880a9ff3d16",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a104c9c-91e3-4e94-8a7f-e3fa2bd2ad85",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2ece0d00-b94d-49f0-8f0c-bb637819ac87",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7de9babe-f872-4ee6-895c-dc3d915515d0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8933d195-4843-4990-bdfe-028eeb361d16",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 519.0114942528735,
      "responseMin": 16,
      "responseMax": 4001,
      "responseSd": 439.3780651774388,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1669768914315,
      "completed": 1669769060672
    },
    "executions": [
      {
        "id": "f603fff6-5f69-4eb4-b44b-6da6c9c4a46e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5907581d-7e0a-47d5-85be-f0a57f1b2c38",
          "httpRequestId": "4595e1bf-8256-4303-a456-e9202e144160"
        },
        "item": {
          "id": "f603fff6-5f69-4eb4-b44b-6da6c9c4a46e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "71366e69-d612-4beb-b13c-8f875565fa54",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 0
        }
      },
      {
        "id": "612d7d4e-ab42-4f86-9350-0d326d680718",
        "cursor": {
          "ref": "9a3fcec5-2c7f-4b64-89ac-8dbb146c6dd1",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fa483d58-8e36-4262-b8cd-d6cc1519579e"
        },
        "item": {
          "id": "612d7d4e-ab42-4f86-9350-0d326d680718",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8e43f231-5115-402a-84e2-dfd1c99c534e",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 0
        }
      },
      {
        "id": "07b569eb-aabc-488b-9609-aaa648e0fc4b",
        "cursor": {
          "ref": "49818a8c-8b70-4a4a-9f29-2e179c2ffa12",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b3b2d240-e234-443e-b58f-e2bbde19e705"
        },
        "item": {
          "id": "07b569eb-aabc-488b-9609-aaa648e0fc4b",
          "name": "did_json"
        },
        "response": {
          "id": "acfd3d62-9353-463d-968c-797887fe9e76",
          "status": "OK",
          "code": 200,
          "responseTime": 834,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f3d8c5-0f48-43ea-9652-e7dfbccdf8ef",
        "cursor": {
          "ref": "768c5f1e-42f7-476e-8b1a-5d446243951f",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0ef99257-1625-4bab-96fe-174cdce1028f"
        },
        "item": {
          "id": "57f3d8c5-0f48-43ea-9652-e7dfbccdf8ef",
          "name": "did:invalid"
        },
        "response": {
          "id": "f1d9a42f-01e0-4757-87c4-d8f895bb5fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f3d8c5-0f48-43ea-9652-e7dfbccdf8ef",
        "cursor": {
          "ref": "768c5f1e-42f7-476e-8b1a-5d446243951f",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0ef99257-1625-4bab-96fe-174cdce1028f"
        },
        "item": {
          "id": "57f3d8c5-0f48-43ea-9652-e7dfbccdf8ef",
          "name": "did:invalid"
        },
        "response": {
          "id": "f1d9a42f-01e0-4757-87c4-d8f895bb5fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f79c0ce-f972-44dd-9dcc-d0aacb055dda",
        "cursor": {
          "ref": "25b0d25c-9cf1-4d92-a5bb-70cf8897dc7a",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "927f8289-eba8-40cb-8c6b-e89c720cdce4"
        },
        "item": {
          "id": "0f79c0ce-f972-44dd-9dcc-d0aacb055dda",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f11087b6-fe27-434f-af85-3a987e005502",
          "status": "Not Found",
          "code": 404,
          "responseTime": 630,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7078b828-0c21-43c0-85a6-21c59deafa2d",
        "cursor": {
          "ref": "c6bbc926-4d82-4af2-9bb0-60779f7d4d5f",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "eefa35bc-7a5b-4661-80d8-225099a1c95c"
        },
        "item": {
          "id": "7078b828-0c21-43c0-85a6-21c59deafa2d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4628da91-b579-413d-a2e1-3761182a1cf3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 511,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d38e62-79f1-4b62-8f18-6c6fd18c4085",
        "cursor": {
          "ref": "dee99f74-1fc6-40ab-bde7-dea613a29752",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0cf31f82-1b8c-4b85-976f-32b0e2864ba7"
        },
        "item": {
          "id": "41d38e62-79f1-4b62-8f18-6c6fd18c4085",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f875bd68-924a-4506-a685-8c4fff223be4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823e0477-9456-46de-9102-fb1129445923",
        "cursor": {
          "ref": "5452ba84-7c6a-45ba-9926-9c231f0761ec",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b96f6bb0-3537-4518-9780-277acbe14003"
        },
        "item": {
          "id": "823e0477-9456-46de-9102-fb1129445923",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "12027179-0575-4f77-9211-f7f0f248d7c8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 516,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823e0477-9456-46de-9102-fb1129445923",
        "cursor": {
          "ref": "5452ba84-7c6a-45ba-9926-9c231f0761ec",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b96f6bb0-3537-4518-9780-277acbe14003"
        },
        "item": {
          "id": "823e0477-9456-46de-9102-fb1129445923",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "12027179-0575-4f77-9211-f7f0f248d7c8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 516,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f62cbfa-fe2c-4387-af60-2bdfab89b40f",
        "cursor": {
          "ref": "a7567bbf-493c-47fb-8498-b42421eec59a",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b5241aa8-8d9d-45ae-a16e-fd62f8e7c0a7"
        },
        "item": {
          "id": "6f62cbfa-fe2c-4387-af60-2bdfab89b40f",
          "name": "identifiers"
        },
        "response": {
          "id": "1dbf12df-dce1-435d-91ee-3316f12c64be",
          "status": "OK",
          "code": 200,
          "responseTime": 784,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60dfe5ef-226b-48d5-9ae8-269112732e65",
        "cursor": {
          "ref": "66821d85-f777-40b1-bbbd-eff0d8fe4e60",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bc4ce2d9-0924-4629-a59a-65c0f7830cdb"
        },
        "item": {
          "id": "60dfe5ef-226b-48d5-9ae8-269112732e65",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3c12c334-bcd3-4c1a-baa1-f3df7b8ceb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60dfe5ef-226b-48d5-9ae8-269112732e65",
        "cursor": {
          "ref": "66821d85-f777-40b1-bbbd-eff0d8fe4e60",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bc4ce2d9-0924-4629-a59a-65c0f7830cdb"
        },
        "item": {
          "id": "60dfe5ef-226b-48d5-9ae8-269112732e65",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3c12c334-bcd3-4c1a-baa1-f3df7b8ceb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e6ccc4-af61-4951-9df9-1f37ae047356",
        "cursor": {
          "ref": "aeda09e7-2b3a-49ce-9b94-2f72f50fc1dc",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e3587559-a58b-407d-81ca-ec65aabd8bdc"
        },
        "item": {
          "id": "c3e6ccc4-af61-4951-9df9-1f37ae047356",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d5664a33-f2ff-4c6f-9daa-7015c8834f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ce2139-3d98-47f4-9a09-1079e99c971c",
        "cursor": {
          "ref": "9ffdf483-063b-47ee-8b7d-7af3544668ce",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "772687e0-8e0e-4d91-8c28-169a2748b57d"
        },
        "item": {
          "id": "c6ce2139-3d98-47f4-9a09-1079e99c971c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1e45debb-88d6-45ba-8587-ca66d366a4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790952d9-ec8f-4d88-8176-49e8b983ab90",
        "cursor": {
          "ref": "fcae91b5-4bfc-4e9d-b914-bcd53cb18b16",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3d9548d9-69f5-4dc0-8ed4-9748c7312079"
        },
        "item": {
          "id": "790952d9-ec8f-4d88-8176-49e8b983ab90",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b40d4b5b-03c5-4330-a2d2-57229ce24988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ca98a6-04f2-4293-bdee-c1eece3f5e75",
        "cursor": {
          "ref": "2a3a6a35-4613-41d9-b700-c5952b750e6c",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "80963ad9-dd8e-4418-9aab-cdc3397a1dda"
        },
        "item": {
          "id": "73ca98a6-04f2-4293-bdee-c1eece3f5e75",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bd35125a-1e83-4b11-8c92-b4fa904d9bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aef0de8-d7d4-4411-956a-13cd149aa0a0",
        "cursor": {
          "ref": "049c6d35-5233-4002-8981-b4d472f9d0d7",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "03b4f4ac-3dca-450d-8af7-464bec7214b7"
        },
        "item": {
          "id": "4aef0de8-d7d4-4411-956a-13cd149aa0a0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "59c5c95c-1e81-4869-b04c-aa30d1b8b006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beae097b-9832-489f-a6ec-c5287d20294d",
        "cursor": {
          "ref": "b7e19dad-2071-4a5e-a6ea-6abe2e178b9b",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3b1c075b-80ae-4281-983d-3cc3e5ea384c"
        },
        "item": {
          "id": "beae097b-9832-489f-a6ec-c5287d20294d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2e1b70fd-353d-4b64-a8c5-ef251637a314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e160765c-bd85-4ff8-9bb9-c202dfb93ebd",
        "cursor": {
          "ref": "bd8bf13b-1c52-44c6-be38-f531885110f1",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "974f5910-6197-4edb-82bb-137c6dc9dce7"
        },
        "item": {
          "id": "e160765c-bd85-4ff8-9bb9-c202dfb93ebd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8364b544-5f9f-408a-8b12-0338def8e297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9c2b5c-8ce4-419b-b589-adafa9e215ab",
        "cursor": {
          "ref": "b36cd0c1-a31b-4e05-a88b-312bbd797e5f",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4eb8bf10-658e-4b8e-857e-38c71f08599f"
        },
        "item": {
          "id": "6e9c2b5c-8ce4-419b-b589-adafa9e215ab",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "857a69a1-1193-4b55-bbb2-ac1f7bbaa526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1dd494e-40ee-4eac-8cb7-a4db763da48f",
        "cursor": {
          "ref": "f57f2e3d-49ba-4168-bc10-1cd2f700339a",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "62144cf1-2699-479b-8dc5-6114f6983ca3"
        },
        "item": {
          "id": "b1dd494e-40ee-4eac-8cb7-a4db763da48f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "39041cdb-d28b-4434-b08f-49f43cef7985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5d3bd4-e5a0-4f94-b1d8-d9ad805b2142",
        "cursor": {
          "ref": "a29e0c0a-bcd4-4b3e-a3d1-c76f97c8447f",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9b12db2f-bb6a-4fa4-a866-5a18b02f2c8b"
        },
        "item": {
          "id": "5a5d3bd4-e5a0-4f94-b1d8-d9ad805b2142",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "14884c6d-373c-4ae6-8a70-c9ab8a80d937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50db59c-185c-4fd8-bcdd-acdf90a6673b",
        "cursor": {
          "ref": "2d8dc94a-77f5-4d01-8229-1062ad74d329",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "aa04f044-c8b3-4b97-9c59-c572ec525cc2"
        },
        "item": {
          "id": "a50db59c-185c-4fd8-bcdd-acdf90a6673b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2752f03d-30b1-4edf-8a2c-aa46a662a558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a3cf96-161f-4e7f-8af6-cc8d7ace6c25",
        "cursor": {
          "ref": "bc5a5f87-aa9e-4d72-af2f-12c12455c638",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0cb15329-1c64-400f-91c5-6dc83132bfe0"
        },
        "item": {
          "id": "29a3cf96-161f-4e7f-8af6-cc8d7ace6c25",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "91e0f726-398f-4a00-b08c-4f3bc9183df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af98c6c-f3bc-45da-919d-133a53fe388b",
        "cursor": {
          "ref": "2017cd0c-eb72-43d7-a6db-bfe5e61f32bf",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "903fa79d-1b2d-4b21-80aa-2dcc1a672135"
        },
        "item": {
          "id": "2af98c6c-f3bc-45da-919d-133a53fe388b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b99b15bd-5262-4ab2-a9dd-2bdf3693f4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d7bf45-7be0-49e1-88f0-631e76542ff6",
        "cursor": {
          "ref": "2f11bbdf-3c2e-43e4-95a8-57260e9e337a",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cf18e8d3-2336-4237-a871-c6a5054ddfd8"
        },
        "item": {
          "id": "29d7bf45-7be0-49e1-88f0-631e76542ff6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c1c41dc9-cc3c-4cef-9a60-ef835852d969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edd2359-8a25-4f2d-bd49-25945de602c2",
        "cursor": {
          "ref": "6792ed8e-e4c3-4295-9764-98d4b13e18b1",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c1bec727-442f-4aac-9538-cfce5f073f2e"
        },
        "item": {
          "id": "4edd2359-8a25-4f2d-bd49-25945de602c2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "97f08064-c7c9-4bd4-806b-ffee6a80741b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4ded62-15ac-4963-b458-8b624ab99356",
        "cursor": {
          "ref": "cd97b9fd-a0ab-4e63-8c43-21e380b92491",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "422ab1c9-9fec-404c-91f6-54deb3443b33"
        },
        "item": {
          "id": "ea4ded62-15ac-4963-b458-8b624ab99356",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6c956d6c-7f00-4f13-8af6-bb8cd18bb88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6193abe2-e294-44b3-b76e-919e43338920",
        "cursor": {
          "ref": "aa0bee85-7f4a-4ab2-9bb4-a63d2cec2612",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "383910e5-4408-4585-8927-e03379f26e1b"
        },
        "item": {
          "id": "6193abe2-e294-44b3-b76e-919e43338920",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ca68f27b-a9e5-47d7-9d21-397b67b454e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b9272a-b13d-45d0-8138-30e20a189212",
        "cursor": {
          "ref": "c9b7b3dc-ebb5-4fea-a3c3-918fe0a9e9b3",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "85aa8c2c-ec7b-420a-8c50-2659951666ff"
        },
        "item": {
          "id": "88b9272a-b13d-45d0-8138-30e20a189212",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b2f0ae80-076b-44fc-aab9-43c23aed2d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056cb81d-4780-48d4-82c8-644fe8e5aea2",
        "cursor": {
          "ref": "0a985ac0-2567-4ea1-9f7c-8fe8aa76891f",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c24247d4-dfb7-41dd-bebb-93195941a3eb"
        },
        "item": {
          "id": "056cb81d-4780-48d4-82c8-644fe8e5aea2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "17bf8502-10cd-4369-a147-46ce85e15645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e0d880-40a2-47eb-ab4c-6fb30a16dfc7",
        "cursor": {
          "ref": "f88f321a-ecec-447f-97d0-be0d613acd13",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "64abd398-7a18-4316-9ad3-723a89091b78"
        },
        "item": {
          "id": "04e0d880-40a2-47eb-ab4c-6fb30a16dfc7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7e31d56b-6fd3-47e7-9b69-15e417c4b1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796389ed-fbdc-45c3-95d3-7ab537646d3d",
        "cursor": {
          "ref": "d6f18d1f-3019-43a3-a018-041d770deab6",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "59e690ff-8d63-445a-b45b-d0fd255e9a3f"
        },
        "item": {
          "id": "796389ed-fbdc-45c3-95d3-7ab537646d3d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "555bb7c4-cd26-43e4-bf22-89eb8bbd9df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d111b1a-25ac-4bf9-b228-9e5cd8ceab7c",
        "cursor": {
          "ref": "eaf7f5c8-0dea-428e-aa1a-7df6d7d01ae7",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "12a11f3b-6dd1-4649-982e-7b753ca865d8"
        },
        "item": {
          "id": "7d111b1a-25ac-4bf9-b228-9e5cd8ceab7c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "694dfc1d-4de6-4760-8091-fd62d119ec74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231a38da-89b3-438e-9cac-64d7c111fe07",
        "cursor": {
          "ref": "4699d984-b9a0-4b0a-9846-7f9b5d447814",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a93d1cac-c475-4cd1-b9bf-9c21418e516f"
        },
        "item": {
          "id": "231a38da-89b3-438e-9cac-64d7c111fe07",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bbf6f18e-e4aa-4ce6-b726-55ecfec511c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a05789f-7b0b-4ee5-aa46-0331e9d0eb91",
        "cursor": {
          "ref": "1604ead1-d912-43bd-a6d6-887930e7675e",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "353b2330-fd2c-4b0a-a294-741e4dc38997"
        },
        "item": {
          "id": "1a05789f-7b0b-4ee5-aa46-0331e9d0eb91",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c69a2cce-9511-44d8-b2fd-c49cc5c61f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a12d65-eaa3-4a9f-988b-722808ee5a24",
        "cursor": {
          "ref": "fc12f32b-e83a-4e33-9905-07c6fcaf0b4d",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a0b4505f-a0d0-465e-99e4-b74a52030a65"
        },
        "item": {
          "id": "29a12d65-eaa3-4a9f-988b-722808ee5a24",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ddef501d-cace-4930-ab4a-8988911ca10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bdaddb1-db31-4aed-b1e9-66393adec8f1",
        "cursor": {
          "ref": "75364e8f-452d-488d-8449-149c9fd5f4a1",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "018624b6-e529-46f5-b975-eeb58e358733"
        },
        "item": {
          "id": "6bdaddb1-db31-4aed-b1e9-66393adec8f1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3bdfd861-9091-4db7-b8f7-78f392e4c964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2a783b-98c2-46c1-90f4-4be2c2d073bf",
        "cursor": {
          "ref": "be4a2f1f-a1d4-49a1-b007-2c1273a651d4",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c150aa88-86a2-4d1c-85a4-324f4ab8fbe3"
        },
        "item": {
          "id": "8e2a783b-98c2-46c1-90f4-4be2c2d073bf",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c87c722a-ed41-4f71-9213-391ea23bfb73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c38a08-f8ad-4f40-b3a4-29d42e483bee",
        "cursor": {
          "ref": "ca72f7b0-6371-4a84-bee8-2bcf5357a020",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "62c6c6e1-4beb-4f75-8316-e73cc140bc4d"
        },
        "item": {
          "id": "f4c38a08-f8ad-4f40-b3a4-29d42e483bee",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9578397f-876c-4792-b72f-52cbe3c46e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d02a73f-5909-4d46-838a-07c26c48c208",
        "cursor": {
          "ref": "56f5f6a3-5dca-404b-b036-7f562c20d0fa",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8431952b-5fc9-43ed-ae21-45f59798e7f3"
        },
        "item": {
          "id": "6d02a73f-5909-4d46-838a-07c26c48c208",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "72325db4-d986-4ef1-9207-9e1993255e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efa0e0b-42b2-4af4-87ff-64e4b45566e1",
        "cursor": {
          "ref": "852e2ee6-83ef-46bc-a7f6-c11f96dc44f8",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "debb2cb3-bc97-4313-b14c-628072cfcc97"
        },
        "item": {
          "id": "6efa0e0b-42b2-4af4-87ff-64e4b45566e1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3312a22b-ea38-4d5d-adad-9450a4708fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a4b8a8-065d-4b52-a672-91395de97e6a",
        "cursor": {
          "ref": "2ba03c3d-fe3f-42d4-842a-0d1241478a73",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3fb9ab4c-231a-4294-bd22-2be426c92148"
        },
        "item": {
          "id": "84a4b8a8-065d-4b52-a672-91395de97e6a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "58fd8139-e0b2-40ca-9553-0a9cb779d326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2401599d-b472-4fe4-9676-3b71d10c5c81",
        "cursor": {
          "ref": "02d1842c-b06a-4827-adea-84997f4b725e",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "066b4927-f1c9-4b7f-9af2-a23f968ec330"
        },
        "item": {
          "id": "2401599d-b472-4fe4-9676-3b71d10c5c81",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9d3b0a8b-5adf-4c14-a87f-7ed90c6329f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cbb11e8-e2c0-40ff-b828-0678421de123",
        "cursor": {
          "ref": "943f4ce8-1d72-4729-b713-99feffeeb404",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "22a72589-2e52-42a6-aa59-325ab7a9a516"
        },
        "item": {
          "id": "3cbb11e8-e2c0-40ff-b828-0678421de123",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e573c24e-4a17-4766-912d-213a2da29695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3861ebd-c3a9-4d06-a7fe-74a21970a610",
        "cursor": {
          "ref": "2407e759-3088-4339-93c8-8becce5890d0",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b4cc006c-5b46-491b-b5bc-a8f16361d4f5"
        },
        "item": {
          "id": "e3861ebd-c3a9-4d06-a7fe-74a21970a610",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a1ac8d3f-57a2-4b86-84b1-1100f2fb2dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1071,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e9990a-6d87-4f7b-b6a8-e0e8602b7d41",
        "cursor": {
          "ref": "80a20d4e-bace-4200-8979-c9d3ebf99a72",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ec09109f-9e69-4737-8165-133f112a7e7c"
        },
        "item": {
          "id": "16e9990a-6d87-4f7b-b6a8-e0e8602b7d41",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4ca34118-0506-4db6-8766-fa7eb01290bf",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1001,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cff671b-eca5-48b2-bde5-e29b1f14d987",
        "cursor": {
          "ref": "b9421ef2-7b98-40f6-967d-e839e7197606",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "49ee0adb-81e3-4b69-8810-2e04b93ad5d9"
        },
        "item": {
          "id": "2cff671b-eca5-48b2-bde5-e29b1f14d987",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e764a522-977d-4739-aa12-e02d5b60ed20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564fe44d-79a2-46bc-857f-2e4641bf9cda",
        "cursor": {
          "ref": "2a8555b1-4b72-4e91-af9a-f24a4e1e5b69",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6eaa7578-1b67-4fd4-8024-541672b4b3ae"
        },
        "item": {
          "id": "564fe44d-79a2-46bc-857f-2e4641bf9cda",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cd4c3a98-e357-4a5d-a0d3-566bf9923457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a589ddc1-1258-4362-9efe-a4500d4530a0",
        "cursor": {
          "ref": "c2504c3d-4e98-4bc8-9c21-3770028398aa",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "df1d586f-adc1-4172-870c-dc3ea73a073f"
        },
        "item": {
          "id": "a589ddc1-1258-4362-9efe-a4500d4530a0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "cf5b0e2a-7588-4c8e-ae3d-1837f70f01aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c844e015-7b8e-4829-a5c2-fa636230922c",
        "cursor": {
          "ref": "aec97aa4-2a05-446c-9e32-125ac17f2f24",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4acecbf5-5081-4c52-bc7b-725d671c38c7"
        },
        "item": {
          "id": "c844e015-7b8e-4829-a5c2-fa636230922c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4c4ac5c1-7b95-458a-ba2f-072aaf436b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5038cbe6-1557-474d-9fb9-8efb58a507f1",
        "cursor": {
          "ref": "f134853a-5820-4f58-8c8c-c0852ea32b83",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "527f1774-64b3-4fab-b2f5-c336460d3a0d"
        },
        "item": {
          "id": "5038cbe6-1557-474d-9fb9-8efb58a507f1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2c93b97c-3cd1-4412-8150-013f31f7050c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf2e7c2-9216-42ff-be86-ffade6d072f1",
        "cursor": {
          "ref": "71b25edc-9928-460a-8f70-1886a86f04ad",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "96aaeef5-6dab-43a2-b028-401bec77c2e3"
        },
        "item": {
          "id": "9cf2e7c2-9216-42ff-be86-ffade6d072f1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "441667a9-a5a3-45ea-99de-1551ca21a8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8a93b7-4407-4c68-a408-ad2d50c0b4ff",
        "cursor": {
          "ref": "4b38c5c8-8c85-450b-a5f0-f6d803c29cda",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "eeb6ded4-d9d8-45db-af8f-94233597dfc7"
        },
        "item": {
          "id": "0c8a93b7-4407-4c68-a408-ad2d50c0b4ff",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "58742634-dcc3-4222-abf9-67636fbee0ed",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 555,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11b897a-3dd8-4861-995d-997092d8208f",
        "cursor": {
          "ref": "b0797bc2-3234-4413-991e-34218cca0f68",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "09f12b42-982e-4b77-b15e-2ed5124098e8"
        },
        "item": {
          "id": "e11b897a-3dd8-4861-995d-997092d8208f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0fb43eec-6be1-4e47-84eb-80315962bbd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7506de83-5b08-412b-aded-35eab4fb09aa",
        "cursor": {
          "ref": "680a94da-ef55-4244-9a5e-221754548ce6",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "afaf52f2-b50c-4135-a1e2-1a1412faf16a"
        },
        "item": {
          "id": "7506de83-5b08-412b-aded-35eab4fb09aa",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1a298b83-a3c1-48c4-bf2c-7cc101564b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1640639e-8761-4430-945e-0357a8c17fcb",
        "cursor": {
          "ref": "6301a3bf-6c0a-4ab4-8e5e-1cf26dfab966",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f76a519b-8230-4c73-bafa-30869577c1ed"
        },
        "item": {
          "id": "1640639e-8761-4430-945e-0357a8c17fcb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1a481ded-5816-4dba-86d5-f6a4ec0eddc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2478d08-6489-4afa-9fa0-21f1c9242252",
        "cursor": {
          "ref": "906a0e4b-8234-4f8a-b2e8-66103cab034f",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "44ac4677-2425-47ca-8d7b-99bcd808ccbe"
        },
        "item": {
          "id": "f2478d08-6489-4afa-9fa0-21f1c9242252",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8c900aa1-cd63-459a-a5cd-5af0c6465ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a274b08b-60fa-4327-ae0c-c7339e854e38",
        "cursor": {
          "ref": "67ec42f3-663a-4860-a5cc-000f8b5c7f12",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "28bd375b-74af-47f3-87f2-2a1b17468d18"
        },
        "item": {
          "id": "a274b08b-60fa-4327-ae0c-c7339e854e38",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d3387cce-30f0-434b-a0d1-2eb9960f7098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa255015-4733-4744-b853-47e2dbab2313",
        "cursor": {
          "ref": "b88aa431-2965-4876-8e9b-3ea115347ebe",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "149beea5-508b-4e2f-bc1b-402bc12f3f0b"
        },
        "item": {
          "id": "aa255015-4733-4744-b853-47e2dbab2313",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "314e2f48-202b-4c8e-aee3-e60f657647ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a568a8-04b7-4027-8d96-6f99ecf914c3",
        "cursor": {
          "ref": "9c78f1c5-53cb-49e8-a5b1-75695a9469ca",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6b43a19f-0f76-4b07-a5d2-4fee31a3c000"
        },
        "item": {
          "id": "76a568a8-04b7-4027-8d96-6f99ecf914c3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3d7f45f6-0ad9-4bdb-b42d-91c653eb5407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfd8692-d057-45d6-ad85-1c39913d9099",
        "cursor": {
          "ref": "10c6773a-dc82-439d-93ef-f032af5a7fd0",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e4495903-1ddd-4b27-abc9-44a967f0b7bc"
        },
        "item": {
          "id": "abfd8692-d057-45d6-ad85-1c39913d9099",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "70120cd4-75be-466e-8c2c-82751fc170db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2ab35a-d0f3-4497-ba2c-b82946e1fc81",
        "cursor": {
          "ref": "e0a2582e-1bc4-47ed-b1af-d5a7978bee14",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4ad5ea86-63e6-4215-967b-15f33f746662"
        },
        "item": {
          "id": "ef2ab35a-d0f3-4497-ba2c-b82946e1fc81",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9b2230fa-c585-4b28-a9cf-450735644d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1356e60-1fc3-47b4-a342-d1cad4de01bb",
        "cursor": {
          "ref": "41a344dc-70ed-4fc1-bccd-5d960b13a34e",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "50a1b819-a46b-492a-afcd-220c8baac8e0"
        },
        "item": {
          "id": "d1356e60-1fc3-47b4-a342-d1cad4de01bb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "be434948-b170-4995-b882-437e837cefba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5bf524c-6c40-4003-9a2f-6871bb63544d",
        "cursor": {
          "ref": "e06a6cd8-706f-4c6c-8faa-6d494d4de3b9",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "548bcba5-59d2-4dd9-a7a7-f697317331c0"
        },
        "item": {
          "id": "a5bf524c-6c40-4003-9a2f-6871bb63544d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6e4090b6-5bce-47f0-b71f-32b2c057f8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b4583f-4d8d-4cb8-b798-ac59d1c3cd1e",
        "cursor": {
          "ref": "81e35fc7-2014-42dc-95fa-01a41b4d7795",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2c0518a0-fc69-4964-8c8f-1ccf7e264aba"
        },
        "item": {
          "id": "f9b4583f-4d8d-4cb8-b798-ac59d1c3cd1e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "38e5f1d7-3d6c-4eec-b4b4-9f0afecadcb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb27f19e-e35d-46c4-89e1-1bced6de0ad2",
        "cursor": {
          "ref": "132ffbfe-442c-46aa-9736-00a3e500037a",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c74b93e2-137f-488c-9003-60cacc570d4f"
        },
        "item": {
          "id": "bb27f19e-e35d-46c4-89e1-1bced6de0ad2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2b5725c9-a54e-402b-af03-fbfd21da1567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d822ae7-3387-4659-aff5-b14926fd4b13",
        "cursor": {
          "ref": "5ad1cb09-cf7f-4e25-8016-4169fbd49648",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "07bdd292-9e80-4e1b-89de-19a9493996b5"
        },
        "item": {
          "id": "3d822ae7-3387-4659-aff5-b14926fd4b13",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "69bdd9f4-92af-4264-a688-b98b1a02757d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5de2dbd-bae6-4104-80a4-87e626c643f9",
        "cursor": {
          "ref": "71c2d080-d6d6-4e6b-a321-7b74d86a391d",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a46a7651-f978-4ec6-8908-22ec633c8914"
        },
        "item": {
          "id": "d5de2dbd-bae6-4104-80a4-87e626c643f9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3f2d21bb-3389-41ec-a114-f47c3e12873b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58707877-0ee3-487e-aa8e-466333f4636b",
        "cursor": {
          "ref": "a6836eae-e18c-4c11-b258-64e96c2a65a6",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f52aaa4a-5cc8-4243-9e5f-94ac43700cd5"
        },
        "item": {
          "id": "58707877-0ee3-487e-aa8e-466333f4636b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "25e66ecb-511e-4690-bb03-758352878e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b50dd81-7c3f-4a09-9a10-d540d0ec5b18",
        "cursor": {
          "ref": "ac885ed1-1cff-4e46-bdfa-b9ca843597db",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4fdc2d0c-eecd-47b0-aec3-dabe964c01cc"
        },
        "item": {
          "id": "1b50dd81-7c3f-4a09-9a10-d540d0ec5b18",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "46566fc1-266f-4777-bd10-698dd45e1322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fded2a0-2e5d-48ba-b646-e7ab20a3fd86",
        "cursor": {
          "ref": "05baf730-15d5-4f5d-bd60-e24641b49f77",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "73a22142-ab3e-469b-b8af-e8e8137bc407"
        },
        "item": {
          "id": "0fded2a0-2e5d-48ba-b646-e7ab20a3fd86",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2ad740f7-0395-4ba2-9376-22342c7508bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7caae927-a6fe-4164-b339-54cd3d0807cc",
        "cursor": {
          "ref": "1a0a585c-a8b1-438c-ae90-054582f694f2",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5b98aefa-3408-4cbe-9484-c4908d065a4b"
        },
        "item": {
          "id": "7caae927-a6fe-4164-b339-54cd3d0807cc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1359c365-f634-4b83-9641-c7b671d07d7f",
          "status": "Created",
          "code": 201,
          "responseTime": 2335,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "fb4234a0-3aa6-42c8-adf3-ce89a726be32",
        "cursor": {
          "ref": "4af4981d-61c2-4798-8459-a06b5392eec9",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "175d5985-d392-422c-b8e9-446d659ae622"
        },
        "item": {
          "id": "fb4234a0-3aa6-42c8-adf3-ce89a726be32",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "392577d3-96ac-4742-9242-440a3d970d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9c6199-34f9-479f-9f06-c4c762846bde",
        "cursor": {
          "ref": "78639585-e38c-4a27-95b5-04c21b20399b",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d860106b-2b4b-4494-9407-1900086adf51"
        },
        "item": {
          "id": "2d9c6199-34f9-479f-9f06-c4c762846bde",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3009cbe1-d0ba-43a9-bdfa-b3f7c1d84378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63486766-599d-4cba-bb67-caff318dadd5",
        "cursor": {
          "ref": "bd3819ae-f289-4d07-98d3-cb80c5a2d1f2",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1c2b8e8f-3396-4d3f-add0-c5faf8511999"
        },
        "item": {
          "id": "63486766-599d-4cba-bb67-caff318dadd5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5c5f3363-a64d-423f-b016-d069a040d397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abd70c8-6993-41a8-9a5b-b327ac8933f3",
        "cursor": {
          "ref": "c0a91b53-7ef6-4e3f-94bf-837cf084643c",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "51a9b2d7-84d8-414d-8797-01e4bae72a41"
        },
        "item": {
          "id": "8abd70c8-6993-41a8-9a5b-b327ac8933f3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "73fdfd7b-cd3b-495a-b6cf-27153b6cc384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5abc69e-119f-4573-8895-39a1fa19e5ea",
        "cursor": {
          "ref": "98ff2cb5-b300-469b-871f-8fe8f813d28e",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6324df5c-91fc-4afb-a3ea-9770cff35579"
        },
        "item": {
          "id": "b5abc69e-119f-4573-8895-39a1fa19e5ea",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e48353c3-322e-4b2c-9aed-995c90d12e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d604f8a-a2aa-4800-8354-07fc35519309",
        "cursor": {
          "ref": "5c4cbc63-3bc5-48d4-8710-560e6cd45c19",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d2bfe90e-a60f-4961-9353-8df3bce0b001"
        },
        "item": {
          "id": "5d604f8a-a2aa-4800-8354-07fc35519309",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8e976c72-438f-42b1-aa2d-a26ae344a5e4",
          "status": "Created",
          "code": 201,
          "responseTime": 2349,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "cd39f8c5-faef-4202-a570-91c8b172541c",
        "cursor": {
          "ref": "d74577ab-f338-4cb0-8acd-45e71c15c357",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "dd6db1c0-00f3-4751-9e4e-94f6741c9a0e"
        },
        "item": {
          "id": "cd39f8c5-faef-4202-a570-91c8b172541c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5257e1c1-f4b3-47a6-a42e-4a1148cfd954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e375da51-f1d6-4ab0-a18d-61228494ef50",
        "cursor": {
          "ref": "e62384eb-69e1-49a7-91b9-ba045ac94ebe",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e4330af1-1658-498a-be9d-7614d823e138"
        },
        "item": {
          "id": "e375da51-f1d6-4ab0-a18d-61228494ef50",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d0b69c38-8403-488d-bba1-70b73d100151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b3044b-4bbb-43fb-8cef-c37f0dbae36b",
        "cursor": {
          "ref": "3c45ae3d-5521-4d8a-9467-4c1d60a03838",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2b943c1d-a196-4b77-80ee-9b09408de2e2"
        },
        "item": {
          "id": "13b3044b-4bbb-43fb-8cef-c37f0dbae36b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "92c7fd9a-b244-4a23-a8bd-65c2130009fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f39d73-1779-4f29-b202-9350a82d58c5",
        "cursor": {
          "ref": "3e767e31-37b1-45f4-9e62-a97f2979a642",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4069817d-709e-4503-86ca-3ff8ad84299f"
        },
        "item": {
          "id": "26f39d73-1779-4f29-b202-9350a82d58c5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "635764ef-12f1-49e2-9287-a0252fe84982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c567465b-c660-4b18-b9b0-6656c83b5e25",
        "cursor": {
          "ref": "a723c727-8c63-4aa4-833d-c56423978c36",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "75d60211-8714-4b66-a657-c24a94f77cd2"
        },
        "item": {
          "id": "c567465b-c660-4b18-b9b0-6656c83b5e25",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a8c057e1-01c1-4acc-ab52-f12061cfe280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f7a5d3-3553-49a2-b58b-06d19e407b49",
        "cursor": {
          "ref": "38923caf-83d0-48ba-af5f-bf014a6ede06",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5dcad44d-bb20-479d-bfd2-f5282b498626"
        },
        "item": {
          "id": "81f7a5d3-3553-49a2-b58b-06d19e407b49",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "14506b6d-8c2e-466b-9ecd-c8a8c04e1ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d209d68-166f-4b35-92b5-3cfc969d9d30",
        "cursor": {
          "ref": "f756cb8c-9590-4118-916f-e2eb56170870",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4902846a-556b-4d25-967c-5416e7636a14"
        },
        "item": {
          "id": "4d209d68-166f-4b35-92b5-3cfc969d9d30",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f0d5b2b1-cf08-4f9b-9415-3b579798431c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd717b0-b86b-49b2-a2ad-93885936fa15",
        "cursor": {
          "ref": "5509e56e-e38b-4874-9b7e-bbeda988a746",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "364075cb-6296-436c-a548-53391b32950f"
        },
        "item": {
          "id": "abd717b0-b86b-49b2-a2ad-93885936fa15",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4c19dd0a-53e9-4536-ab1b-f0571a58d340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7336d95-b19a-41e3-a0ac-12e550ec76e6",
        "cursor": {
          "ref": "0af308de-0a07-45ef-a1d6-038f2f03f7a2",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3d64db5b-a89c-42fe-bee7-62952531b0ff"
        },
        "item": {
          "id": "d7336d95-b19a-41e3-a0ac-12e550ec76e6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4fb0c326-f464-42c9-8b65-f1379b3fdbad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de2252e-6b2a-4d4a-80e4-d7ba486b9c31",
        "cursor": {
          "ref": "cbe2531c-2963-4bda-844f-2c5d7adf0529",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d9c1cbd9-584b-4b43-b094-42faa1cc3798"
        },
        "item": {
          "id": "0de2252e-6b2a-4d4a-80e4-d7ba486b9c31",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0798d267-8208-4fba-8381-17e60ca3b3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57b977a-03d0-49d9-9f9e-0276a0b8c1fc",
        "cursor": {
          "ref": "9677cbe4-9491-4d54-87f5-713174281e4f",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ed9826b1-498a-42f1-a6d4-dd3ac6b1fc9c"
        },
        "item": {
          "id": "a57b977a-03d0-49d9-9f9e-0276a0b8c1fc",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6e63a1d4-3f1c-46c6-9a17-683ad537f3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25242030-226d-481b-96f6-6af522fe1eea",
        "cursor": {
          "ref": "eb61e88e-8366-48be-9500-3fa97ddc930b",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8a938b8d-99bc-4a23-85a0-15a8632bb746"
        },
        "item": {
          "id": "25242030-226d-481b-96f6-6af522fe1eea",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "db92a510-8365-479c-a9d4-d19ab4170c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa45177-622e-49aa-a3ad-4d0fc4e133bd",
        "cursor": {
          "ref": "5eaa2aac-44c3-44ba-9ded-e7c8740f03fd",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8326a460-17c3-4f0c-bb97-48f23740b477"
        },
        "item": {
          "id": "5aa45177-622e-49aa-a3ad-4d0fc4e133bd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "166305f6-3e78-42cd-8498-85159ca107f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e282c1-6dfe-4950-bd0b-76b41e590138",
        "cursor": {
          "ref": "d02d1548-b3a1-4f24-9af8-e60b36b012fa",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c39269c6-3dc0-45e0-8e12-28e38ba23ac5"
        },
        "item": {
          "id": "d7e282c1-6dfe-4950-bd0b-76b41e590138",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4ab41989-bdb6-48b4-8fd3-d2befdef3f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc4d449-a244-41d8-a814-f7a164ab337a",
        "cursor": {
          "ref": "7c1f823f-10a6-4e60-9b4e-af4b649320a8",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9938332d-a324-4eec-ab4a-5c35455dc6eb"
        },
        "item": {
          "id": "ffc4d449-a244-41d8-a814-f7a164ab337a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "572ebe2e-b9ba-4baa-a9d4-4d3728fe1171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33179c8-feec-4faa-9282-67bc3cbdec1d",
        "cursor": {
          "ref": "690b0d56-c6b6-4251-8fdc-47871b551344",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "bb00ca14-cdd9-4cce-b665-a7168d668be0"
        },
        "item": {
          "id": "e33179c8-feec-4faa-9282-67bc3cbdec1d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "535075a2-5299-402a-bffa-6dac8b42154e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e420ac-af23-48c0-a431-1669b195bb02",
        "cursor": {
          "ref": "08e7c490-0c70-412c-8f88-ea110e72c4ae",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a1e8a18d-dba1-49e9-8c33-4321945edb2a"
        },
        "item": {
          "id": "44e420ac-af23-48c0-a431-1669b195bb02",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "080c11fb-2345-49d4-9347-b7fe2ed4eed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d553dc8-2dd1-4d5a-b2fb-cea0fcc34c14",
        "cursor": {
          "ref": "208ccaac-5af9-4097-87df-8bb428686b4e",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6e4f0872-6d8d-4ebe-925b-a290a3112c79"
        },
        "item": {
          "id": "3d553dc8-2dd1-4d5a-b2fb-cea0fcc34c14",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "62563639-6dec-475f-9044-be8aa0deaf33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e072cc58-06fa-4cb6-bc22-9a7254f2b8fd",
        "cursor": {
          "ref": "cf1a174d-a942-4a1b-81a5-b6fee4a5a8d2",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "50f23622-b9a8-4a24-84c2-749ef8a3f92a"
        },
        "item": {
          "id": "e072cc58-06fa-4cb6-bc22-9a7254f2b8fd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ac392926-451c-46bc-b55d-06120434951f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e3938b-67e9-4ef9-b4e9-893cca53f9c4",
        "cursor": {
          "ref": "39f63885-54f2-4da2-84bf-50019fb07c0e",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bc842dd8-3bea-49cf-ab28-6fbc667ee9a6"
        },
        "item": {
          "id": "60e3938b-67e9-4ef9-b4e9-893cca53f9c4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b2954b6f-af2f-430b-92ef-b2253b08ba11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5bb9b4-f113-48f0-a8bf-74192b96d9c2",
        "cursor": {
          "ref": "192f7118-42c5-4b67-805d-06c4694af756",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "42752c05-d2e3-47b1-9b44-2a0c2cd2aaa8"
        },
        "item": {
          "id": "ea5bb9b4-f113-48f0-a8bf-74192b96d9c2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6df18986-f4a7-456a-befe-a371d9e2a9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700e079e-df05-4e3d-a1e0-79baeb4dcc97",
        "cursor": {
          "ref": "99abfabc-56a4-4044-80dc-b77842f6ca1d",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "27616f8f-49a5-4837-a486-0e7b9600a70f"
        },
        "item": {
          "id": "700e079e-df05-4e3d-a1e0-79baeb4dcc97",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "82f3fd5e-4d00-4c7b-a4d1-111263a34038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee3e413-0ed5-4852-86d0-f726bc68af8e",
        "cursor": {
          "ref": "dab56c6e-5cfa-4680-8382-363c5a50e5f5",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c38d1e01-e576-4536-989b-70bc2130f001"
        },
        "item": {
          "id": "9ee3e413-0ed5-4852-86d0-f726bc68af8e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6febd412-2662-4898-9706-3e2a80e11649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fa099f-9596-4346-9432-4379f030def2",
        "cursor": {
          "ref": "3618587f-9bf9-4ba7-be67-d8e7e11a87f4",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c5866061-064e-479b-8f1d-38e4ad15f235"
        },
        "item": {
          "id": "08fa099f-9596-4346-9432-4379f030def2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6fadccb4-dac1-484b-8972-391d05eb034a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037db041-b664-4988-a78a-2a9201180351",
        "cursor": {
          "ref": "1c922790-09d0-4e57-bfba-0ca8e34a9885",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "273aa25a-51b3-4a93-acf7-f08698b853da"
        },
        "item": {
          "id": "037db041-b664-4988-a78a-2a9201180351",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "486cad72-d6f4-4850-b5d4-cdb8424434c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d569bdef-718b-4186-a9af-58ed5996973d",
        "cursor": {
          "ref": "4f3df588-05cc-4578-9284-1787874b7e86",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "29d88470-5a98-473e-897e-06087a701db7"
        },
        "item": {
          "id": "d569bdef-718b-4186-a9af-58ed5996973d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "c3405ad3-90e3-4a0b-91b7-55ca4cf68050",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 540,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e82101-7383-46fc-9496-36211e2dc28b",
        "cursor": {
          "ref": "97b1f293-1385-4d8b-9443-70e9219cf456",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9c067ff7-a0d1-4169-8971-3d5c5fbf95fd"
        },
        "item": {
          "id": "62e82101-7383-46fc-9496-36211e2dc28b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "748b7e17-73c7-4a04-834c-9277a7c69e23",
          "status": "Created",
          "code": 201,
          "responseTime": 2417,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "530f1992-62db-47f8-ac76-a5192c447057",
        "cursor": {
          "ref": "6429bcf7-0a79-4450-9808-90b277bcf4d4",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1f50d048-1892-48ad-afb7-be07a6f0c209"
        },
        "item": {
          "id": "530f1992-62db-47f8-ac76-a5192c447057",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "31b3722d-3ff6-43b6-931e-b4c500cde5a4",
          "status": "Created",
          "code": 201,
          "responseTime": 2407,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "5656e210-ea70-4afe-8c48-288b7b050077",
        "cursor": {
          "ref": "38f1af97-b588-4b7a-8030-f44d92f1833f",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c220339f-93bf-4f2f-8d3e-8bc93ce08ac0"
        },
        "item": {
          "id": "5656e210-ea70-4afe-8c48-288b7b050077",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cbd986ed-dc9f-49bb-8cd3-934116ab6a48",
          "status": "Created",
          "code": 201,
          "responseTime": 4001,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "68c06b58-1565-4e9d-a649-db8472fa6cb0",
        "cursor": {
          "ref": "0210d740-99f5-4031-95bb-38b278221106",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7e3bc71f-9ba5-4e18-b7ac-455ceef93592"
        },
        "item": {
          "id": "68c06b58-1565-4e9d-a649-db8472fa6cb0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9a6d008b-9c35-405f-9800-1af3b97022ed",
          "status": "Created",
          "code": 201,
          "responseTime": 2696,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "3c68f628-ea2e-4a00-9857-164cd5cb4c74",
        "cursor": {
          "ref": "f9e64be5-a932-412f-a935-73986bcffcef",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d3e21ae1-d236-458b-947e-afb38501b5a7"
        },
        "item": {
          "id": "3c68f628-ea2e-4a00-9857-164cd5cb4c74",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5d4f7c4c-2d4d-4154-914b-43bcf3b4de23",
          "status": "Created",
          "code": 201,
          "responseTime": 2533,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "d82696d7-e9af-40eb-8852-9b61a63b067d",
        "cursor": {
          "ref": "0ed04376-8886-4bcc-af31-449463e2352c",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d7955962-2aed-4a54-ab3b-a5a137f74131"
        },
        "item": {
          "id": "d82696d7-e9af-40eb-8852-9b61a63b067d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "aea16690-ec52-4508-a64d-9fbf074bfe1d",
          "status": "Created",
          "code": 201,
          "responseTime": 3246,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "be2f62de-da9f-47ae-a626-952b774c422f",
        "cursor": {
          "ref": "e53ce630-d6f4-4e44-ad78-6224cd9ee5c9",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2ad4b12e-10f1-419a-b36a-97736dc6ca13"
        },
        "item": {
          "id": "be2f62de-da9f-47ae-a626-952b774c422f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "62c9196c-6717-4b60-b902-b540e48f568c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2f62de-da9f-47ae-a626-952b774c422f",
        "cursor": {
          "ref": "e53ce630-d6f4-4e44-ad78-6224cd9ee5c9",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2ad4b12e-10f1-419a-b36a-97736dc6ca13"
        },
        "item": {
          "id": "be2f62de-da9f-47ae-a626-952b774c422f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "62c9196c-6717-4b60-b902-b540e48f568c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01ff907-c050-4d1b-abfe-3c95a19ee98c",
        "cursor": {
          "ref": "a904d957-f57b-4151-b829-37b987b3cd46",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "96b002c7-5fde-4aec-970d-c15b38dbd30f"
        },
        "item": {
          "id": "d01ff907-c050-4d1b-abfe-3c95a19ee98c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dbe5913d-ec06-4c91-85e2-a5da08fd2855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d679af-3823-4e5a-bbfd-ec6e4a47328b",
        "cursor": {
          "ref": "3cdfe577-8aa6-488b-aab3-335ade509ad6",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "17676942-bad2-49f1-8452-379ec84a7326"
        },
        "item": {
          "id": "c8d679af-3823-4e5a-bbfd-ec6e4a47328b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "41a41238-b098-4744-9814-d7c82559e19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51718a3-2078-4f92-8575-bdf071c91afc",
        "cursor": {
          "ref": "8d7d4e09-f944-4f25-9206-adda6745c329",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2855a19f-9013-4710-aabb-0c87975a13c4"
        },
        "item": {
          "id": "f51718a3-2078-4f92-8575-bdf071c91afc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0945df5b-450f-48fe-94ad-403c12ad477d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4db28a-1814-4580-84f7-09493bbf4413",
        "cursor": {
          "ref": "957e855f-2012-40a5-bfe8-e3f75bb92de2",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6fdcbd28-5d82-47d5-be68-f47f606a9a0d"
        },
        "item": {
          "id": "9c4db28a-1814-4580-84f7-09493bbf4413",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "37abc7be-8f54-44dc-a51c-b2cf59b82385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b041b5-9a03-439e-ad85-fe5b5871e146",
        "cursor": {
          "ref": "a8278798-9718-4143-a702-5d102f2b1363",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0a757402-e56e-403a-8b13-9f53aafc7bac"
        },
        "item": {
          "id": "82b041b5-9a03-439e-ad85-fe5b5871e146",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "32e0f649-1cc3-4271-b1f1-b0e02b57accd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e554393-cdba-4412-bd0c-f6d869b3fd0f",
        "cursor": {
          "ref": "732f2819-75a1-4f86-a608-7591e5381531",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "05715d3d-0dd3-4453-bc3f-89d25142a955"
        },
        "item": {
          "id": "9e554393-cdba-4412-bd0c-f6d869b3fd0f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6d5c1a22-eacc-4326-a3fe-05adcc57db3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d92170-378c-4f0a-aa32-493caca74dc0",
        "cursor": {
          "ref": "b291e97d-9015-4979-b125-664f5fc2d477",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b38ef6db-0ab7-4be8-8c0b-8e19cb1aadea"
        },
        "item": {
          "id": "f7d92170-378c-4f0a-aa32-493caca74dc0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "be6b359a-11fd-4fcf-9837-eacd90f1f8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b561032f-b2c4-4c82-bfa0-09d1bb5b9b44",
        "cursor": {
          "ref": "18926065-a1d0-4068-beca-5acf20642076",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "16eaf613-7df5-4356-bcb2-5bcab0818e48"
        },
        "item": {
          "id": "b561032f-b2c4-4c82-bfa0-09d1bb5b9b44",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "753ca59b-af23-454a-8350-449a713b38d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fbc35a-45bb-483f-aad7-42b7fbfde169",
        "cursor": {
          "ref": "a44f77c6-8823-4d51-95b4-091dc04ab77f",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a4b90cdf-2e32-426b-b9ae-5e34f6448c6a"
        },
        "item": {
          "id": "d3fbc35a-45bb-483f-aad7-42b7fbfde169",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cd879a0d-a4e8-4fb2-b780-82df7998ad45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504df169-0e87-42af-8ed0-07d0d95a989c",
        "cursor": {
          "ref": "833a4e27-8ddb-424b-85ea-9e79e9abcef0",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3e2858da-ac95-496d-9b83-c6573f43e8f6"
        },
        "item": {
          "id": "504df169-0e87-42af-8ed0-07d0d95a989c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "11fa152e-a81f-4b11-a5d5-0643e2272432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ffdb33-c7ea-43d0-8d44-20fdb0856f7e",
        "cursor": {
          "ref": "17319c21-e6e0-4f54-b205-5bde841e3b5d",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4bf5a5f9-30aa-4f24-8743-208c533afe29"
        },
        "item": {
          "id": "68ffdb33-c7ea-43d0-8d44-20fdb0856f7e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "60dcd2bb-8b6a-4779-a1df-93356565d74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c382ff55-73eb-403a-8264-5cd644bb9463",
        "cursor": {
          "ref": "6568ead6-ef7a-4e76-b349-a8dd9ec443f0",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4b2202b1-a484-4fac-9669-7a00e01a1bb8"
        },
        "item": {
          "id": "c382ff55-73eb-403a-8264-5cd644bb9463",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "77f39989-9dce-462b-ae0f-cc1f65966e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6c8f4a-0689-4f06-8048-bedcc2c6d061",
        "cursor": {
          "ref": "80a603e6-dfff-4bef-b673-373f67f27a6e",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5f240c90-676a-4a95-b80f-d38be999dd12"
        },
        "item": {
          "id": "3e6c8f4a-0689-4f06-8048-bedcc2c6d061",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ecad6abb-d087-4968-9198-67d629bc368e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd087bf-4df5-45b6-bf1a-563400d24cb3",
        "cursor": {
          "ref": "b75b3f9d-fd3b-4a74-8dd1-61979a8dcf5d",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ab1e4bd5-51b1-491d-823f-2c0d81188ea1"
        },
        "item": {
          "id": "7bd087bf-4df5-45b6-bf1a-563400d24cb3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0eea0545-b613-4659-8cf3-d151e270da0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44351118-b371-474e-bc8e-4b8781292f37",
        "cursor": {
          "ref": "c629bdac-108b-451d-aff3-748572aae9bd",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "33e9fb66-1549-4563-b489-49e759adf7d0"
        },
        "item": {
          "id": "44351118-b371-474e-bc8e-4b8781292f37",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d32e3109-063c-4f60-9085-5290760ea507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c30c5d0-7a2d-4e94-bfb6-feb03181432f",
        "cursor": {
          "ref": "1fbfbfff-1346-41dc-8077-638a35a9f707",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f8ee6a57-aa72-4fc0-beef-6f75a2f30f24"
        },
        "item": {
          "id": "2c30c5d0-7a2d-4e94-bfb6-feb03181432f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "eff87789-0c07-4ca4-a92c-60ca1680c3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb54558-0f29-4d8d-b80c-356d0a08d5ee",
        "cursor": {
          "ref": "9583ee7d-0f7e-492a-8e5b-c28c16136bae",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "856bf211-93c3-4969-b306-dc6f161d6dcc"
        },
        "item": {
          "id": "cbb54558-0f29-4d8d-b80c-356d0a08d5ee",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ba03b75a-32ce-4051-874c-5049b6bc2b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bff80d-ad56-4027-827e-094b1cef8280",
        "cursor": {
          "ref": "a76e0a9f-034c-43ef-9566-7ab6f30e63a6",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a52aa9a4-820c-4e99-9e09-b6418a75d2ae"
        },
        "item": {
          "id": "c9bff80d-ad56-4027-827e-094b1cef8280",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b64a21d5-b6e2-4e6b-91d5-771f58da7db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb840012-3080-47d9-8c4a-ef9268a0b3f4",
        "cursor": {
          "ref": "92801b60-6282-454a-955e-205652386497",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "95a459cd-17f4-471f-996c-0f5996ca6cc5"
        },
        "item": {
          "id": "bb840012-3080-47d9-8c4a-ef9268a0b3f4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "780321af-764c-43f6-9b20-1305f0f1857c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdef7693-8924-421a-8920-9882b658f943",
        "cursor": {
          "ref": "5830065b-3157-4605-afda-65514713fd0b",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8797be88-20d3-42a2-b1b8-2bb6e430ca55"
        },
        "item": {
          "id": "fdef7693-8924-421a-8920-9882b658f943",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e27bae1e-eabf-4ef5-8fdc-91ff509dcab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11414656-4e6f-41dd-ae76-7f221e542866",
        "cursor": {
          "ref": "abc89af4-81b5-4838-bc22-ec1a8619a266",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "42099aae-e6ad-41b9-8372-30c6af20ca99"
        },
        "item": {
          "id": "11414656-4e6f-41dd-ae76-7f221e542866",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "db22a7fb-341f-4b16-9059-bef31b09bf65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9ac36c-497d-41cd-a10a-57aa84223a33",
        "cursor": {
          "ref": "6278b056-28a9-43ca-83bd-6bddaf0398d6",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a240a630-81c4-4a58-82ec-5972a0e4f2b4"
        },
        "item": {
          "id": "bf9ac36c-497d-41cd-a10a-57aa84223a33",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "733f844e-72b0-49fa-ad25-2840d734555f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2627f73e-f1d6-4ad4-87cb-ee225f3b6a85",
        "cursor": {
          "ref": "f76d40d1-a7d4-44f0-8ce6-ded5e071402d",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "60dff9a7-ae22-47b9-afa6-78679a0f3034"
        },
        "item": {
          "id": "2627f73e-f1d6-4ad4-87cb-ee225f3b6a85",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f1573a1f-d67e-497c-98ab-f56e45cb158f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93e2965-8f74-4d15-937e-7fd9c3824ae8",
        "cursor": {
          "ref": "8896912b-31c1-4b0d-95e3-ae1e6f3ce3ed",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "95c0783a-a2e1-42bc-976d-4e326c6701ec"
        },
        "item": {
          "id": "b93e2965-8f74-4d15-937e-7fd9c3824ae8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a1e3ba9b-eebd-4767-8ded-2c6f2cbe4d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 982,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd1d1d9-7567-489a-a38d-662ad8af7f49",
        "cursor": {
          "ref": "cd4a3869-bec2-41c2-943d-d83ba2d40bee",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "77848503-9f2b-477d-a661-adb1fc9fcb24"
        },
        "item": {
          "id": "4dd1d1d9-7567-489a-a38d-662ad8af7f49",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7841b22e-4e04-4d26-806a-80e3a1f65c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1056,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fa56b3-8b40-4f2c-846c-3fbc732892b4",
        "cursor": {
          "ref": "baafe89b-e213-47ca-bcd1-1660f449b9d1",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e538581d-80b4-4a39-9b44-87b1b9d48600"
        },
        "item": {
          "id": "22fa56b3-8b40-4f2c-846c-3fbc732892b4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "13b29c8f-d3c3-47ef-bab0-3e412a022897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236d4a16-c12e-4eb4-9d1f-5d60cd53c384",
        "cursor": {
          "ref": "3f737521-4060-457e-85ca-2ced3369b85a",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "08f40525-6d46-40a6-8e31-31fc09766914"
        },
        "item": {
          "id": "236d4a16-c12e-4eb4-9d1f-5d60cd53c384",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e6ae5edd-28ec-42e7-b3df-b8220250a537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3434fc-7fe1-4c2c-a9f7-8633791e0729",
        "cursor": {
          "ref": "94c3143b-97d5-4d0a-84fa-8da449d3e4d0",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "040dd7d4-0f8d-4bbf-8175-57e59d5bece2"
        },
        "item": {
          "id": "8d3434fc-7fe1-4c2c-a9f7-8633791e0729",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "39210178-66e7-40b6-9a61-eed6f56b7a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b389524-8326-4b45-9e92-f697fdb2b74b",
        "cursor": {
          "ref": "ae3475ee-7165-4150-8c70-e365cc58fadd",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fdf36b93-fa68-4748-bc7f-9eeef77fcda9"
        },
        "item": {
          "id": "2b389524-8326-4b45-9e92-f697fdb2b74b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f2337090-6822-4912-b9b3-6e640209acbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f30a484-2699-4cbf-a504-e132dd65efc1",
        "cursor": {
          "ref": "4042a260-4e38-44ca-8859-9a4ac9a7e95c",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "748acdcc-e2d7-4de6-bbd8-128a088cebc9"
        },
        "item": {
          "id": "4f30a484-2699-4cbf-a504-e132dd65efc1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "01ec9aee-b7aa-4203-86ce-fa89db427f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5f7482-2a19-49b7-b972-09659631eb13",
        "cursor": {
          "ref": "fca2608a-a481-4b3b-9cf6-cbd099c95131",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "acdef7e4-24e0-475c-aa61-b948fe61c511"
        },
        "item": {
          "id": "2f5f7482-2a19-49b7-b972-09659631eb13",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2da68e1d-c787-4bee-abfa-63f2290f71e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc77b8f-be04-4092-af6a-bdc4103f5263",
        "cursor": {
          "ref": "187fb494-84b2-42ff-b41b-2bd04bed8ec1",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c509d6f6-0246-479c-9949-bd4b30db1c24"
        },
        "item": {
          "id": "7cc77b8f-be04-4092-af6a-bdc4103f5263",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2b984365-0f4d-4b39-a99d-a27ac2228405",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925ad7b6-7b80-4ec0-a034-c17030fa3c7a",
        "cursor": {
          "ref": "fdbca728-1c9b-4911-b519-01eaaba54cc9",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e7356a12-1b49-47a8-8267-1a65508a676e"
        },
        "item": {
          "id": "925ad7b6-7b80-4ec0-a034-c17030fa3c7a",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "71a8115d-1763-4290-953a-73a3f4903b82",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 613,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18dc22d5-9f48-41df-ba28-876878073e2d",
        "cursor": {
          "ref": "8359e41b-c0ec-43b7-8812-28ea5befe3aa",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "795f3f0f-3ae9-4f78-ab21-d92497dbceec"
        },
        "item": {
          "id": "18dc22d5-9f48-41df-ba28-876878073e2d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "500f2646-7be7-406c-9f68-137dc5108704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18dc22d5-9f48-41df-ba28-876878073e2d",
        "cursor": {
          "ref": "8359e41b-c0ec-43b7-8812-28ea5befe3aa",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "795f3f0f-3ae9-4f78-ab21-d92497dbceec"
        },
        "item": {
          "id": "18dc22d5-9f48-41df-ba28-876878073e2d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "500f2646-7be7-406c-9f68-137dc5108704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac69b27f-97b5-4d1e-8652-4e4e86df389d",
        "cursor": {
          "ref": "9653aaf1-a40a-4bbb-b5f4-dcd9ce8b8f32",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6e9659ef-a091-4892-b2d4-ce04748f01cd"
        },
        "item": {
          "id": "ac69b27f-97b5-4d1e-8652-4e4e86df389d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c8c51cff-8246-4b1d-8b70-e2b5bd20ccc9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 310,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "2b2ddcc8-6026-466c-bdbc-4406eddb6e89",
        "cursor": {
          "ref": "1954ca8e-5c96-472d-ac0e-d1be81a57a4a",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "885dec12-cad8-45bc-a722-09678c537ffd"
        },
        "item": {
          "id": "2b2ddcc8-6026-466c-bdbc-4406eddb6e89",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4eca4d57-b45b-4937-863b-4ad26839448e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e8328e-7c69-4cb6-872c-7388f80dbb91",
        "cursor": {
          "ref": "33a2579e-6057-4900-8d31-f8cd1a97380c",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fc114407-8475-4362-a3af-9e0ff6b146a2"
        },
        "item": {
          "id": "72e8328e-7c69-4cb6-872c-7388f80dbb91",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b0150c69-16ca-4c70-9711-2cc4d044d48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2707cc1c-22a8-4bfd-87a8-3aab4cc1de7c",
        "cursor": {
          "ref": "94cbf64d-29db-4126-8fd2-4b3e4a384b12",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6c293909-d012-42ff-9fab-7d17ee8f1808"
        },
        "item": {
          "id": "2707cc1c-22a8-4bfd-87a8-3aab4cc1de7c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "523ab335-97bf-4c2a-8304-3eb6da92ed11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2d4092-158a-48d3-b445-9ad9f5525f06",
        "cursor": {
          "ref": "35665485-cdcc-4e7f-88f9-c0871155b7fc",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9c0bce88-f37b-4510-b5c1-ff16db097dc3"
        },
        "item": {
          "id": "9e2d4092-158a-48d3-b445-9ad9f5525f06",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "dac2b1be-83b2-4d3a-a10f-44318af53054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc15a827-4e98-484e-8423-f7a82882370d",
        "cursor": {
          "ref": "f7e125a4-8f7d-47e6-8e93-bc3ceba97a26",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a5c62a67-c574-4502-95c5-58ab171d9316"
        },
        "item": {
          "id": "bc15a827-4e98-484e-8423-f7a82882370d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a8fc056b-f73b-427e-a88b-b35cba83d207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e6e6e6-47d7-4a21-ad3b-ca1ede77a558",
        "cursor": {
          "ref": "8c35dc48-b989-4e82-90c2-38848e32f5b2",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fd2eb040-8db8-4f11-b93f-690c3134d713"
        },
        "item": {
          "id": "d3e6e6e6-47d7-4a21-ad3b-ca1ede77a558",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "376f0850-ba54-49e5-850b-947fede58a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5063c77-f2d3-4b9c-a0ec-22fc7ced5af3",
        "cursor": {
          "ref": "12923d94-8a1a-4832-bd18-d4046c60895e",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bef0b882-1e55-4c27-aebb-41c674757431"
        },
        "item": {
          "id": "b5063c77-f2d3-4b9c-a0ec-22fc7ced5af3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f0d58848-0965-4a8d-8bab-db8143971105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cbe301-d5cf-459d-95e2-2e8463ab25f3",
        "cursor": {
          "ref": "d0d86538-b4ea-4f86-85f9-a7cb5b4d7bf0",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "56fc9d23-c453-4790-8eb5-83d2391bf8c8"
        },
        "item": {
          "id": "d8cbe301-d5cf-459d-95e2-2e8463ab25f3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "41ea2662-5042-4459-b04d-bbf540d6a9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0ad3d9-62a6-43a6-a28c-9b5f8e5457fe",
        "cursor": {
          "ref": "83bf7170-9292-4013-91b1-17586ad61103",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6aa5018a-ac10-404e-ae25-8dd0582e3ffb"
        },
        "item": {
          "id": "ff0ad3d9-62a6-43a6-a28c-9b5f8e5457fe",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a6d43ffc-f130-4bc9-ab13-0b1716cc2abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fa5003-89e9-44b7-b6fd-cd1d11625780",
        "cursor": {
          "ref": "14a3d9c9-2d4b-4d0e-b7aa-cffd86477ccc",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b458066e-e776-4fa1-9036-dc6fb1622230"
        },
        "item": {
          "id": "60fa5003-89e9-44b7-b6fd-cd1d11625780",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "597e2e9c-a28b-4625-9ea0-3b2078054432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ddc094-0242-4e93-a87a-482f9a7858b6",
        "cursor": {
          "ref": "2fc6bca8-394a-4551-b9ef-fdf8fddae632",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "41051c4b-e8c2-4594-a3a4-92daaa5a3d6d"
        },
        "item": {
          "id": "45ddc094-0242-4e93-a87a-482f9a7858b6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b85e4d2b-6a0f-44a0-a5cf-dcda22c08bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63486368-e2b1-46e2-ab78-2d3d4fa9ab42",
        "cursor": {
          "ref": "cba79f49-dfeb-4b30-b6c9-c8060d76ec81",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "937116a6-dd74-4f37-8afb-a819c371eace"
        },
        "item": {
          "id": "63486368-e2b1-46e2-ab78-2d3d4fa9ab42",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ab8c9eab-7079-40c1-9fa7-00e40276650d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2957fbbc-949a-4c8c-b5e6-20e602f3e8aa",
        "cursor": {
          "ref": "e564623f-521b-404b-9819-107f548a0b89",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6ae07257-7104-4f6a-9a76-897512aa3289"
        },
        "item": {
          "id": "2957fbbc-949a-4c8c-b5e6-20e602f3e8aa",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "32afe851-86d2-49c7-825e-f3a31113f414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569c847f-a896-4eeb-963e-2a83154a8125",
        "cursor": {
          "ref": "c2e5c8f4-7536-4185-87c2-24d0be2c1ac6",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "97631c2a-d0a9-4534-a54e-96eccf12f287"
        },
        "item": {
          "id": "569c847f-a896-4eeb-963e-2a83154a8125",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "164edece-40ca-4dc3-a38c-c1a1d11c4e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ff03e9-45b3-4b04-8b6e-3b007726a702",
        "cursor": {
          "ref": "75a6f0ac-2ba7-43b7-b527-d9cb3c35278d",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cb3ab24e-f416-4940-8ba2-c66802f87b1e"
        },
        "item": {
          "id": "66ff03e9-45b3-4b04-8b6e-3b007726a702",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2b7e5380-a878-4707-a2c7-96d88559776b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aca2f1f-717f-40c9-b260-103c8d007f56",
        "cursor": {
          "ref": "00ba8e7e-098a-4d46-8e18-cbc436827c3b",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7cbbc21d-5024-47e2-9f47-85dd619bd7b0"
        },
        "item": {
          "id": "5aca2f1f-717f-40c9-b260-103c8d007f56",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b87d9424-7706-4336-a207-12fadf2f94d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b6c9e0-ed6d-4012-8457-59a6b0d1a53d",
        "cursor": {
          "ref": "d9d878d4-8d31-4e96-b265-ed62f65bf7c3",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "041f05e1-9026-4405-a304-430615097c79"
        },
        "item": {
          "id": "37b6c9e0-ed6d-4012-8457-59a6b0d1a53d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2c006ff4-7f61-4141-b8a3-e2c673d2dfa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0945ef97-8a40-44d9-aa0f-12b5bdd5c994",
        "cursor": {
          "ref": "305f7759-5272-4a73-be1e-b99cc62ced32",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bdc7e7f9-7e2f-4980-9ecf-fee17651ae1c"
        },
        "item": {
          "id": "0945ef97-8a40-44d9-aa0f-12b5bdd5c994",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a5bc494e-4591-4aad-bba9-d6f82975a5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7746be-850e-4f1d-b400-33381c78a118",
        "cursor": {
          "ref": "856cca9a-fb16-42f4-92f7-2dd2705dfca3",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a371ef38-dab5-4cb3-9705-e56f8eb819b6"
        },
        "item": {
          "id": "2d7746be-850e-4f1d-b400-33381c78a118",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e19f64c7-b1c2-4cd4-aa62-7711596744c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458350db-ea74-4130-b3e3-35f0b5d5ee39",
        "cursor": {
          "ref": "e9e1b2fe-63c0-4360-96f3-02be12157d73",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f876682a-c9d4-4e85-a27d-1543fc205dc6"
        },
        "item": {
          "id": "458350db-ea74-4130-b3e3-35f0b5d5ee39",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "768eed35-596a-4d5f-915e-5f68eae62d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49375e44-1c5e-4ce2-ab76-c968b3c27606",
        "cursor": {
          "ref": "37f5aeea-01f5-45ec-881a-054724a1368c",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a568c90a-befc-4308-9623-5ee183571417"
        },
        "item": {
          "id": "49375e44-1c5e-4ce2-ab76-c968b3c27606",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6f86bdd9-d253-4be2-819d-14f510502eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf9dc05-17d2-43b6-83d0-127daf526a2b",
        "cursor": {
          "ref": "d70789bf-af67-47a0-bbbb-64cbae5e3f57",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "24b0bbca-188c-469c-9fc0-37840fb258e1"
        },
        "item": {
          "id": "3bf9dc05-17d2-43b6-83d0-127daf526a2b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "22abae2f-e201-49a0-a119-4ca6f9c71a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479903ae-1411-49f3-a832-fcfbb18081b6",
        "cursor": {
          "ref": "22f7d83f-a597-4769-87cf-0d3c610fef2f",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a8775aec-b54e-49cb-8264-a627ef458ae3"
        },
        "item": {
          "id": "479903ae-1411-49f3-a832-fcfbb18081b6",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8b0907af-2e06-42b3-91d4-877ce448fbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b152bb75-eba1-4369-9609-a10a85bf93ae",
        "cursor": {
          "ref": "bf265beb-5a97-420d-82b6-a86e192c58fd",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8dacfa34-0882-4618-bcc8-41ebbc4382a5"
        },
        "item": {
          "id": "b152bb75-eba1-4369-9609-a10a85bf93ae",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "129de0a4-e910-4c03-898a-c50cd68be1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfab2a07-24cd-4961-b576-f4bb4d82bbe0",
        "cursor": {
          "ref": "0ceb6889-4c1e-4995-8ed8-56624835e91c",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "df0862d2-c19d-4d38-b8f8-3e5276ec5e80"
        },
        "item": {
          "id": "dfab2a07-24cd-4961-b576-f4bb4d82bbe0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4dc2bc42-a1fa-4fe7-9d0f-9b50371414db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf6a2a6-7653-4454-8b20-cffcdb5177cf",
        "cursor": {
          "ref": "ef1da391-aff6-4e81-b165-ebd39d245fb9",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ba2258ba-91a9-47f3-904e-c47c3bca83d2"
        },
        "item": {
          "id": "5bf6a2a6-7653-4454-8b20-cffcdb5177cf",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a3c5aa11-78d0-4ed4-a13b-2e6d8dcf364c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba4467d-5764-4d9a-b7fb-60d669a6aa17",
        "cursor": {
          "ref": "f84b01e0-a194-4627-87e6-2f83a0440dd4",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "62d9fed1-57e6-4518-bb21-d00d1943bde5"
        },
        "item": {
          "id": "eba4467d-5764-4d9a-b7fb-60d669a6aa17",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7d0c0c5a-7984-4d36-81c1-8a40406605d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401b03f8-6abc-47e3-8077-83e3bd8a9330",
        "cursor": {
          "ref": "299c9db9-491a-49ec-8877-11ede187877b",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4ec5f4a8-ede2-4830-a472-5946aec797d9"
        },
        "item": {
          "id": "401b03f8-6abc-47e3-8077-83e3bd8a9330",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "54993963-44f7-4200-9c32-180ffc610050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbed5b92-bbe9-4bec-a839-6f87ea250371",
        "cursor": {
          "ref": "d615b586-0a27-4d69-9c08-256ddd232421",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "13f48fb2-77e3-4deb-a2db-9820e098f4bb"
        },
        "item": {
          "id": "cbed5b92-bbe9-4bec-a839-6f87ea250371",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4841efc3-7a64-4951-a4d9-7d9a81e928df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e4405c-f4ea-4926-bac0-2212cdd175a7",
        "cursor": {
          "ref": "83c313eb-af21-44aa-977c-0edbd551824e",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4ccb6dd8-3a35-4873-804e-beae83d109cd"
        },
        "item": {
          "id": "f8e4405c-f4ea-4926-bac0-2212cdd175a7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ed1e6b7b-9c76-449a-b74d-ecc1a7efc118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3373d677-caea-411c-9d97-cb212f4895c3",
        "cursor": {
          "ref": "31e4a049-b77e-41cc-a9ff-a4fbacdac84b",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ff7a94d3-ae47-4eef-8012-7e2bdf73cb91"
        },
        "item": {
          "id": "3373d677-caea-411c-9d97-cb212f4895c3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "496960c1-00c2-440d-b7e9-f7dd4174c46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b893bbd-bd71-4684-a38a-368919c48161",
        "cursor": {
          "ref": "7fa76c3f-570d-4a07-8c2d-59c711e63100",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0dbf6849-8753-4062-8fee-7226b3aebf25"
        },
        "item": {
          "id": "5b893bbd-bd71-4684-a38a-368919c48161",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2dc84bb1-0367-433c-ac7e-03a1d915bdca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c465640-c6d4-4fb6-bfd8-83667c5ccfbd",
        "cursor": {
          "ref": "5b8a641b-5bfd-46dc-8afb-f1a161964643",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f061963c-532f-4236-837a-50f0c325ecb6"
        },
        "item": {
          "id": "5c465640-c6d4-4fb6-bfd8-83667c5ccfbd",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c6e8e5a7-ba82-4a2c-895a-db586cc148fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd62c242-a59b-4fcf-9f9f-22ab33929921",
        "cursor": {
          "ref": "d18756f9-90b6-4f40-bdd6-abf5cb579f39",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d36875ce-ff49-4db2-b4fb-0f0faee70a3f"
        },
        "item": {
          "id": "dd62c242-a59b-4fcf-9f9f-22ab33929921",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b7c4a223-3318-4d71-8fea-400a53ca64a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f0b3de-9f1c-4952-9c21-b630cb4d468a",
        "cursor": {
          "ref": "f04c744a-79ba-4fbd-b46e-576459db2587",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "28d6ac7c-751b-43a2-bd6c-6f09c1edfa41"
        },
        "item": {
          "id": "f5f0b3de-9f1c-4952-9c21-b630cb4d468a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c311394b-efe7-444a-9ce7-856586ab520d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fadddb-2393-46e4-bdbe-fb332eb35619",
        "cursor": {
          "ref": "948f3926-73c1-49c1-a71c-513c56e6442f",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7d1236c3-02f5-4dd0-b29f-fff351102902"
        },
        "item": {
          "id": "b8fadddb-2393-46e4-bdbe-fb332eb35619",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "88932f7b-8d8d-4f1a-9310-be34df7edc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7338658b-5694-4c50-9ce3-9c56b809eb3e",
        "cursor": {
          "ref": "010db630-bf8e-4c55-8b6a-dc656f712a90",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "de734e8b-81bb-4b82-8f7c-38e5413ba6af"
        },
        "item": {
          "id": "7338658b-5694-4c50-9ce3-9c56b809eb3e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "599a69e2-98e8-4108-9c51-fa9411cf4cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf56572-0546-4411-9005-f0d61530c2e1",
        "cursor": {
          "ref": "5623ed4e-23b5-4394-83aa-39d84b0b7dea",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1a693893-2131-48e0-8ea0-f99aa5a67aa3"
        },
        "item": {
          "id": "fcf56572-0546-4411-9005-f0d61530c2e1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5c5c0f3f-74e8-4a9d-b927-ee3632338ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a437d9fb-ecf7-44a8-bc1e-e0416d5bab5c",
        "cursor": {
          "ref": "f56603d3-ecdb-4f6a-9d82-57d12ce85e9c",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a8c8ad02-3dc3-4249-ba91-25da3c9e1d33"
        },
        "item": {
          "id": "a437d9fb-ecf7-44a8-bc1e-e0416d5bab5c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0e84369b-ab32-49c5-b723-35332ddea18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb1a085-3a8f-4e2a-a7de-60452a5337e6",
        "cursor": {
          "ref": "dc37445d-1d9c-40d5-a310-33a27132a85c",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "519f86ac-099e-41d7-8b81-23ed1a645a0c"
        },
        "item": {
          "id": "9cb1a085-3a8f-4e2a-a7de-60452a5337e6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "80f71127-cf43-429d-b7f9-e572f8b641e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b38158e-5faa-45e8-bb21-bd116d332eee",
        "cursor": {
          "ref": "d9d601b7-4961-4e67-8509-ce046fcba0df",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2238f50b-6fac-4991-879f-8193085803eb"
        },
        "item": {
          "id": "2b38158e-5faa-45e8-bb21-bd116d332eee",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f9804499-7099-47fb-87dc-d428cfde9809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a357ec-ae95-49cc-848d-9774a2af56c2",
        "cursor": {
          "ref": "bbc04686-8212-4030-a014-19c4c58b513c",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c4f14740-b579-4edb-990b-e0f62028fb8b"
        },
        "item": {
          "id": "c2a357ec-ae95-49cc-848d-9774a2af56c2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a9c678a5-b23a-4d63-abac-e123a167d0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba1f754-7e55-4a7a-bd75-ec993feb4c9d",
        "cursor": {
          "ref": "344481ed-88b1-4bf3-8b3c-d6db9c8f4974",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a46c32a5-6a98-4fc2-8c1c-8f0167e6c9dc"
        },
        "item": {
          "id": "1ba1f754-7e55-4a7a-bd75-ec993feb4c9d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6d177b54-bcd4-4951-a94f-720fd0519dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7913e52-0726-4c74-b8b6-aae37bb698c6",
        "cursor": {
          "ref": "4d266c7a-f74f-41d0-82dd-e8eb21719636",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "323590a8-8a3f-4601-bf42-cb1eb64481ca"
        },
        "item": {
          "id": "b7913e52-0726-4c74-b8b6-aae37bb698c6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5ebbf276-e41b-4fb7-8bfc-1b640796802c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c840decf-f5b3-45c8-8132-e61bad03f310",
        "cursor": {
          "ref": "aab385b0-635a-4ac9-a36d-0351b30ab16b",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5b914d1c-b987-4780-b4c8-e1c2d073f26e"
        },
        "item": {
          "id": "c840decf-f5b3-45c8-8132-e61bad03f310",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "028810fd-9fd5-422b-aefb-acb96b4c147f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f080e3-222b-42ff-9d5d-edb692c491ce",
        "cursor": {
          "ref": "b0e24763-ec84-4177-9eb1-85128926b076",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "480cf837-ed2a-4f2b-8484-d2bd9fcdea15"
        },
        "item": {
          "id": "a3f080e3-222b-42ff-9d5d-edb692c491ce",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ec11e583-b29b-441e-b596-94375908a738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd96a364-ff06-42da-bcb8-b7054aeca7bd",
        "cursor": {
          "ref": "7c61bf85-81a1-4c56-a317-7ec8a6078791",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d2d00bf5-bee4-4a36-a77d-1a815c29ab9f"
        },
        "item": {
          "id": "dd96a364-ff06-42da-bcb8-b7054aeca7bd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "158fb2a2-b993-42cb-b823-cdaa1e5498a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde77c3f-f2c3-48cc-91a3-5f446c7f1897",
        "cursor": {
          "ref": "542ec2c7-429f-4610-b994-4a1620776a90",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "acdd3fe6-b10f-4e7c-8fd1-0cdb999f5f10"
        },
        "item": {
          "id": "cde77c3f-f2c3-48cc-91a3-5f446c7f1897",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "295772f5-7520-4217-8ba3-cf3c500b41bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc42d886-b2ac-4182-a53d-709bfbcabcb3",
        "cursor": {
          "ref": "9819efad-0baa-4bb9-a3d3-e9db386fdc61",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "506e70ed-df99-435b-9b0f-6e326ec923ac"
        },
        "item": {
          "id": "fc42d886-b2ac-4182-a53d-709bfbcabcb3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1f584242-75d6-4bfa-83f4-069b45c97788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc77d7c4-3685-45b7-b4f9-c7e26fae4598",
        "cursor": {
          "ref": "bf83c50e-bf39-4021-a9a5-1820a3878746",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a1c49cb0-7047-467a-9fc9-a0bdaf54e668"
        },
        "item": {
          "id": "cc77d7c4-3685-45b7-b4f9-c7e26fae4598",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c15d9804-a404-466a-9f76-3cab42a13655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d9115e-244a-41f5-ab4a-a628fe7e3a0f",
        "cursor": {
          "ref": "6f5e2bc0-bd94-4605-8a42-e8184e192c30",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "df86118d-db65-43e1-a48c-165952d2ccbf"
        },
        "item": {
          "id": "12d9115e-244a-41f5-ab4a-a628fe7e3a0f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8cc7b472-3777-4a09-9a21-b18bf6f1a13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7145b0a-4bfa-494a-8302-a4df7655cca1",
        "cursor": {
          "ref": "3a9d7da6-b48b-472c-b09f-7facb0b5f1b3",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b5ead138-14d8-4e8a-a9a6-4777f4d608c2"
        },
        "item": {
          "id": "e7145b0a-4bfa-494a-8302-a4df7655cca1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d5bf917e-517e-4bf8-b843-64b4ea981f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09844557-0a15-460f-b87d-009f7d50ab3b",
        "cursor": {
          "ref": "15f1b782-424a-4f72-a585-70e2fcc60f70",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0e11d055-37a7-4863-a2e0-c522b2e13c37"
        },
        "item": {
          "id": "09844557-0a15-460f-b87d-009f7d50ab3b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "40f8b666-b9cc-4c53-a5a5-7daedc8dc13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a96db14-6904-45b9-bbd7-951dcb21449e",
        "cursor": {
          "ref": "3203062d-8ace-4f51-bf7b-681a648dce3e",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "bc107fdd-ddf9-41d2-9332-a254a473b4a2"
        },
        "item": {
          "id": "2a96db14-6904-45b9-bbd7-951dcb21449e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e14c5e32-2ee4-42b4-afd6-47ba50cc2262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde928ef-2f28-4968-a772-ba9102cb8c1c",
        "cursor": {
          "ref": "2c7ff35f-4847-4acd-9efc-1ad90fda0a06",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9050a51f-28f8-4d28-89bf-5855906d04a4"
        },
        "item": {
          "id": "fde928ef-2f28-4968-a772-ba9102cb8c1c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "30925ede-2f9a-496b-b36b-b95e4fbdd5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28610c11-509f-4207-b5b7-8f41d26716d2",
        "cursor": {
          "ref": "9c37e313-eb27-4b4f-b882-e4e01cca690d",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "00fb7c34-7a26-490b-9d4c-1a57000b769b"
        },
        "item": {
          "id": "28610c11-509f-4207-b5b7-8f41d26716d2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "af080eda-4f87-4fe5-ad73-c4918519cc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea4996c-b228-4ce3-afe1-952b883255a2",
        "cursor": {
          "ref": "3d8afb4c-6a70-4d8d-b990-3840924b16c1",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d0dbf72f-9032-48ff-a8d0-0df05d28f0dc"
        },
        "item": {
          "id": "bea4996c-b228-4ce3-afe1-952b883255a2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f47d2037-0772-4a53-8878-b9d80742ae9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d5581a-743b-4334-b4e3-e8257edc392e",
        "cursor": {
          "ref": "3aecd61a-6635-4ffd-bbcf-40b8b9a28691",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2dabd68e-fbdf-4235-8e9a-e2018fa627a7"
        },
        "item": {
          "id": "02d5581a-743b-4334-b4e3-e8257edc392e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "acdc4d61-cf02-4399-8f5a-559397541e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1044e0bd-6876-4ee5-8b9c-83a75719491f",
        "cursor": {
          "ref": "4c20406b-b9ce-416e-b9ff-cedeb9dac8b8",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5b3475e6-2703-44f1-8f9b-1ed75361ecec"
        },
        "item": {
          "id": "1044e0bd-6876-4ee5-8b9c-83a75719491f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a616ef70-701c-4219-83c2-1c8109eb0ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76e006c-2b45-475e-b22a-f400e707385a",
        "cursor": {
          "ref": "cb937d69-e167-4477-aad8-544e50a2c822",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ad70960a-6c3e-4718-ab08-d7d09c419df9"
        },
        "item": {
          "id": "d76e006c-2b45-475e-b22a-f400e707385a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f0e3761a-cbf3-4589-8994-d5b1d3bb2608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a06c45-f00a-4150-b2ab-875212d97c93",
        "cursor": {
          "ref": "6892d6ed-a26e-4ec6-ade6-def5e6ed53be",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7025a412-4892-4dd6-9d06-8c3e8b3f3340"
        },
        "item": {
          "id": "a1a06c45-f00a-4150-b2ab-875212d97c93",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e5279cbc-8ed2-4e09-822b-49353ddbbad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed62f8f-82a7-41af-8057-747e8e293a0c",
        "cursor": {
          "ref": "ed0d23c1-ad66-40f1-9696-8d9c65f6f791",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1ca1a4f2-547f-4e3b-a3b3-70d37f21950c"
        },
        "item": {
          "id": "7ed62f8f-82a7-41af-8057-747e8e293a0c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a68bba68-c37f-4f63-8b10-cf1394f7f2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d38657-2de7-43f5-8b3a-ca831d90ff5b",
        "cursor": {
          "ref": "4250d57b-34eb-4948-b10b-aa3b5f9c797d",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7e2d73d2-5ff3-4f32-85fc-875026ce9234"
        },
        "item": {
          "id": "90d38657-2de7-43f5-8b3a-ca831d90ff5b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "04060308-972f-4c81-80a4-c1fb75119dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fed09d-1c2d-4153-b89a-8552d591bdb6",
        "cursor": {
          "ref": "6457ff40-c1a1-42fa-87d5-f07e76cffbf8",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "de2bcd36-170e-47c3-80ae-9785bc1cb9e6"
        },
        "item": {
          "id": "c0fed09d-1c2d-4153-b89a-8552d591bdb6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "565ee9f8-fb5e-43b8-870d-e61a21f7b437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f54374-de62-4d77-8c7d-87f1dfd1c60f",
        "cursor": {
          "ref": "f334cda5-c05e-42f0-9026-c26db1f53d4e",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "611b4aa7-099e-468b-9e3a-ce8c6ca937b4"
        },
        "item": {
          "id": "07f54374-de62-4d77-8c7d-87f1dfd1c60f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a949cf26-1424-4df0-b53c-06765f621f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4472081-79b7-4959-8a63-ef3d343e56d4",
        "cursor": {
          "ref": "db070cce-250c-48df-87c2-e833e908da0b",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ddd66a7f-f69a-40aa-ba96-cc2a0ebcfa91"
        },
        "item": {
          "id": "c4472081-79b7-4959-8a63-ef3d343e56d4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bf50fd11-12bf-42a0-8bcc-cddfd024d44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e551486c-5125-4f53-93c0-eec1889c7ef6",
        "cursor": {
          "ref": "f9fc1eee-236d-42c1-931b-709c514ecf7f",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "55170c3b-aa4a-4dbb-96a4-980e4f50f7f5"
        },
        "item": {
          "id": "e551486c-5125-4f53-93c0-eec1889c7ef6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "57d1e482-bb79-47d5-b2f5-9c4dba434261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51352c5a-9b01-4089-9a53-ea2f9ce1938d",
        "cursor": {
          "ref": "6e98234a-394a-48bb-9f7f-80e6b61990db",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3be1df3e-52c4-4dbd-ae38-68b11b23dbb4"
        },
        "item": {
          "id": "51352c5a-9b01-4089-9a53-ea2f9ce1938d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3a5e3bef-73e9-43f6-9a3e-f2fbf1353b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f9dc51-20e1-45a8-b46b-1cfd406d51ae",
        "cursor": {
          "ref": "a58dd60c-ea56-48df-87af-07f592dfe941",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fc2dc7c2-4d9a-4faf-b822-bacde593578d"
        },
        "item": {
          "id": "40f9dc51-20e1-45a8-b46b-1cfd406d51ae",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3942b15d-8c6c-49ee-84f2-1b8ec58438e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a41b99-bb70-49f1-8b05-ead1957a25a8",
        "cursor": {
          "ref": "ad3b1ec5-fff5-4a23-9f3e-6b0a2685f22a",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7039ee43-f2e1-4344-9bbd-c4399ff96929"
        },
        "item": {
          "id": "c2a41b99-bb70-49f1-8b05-ead1957a25a8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0034aa67-0d1b-4c75-9466-2e5fdeb91c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c62fb5-05d1-4957-b2cb-f84831222610",
        "cursor": {
          "ref": "d48dbdc4-7d1f-449c-b4dc-19d035c9a3fd",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5cbfc9c0-1e2c-43cc-a6e6-c5ac83367b8a"
        },
        "item": {
          "id": "31c62fb5-05d1-4957-b2cb-f84831222610",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1d5cc936-4c72-4e36-929a-a736eb69b70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea3e69e-524a-49e8-9cf0-5f7a8d5f3512",
        "cursor": {
          "ref": "9cce3f43-225e-4ec7-a082-d044fcc4d7fc",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "be2116d6-6292-4d07-8d52-3838ff3b91d1"
        },
        "item": {
          "id": "1ea3e69e-524a-49e8-9cf0-5f7a8d5f3512",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0d8935d9-d133-4a90-9d6e-06199b62d9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109c7387-cf1f-4060-ba68-1815bbca7754",
        "cursor": {
          "ref": "fa2a489c-513f-4266-9d60-05a7b430b5b4",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6efd7b12-b6f2-4a48-8609-62de254b6bed"
        },
        "item": {
          "id": "109c7387-cf1f-4060-ba68-1815bbca7754",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e650d43f-5d57-42d5-9061-c7b4df09a729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da146ba-e042-4fba-8e50-cc3a35cc6b57",
        "cursor": {
          "ref": "3bebec27-9a16-455a-976d-99068629ba79",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "053cf924-de3e-4177-bb3a-84888802bc10"
        },
        "item": {
          "id": "4da146ba-e042-4fba-8e50-cc3a35cc6b57",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "13c8ae1d-7749-4780-b2e1-c96ea58d828f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab1c6e7-08cc-432d-a50d-2de164db3d6e",
        "cursor": {
          "ref": "9d08e61b-7487-42fb-976a-7272e7677e8d",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "617ea983-2390-4d51-8949-5a164122324b"
        },
        "item": {
          "id": "bab1c6e7-08cc-432d-a50d-2de164db3d6e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b02c1ce4-5a99-42a0-bea4-076196e7bc71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d64d77d-c1bc-4a7e-bd40-f404191bc184",
        "cursor": {
          "ref": "eb16ebb6-0b68-4e18-aee6-6eaf3d1a9352",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e28c3e24-eb86-4e09-ade2-d60146dcd425"
        },
        "item": {
          "id": "3d64d77d-c1bc-4a7e-bd40-f404191bc184",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "439f824a-ad75-46fe-a3b9-757e696db70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd6a8a0-af38-4617-8740-6826f1393b3f",
        "cursor": {
          "ref": "e38bcffb-8e7f-4643-a48d-ce1b9e3ed1f8",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "eebc7dd1-2056-434b-ade3-4eda55998f5e"
        },
        "item": {
          "id": "2fd6a8a0-af38-4617-8740-6826f1393b3f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f6a430e7-371e-441a-9acd-e96a3c19ae06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa317a95-9dea-4ed7-9d33-df8033cba0dd",
        "cursor": {
          "ref": "070ff5c9-65c8-4960-8f9b-faedbc03be84",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c74ffca1-1a85-4458-9281-03d421b345e9"
        },
        "item": {
          "id": "fa317a95-9dea-4ed7-9d33-df8033cba0dd",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "940d394d-2721-46ac-8529-82011f499c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc327c77-6965-4e33-b706-2150c91989b9",
        "cursor": {
          "ref": "738feb54-2853-498e-9d58-5a316dbe84a4",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a897f90d-c747-46e2-8bd2-737e869b9ecf"
        },
        "item": {
          "id": "fc327c77-6965-4e33-b706-2150c91989b9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e21d31da-520c-4962-bb3a-fd4b0d7cf6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec6305f-6b29-41a5-b09a-a9fcce61b825",
        "cursor": {
          "ref": "adc6060f-be4c-41c1-9c2e-f61cd8760be1",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "af165cbc-94f2-4427-9243-8a55f7b28107"
        },
        "item": {
          "id": "cec6305f-6b29-41a5-b09a-a9fcce61b825",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9a920ec0-d9ba-4aaa-8c0e-d1e0357a0186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a314e8f-a54f-4547-a62e-2ee30414b822",
        "cursor": {
          "ref": "e5f0b95f-dff6-450c-9c84-5875f822e6af",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f1a23aff-189b-435f-a45c-127748540d54"
        },
        "item": {
          "id": "2a314e8f-a54f-4547-a62e-2ee30414b822",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a1726223-d3d2-4b97-b87e-cf3931a99de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64783f3b-fdf7-4b14-ac18-77a93486aed6",
        "cursor": {
          "ref": "4080a8a2-509b-45ef-b6ec-7f36d67cb4e6",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0612c375-78b0-4bf1-9a1f-1f72108eb9db"
        },
        "item": {
          "id": "64783f3b-fdf7-4b14-ac18-77a93486aed6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "95e20393-51db-42ab-b5d8-d402f292fe8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70af8ce-cc6f-4e5d-b2a2-1cdcd010d456",
        "cursor": {
          "ref": "ba7bf6d6-2dee-4d74-8ae9-ffe863b6baad",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a224d56b-96a3-4dd5-9fae-5278429018b4"
        },
        "item": {
          "id": "d70af8ce-cc6f-4e5d-b2a2-1cdcd010d456",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4d9b7b9b-596b-4256-8d85-a46e28e05a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd82d9e-9cab-496f-8f27-857b05b611f5",
        "cursor": {
          "ref": "57a5896f-0ec2-409d-9b58-36a6b719a3c7",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a4dbce68-a7d5-4e93-9609-8d267d9bf486"
        },
        "item": {
          "id": "ddd82d9e-9cab-496f-8f27-857b05b611f5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e3c0206c-19d3-4040-89af-53af04ac15e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac7a760-49d7-473f-a393-39851f8473ef",
        "cursor": {
          "ref": "bcbaef41-453d-40a1-8647-bc81cee9e536",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d26a99b7-ec13-45bd-a6eb-cb25f9d21546"
        },
        "item": {
          "id": "cac7a760-49d7-473f-a393-39851f8473ef",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "de830c63-16bf-4037-9e29-e10164c234ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46be245a-b9a0-4be5-9f86-e627e717cb53",
        "cursor": {
          "ref": "bb42f04e-585a-403f-957d-37d324aed378",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9e6d0783-e542-4686-a735-23c359a04d16"
        },
        "item": {
          "id": "46be245a-b9a0-4be5-9f86-e627e717cb53",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b6f64117-3cc6-4b56-8810-102dade660a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40f216f-9970-4883-a227-34dc7aa841e4",
        "cursor": {
          "ref": "1a38ca4f-9b09-4c1a-acb6-c0d9b37a8ddc",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1a130507-5f26-4554-9e0b-3b975fdf3bff"
        },
        "item": {
          "id": "d40f216f-9970-4883-a227-34dc7aa841e4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1f292330-c67a-4377-b704-910c0e1fb4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bbea7b-c4c7-4377-acdb-fb14897c5eb9",
        "cursor": {
          "ref": "79c17360-7c36-4ad0-ad48-e1c889e4395a",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5f1d1193-a6bc-4e9a-b855-109529286d06"
        },
        "item": {
          "id": "b3bbea7b-c4c7-4377-acdb-fb14897c5eb9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b723fb2b-24f8-4fdf-a0b5-16ab5c66b252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfc2746-f33a-41fa-99e0-145bdafad537",
        "cursor": {
          "ref": "80deedf1-11f9-458f-bd50-d43584fe22ea",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1a6354d9-edbd-4356-89dc-3d47f6d1a775"
        },
        "item": {
          "id": "ecfc2746-f33a-41fa-99e0-145bdafad537",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2e28ddea-bd54-4558-ae3b-e826556cf160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725daf44-bffa-464d-a5bf-cadaa16ae45d",
        "cursor": {
          "ref": "f148fdbd-9df4-48fc-a9e1-6b279c7a37f3",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "567ee2b0-fa74-47c2-9159-a07576970cb4"
        },
        "item": {
          "id": "725daf44-bffa-464d-a5bf-cadaa16ae45d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "44930ac3-f182-46d2-a05b-1aff5a076c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03faed28-179a-4612-b882-813b3980cd63",
        "cursor": {
          "ref": "15d3d625-36c7-43b4-b1c4-7bfdca021a05",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bdd79606-a48d-43b9-98d7-44e6ab7a8b48"
        },
        "item": {
          "id": "03faed28-179a-4612-b882-813b3980cd63",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "13d39dd1-54c5-494a-8ae3-1ed54b349f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4110b2-595c-47a9-9cf8-4fbf6828fbe7",
        "cursor": {
          "ref": "2dd15efb-6d4e-48bc-abbf-8a21d9bdba34",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3c4a5dc4-8cc7-4a4a-9920-b05be7b49350"
        },
        "item": {
          "id": "7d4110b2-595c-47a9-9cf8-4fbf6828fbe7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "adce743e-688a-4f7f-b30c-ca4c092dfaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf5d584-b448-458f-b5c0-8588b5c745a6",
        "cursor": {
          "ref": "dd1221a9-3739-4d12-97b3-aa15815c3f1b",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9e00bf85-bab3-4343-b371-773fd16fef03"
        },
        "item": {
          "id": "9bf5d584-b448-458f-b5c0-8588b5c745a6",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "99f1dc42-d7a2-462e-be40-32ed893a5e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b70eb0a-ce33-4f65-ac79-38447a96d268",
        "cursor": {
          "ref": "f39bc641-728a-444a-98bb-4c7d3180d7e4",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ec92b3f0-1d56-42c4-a9bf-0c5b481072eb"
        },
        "item": {
          "id": "7b70eb0a-ce33-4f65-ac79-38447a96d268",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "312cde1b-d729-489e-ac1b-47ddb00b0d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14572825-5cf3-42dc-ab68-001523039a6a",
        "cursor": {
          "ref": "d3b18505-ed63-49c7-b183-25cf01433dc3",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "89093033-4fdc-4beb-a3c6-7c57f8a883e8"
        },
        "item": {
          "id": "14572825-5cf3-42dc-ab68-001523039a6a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c9332983-be9d-48a7-a05c-57d4316c1e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a526e0-d9db-4884-8d77-5a675d65eeea",
        "cursor": {
          "ref": "3c3f9bfc-e5d5-4d14-80a0-00bc04e0e384",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8c522b13-c2ed-4fc6-8821-bb1a94a69542"
        },
        "item": {
          "id": "b3a526e0-d9db-4884-8d77-5a675d65eeea",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "08beb7b5-9d33-42d6-86af-a92e478daed1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a2b5d8-4a17-4890-a0d6-ce775b96d8ae",
        "cursor": {
          "ref": "1bffa40f-5ada-48db-9775-ec2fe8436413",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "40a3297c-6ebc-4a2d-a4d9-fb701a5f08a7"
        },
        "item": {
          "id": "73a2b5d8-4a17-4890-a0d6-ce775b96d8ae",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "67771b81-d21f-451d-abe6-0448debe41b0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 321,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee65e11a-12cf-4ddb-9a39-702fe08d7134",
        "cursor": {
          "ref": "41d83188-b2d4-4f02-b99b-dcdbdff7cb7c",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1bffd1aa-342c-4e45-ac22-1701c7d64f71"
        },
        "item": {
          "id": "ee65e11a-12cf-4ddb-9a39-702fe08d7134",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "73e5f937-8cbf-4ef0-8e6a-4643fef1dfa8",
          "status": "OK",
          "code": 200,
          "responseTime": 470,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4f643d-2a36-4341-87ff-0cd5955d8673",
        "cursor": {
          "ref": "a1e345f1-3e98-4fba-bb5c-1f0d558aed01",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "aa5f247d-cdd7-42b8-b695-de8b53336cbe"
        },
        "item": {
          "id": "2b4f643d-2a36-4341-87ff-0cd5955d8673",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6e9c01b3-5aa6-4271-a904-0d3eaec4dfc6",
          "status": "OK",
          "code": 200,
          "responseTime": 430,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa7872b-c0da-4e79-8e7c-807d8dc032b3",
        "cursor": {
          "ref": "a3e35535-ba77-424a-906a-211d439748fc",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d204ce01-ae0e-47cc-ad2c-9609e68c829a"
        },
        "item": {
          "id": "6fa7872b-c0da-4e79-8e7c-807d8dc032b3",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "a0348014-b97c-4ef1-b0c9-00f7157f949f",
          "status": "OK",
          "code": 200,
          "responseTime": 412,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "90594f16-ce6b-4245-ab0e-c31fd905ca39",
        "cursor": {
          "ref": "266ebf9d-7b8b-4c5a-b0a8-9cdfa38e12d2",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "260f4078-6d8a-4db2-8a31-ae7685f9723e"
        },
        "item": {
          "id": "90594f16-ce6b-4245-ab0e-c31fd905ca39",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ec6ea960-f0e1-4f87-a78b-9b3ef2b47eab",
          "status": "OK",
          "code": 200,
          "responseTime": 395,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff5d242-71fd-43c7-aa7f-d32426773570",
        "cursor": {
          "ref": "7aa71c74-d0d6-4fcb-811a-d56be72d8a40",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d1a138e2-f7fe-4ad4-8df7-bd6613e8e474"
        },
        "item": {
          "id": "7ff5d242-71fd-43c7-aa7f-d32426773570",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6bd441d5-e62e-49d2-aa1f-b31e379bec72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff5d242-71fd-43c7-aa7f-d32426773570",
        "cursor": {
          "ref": "7aa71c74-d0d6-4fcb-811a-d56be72d8a40",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d1a138e2-f7fe-4ad4-8df7-bd6613e8e474"
        },
        "item": {
          "id": "7ff5d242-71fd-43c7-aa7f-d32426773570",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6bd441d5-e62e-49d2-aa1f-b31e379bec72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff5d242-71fd-43c7-aa7f-d32426773570",
        "cursor": {
          "ref": "7aa71c74-d0d6-4fcb-811a-d56be72d8a40",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d1a138e2-f7fe-4ad4-8df7-bd6613e8e474"
        },
        "item": {
          "id": "7ff5d242-71fd-43c7-aa7f-d32426773570",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6bd441d5-e62e-49d2-aa1f-b31e379bec72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0cda14e-57c7-493f-8b53-763a3fbeb7ad",
        "cursor": {
          "ref": "37ab9f52-932e-4714-bd69-ec8c0c09f2a3",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c3e161ae-8939-41ae-a939-f6fb2d85e67f"
        },
        "item": {
          "id": "f0cda14e-57c7-493f-8b53-763a3fbeb7ad",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "f86e68a9-e4a9-4c54-bac2-d819d437196b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 304,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fa4787-26cc-4c41-8e29-bfaef3ca10d9",
        "cursor": {
          "ref": "147173aa-7217-490d-afdf-b9b4efe0cf5b",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f862a445-e8b2-46e0-ad96-3e268ba8f02e"
        },
        "item": {
          "id": "c4fa4787-26cc-4c41-8e29-bfaef3ca10d9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fd4b2db9-e428-466c-a575-55debefdb453",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fa4787-26cc-4c41-8e29-bfaef3ca10d9",
        "cursor": {
          "ref": "147173aa-7217-490d-afdf-b9b4efe0cf5b",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f862a445-e8b2-46e0-ad96-3e268ba8f02e"
        },
        "item": {
          "id": "c4fa4787-26cc-4c41-8e29-bfaef3ca10d9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fd4b2db9-e428-466c-a575-55debefdb453",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a35fb4-ca34-4675-ae62-dc7a6f2d4a83",
        "cursor": {
          "ref": "9c866b30-1c00-45df-ae1f-a52ca340012c",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "554c9769-309a-4373-98cc-ddb6adaadeab"
        },
        "item": {
          "id": "49a35fb4-ca34-4675-ae62-dc7a6f2d4a83",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "b7cafbe9-3e92-4d5d-a6f5-10868879a49f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 596,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5b09ba-c7b2-486c-bc1f-043880794a44",
        "cursor": {
          "ref": "0cc0572a-6c0e-4666-a52b-55a6a788aede",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "032b6bd9-7322-4cc8-a7f8-bde0413e2890"
        },
        "item": {
          "id": "5f5b09ba-c7b2-486c-bc1f-043880794a44",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "89f106aa-7594-453a-a090-76b92ac1452e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5b09ba-c7b2-486c-bc1f-043880794a44",
        "cursor": {
          "ref": "0cc0572a-6c0e-4666-a52b-55a6a788aede",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "032b6bd9-7322-4cc8-a7f8-bde0413e2890"
        },
        "item": {
          "id": "5f5b09ba-c7b2-486c-bc1f-043880794a44",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "89f106aa-7594-453a-a090-76b92ac1452e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f918f1e-420b-4dc9-8ba7-bebabc237a59",
        "cursor": {
          "ref": "e22afd4a-a2b2-4094-a37c-790a1f9b5a82",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "aff1b930-1f1a-415c-8682-40fb83ae23c2"
        },
        "item": {
          "id": "6f918f1e-420b-4dc9-8ba7-bebabc237a59",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "34bf7610-efca-4e3d-bbcc-492a85a6f1aa",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 571,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}