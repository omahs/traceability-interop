{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "eb81c0fc-fa11-4a1a-ab0b-17d402fdde52",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f04f81e8-b3e3-4cbe-8489-c9b7d1b611f7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a906a2e5-fa34-4fd9-8b64-740690bfc6e4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d59a5e04-fc92-40ea-9c5d-415fe950d41c"
                }
              }
            ]
          },
          {
            "id": "69987c5d-3654-41a9-a6f0-9f1bb1e5ea99",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a8049ca6-c02d-45fc-85c6-9c88d8c637f8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f61a28e5-0c1c-44ff-b2d1-a34b47a9b726"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "21b453df-064c-4512-a81c-de0a44adf232",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a15cd5fb-d0bf-4f6c-94c1-e370ae99d3cc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "308db3f6-56d3-4f99-8a6c-eea027dac604",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8680361b-9cf8-4687-820c-83b27b180b95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b6d12ddc-bef4-4d9a-90be-781165e5a494"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a6b4adfb-3eca-420f-9110-1342194e7ab7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b31e4357-0166-4a5f-a7fb-9a5bf6df8844"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "191d89ab-03ce-4a6c-901a-bb80d9a394a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "765d8136-8941-4e5a-9579-f3d7130065a8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2758c08e-2f8e-4dde-bbf4-c3c57d4d00d6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "43064195-64b8-4e29-8fce-c117715a062c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00aad15d-9d7d-4f71-b69c-a56e5297a408",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49b45b60-11eb-46a0-9516-2715edede84f"
            }
          }
        ]
      },
      {
        "id": "364a7d3e-ca6a-43f6-8b3f-de403a4a19ea",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f54ff798-a9eb-48a2-bd92-f46f52fd83f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a07562cb-dfc0-4278-82ef-b67b945fa199",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dff039df-affd-452d-9c4f-53f186a43c8b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57423144-01a9-46a8-9a2a-871d7e0e804e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b98f5b2-2d72-4305-a5ae-ca7b5de68c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15801be9-98e9-4a43-998e-392892eb56c2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da2815a-94ec-4ada-b1a0-f94f74be3158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca48e60c-7240-490b-91aa-efe914476719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb935ca0-3c39-417e-8ef4-e3b2e62d5a01",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d842c10-c60c-4a12-89a0-49ebeec0d2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a100b3a1-ac8e-4dcf-85a4-972323566105"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f38a8701-bba0-4c6f-b64d-47ac76131ea1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5464a20f-04de-4530-a6ce-f40a2d2a556a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d569ac-3769-48ee-b015-bd7358d687af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5daad138-bad1-4689-9475-e383dfa9ba0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca8a6b8-74d7-4121-9ade-dab0fc8d237d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f605be80-b8e4-40d9-b121-149bc334da0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73457f8e-e794-4679-9e02-5c160b01226c",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6977aca6-b50b-42c4-ab14-a70f39aa7ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f2ca1e2-5ba7-48d7-8a7d-159d2ca14411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3092697f-9387-4fd0-ae31-1a7941df61db",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "a779cb89-d8e1-41e6-8330-79a6f73f469e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6252cd17-09dd-4f83-9d32-ca45bd0a2f69",
            "name": "Positive Testing",
            "item": [
              {
                "id": "404e4c55-c65f-49f9-9e03-316c5ad66b7c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4995ac75-4d68-4748-836f-3d4ae11eba55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e3277820-ef14-4d5b-9ab0-1449cef506f5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "804852c5-2c8a-4355-8108-91eeba64426b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "9612a55a-75d6-4807-aa6d-33627c50934c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f838ca97-73e3-4a07-a6b1-61d59ff33f61",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a752356-ba79-4a59-b4ad-d8594e97e45c"
            }
          }
        ]
      },
      {
        "id": "f94959c3-7f96-4bfd-b1f5-342b0dca6015",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6562f73e-2be0-4af7-9bb8-01398520f32f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "431873fc-6524-4463-b1cf-0950aa03b1ff",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "eee56d9f-6a56-4644-b70f-0675c1faa010",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814f071d-9d77-433b-af24-e1dd789eb43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb8fb4a9-f7d4-4282-8bee-0936f571a955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e1a345-234f-4439-bbdc-e0ef8f93e72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "809b0b35-12f8-4823-b768-39bf258efe18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6651c178-dff4-4149-b03f-15b16e727ec9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa8c9c3-e58f-4f8d-8193-81b4493f8763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed926736-8e8e-4bde-be5d-42cbb1d73e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a7136e-bddc-442a-9bf4-5d1f216b8758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75e72f41-9af0-4d62-82ad-6ed00de30e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29936684-d805-47c9-b10d-4adb95a8e18a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4bb7f0-61dd-4d09-b0fa-d6e353e9ba10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59020913-1017-40db-ac18-b782b7f83bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b453ad-a7b6-4ef2-9e98-2b85f450cea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb417022-d9f4-4a01-85f7-c1ca52d1d6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009884af-2f68-42ab-8e8d-f37838fff0b5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c177924e-a08b-4b0d-9be4-4c9ecf718138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8385e775-c4b4-4701-b32d-fb121ea03ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78ad064-550b-4f2e-a4ee-3fee0e28a664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24de12c8-fca4-4998-9847-b2b3db1afc42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7fe9dc-26cf-4210-80b8-a808268e6ba1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26025971-e2ee-4e77-aca4-5816b19dcfaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1205cc14-96c0-4a58-b569-c514f9dd5676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8df36f-387d-4d2e-a1b8-68e35038b977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "790cd92c-809e-4a77-8084-69bd3a85e4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558f6a2c-9ede-49e1-80fe-5e7d4247b0c6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed781800-e89a-4da4-8930-616e9df6af4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c558cce8-3548-4f84-bd40-8d87d0fc9914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f4a967-903a-4c64-946a-967cc8200588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83b03092-d674-48ee-b58a-72ee1992bf42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d0eb8c-298a-4928-82f8-b85615b1f679",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7781e083-54ba-4d0a-b3a5-ab1ee27999d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07401cc-d023-490c-a959-e159eb5e1a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b9685e-fd59-4913-b5b3-59706679f695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03c46eb8-0e6b-4d4a-bd06-53e625ed53e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8254fc52-46b4-48ce-b2ea-7b7aa708073c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8758e1c3-1088-4499-8365-9abfdaf4ab92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc70b73-4486-498b-b840-bda03674fdb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafed87f-c1d0-4f4c-be3e-c74c26dbd23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fdacf70b-7d58-48e1-8ee0-7725fbf4029b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471dd429-9df7-4570-8ad4-a05ebc9f26cc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b07fde-bee0-45ed-8887-2b23005d184d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0b2a93-d3ad-42c3-b831-ed4431dd62cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56875868-0f4f-4b44-a981-0ea14070200c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dba10ba-2a0f-4711-baf6-52584ed09e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c157c132-85ae-4c30-9069-6df93b929347",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d41163-9185-4de4-a556-de31ae7671ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9508d5-0fe6-488a-a661-7197b7108541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffbe15e-2386-440f-ab67-4d63b5f299dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "583957dd-e0d1-4cf9-9a02-5972126863d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac401783-78cf-48bd-ace8-057fc97ea792",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa4efc3-772b-4038-a383-8b1b4ba23330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346f200a-a4cf-4e68-92c1-a028e474026e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd69b9b-8d53-40a1-a4e7-772eb99de23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "006be693-37fb-4785-a395-514d9a9a192f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a17c82-a187-4cad-841b-1dedcb992236",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca8dd4d-e50d-4ecb-b970-5a4a42285e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b52b12-b783-4431-b455-bbf70c023d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d7be74-ffcc-4ea2-8624-d201ef37555d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f83d817-c4ad-4f84-9d94-865ad402add3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa2a491-5b13-487b-9728-e896da1fd554",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17335ad3-e2b4-4c0a-ab55-339f7abec4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbc84fe-70ca-4d4a-9f69-d1f10366d217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6deb10e7-7bd0-4c10-977e-5978fb513fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78973af1-7217-4617-a984-e44f7b3c7585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2f24a7-be87-4df2-9ab8-5eb31e27e7dc",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac908d4b-dcd7-40bf-9d10-a05fcc5d089a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d287f58f-9ac8-4629-b8dc-d377608c575a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf32b0e-f383-4dd9-b577-a56fc9f3d453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b7b1cb4-0ad9-4691-bcfe-35db35b4c7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75e8a3c-f58b-426a-8a8b-83bacb5b1521",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6eec75-cc91-425c-a087-28f329a381a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11ed1e1-0a55-456f-807b-709f5a6a23f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f0ae2a-0fa2-4324-b512-e14d9184c6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7227d69f-5c52-4364-a102-3c00b18a473c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbe4bfc-124d-437b-8e8d-bb88ca9f2861",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7c851c-24a2-4950-93e4-483ed71284ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26569463-89aa-4f65-8b01-a869ecc7997c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728db710-167f-4083-823d-b6b442f0ca5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11d5dc03-609f-47b4-8616-b2085c2ad615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffc0727-4f6c-43be-8bed-a8593b55f85c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe543732-ffb0-4ca0-bc07-0e6422bc6db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6343d9c-846d-454b-9811-5bdff3231ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d7944c-31a9-48d4-bf6e-0f033a6de2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbe4eade-81e8-4425-8936-760006799488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ee5f23-65de-446d-af6b-6768e0d054f4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f3fc69-9c26-4c1e-87b6-b98ae6f112cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "681d98e3-db80-431e-b0b2-b167a83c0151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a08723b-9d31-4ea9-9d66-1bb2a5af7840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "55289dc5-d6cc-43bb-a44e-650154d653f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c11a612-87df-421e-84f0-6cd4a67499c2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c613772a-c4ad-4728-a97a-346d6d67e8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0faf2aa-f603-49e0-be24-e6490b0b355e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4b3bd3-39a0-483d-b4ea-0e58cabca8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d4c7901-a682-4200-b1b6-7093999cb074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d69fe2e-3848-4621-8808-4e15b8c9c900",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ab32c7-1955-4b5c-afcf-aa1564f38582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f69806-cd0c-4fdb-a973-c0405c58c516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf6bb0d-950f-4775-b4e3-909f6f0fdacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c10190e-ab83-4817-9ccc-3f9799c5539e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d6ea8f-9c55-4d15-a64e-7e5b284e93fa",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3e36e7-840d-4750-8a12-53532d6962f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145cfd15-4d06-4aec-914f-6bc7448fdb43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfe5c4b-a1f3-4458-a227-02ced351256f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6636b62-8a0c-4af7-a2cd-e0966ccd524c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1d17e3-a594-435b-9a11-632438f879d3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02824933-a3b0-48fb-bf1d-fdf04573d148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae0a8bf-8bed-436c-b1d9-feaba42b271d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b125dd-1bc7-4459-90b1-0d1a5c8ce5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ca78307-3091-4ea2-a133-d2bacfcaf695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdb7554-69d4-48d5-80b4-d04908252a77",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa95e3c6-6b2e-4a67-b9cf-b4c4bae21c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296c3656-e465-421e-94c9-87465e329b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c623a2-3e6a-4010-967f-533bb622542f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aae27979-9dd3-41af-a797-9ce67fa7a1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585c3fb3-d1b3-431a-82f9-2f668fd8cbf9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2c8dba-aa18-4464-936e-448e0c731585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1426996-1ef4-4442-a3eb-ee3334d3df77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8e4509-d24a-400b-b6d0-ac904f6cf5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5990d083-4589-4a59-98e2-7412fe9dfe1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a374f7-c6c2-4dc4-ae91-002c494f9167",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5182755a-edfb-4582-ae5f-5f38f8c9cb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2a42ff-6999-4a0a-afc8-2a5674666eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef4b6a2-f6ef-4ddb-8759-f3cd8bb8b8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9238773b-e6be-459f-8c68-8b05ab659424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad8f9ff-0371-4b2b-a1d8-043a42a4a769",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8547a9-d34f-48e9-8b4a-4f112fd84e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f50d645-2afa-4c57-9fbb-a4f2e191ed46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0ac788-805f-4d17-b223-a700d47eb39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e67c0fd5-d665-41b2-91bc-02182268892c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dca7579-95ed-41a7-870d-7fea985d8152",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b700ca5-4266-4379-b5ba-8bfced0e4054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6168b9-6aa3-46a3-b858-309825c75d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e29e8a0-1ca8-4a78-9ef9-bfffba9abc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20ed803d-1831-4037-9102-43df8e08e708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317d6d73-4dab-47e2-8e3a-c69d28f62292",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "530835ce-96e7-4ddd-9743-9c4721aa7d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd382ed-c08a-4770-befc-c4f9638f1ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d284a2-76bf-4c2b-912a-531853184785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "653fc36f-38d6-45e0-96e8-cbe6fc6bab13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df811a78-56ae-46bb-91dc-6ff8c94b0794",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24839790-b3e3-485c-b426-90e85617b6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18781a0a-adad-4020-b611-ce7872b980fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a284807-30bc-4690-954f-f6e8f72de966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fab6870-3b93-4ad7-8b77-1d9f5da5f87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2398f570-19e7-453a-9ae4-794a10299af3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a06b814-9f5c-421a-bf0f-ee26211a292d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4f4078-cee3-4a56-a2ab-a1dda962a93a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0abbcb-4f3c-4a6e-b0b6-888d48d5feb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0843f0e8-dfa7-47f6-9ebb-3e4e7cd8030d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9295ba3-a582-4564-900e-b8550693503f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cb84be-8d64-4b27-9d83-9afb234b6980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "188ad0ab-cd5c-46dd-b88c-7b94e4ab7a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793507d3-75ee-4272-b865-1d69dae9d1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b08ce78-d6ff-4847-9185-aa064950f3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a908f80-8037-46a3-a7e5-75d087c9004b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd160c2-d788-4d30-8294-5a084df473e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015b4867-0f6d-47f0-ae78-3029ee112fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76f142b-520d-463a-80ed-278569c066e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9893cd31-1872-4d19-a56c-9495de6d8a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798e9480-8766-4c87-aee9-81c70b87df68",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "443dc983-06b6-4f98-925b-dc17a4fab765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3249759-9285-4c33-b984-c06933bd3599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7d978b-512e-4a4e-a26d-7aea6129924e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "424daa75-f285-4daf-b4f9-98f4415c5504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73eb2f0-318b-4690-9f7c-511024005feb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edefeda-5467-4592-9747-4b3a1073a210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5feb1b9-9637-4c8f-9419-99aac02fa790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a5dbbe-b7cc-49c4-9670-f435fa064d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "906ac04e-3db8-4f85-96d1-7d738619d02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca47adb-f340-40b2-941a-4a1373236b88",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9190aa46-23f0-4044-8f50-628e389ad620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c11e72-05be-48bc-8175-9200c61f01a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e889317-f182-4ff1-92d6-fedbe5903be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3343cea3-dc4a-4176-8a57-36c513902fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09899731-08ea-424b-8e3f-e2727a478517",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06e8826-f12f-4d8a-a6f2-79f4119df6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4ccf65a-97eb-46f0-a15e-e5c00494c59a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e152ef-a960-44c1-9251-965bf9ab8ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "158fce52-6b7b-4407-af2e-9f5abdf9eaca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bdf63a-e619-4fe9-ab9f-6b69d704c5a8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b965d9bb-5539-4391-9ea5-e36310ddf018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3140f793-9f63-410b-86ac-065b71b038e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341ce900-9436-4ced-8395-8f663e635613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f35a5da5-ed1f-4a7c-a339-8150615a8c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4603096-6c64-42ea-a21e-55263344b9ac",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040d3e6a-2709-4337-9868-d10d56c62130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76a61fb7-7419-4c42-889a-92dc222efcd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835f27e1-0254-49c0-a2ee-13129344aae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e7559cf-8cb7-423a-b614-94917555fbd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2273070-b6b1-4c57-9327-0db6390572b9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1de991-915e-4ccb-8f44-52883637a9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4ab5ef-6c9b-4e11-8ddb-5bf9c719e355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f297a6f2-7c19-4820-a8d2-b47c1e4f413c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd5f998a-1f9a-45c3-b15d-8da0678c59d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b08579-765a-438b-a5b5-442b4735fc46",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec27da12-557f-432a-acb5-e121b8d92b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b30e598-1b50-46e6-8597-0217b50c9316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e97a97-1a89-4f87-9571-3c2059846f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0fb517e-6586-4085-9e91-6b8be7ea0faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee89eca2-d7d6-429a-a6e0-79bd3c5b933a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268e1a70-621d-4fef-913a-ce0c400e2d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e82e2ce-bfcb-41ac-988c-2de58fa5f3df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb711fd-98a7-47e7-b98a-c243ed3e3eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c60a4c7d-5b9d-4d37-96c4-3bc055358c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b987ac9-7b14-406d-9d02-338249357b4f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1360d7e-df56-4210-a4c3-0c2528cc0f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ead0555-4538-413b-8a48-d7eea61f94d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecab3a8c-af70-46bd-820f-7669cc8ffaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f3491af9-b176-49fb-ab0e-ceca5126a9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61dfa9bb-d645-44b6-8594-caeae7fc479b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8466e5-0535-493a-a39a-f010712ec36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c96ac0d9-887b-40a4-aa41-e69c688af112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21296c5c-60a0-41ba-ac83-41d669dfe895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e06e8ef2-51d4-49b1-8f6c-7dd49259647d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88966f1b-af7f-4baa-a787-e66f0dcc43c0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1c65dc-12ac-4e2c-8d07-d81c4a7601d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d03cbd-5fab-4933-9e61-a88de8819ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a1f7c7-3be4-4f1c-bc4b-521143b3f07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5dd5411-ce9d-4863-868a-fa0a42818f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f2fea9-da36-4de0-beb9-1437f2328927",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964351a0-0568-4d4b-8e05-4a8890d8dc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cebe641a-0b1a-4ce2-8607-664263d6cdf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b6aba4-e9c2-484e-b8bb-05b823e6ea98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d15a4251-3360-4052-80e9-229a98c1a9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5138b4c4-e570-4fb5-9e66-d356ad5dfe5e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b36e2c-939c-4934-89a4-4ef3c7f7d251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf601f1-f02d-47f2-9f48-f13582d4ad86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3eab18-9bf1-4473-b07c-3b4c7fa85e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "666df479-1a6d-4257-bb72-7861eb50de2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330a34ec-6630-48c1-8837-6026d1d8d664",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc6ea65-3a35-4efd-abbb-ab9facd83289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07bd6d53-42cf-4893-baa3-dfe3522c1937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6113281-bb58-443a-a5ef-2c2b36ba03bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b970084-634f-494f-b354-29477c897526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb968b64-e1cf-46b1-9677-acdd9905d79c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73aa1b05-c6c5-46c5-8063-edd281bc951a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a85e964-c177-4c51-af87-e7ebac876e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eefaed8-2755-40ed-8330-d97860664ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50ec0da5-9d10-4f53-9224-7737831b3e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361eaf4c-2e0f-4c97-90bf-082469ef4e8a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7f6ed3-06e4-4db1-8510-d6e16c90beb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5732bd2-d0ba-4fd5-b85b-4168cee58f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db71195-7443-4550-8a50-567d39539d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "999b0305-c35b-450d-962a-319a4c34b589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a25a8d-2bcc-4586-8e5f-f6993d3b4b9f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7668f2b9-821b-456a-bb4d-02aae9864791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1bb466c-4fa5-4d2d-a5b8-bab42fefddf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5a8936-7c56-4247-9c37-0a177062b012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb93142-6e83-4e4d-80ef-f3cd26cbc0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e23fe81-0dab-492c-b24d-c1faa0e1b8bd",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5006bf70-9197-4f34-8f39-b807faf5b3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964db8d6-a0ba-471a-9c95-f8691e8e330e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b78caa-e30f-4954-bf7b-8a506acf28e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2bf838-d435-433a-84a9-d247f8334922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8bf29f-128e-41d4-9729-e60b915b1f17",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ce8965-182a-41c7-8d6a-98bd22223520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a2a680-d587-4ed3-9f08-26aa82e7a229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e9bb2d-58fe-4c22-8dc9-e116366ea616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ff209b-1273-474c-9418-6445ffebd411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d73ef0f-3ed3-421e-b1f8-d093fd9d4c35",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf220ed2-b981-4dd9-8ca0-224537b61cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1394c063-8a63-4785-bdc1-d16f69ac6603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fe906b-1b45-4f49-a359-243f2ef62b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "145544f8-2a32-4df7-9037-0dea99e5e43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32183f82-0211-486e-92e2-30ab332bb1a3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5eb9dc5-fd5e-48fc-b5d2-a9258805f00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d66004-26b0-4981-99ed-23aff4499218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a09001-3c59-4a5e-9ac7-3007208d1b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9890d1ab-1d9f-49ff-98fc-0fd8f79a7e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ffc77f-d751-4eea-9859-79dfbfecde61",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab4ed8c-7df6-4a51-a9f9-601f5cd6d6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221987ab-444b-4029-84b0-fb5cc67559cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb26b28-dd32-409c-acad-e33300adc31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b135395e-d5e5-4885-8694-07e671448c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a276d610-c3af-4c01-854f-e5c1ace5ef14",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40298697-e892-440d-80b8-63534939ee93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08529eb8-8df1-466a-99af-eaa2c09993b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d11da5-831b-4e13-9889-a1c64f21cfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b068d79b-7e97-440d-8176-c05043b76c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a252e2b1-8f75-45c6-b808-d04c25ed3727",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c683e2-e8f8-450c-89e7-b38e87a2adac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e304b617-e5bb-483b-8203-e332a2b3939c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75035b4-022f-45bb-9e13-66325df08155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "70f8da2e-8dc6-40b8-9d12-359eeb9cb81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c0adcb-03d3-4c07-9969-d9cb7e9dec31",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce8d199-8aea-429a-8ddf-d1c7d0897d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b259246a-64b0-4199-b160-02fbe69b6d81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a223c213-24f8-42f1-a922-fad5e9c532ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c0eb2ff-622d-4420-ab0e-5daf08c39a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b085f108-4b94-4795-a19b-fda024314b69",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a37757-e79a-4487-95ec-dc7993d4a920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d841a3-70b0-4cdc-8245-cc2984a0b8de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c148e4-b17b-48f7-9f19-d325d52221ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "006c8633-2a48-452a-8e87-aec790bcaa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ec29f6-06ac-4615-b921-2d4ab5fd4f84",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a07e58-755e-4473-95da-54d96e4d785a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e70feeb-08fc-4188-96aa-b887a306d9f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba5b2c6-e4ef-45e9-94c5-abd548241e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "20824678-a6fe-4277-992b-6ac82921c188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce7fe47-eda0-49e9-a1e7-ec8efa9f009b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9888950a-8ab0-4fcc-a395-fb526e5ee307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b5a084-9bcd-482d-86ba-b365512410f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f287d27c-f541-445e-8f1e-1d89e78d81f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4d17f1-9995-42b2-9ff2-0efb24c51f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e609d55-5319-4f8c-80dd-cd00d0c12206",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4fc697-5948-4131-b175-eeb440ceb346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2ee698-6d8b-4807-9ef3-40ba740a44fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8c0319-f885-4bdf-8274-29a777ff9b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c0a4193-57ad-4c4e-bf24-7151b44ac4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7529fbd-9b75-4ae8-8f0a-5520dbab6834",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44e43b6-3261-4dba-a6ca-c7031b9910a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611b6408-e4ed-4b2c-982e-64a2ce176df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1e27ae-9a4d-47b5-b28d-466fe18838f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "017ad1f3-86c8-4189-a4cc-0cbbdf45423d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8620589f-c2ca-4ad2-a0e0-0a481a3492bc",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8483e5-71f5-49eb-871b-0a93994b460c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81177ef7-ed53-4db2-b8a2-72249a5c3eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ec111f-e45f-4048-8e7b-699d3942b891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4014116-9561-4148-a3a6-3b952e003fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e207ed3-9e2c-4240-9e15-eff7646f8593",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9c295c-f643-41af-8a6a-c21ea365423f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0113e88-fc52-46a7-80a0-21de3d5078ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de526c9f-6dc3-4b85-9803-0587d3ef3c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1cc231-e4b3-421d-b283-96de493d7781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5447f2b6-cf4d-4045-97cb-ffe9fb427f8c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af8da98-f762-4851-b31e-83e734d3ea81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a57aeb23-ed2f-45b5-a9ce-587069b7c78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6420af7d-94d0-45ea-8e1e-3c914476074a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d9edf43-db65-4160-a973-d31c5eeab6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28001eae-5910-47af-8dee-eff6c9f5d9ba",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c9da26-3ac8-4b08-8381-eca1d1a5a582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca8a1dd-c32a-4a84-afdf-bd1e09a8e4d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3d1200-7553-45f8-94b1-b41f865486ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e767e2e-a6e7-4e79-86ab-527af26715a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b7c7a5-f568-46fa-bea3-dd61b9d1e8b4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf24b8c6-c413-4b87-a9c5-a514d1b1fbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f89cdab1-2929-49ba-a52a-22f9dc5103eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203751f3-092a-47ae-873e-1eb0924246cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8927b80-c890-4002-85d7-6d47574bf910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225b3db8-b762-427e-819f-7f8897e0a7d0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c214a63-b7f1-4df8-9325-dcee138f0765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d9a618-ec32-4937-a0b9-318b45dc53b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71011005-2424-490b-91e0-8acc347c5dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "785b67dc-6b02-48bd-a46f-a55e464e8b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989135f2-e952-41d4-be24-c869154679fe",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d4dd70-dd09-4902-a430-5cc71f961335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "105c1a77-d94a-4b94-a905-d92a82a49511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ea5060-ed5b-4d37-8dd2-fd8a4f6b45ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de1552cb-ad3a-4650-af8f-968161030643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c624ad-d436-4f7a-852c-ad364ccc7224",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb25c1b-5877-46ac-81bf-db86d9274608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d067968-622f-4f0a-b79b-73b46f570ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a3afc5-588e-4b67-9cdf-773b47b54ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7bcee5-1e4a-42fc-80ea-4702f24456b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4193c0a5-38ed-426f-9c1c-f1046f0c6f72",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff328142-ce65-4790-be07-1ba72dea3007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f3e9f9a-ebbf-48ae-99c2-19ce31b581c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2264a905-0c01-4d75-a1ef-8d64008b30fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db367bca-9949-49b7-b2cf-ff76f2e08fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bea13c5-ee6b-4375-8b60-369dc1d07d87",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020a7b0d-77a3-4a7a-87bf-e2681161f747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8edb3205-1bc7-4895-803b-c3edd4d8e199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864863ce-5ec9-4510-88a2-1b68a129d3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a6d27b-9ba4-41c4-8078-e7983b201f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e26ba8-5893-4abf-9a57-9a48634a58b4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b618d6df-2727-46e2-920b-6a156e7d3940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bc68ce6-2c3a-461c-84f5-1862b9fea1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8050ebe-0c05-49d3-a644-4ad08d22dc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e57aea7f-435d-4dbb-9793-977b4ec3688a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cd171b-d90a-4dc5-804c-1d35bd159a02",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02363b66-6d7b-4a1f-b26a-c5545ae4af16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af375763-0423-4d33-838f-a373b1e1a2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea12f81c-d608-47f0-aa05-09bd6417e56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "38682bab-a01c-4ede-9db4-07c291971067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297804ca-72c1-4565-baaa-937ff81a49ca",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96caf326-8b3c-4da8-8f5a-ad30b0849b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bdcc384-559e-4e21-8433-07d1d6b76586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b909d7ce-e1d3-447f-9f18-01954ebeb805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da5411fb-44c5-4abc-8b5e-543218dac9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b6814c-79ac-4c55-bc8d-22b314bd34dd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0f8d3a-024d-4c0c-aace-073364a18f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d5e362-8a78-4fbe-aaf4-db410df0e093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa802094-06b9-4369-b708-f62d4edf6e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7b6e12-4310-4c61-bde9-241872e5477a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3aa9dc8-f092-4d8b-83d0-4d5466425681",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a234510-fa83-46b6-8831-b4cea68094f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e15500-6d63-4748-9856-fb682b72f3f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571157b3-18ad-4178-b864-6afa70ca9b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db7e1487-9f07-4007-bcad-4c77cec6f510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49606297-2fe3-4722-b7c8-ca3e70786653",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050f6a7b-18f7-406d-8882-06afe3f4ddf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60945a78-d6c2-492d-8a74-84f7cf9ca450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef815e0e-87d6-4ba8-8b70-af99fe314928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "47264391-8a4b-473e-b708-106d4001cc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84768f28-0505-4067-864c-f5c5a8d969a2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e010664b-d624-46ab-a804-16a0fbc6df29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1089b728-f996-4eaa-9a8e-eb4cdb0aa10f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c65c9c3-a2e8-4b3e-931c-c34494b820cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b647389d-6869-4284-87a2-cdaeba1ed140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8652f406-eb57-4608-913e-3ec2bc55f96c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b812a7-e08a-461b-8be0-d09b3ffceef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca7adaf-a035-476c-ad72-16cd76525d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81eb61fe-7bbe-4347-b314-d7ff22dbb3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7113d76d-d61f-4fdd-8603-b7692395e22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd4ad98-7e49-4329-ab93-0ed7cc2a6bbc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90faa8b4-7612-4bea-bce1-0e72026aa7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d681224d-63c5-472d-ac13-3f49978c1286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd64586-2db9-414e-9f1b-fff88f9da8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c1dcb62-4e51-4ae7-ac0d-900b56537b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d912157-6579-4083-9ac3-f9287a9a932b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea804b58-dfd9-41c2-a8ff-993556542ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6f750c-bf54-46f6-89aa-973dd6e50809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ffaff88-aa0e-4e82-9efa-81aa3d893be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb5d1a8d-61e0-4443-86d0-ae09b753dc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66331711-58db-4e6a-9bc1-3f1a14548897",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512f83b0-3007-4b80-8c1f-fa30909ab49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af87aa1-3b70-4e67-ac72-1bd6bac0140b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55bb62d5-01e8-446f-974e-f323124fd722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0114f5ea-f9d6-48c6-a039-c1a945d8be18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2b5cb8-4aba-4286-a160-63dea632909d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbed0c6-b4c4-4888-a166-19b3332d4551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5987c4f-91c2-4216-b29e-0b28059ab375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d479639f-c386-43d6-b6ed-7036e368b1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3837e34e-4d0b-40a2-88d2-c778fd5ea053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1f9fce-1def-47d3-9e83-ea1f5d6cb2a1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018f76a5-5ee6-4716-a7bc-57aa0ad79b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba78d41-1fe4-40ec-8735-98b46a4e3ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c5895d-f658-4f01-90b7-c55f7330151d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "20d0b37e-1359-44fd-875b-c4fc87dfd79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3c11a4-464c-4d01-899b-850be2e6835d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "992d7293-1f84-468e-a745-95eaa010ed5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49926abf-717c-49d7-ae24-d30e6ac6aa1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4b514d-f1c9-4f7c-972b-db3eccaf673f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c8a0da4-8fc9-45d4-8b4b-e2539b1198c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3846d0de-72fc-45b4-a45a-d16076d58cac",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55a568c-3844-410e-afed-e36417c94aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da24a30-0309-4296-b611-784a816db236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3175d39-5569-4108-b4a9-3bf9d28b7188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "39e3d0e2-a154-49c5-ae54-de41c70399ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7347f17c-3261-4694-ade1-8128d851579d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12212471-cd44-45f7-83bb-858b674b2011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d172051-0b30-40dc-9938-ced2d31b977b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8102b451-15f1-499d-9c91-6241bea581e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "546b585f-077e-474a-8d1d-76fff32f37ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a89029-5531-4b59-bed7-da8437c1abd9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4822a8-7afa-4d37-82a4-51bed8a749d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd0639d-9ef9-4a51-a696-1cd0fae63267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9686538-ab83-43d7-a878-30e8583676bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "efc8fa04-0e93-4da9-8e20-d1a07d13581f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6472e435-c474-4bf0-9fe0-89a29c4a31e8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc68c97d-b538-4b9a-b2fa-1af1d52c5a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb12032-dcd7-40f1-8bdd-8ab190bcf1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4651f0d-ba20-4af9-b5eb-f6ecc9a1d367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6729c20-4096-4d04-b318-915b63bd165b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1658253f-a266-4daa-9f00-9308304043e0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c646d3c1-a8a9-40e4-8bb6-8f0293c5d295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2a692163-48be-4f3f-ab83-e5da7a549ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1716c8b-0480-4c38-b761-29b47a1e3e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "099a3f7a-31b1-47eb-9c0d-7ae4c2c25856"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "018591ad-067a-4229-a89d-db9253ed30dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b694c4f6-edeb-47d6-a465-5d66c0b04e47",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073c6947-28b2-49ed-b985-5c237c5a6566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80ae8666-7295-4fe8-8c45-1fabd9f3d8e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa61b24-5a3c-4ac9-9ed6-bcd429fde189",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "76995e0b-3497-4bd6-9e7c-1a17b2c94843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436e6c05-5f2c-41ee-bf09-6b101ec154d7",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141e9a1d-9bab-425d-8fa2-8155cff2c0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53c29427-6444-4f3f-b7f9-f77ee027e8e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e19f40-e92d-466f-a747-2ad2859668e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "947dd544-c47a-47f6-9353-2ef082222b77"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7971979-8e8d-4145-958d-e864cb579cc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f561de91-6838-4fbc-a0a1-81334defa375"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5499fb1c-655d-49f2-9272-1196ddb985cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6bc1ebc-45e3-4a34-bb9d-5ff30f3472cd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ccd63c00-1fa3-4746-abf8-05ee65f8fdd5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af748de4-6095-4bfe-a8a7-92f950a4a804"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d1d5a592-bae1-4e92-a36e-18903ea8739c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "74f10d29-aa1b-4700-bc83-bf3b36bc56d2"
                }
              }
            ]
          },
          {
            "id": "af90409d-6079-4b6d-abef-8f112d9fbefa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "de904950-4312-41fe-8102-157d88ad0870",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc5ae399-c240-4bcb-8747-8f4c99a3cfa5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aba3349b-e428-41a8-ba58-1d0bc8e6dcf0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "965832de-1df8-453d-a734-2ddb37457e81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "85b35b16-06e3-45a8-842c-b31a0c6c4a7b"
                    }
                  }
                ]
              },
              {
                "id": "c59c6506-c4fe-4177-b4b1-dc4fd2864077",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d14bd3c-e1d0-4e97-9dcd-ad921a738de2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc99a297-bc7d-4de4-bb77-42c952568aab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3ccd720-17bf-443e-9fa3-b303eb25de12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c29f3d07-996e-4f4f-b74c-79f515876f49"
                    }
                  }
                ]
              },
              {
                "id": "b13d29b9-61ce-484b-a81a-09cc201a35e3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5da4b6d-1e7a-4f52-897e-0e56639e09eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e380ce31-3063-4dd3-8f8f-3f11b0d4bb7d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8b0488e-2d38-461d-8af4-46288ff04433",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "904be596-3ddb-4cc4-9f58-9e9594c43dc1"
                    }
                  }
                ]
              },
              {
                "id": "bcccd160-7402-4683-87ae-fddbdd6e1ca2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1ef9824-bf16-40c8-b8d5-fb6b2f16f3bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d629e705-0a29-468f-86a4-c2f6db435e78"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e059afc5-4ce1-414a-9f28-a6263db13e4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9902d22f-bae0-49f9-94d0-1e5cf619315f"
                    }
                  }
                ]
              },
              {
                "id": "3da39504-1c02-4af5-a428-f7e63cb17b68",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a4123e7-c2eb-4337-a1b3-97b4fc2fc54d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69b2a2a7-d493-4ae0-b4ee-540138f430ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51c6e16f-71b3-454d-b12f-cee12a631af8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "eea915f0-aedc-4bbe-8876-221aaa824798"
                    }
                  }
                ]
              },
              {
                "id": "03b1ca97-ac1c-4860-8c3b-9da66cac8b38",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6325a17-9de5-4c54-b008-846c7227e66e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "689605c8-4a83-4d2d-88e0-52bc497c805c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "470eb78e-a553-4d1c-b903-eea395c2ec0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a14cf215-b25c-48df-9204-f15d9f2d9d9c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "78ebd5e8-cee7-4b5b-a81a-4f185524635d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae03414a-c9fc-48a8-851d-007de7cf55e1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1a9a8cc0-ba02-4212-bc19-2d55806317e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f8e57d3a-3dbc-487c-9fc1-682ce5f0ea43"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d235534-db18-459d-a46a-d926441f9f78",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3bc036ae-3995-4cfe-9915-fef10af31655"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc1f9039-f350-45e3-bf7c-a6745d41d628",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fbcd8145-ba4c-4e70-b379-d6b76a68fbfd"
            }
          }
        ]
      },
      {
        "id": "e0185571-2683-4d9e-a675-897c852b01bc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1d319b69-48d8-4ecc-bc99-79445b872018",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8df30ed8-c8fb-47d7-9603-e3724ceb6ba1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dd905d21-9d3d-4776-bea7-d7d9c8c178d9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495aeb72-7028-44e6-a2f5-b9c667584647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def0657b-626e-474a-88fc-2f4fd40ad29b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73d355f-cd8f-4145-a560-4ee6f37ea25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f493058-a358-488b-9b02-9e6fb6d674e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fc47d6-0c41-456a-b11a-3e27dc80a6a5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0d1660-59cb-4b49-86fc-e5c49b037512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b59b06-2187-4926-8652-d3fd7a032a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cad616-cce7-498c-b341-a3183534cf06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d233c48-3d55-47aa-968a-c0ec0c97bb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50d586a-a569-42c5-94fc-f37f8af4ec05",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56c08ff-9acb-4593-94ef-c078c6146e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24ba9cb-1af2-4124-bced-3b70dfa89539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e6db95-5cda-42a7-9ae7-38ba38314e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02d40763-2f0c-4b6e-98be-206ed2186eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512187bb-563e-4848-a2a9-bbe3d76cb86a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2768bb38-2cfc-4ce0-aa41-c1262edf2bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a798c153-ed28-4e1b-9190-a6b4209cfa9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494904be-fa00-4a25-96c4-12161a787a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d966f00-7bd1-4e29-9857-d6e10c61a490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c598f06e-c1af-4e7c-bca0-b4cf9105d46a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4898df-d7a2-4a2d-91b3-1309ce5eac8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4efca2-78ba-4948-99a8-fdc97dfda503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d8cdcd-2980-4e71-9088-547c7bebfb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2382d7bc-e346-44c2-b3fb-bcec119eb780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eeb91d8-5a6a-4594-a1d9-09f34986ffdd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e553f3b8-9b6d-4467-902b-7492b3795ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1912b6d5-d3ab-441f-b677-5700d2088d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d411e38-f055-4a4e-acb1-e8acda68e2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d6cae8b-79a6-4584-b5ac-3ecce871d38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac5d4ac-90e9-45be-a515-7283fb660b39",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3279d803-0e10-4501-acdf-641b1689fb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39919af0-4107-42b9-8a45-e29aa787be05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4eacb0-4533-4bdd-891a-abe59b34b581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "db6ea656-1e11-4a48-900b-a10b321ee73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52b923a-adf0-42af-bae8-46a0154607a2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37b50a2-4236-4673-8b5b-9c47e5faacf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be94c582-1e75-4a64-8315-56661d1e7270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c73e7a-b1f4-454f-b5f1-4d70c3b03468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f0bba0c-7ed0-470e-afc8-f9c8f65f14a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de258fb3-c437-4d6c-adf2-2d00529a7c65",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91ceac3-bb76-460f-a406-b905e4ab39d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c731d9-7447-4b13-9d28-f3c37948e9b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760fef0d-3c05-41cf-adc9-fd338f36056b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c39c8f4-5fcd-4a8c-8787-cd04c0b44ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e708f74-160a-457e-a37a-703718c273e3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac5956d-bf56-49c1-a71c-77301cf4af21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7087e0b3-f7b7-4976-b278-9dbed13d8c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492f7239-c87b-46e8-9d8b-5119822b081c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f14fa1b-acc7-4595-b12a-2680cf2f3d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f71278-09c9-4913-a05f-c3af15e8d543",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e925083-c3ee-4839-a8b1-079409a757f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3661b481-ee01-4ac6-a194-0db8d0b85001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673bdd0d-2d41-4e72-a7d7-99b87f4e19ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb4fb29-5149-4749-a06c-a7b33d842f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6263ae97-6b3b-4de3-b10e-ab6a6088eda0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d351d4a9-9430-4398-82e8-566ab0de1d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b148bc-82a4-4002-adbf-fad324ce5fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7cf41d-4cd8-431c-adae-ad3f84d99d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb4d7d4-97e7-4682-a898-07ade64e36d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372173e7-1635-4f6b-853d-ba826daa43d4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9b77b3-04c0-4cca-9ab1-befda1298437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1fd1d5b-4d19-4eef-a4d4-637c6f3fb0da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28784199-59b9-4e6e-99b6-5d86528b8060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa2461c-689e-4ec2-9591-3d0419d6f75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f5de9e-6fe0-4daf-bbe9-3a68e680795d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472b4dc1-9b87-49e9-86eb-963229c96d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89eaf02a-6f71-4e34-91b4-c4f911bb1cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84aaf915-11a8-4d69-8a5e-4d61c57aef7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "028fb3c9-adc3-4b2c-b0b4-5d2ce55f0528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4746370e-a9a6-4b37-8237-e69f478ac5f1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fdef4c2-fa59-4983-bcd0-fdef73ed69d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83396f60-7ccf-4ee3-91ea-a6278df219e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a4704d-8d04-4058-961e-b353c8018ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5ce5c9-bc88-406d-a2f3-8991d19622c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9849afa5-36c8-4970-acef-872ce89ad48f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052aeb10-a1ad-4359-aeef-62f9553869a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e26fec-b7aa-4d93-b631-530737503bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811bfca6-79d0-4518-9f8f-005d833fe625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "42ead51d-916c-4acd-a6d6-71e6a5da282c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8dee14-6ec6-465b-bb48-e78f629ff8ea",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faba4ba8-06a9-4c8a-9eaf-6002c1721db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2658005-3c33-4be8-9064-c5394d87f66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96f07f1-7302-4a79-bd6f-46da2bded206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6758fa0c-be00-4bd3-a313-c0e59d5c2a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f8e515-d781-47e1-a7d4-b0c52174585a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2432b48-73e0-478b-8b46-030ca2b7172c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2fa3ef9-fd15-4e72-942b-d9a8665d6570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a6f5e2-e43d-4942-9f4a-de53d5c731cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf5bfc7-4895-4a8c-a02d-b610dc9d99a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edc6ffd-00db-4fc9-b911-0cbdf942e85c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a83255-1cc0-4b8b-8fd7-e54edb06431b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597a57dd-7322-4451-9b85-eb0fde847bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5504e5fa-f4bf-4784-8cd4-04a556fcfcc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec36b0a-3f4e-4c2d-8812-f1b2e8eb2fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1b2be5-5924-4be7-ae1d-dd63cf74d71a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b590f583-bd5f-4a3a-827b-6cf379d37a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb581e3f-b185-4db1-b046-1c7cb3e5aeac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55eec730-4791-45d8-8462-2fa5c850c63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8b5ce9-cd71-46c4-a33b-c31491a8e868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ff90d5-a945-495e-88b6-1378b747546a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2b8fac-b541-4b0f-86e7-3729a03b4cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31fbcae-ec9e-438f-9edd-a3bfab25cf32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ddf14b-c389-4b1b-ae6b-1194719fe7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16756903-8519-47f7-a6cd-1286a695e0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb56def-c8c6-4ad5-874a-b11554a0305e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41d8abb-f799-44bd-a234-389cc4eca1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95fdbd19-1248-452f-b315-7aae79f82266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255729cd-c7cc-4e2d-8975-731bd9d5bfb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14eed5e9-28ee-47eb-9b39-1fc2849268f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b529a05-62d8-495d-8701-973d46ed6910",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f09d148-0b31-4669-a7d8-7fe952ed8b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4d5ab0-51a8-4643-ab93-6277597096b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e290116e-2e28-43ff-9100-cea2817f0e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b10bf10-c3cb-4f59-a0d8-d4dfddd2c55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2ebe3d-1f56-4240-b75b-1265790c67a3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee53f834-b054-4886-9f49-21c4b0392be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7dd259-8b2d-47e7-ac30-9f3192de9f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657722b9-4bbc-4142-89c8-88aa28134d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0920f639-797f-4f1d-a46a-182881a8bf65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c96f2f4-6e56-4f1d-84e0-a7ab72353874",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a5d70c-3eb5-42ee-980e-83ef9f1fc159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708a88d2-7d40-40d6-afeb-8d4b0a49b11b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c6de09-30d9-465c-8d88-ebef7af924ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2e3c08-7d71-42ff-a038-4769c7e46f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6519bba-4fdd-4999-b7aa-e5f66c293a6e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0ced6e-c692-4510-ac48-338b8f57c2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383ac7f2-f188-41b4-9838-6831e997d15f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5baa79-6917-4bf5-a221-c01d2d230eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "968f697e-49d9-46de-97b1-3ad72d00e15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe42a1fc-606e-4c9e-8512-a7ff686326cb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c29b6d6-5725-4e52-bd90-cde7d25c6134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbcefa0d-f383-4105-ade3-d3e5a1e88287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13d16a8-6a8c-4ed0-be21-05867c4c6449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19900252-8e45-4fc9-806e-8ef5ade5d745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f7ae1a-d842-4099-9395-848ad88e7da6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb1e6df-294e-4d04-85a7-25fc7d6c66dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9e9f9f-c985-4657-ac5b-446d05d3bf9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7f464e-c88c-46f8-8a29-e6bdcc915ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a84f91-6735-48c9-ba0f-b0e9783a40d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba03e63-3306-4584-bf65-6c3084553e4e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9dcb70-d901-4957-9988-8cad0c01b1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8101c5-24d3-471f-8268-3056baa7ad71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e304d969-0307-4bf1-a2b1-007663966dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bac0039-e72e-47e1-b87e-2a6fe101e828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f379e93-fe21-4f63-acb6-f0c3f52e6707",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18443eaa-6c20-481c-ae57-18ea983850d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54022b4-a619-411c-8e44-c09b2629b4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f92c55-3f29-4f18-8e88-7ee4090850af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c843729-c35e-4079-b24f-c02157a4cb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c349007-110e-46a8-8bc4-522e018277e4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b4dedb-e7d7-42e2-94b3-fdc97c84caa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d613697-b7c6-404f-9f00-5b12bd723a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ed7731-f17a-40e6-9377-b34c24140b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee6219d-cf0b-47b1-b6df-3a5702ff419d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b643c94-1259-4154-bc81-90d5b408f350",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f26fc3-7fed-45fa-9673-da9464a28287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6714527-c1d9-4232-a880-5d23193382b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75899d0d-db80-4809-9414-ddb2c62cc2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28e597a2-1989-45d2-89ee-a7c1f81f978f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "642c3c2d-5b5c-4e4b-9f7e-2ed01893449c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "49e5e1df-5272-45c7-9b0a-cd2e5d4f6840",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e55b0a5-0cae-4116-82de-5658e627894f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f05a8f7-e23d-4631-ae46-af1bf757c627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca0c190-63cd-4cd7-8146-53b3ab9035d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab283dc6-7b39-41ae-a4a0-03bca8e0f50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd27bd7-f5cb-441a-af8c-f600eca61127",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aebc60a-c625-4895-bbac-ab813c0f8272",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "05bdc3fa-b572-4646-a577-42338f319702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4357b570-c3ef-4266-bf3d-24dc95a237b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9561f506-f8f2-4927-96c1-8573d6fe3344"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49c1a804-b64d-4460-9350-b1c91278de78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "299de212-b747-4912-b0ac-dc5a3dc43636"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80c92bdc-aea9-4678-9ee2-02f5623ff3f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1fbc0d05-fcf8-46e6-badf-f069c96473f9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "104d663a-8549-4c1a-ba83-3933734d9b21",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c66ba118-1127-4269-ac9e-17982a8c9452"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1c07043-10d1-47ff-bfe3-ed4212e92119",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff21494b-8f9d-484d-a95d-f1f17965ecc3"
            }
          }
        ]
      },
      {
        "id": "3f033447-4a9d-4ed7-ab05-6c4ca090a0d8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8b38697c-f044-4790-8949-68a13073738f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6a19a4d-5309-4b38-a2c0-d7ec263649b7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8e5cfff4-7624-4255-81e7-37eae86acafd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036cab2f-bf0d-40e9-981b-7ac48c34b2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d69692a-5bd9-4420-a0d5-f737d8b1bc9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b4335c-e688-4f5f-ac29-9f7a1b309e6b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c199e5-8de5-4fc2-9a2a-16f91aeaa696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81cba247-d502-4b67-8a10-06ede78dfba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3093af1e-89a0-4bdd-b8dd-ed9c070ba394",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ef5b3f-a303-491b-96ad-f290cbd24c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a69fd3-8727-42c4-b8e4-5a82f35aa065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1b30f3-0902-4e75-84dc-39ac33b5b7a4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca91b1b0-e674-4065-9dce-3a309b0d0cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a7a34fc-f313-45cd-9283-a38cf5dc70cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e832933-5765-4d9c-8d8c-45aa2f96c430",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035465e4-8124-4fc6-afdc-d7f088eb861c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1acd1efc-ca15-4535-8aa1-192bb88578c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845b886d-0b54-4352-8262-ce4b56acaacb",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f344aa6-914f-4c46-a2d4-f9b35189e259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac382d8-6c0b-433a-b176-45a853cde0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3907aae7-2784-40c1-952d-67ea0ed6fca6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa70221-a9b0-4873-b331-607d8d4b20ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b68224-7a63-4fc1-9eb0-ad172db925ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c69348-837d-4a44-91d6-753b2b379203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5aa8ec0-7606-4909-8619-68a586a861e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb1af76-e6ba-4b76-834a-8cb65143250b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc7af05-898f-4aca-8cc3-84b293d24405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7525caf5-65de-4719-a1a5-738915f5dbe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "881b4ff8-4b6f-418b-840c-5f87e371f336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b863278-a1e0-4cb2-beb2-a058b0991b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856f8927-f057-4682-ab97-2b00e29d9a4f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138d6332-0d6e-419a-b82e-0df86be025f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddc89195-589b-48a8-a024-b2f82f7c16dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0a9d5f-18ac-488f-85cf-1bde12b6d2af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49337692-b57c-4596-b384-fbfca7f1ccfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee23fa7-151a-42cc-80ae-75efe126b313",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b46b41-a527-479f-ae36-af87c1c5366e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5861ba3b-cfdf-4714-aef8-0c435cf021f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80f1df3-cd34-4242-afae-cfed759379fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfbb1494-65cb-4611-94b8-9a39a2eebf55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930948e2-a7b3-46c2-8f09-4d5551971398",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822912eb-7fb1-4f43-b26c-9b3aa59d86de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c2963fc-7e5c-408f-b553-bce4c0cb12d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9154421-6861-4808-bf06-8098eb922d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c41861-7904-44b0-bb4f-844d1182e1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfc1ff6-5de2-47de-861c-747dde33d008",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e740b07f-30bb-4b80-8b4f-629f90a67c21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5c55b8-5729-43f9-b895-4dc911a016c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc9fa9d-2215-4056-b9f4-1ba5bca6a445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ec7a39-2003-42c7-ae2c-4742b62452d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c5b072-6a4e-41c1-83b1-fc1208a794b1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1daf1062-fa9d-4a63-9b28-58a75cbc7ad5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb762878-a1c4-4d33-98e3-d20919d0f71c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64b815e-455b-4bf1-835c-b0e3f9bf811a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e89fbf-c565-4396-a111-87d42a8277fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de79d85-c40b-4dd2-a02b-310a8bab0810",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a80c1e5-9018-4b7e-8c9e-9b7e42efbfbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d40675fb-3084-4e95-9f4d-30e5582566b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbe7430-ce89-4f65-a228-cd4052aa0591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43dc4cc4-1cc8-4c24-a3f5-ea60924dbd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f5105d-dece-487d-8b05-5381d833350f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1698b31b-e997-447c-a895-cfd5d7dce0bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "075b84d6-ce1e-4bc3-9c4f-20a0862a507e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7944811a-398b-4ea2-991e-7e86de1a6260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6edf21bb-c797-49bd-b72e-a213e6e255c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01838aab-ed45-43ca-b784-fa3f0eb72d64",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7738c361-fba2-40d5-bf79-053c3af2f093",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e67f5e8d-7b43-40ec-a42c-f56dd79b29a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad230938-fef0-4f1b-b56d-a5d2883e513e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f05c8ac-42b0-4964-aa3a-ea8efc90bd50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497453ea-b574-4d63-8546-7112a01093e0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866a3aac-5226-480e-bb9a-75f89b18f528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2212b7-9c29-470a-9dda-9bd78e953d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c915b969-4588-4a94-901e-2463a4aee031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92640db1-fb56-4d3d-8c46-dc24d38eeb62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9af9b2-9865-4536-b910-1c2a930d101b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db5a13a-99b7-4768-8c6e-559b701284cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8b7c8d-4d43-4bce-986d-b31d4d7a069f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffac57c-3f78-477f-9aa8-e12cda0d8650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68f8667-4fa2-49f7-9061-88a7707a6cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ad32a2-74e1-4fd5-b3f9-e8e354e1ec6f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78b94be-752e-4bd2-a2a8-e0909928ae95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35eb21f7-f93d-406e-ac14-171182c14543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ec8bcf-d95e-4603-aad7-11599ac43abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d08656-f334-4ed4-9827-969cc194a4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2514cb-ae71-4c76-9cc4-67810bed17dd",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d2cb08-5200-4fe4-8154-94017a899877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae707d5f-f1d0-44ba-945d-5c387f171bb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d74e90-8efb-44e0-9a0c-e5f2c7b278c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1728514-9e13-46d8-ac31-b107d6f1e754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1bebef-3826-46f9-a5a4-f54c17bd9198",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003f1746-4fe4-41fe-9b82-a15a328cc519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab36d03-fa5f-45db-979b-38bbbc9670d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ed5464-ba51-4e06-b672-c494bba3a6f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ff4129-eb02-4d47-8a95-ccef00ad853b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86351db0-3579-4a5a-8dca-5de628cc9f68",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9830c7-e6b2-4da6-9a3c-fa1f2b501d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f431d27-3703-4e91-a2fa-9f70f90b5e08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "313233e8-cf24-432a-8143-04b313fb719b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2a4e7c-9207-4036-a783-f4b301541133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300df6f1-e852-409c-abe6-af5525ce1709",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fa6f35-2fa0-4a4d-b340-77331eff83be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3171c4d5-8b18-44e6-9a93-20b849b900f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca3c848-0bbb-4458-90a6-2a862f85c4e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4edebd78-6cf4-42fa-878c-6b56c6a6210e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9177db-cb6a-4cf9-a63c-5725fa295766",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f616213c-1297-4c8e-9e26-cfa021c5a06d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "578e265c-fbd6-467e-ab1b-7087dc3f12ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ebf280-e099-48e3-8fb1-e50f4a61a4f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d85077-0041-4e88-8c5d-74648f585707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67bbcc9-bea0-4e27-bb44-c61e5b027e24",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20ad6cb-e6e4-4d9c-baed-36160cc56705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b02fadd-b468-4de1-a0b7-9ef2c26c2bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1862d2-2425-4944-8f9d-cf22ce3eecc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dbbb65b-9890-420c-90f3-6ce9ef1820c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5202f2-80f6-4ed0-8d69-cda14a0a3c7c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31debb84-6546-4c1b-baa1-fa0b68cfd12f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8199b68-e3c4-49e9-9a6c-4e07741f690f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ecf437-2de0-407c-b778-47082e51e56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45aad0d2-009f-42d7-9f63-4c6c66cad9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f50aa8-2baf-4902-aa31-70bf91705257",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20378ae3-7a5e-49ca-b518-cff0a8e0076d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8603a99d-12be-48f8-bf7b-7deb065a7d6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d185fe46-c2cc-415d-881b-beb5ff99a281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5795fcfb-2409-41dc-b819-b0ac1b51376b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179922e9-8d28-45a7-a989-9d8c9dac7a0b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e184cdad-fc2e-454b-bb7a-77cd6b1be275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b3406a-8798-4667-bbd0-4af0adce566e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd6f864-bdb4-4093-a7d5-3ba562c5dd85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc616826-2425-4004-81ae-c10ad71a05f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce27046-51e7-4913-800c-84096b50b1d9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99aea071-07f7-4b4b-b28b-7990be2dfeac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d706ca6-5832-4628-ad0b-4bbee312a27a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6fe461-c062-4b65-b72f-a011de10173d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e15805-5735-4f5f-9551-d7f31750c880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd33937f-283b-4e11-8ea7-39b19d56b2cf",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8826e823-9745-43f2-a05d-2459b50e554d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea4ff733-80b3-40a0-a778-622c095f391d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd74e4e-dd39-4257-9625-86ba1563362b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "086c7ad2-a22b-4adf-889e-63f64f23632d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14789ce-f2af-4a1c-a8de-36589c8b636c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0215597a-7b5a-4367-adb1-97886fee6132",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7050f680-adbc-45a3-913a-9de9366aca29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a0b0cd-0523-435b-9e51-b4bf3667299b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef2dfd9-f596-46b0-833c-824c78fed364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8f3adc-9964-4b62-9eb5-3bbcf2d179da",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98ad888-855a-4979-8fb3-be4e98f60a23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "469c2d8d-d1ae-46bc-86ae-6c9f9b42e926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea4d2a9-b77f-48de-81d1-84411dc1a46d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8eb632c-1e85-4206-ac37-1a0213ee7ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5eb571-8df4-4959-9163-6e9cfc0b7c49",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9fd61e-1f8e-4b7f-b2e1-486ae443135c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d015cecb-400b-443e-85f9-612ad785c3e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e07d8c1-65f8-4336-99b0-cb10880648b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23455e7-df78-46f8-90d4-c90a80f139fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937c194a-99d5-4c6f-bd56-bb24f0247568",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365d2f06-fb79-4cab-852b-20dd8bdb867a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcd89fa4-f0e1-4fea-87a6-8dce301f91b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0b4ffa-1d54-48a9-9d01-63da38e37b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f20985b-f198-445b-91c1-3eacd1e9807c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2d43f2-62af-4ce1-a229-a7945c37ddd7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f21a5e-1213-4ed8-94cb-9a548dd348a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f03fb73-a5cf-4c3a-92e5-325372735a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25f88a6-eb6a-45d8-bf15-4cf4e94cf641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7260bcc3-0f68-4cdc-9c9c-30b606bdae91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46811a33-c786-4034-bb70-ae8164b54026",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2f72a7-ca2a-49e1-80e6-1d9c101e0147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88240e05-98fb-47f3-8784-7d0cc557251c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc7d20c-ff14-4f9a-8230-4b24490b86a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c44accc-4e30-40e7-b954-f7119fc9365b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2ab4c8-8dbb-44ac-b1b5-6692a0aecec4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39915169-75a5-42ba-b653-eea4fd56f362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e21dbe-f3f1-460a-a93b-ab3516dc4875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7c0534-7dd3-448a-979c-203ab8de4964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c73f1640-6538-4756-a68a-1fbe18c643b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d125dacd-9ba3-42ca-b7f6-8c00764ac9e3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e202f86c-7864-4be4-a29b-2577ef1febfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e697b9-bfcb-4838-903d-75366675ece6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "104c55d0-c688-4ca8-97b9-006f336601ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc07195-36e7-404b-96e4-a00b718ebed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fa6957-47ea-4f3f-98c8-782993dc20fa",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2630f36c-55b9-4df5-921f-fb87d819a5f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d94d0f0-9b39-4f72-8a36-4c1c2d7afb21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0fde16-da88-4298-bab3-35850ba9be5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b45bf01-54b7-4c3e-9bb0-fc05b71eac35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d92b0f-4fd6-425f-b900-3c68a840b347",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530067f6-bb22-4920-926b-dcfa01f860c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65545cd-14f4-42a0-ac31-dd46954da33e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e749f5b4-f94a-4231-8657-277ac064e7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a113f5-9220-4f5c-8279-22bdc6ca6635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5be25eb-50d8-4557-be54-0d298c37551c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea560156-cfe0-4272-9493-8b64d798d2f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c6b6de-e9f5-4e10-b162-260e8bc7d6fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91bd0993-feee-4ea2-af23-6f054ee7786b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b390eb8-fbe9-447d-8879-2cac30ada45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a75d15e-99e1-401a-b149-148f2b0071fa",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3445ca-a8b6-4eac-bebe-212c47e8d43e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8700c880-5f68-4447-8450-88ae6f05f8ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ff1c1f-2575-4b7d-be98-97fd7d58aabc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70c13f2-3e0a-47b6-9328-6504278b1e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580b14e3-0171-4771-ada1-3d3250d2d5b7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d869a13-3b5b-4f8e-88f9-6bb549539eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261a6681-c0c7-4caf-afff-fc5e31971ed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc05c746-122e-4d59-8014-9b718d90df9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d4fcc26-9036-48c0-81c2-2fea93485a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e44fe1-4d13-438d-989b-0766d152efcb",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70b58c9-003c-49c0-961d-096226476e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2a4f15-8d28-4568-a68c-f8dde283d735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49b6ef6-08c3-46a5-b0a4-d426c84b3ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7625568-d097-49bf-b85d-3e9572c920d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9edc436c-e824-4015-99ed-bcf2e0d37921",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cffc9f2-d20e-4a32-b09a-fa4228921148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "151cd8cb-c6f6-4bc8-af0f-bc9c5e88bc2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cc2698-72cd-4c17-9b49-0dbea0e50d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d875dd19-8a38-4951-951e-37156d172542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec49f86-ccc2-4bc6-a66e-0b46cd51fb5e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84c02f5-62e7-4558-b3e2-9074721a8382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a65fc7b-728d-4ba3-9cb5-bd0222f18660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "013878f5-f5e2-4e1d-af98-6cff5cc313e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb15062e-9512-409b-9b23-ed6c6088ec46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4469445-d82e-433c-a9de-11a34d209912",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac904a42-4ae6-4203-bab2-8400c670612c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6d0a5e-74b6-4af3-888a-55c4d75dd9dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fd7a4d-4d9e-461d-afee-79a5e26472ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "543ffb05-bbd4-401d-af3c-6f44007971ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427ea9c4-f8e0-4f96-90aa-5bbdce5e5f75",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b26e15-2591-4b8b-8854-01aff5b739c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6496c2c-72c4-4c51-9829-e9ddb5c5b08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec030d90-c2d5-498f-bff7-9c2c768503ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1feafdfb-c376-4b28-aa52-c2b6c19a2352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc335fff-7d8b-4b82-aa92-2ec0ecbc1884",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cef027d-2221-4707-81ed-73de47d3cf2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20140b80-003d-4dbe-8361-951ddf4f8eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca418dfc-4803-4d1c-8f4a-20029de0140b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "435fec0f-329f-4712-9583-d59d1680e45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb83b1e-932c-4f1c-a66a-91db79a4952c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1e2e24-8fc4-4e65-ae04-3d6da38621d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6c9119-cc7f-4bd1-824c-a4e1602451f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "972fdfcf-1abe-4e86-9daf-cca76126b2a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4fa88c-75bf-4863-aaa5-6b94420fbd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b3d240-b0ee-4bda-99a2-9c5a6decfb22",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7bb151-51ae-4bc3-b75b-a7cad790c9cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c003c8-4742-4f7f-84f0-634d381f143f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bf5c3d-ba08-4fec-8e06-da12a4c8d35e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d8fcc0-f686-4ee4-8fc4-f6f6f037bb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6987ed-7812-4e10-b1df-1b3eda604d34",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54dc268-40fc-4e91-9a06-aab5b0a43b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95861ac1-5097-4e78-a5c2-0bc6bff0d23a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0cbd53-e689-487a-981a-205be1d3e406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8316d8-9ca0-45ea-995c-91f82e6d18ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a64d9d-8486-4dce-a53e-90a8b98f8062",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36afc7dd-6edc-40de-84fa-741f5f0af551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed72a682-956d-4185-99d3-88f60c68fa80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468ebc49-3b29-4529-a580-d3d59aafd5ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e306c9-ef4f-4f16-b43a-867941e6eefa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760b15af-d896-4572-83e1-14d884015677",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efc3f02-05da-4c41-b65f-d7d761e74219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0821252-352e-47ce-814d-777a9e1d1a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d87f06-5986-4927-ad03-07db2a5a3e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59871851-eab5-4a4d-bb26-96b4ce837d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140a7c4d-daee-409a-8509-ccda1d8bc4f7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4781b52a-bbd6-439f-abd3-57c9c831d1dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f1a239-c004-41d8-b688-991b53c78247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0127efd0-78ea-4ccd-87dd-cb0b0c25be94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef73563c-3189-4296-9063-896a93568c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1754892-ccdc-4af4-9862-ae234addc2e2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c30eac-824b-4b24-a3f0-3ac78c990542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1325f2-875c-4d5d-bde7-4b1fc3e9f26b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb5d0b1-e657-4070-88aa-af622030519a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c358450-eb84-4202-ae7e-6721124e8f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40508a32-8dda-45b3-b857-4332873c2039",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbb2c26-585c-4cfa-bd2a-eca1f3e2a597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c3991a-c6e3-44f5-8385-aafe56e7907c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb813fd-49aa-4fc5-a1f0-2a3376e1c051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86c9cc3-8579-4450-8c50-5928d151b275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717448a6-689a-479f-a924-12f0bd0daac5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27cafc5a-8bbf-49a5-8768-c65199246fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42d7051-1725-4710-af59-6a62bce472b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c69652-6e0e-4d54-a8b5-d138da1f76ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69098d0-c8a7-4072-a69a-ae2ef5a42136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5cf479-76a0-423d-9117-cd521df5f4f7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b073561-c914-4fe6-b108-19dcc3f2ecfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046d1a84-53d4-4caa-9b9f-1ccd68b9b821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d2404a-88f9-42fe-b817-7bf6d09b5a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73dc3efa-f55e-4f7c-83f1-997f851d23ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc2ed17-59d3-48a4-acdf-31fe25df5b59",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79ed83d-e7a8-4455-993d-ccaf8829a0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526a821d-2f3c-41c8-8c38-02b46aaf0da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b146c00-1d0f-4a6e-9839-0ee2bbb29109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c95a14-0ddb-4f7a-a57c-4a16923a8a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3355be-cddf-4256-bfbd-ffb025c2be42",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3534603-0804-4f9f-b731-aa1f1e849c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed70340d-1279-4713-bb40-27d73ea3c60e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b14262-93cf-449a-9996-197731690a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0fa258-2244-4993-a099-cdb5a6a21536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86252be-e38b-4890-a2d6-8cbe622b49c9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b1077f-6a8f-4ef9-9b1d-bc71ab24677c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7220c0-aadc-4bbb-bb84-573489ed59b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7590e3-0e2d-4671-9183-b3ab0608107f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd44af4f-e4fc-4568-bef0-e73450f7fba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2918057b-24be-4c49-957a-3dc6370b6ed1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2dfb4b-ae2f-4f24-b30f-3187120e0c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb0f717-aa8d-4a90-8cfe-8517f997e80f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b96830-8cd9-4e02-9d86-c548de371724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81fd16e3-a7f7-4b80-a3a1-b2a7588fe28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b842eb9-ed28-4966-8470-ca8a5d887f60",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ca989a-21d0-4b69-9dc1-2896db99b8ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f131223-7602-40e8-9f2f-8a85dac6249d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fe730d-5206-42ea-a68e-cd2cf7157144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d05c22-1cd9-42cb-97d1-8c4d451ee991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ae6102-fe81-43d6-8ecd-2f61f5240ea9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4495b57-99dc-48b9-b4ac-cb1796e64827",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "424f25c1-bc95-4177-8a19-6604c80a74ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4d84b8-f769-459d-a50a-3144aa6bfde9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1895a145-1e7e-4d81-a422-4033278ab1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b814588-77ec-4cdc-a1ec-fa4c7bf19ad6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a7a5b6-47f2-4383-848d-27fb7dfdbf0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19ae0ac0-7ca7-4bf8-ad3a-703d8b53299a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b5c454-9b47-4ef2-b6eb-69915ec8db0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea35ad2-79e5-4d20-ad2c-be4552606bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933b29d7-5b12-49a7-b8c4-557f4875cfb8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9f7a7f-e6c2-44fc-92d1-7c80bbc98286",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dae7b7d7-9c39-41c7-977a-b3f2c1fd21e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fb0884-e793-4087-a91f-cbe449ed4711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3bc9cb4-9dfe-49d0-9b0f-2adf58d5b30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f136eaaa-5d1f-409d-8df3-72eee8cc9337",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc64475b-af30-4f64-9fe1-705ce8200499",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3e20962-f75b-4c76-878c-2ae3b64f1683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d743ccb-3e81-438b-bbcf-70a77ce0f8c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dbf8ee7-7405-4ed0-9174-b0febc87b356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b78676-5de3-45b9-8234-c12688109937",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c029d0-fd44-4d4e-8ddd-15f2d6cd3598",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dbc7a67-2d31-40e7-9c35-a501630dcf88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c492d20f-0415-4bfb-98aa-08d9ba2c0d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f5cadd-f076-4846-8b4c-39f01af216e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786da73e-e788-4c5a-88ac-9b35d8f6b40f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca71e110-338d-4384-b9dc-80221db1a635",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5649694-ed51-419e-9f20-c8b67f1d51d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27dcbfe-c881-43c4-8896-a50cef059dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce952aa-58af-4315-9dde-824f60b52fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac81668-e89c-4d31-bc57-56d1b1a85536",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508ec290-56dc-4524-9dee-f92d6814b7d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12a400a1-4cb7-4153-9610-7000eee15ef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7b7e51-37e9-48ce-8660-676029577120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a097533b-1e3d-4797-baa7-49833662521c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da949582-dd56-43be-85c9-6f25bcf13dd1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877c3724-de18-4d2d-9cc6-6dd7f2231e71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e9d5319-00c6-4542-be66-1dab8ab5ea7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5aefe4-c001-4c65-9681-9fc8d3610c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd8ca02-862e-4a30-bc2c-b2a1f6733035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012f1576-ec9b-40c6-a82e-5bfdbb569c04",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a0e46d-a6cb-45aa-8c5a-4b45e5760d39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ebfcc9e-5d3a-4634-aed4-003443b6a5ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "018432ff-23df-4877-a666-afd14acffb4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beec738d-e021-41bb-a383-ead03d70eb28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b28b55-77a9-4dd4-b28a-aa51f3c94cd9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9590288c-bcb3-4edc-9f12-078eb4a6da1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4eb1888-8f7e-48d6-b0dc-67766b8d076d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b290704a-1356-4849-beea-b61f42a4e4a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10772f7c-853a-457b-b915-f02f3e39c623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e4cd8f-3687-4f37-94a5-8e808254700e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdf90e8-7984-4aa6-8bcc-b8c348912531",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20190754-d3a9-47aa-9e77-0196a78833bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20454da4-8a9a-4cca-be58-4a5d894b1ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52855a1b-69c8-45ff-8c9b-471832841790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896f4fc1-2c87-440a-ac0a-6277c90dc91c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4cb808-5361-4e0f-b1bb-eea9bde41ec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b54f4d4-c43b-42fa-8d7e-2c2518e5e5a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "529ef8db-66c0-41ba-ab70-f07f5b3d50aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf50a462-0f3f-4e07-8e7d-3bcc40c09a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fa672a-03c4-4aad-892d-e7bc77cb2b72",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafc5d2a-9121-4905-bbc1-e1ff9167fe5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca2ab35d-0dbd-4ca4-a061-1e176545fdfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "734c531d-1cd3-418d-966f-7f99be8a19b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afbfc3cf-1cf8-4ed1-b56b-71ed93502543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf95b0f4-596c-428e-b1ae-95391a4a3b2a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31bdb48-1a9e-4c90-a513-d11d37871139",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55ce8377-42ad-42e5-9a1e-4d3826ce4967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb52bed0-2227-4d26-a4e1-83732ad76aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a60397-6dd3-4fa3-9677-a9586636dcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3cdf13-6579-4bc2-ba7b-0ed6ea5b22d0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b94ce5-0ad0-46f3-a600-74ee2d31d071",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9145a80a-fdbb-4e55-9cc9-7697149a6b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6341c6da-973d-41c9-ad80-4dc9611b5381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4544934e-d644-4901-aba7-c069ca1b0310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a662d69-6804-40fe-a62f-a1f079e59f44",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391a5ab7-246b-45c1-a496-04863046a21f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a90eeb5-9e46-4e11-ab82-c7bcab3b79ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fe15ed-fdd6-40e5-b613-55f64f9fbbe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3834c4-2b52-4ff4-a3bd-32248045b05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5102c7de-e01f-4851-af0b-d390f31c63b5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c0d16d-8e24-442f-8d42-4a2eeaf1f15f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cfd7de7-afdf-4f57-a16f-15d516f82256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6771b535-a359-4230-8c5b-97aa6ccbe592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4584fd15-9b3c-4c60-9812-022a4323f027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc5ef1b-7c02-4eee-bc8c-3af21cbece46",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795448cf-c489-4e65-8170-626843beb3a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae6a586e-e729-4e2c-9622-6d681db74238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d7b684-79f0-4187-8369-e8230752631f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b21f3b-eee2-4258-9d79-fa60cdc6551c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f55f5d8-8315-4a7a-bf5d-8638cf44bf35",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16c1598-1465-4509-b0c8-a46fc3d44481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e6db674-b615-4540-b4e2-565ec4f594f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0bd0ab2-7046-499e-b8fe-b861c70e5bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ced22f-efb9-469d-94f0-1d1648e7e65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e78f694-8432-4b3d-9595-28d457352776",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3795e400-129a-4f26-af93-ff9138245274",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58546f32-f894-4bba-9e54-b547198d9891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73ed1fd-c6a1-4ebe-88b9-ab90e9e8a602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363f6ef3-65e9-4a8d-a370-73d19c5f7eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c7f24f-024b-49c9-bdb6-722c0431cdd7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488f38c4-6f53-42a2-af79-757bb227a9e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c97d3ff-6589-4a00-8d2d-197667c3a505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8af5b70-93ad-43be-a6bc-31251216988d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3818f5f6-73cc-4349-a186-7b1619391db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d1b3bb-7cc6-4af2-8eb0-c150c6d757bc",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67d28ae-bd75-4d7d-996c-47b6ee4d8631",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80c0a1af-bcb4-4ade-bf5b-128f0a6e98d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8428961f-0876-418a-b43b-9d691aee6793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a424c94a-d049-490b-bca6-bab3d54ad353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f60478c-511e-4b27-b7d0-352423dee23b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627c406a-d49d-4efc-9d7c-35f3799d0568",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1694220-c576-4329-9023-0dbf74cde565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1c7edd-8865-4ee3-91f8-09f9c07ce9ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "355deab3-2569-4a53-ae1a-fd9de863437a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfd3531-2f50-4ac1-a911-a1bbaf418b82",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc50067-0583-4e2b-bb97-2d5a7b594408",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f5dbd92-a951-4879-a988-e180f77d8f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0bd2fbd-f019-4aa3-b961-d972ada6aa71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7778d397-8c88-4e75-b962-727b09af4d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d428a0-dc17-4eaa-84a0-08a195c02f0f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1929f28d-ed90-4026-ae9f-3bbc4337e28f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ededea73-cd9c-4434-a0bd-9eb144465cf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa670687-f486-4ef5-82d4-4c60b7a2c630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b4d019-7222-4315-8840-3bc148affa09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75ed7fa-050f-4253-9ee3-1b8c674a4259",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208ae1ab-28dc-45ed-8120-ab7537ccfb44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af09ea62-4134-4518-8e7d-fae1ab906901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0beb499d-2ae4-47ff-9247-e1b9a85c457c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "188d6b99-c862-4c9b-a4de-ef11bbc73c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2ca257-47fa-4d95-acbe-4b9f1c902eee",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3c44f6-86a2-448d-aa36-a02f3275254a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f016028-69aa-4f9e-b5df-5003caebeca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7f9d34-c7c2-45f8-9e4e-33ccff056836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcdf8f1-80d5-4523-9dd0-9e507ae78aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8f0054-2f4c-42f8-96c7-f8b06a1b0d65",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1feff4c3-0bff-4659-ac40-f073b8a7a18f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b05ca605-3704-41ca-b2fb-accd43701e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d8c037-360d-411d-97b0-f48382fc00eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb963ab3-8fd5-4f66-a8aa-363c1eaba7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f97ac2-0335-4f5c-bcd4-263260338163",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefedbde-2344-488e-97de-2aa76c89f4fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "841da9ad-2101-43af-87f7-4f56653fd3a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "641f6a6f-4481-4936-9121-34fbc8a3cddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e95ab2-8519-4e6e-8877-680b8853eba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97aca33b-8ca2-4d13-93c9-fd16bf4e694c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c4d5bf-626c-49fb-bcfe-8de17fb70c33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d09b2ed3-006a-4fb5-aebb-ce101270305c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b1edc0-fa65-482e-aebe-7faf618d3551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1792d3c7-5d56-40a9-8456-59a65d1f1bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f28f18f-43f4-41fe-8177-1d93371c6fb1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fee6502-e6ba-4aec-8a22-300628a48713",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c95b697-a6b9-4523-9015-21fe697edbf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1723b733-f519-4410-a849-8a4442553da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfce8e31-20c6-473c-9333-8c49628de386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737a7ef0-ef6b-4e33-8b63-9fcb1fa4d5dc",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72499a3e-33f8-4881-8b0c-64bb6c5ddf7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad9a332a-4311-4ebf-87fd-1299b34945f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b89db22-fb73-4e80-99bf-7d3373fad752",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24dcd64f-5e89-489a-8369-31650f72ecb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24182b87-3e91-4c9b-b050-e448cb52172b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b54f35f-ad8f-429a-a699-ade5fa37244f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78e6456f-1040-4718-a1d2-94764b25ba2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef865d80-877a-4926-8551-abaca6175512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d96ad0-5c5e-4446-8c5c-0dc0b2b1f6e1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "981d9e17-aa41-46d5-b515-649b9ae423f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ece79b22-1b7b-4197-9207-47702c4b96b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f28c9d4d-f625-4a32-b811-389e129605ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f9c4dab-4163-4d06-9804-1fea9ffa4ea2"
                    }
                  }
                ]
              },
              {
                "id": "45dabdff-0d49-4edd-a844-9f4562872b97",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a456b19-1784-4feb-afbc-0a4d1b6205d8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5e2eca-fff5-45ad-8a04-06c2e65d1285",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e851ecad-888d-4d7b-a150-888b2e3946e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4bd899-7971-46d0-90d6-c41afde5efa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc0d6827-bed5-41e1-8f28-eb990fddeff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46cff53-451d-4553-b7f1-fd96036b4d3a",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01df7285-2bc4-4c70-af12-39f1719d0b2b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9adb8e35-4528-4e6c-a702-753bdd3ea38a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3adec1-dc77-4cc6-8f7d-afef88731578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a725d0a-287c-4ae7-aa2e-4084ffd3b807"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39cfc093-9613-45ff-9c6d-91b43d89252d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0dcfde88-7cd7-465a-9214-6e52311e8788"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d11016e-dd65-4e39-8124-7226b91f9623",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c62ab62f-c24d-45ff-8eda-b3f579548b1c"
                    }
                  }
                ]
              },
              {
                "id": "3abf384b-ceb3-4fa5-9cab-4828a9e54804",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "da72625a-ab48-4df1-9c5b-3854e655345e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bd4e15-e37e-452f-bd89-b1905421e2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "70e77500-dbf9-48bd-bfff-d33c7514b934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ac6f44-1079-4cca-8e3b-1650209eb515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ca9363-5005-411e-ac8f-c72fda877180"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2a5b370b-5ff8-4f22-8616-9f6328c8a592",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3dbe71c7-0a8c-4ba5-aefb-f78d8f5996ee",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccc309f9-dba4-477e-8868-29b93175f340",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "73e60765-215e-4d38-ba0d-e19acf4d4fc4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "338f7209-7b5b-40e5-ab9f-f9e3c6fdc1a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fe6bb3f-6621-42e0-8801-00326f8dd4ab"
                    }
                  }
                ]
              },
              {
                "id": "343f7387-70d3-4525-9713-3fe211d7a2f0",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5ae02d5-d506-45e8-b96c-0d73aeb35e7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c5659023-c872-4464-a059-04543d848a9e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f853e6f7-fe27-4c23-bfbe-b363b999ff0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bce80b4-6931-4461-a549-c60c6de6213e"
                    }
                  }
                ]
              },
              {
                "id": "da7a5076-34c5-46f3-a452-614a6635d0e9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "386ced1c-e0db-4f7e-a013-41aa18a401b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4a0f95e2-957c-42f3-8afd-d9de4eca7ff1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b51dc0c8-ebd1-4aef-8e64-1c9d55925afe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8df7acef-ba96-4644-a2e9-917c561ea50e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3703689-860d-440f-a4e9-82b1bad071d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "027b258b-cd08-4dbd-b44f-a78f115f0a5a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55bf0e1f-5fee-4600-b525-5485a92c776d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61c1915e-72fe-4e99-b2d5-579974c44780"
            }
          }
        ]
      },
      {
        "id": "fd73ff32-a854-4368-8bd9-c5eb341b00b1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ebff8cf9-d766-4fbd-bade-77d56b2aa2e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "056ce6ad-d032-441d-9bd1-abd55fcb26f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b0feb32-703d-4b00-b4ff-82f8a80ec6cb",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722c1cae-67ac-4b86-ba3f-1edf17436f29",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4876c636-d335-47ee-9895-7a9beddc7999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffefa854-bd4c-4d8b-9da2-fb06264b59be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be86ec4a-2e37-48be-8a45-3c8a212cb976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c270d33f-a503-4950-b470-bc6e0c478216",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f92ab2f-cb92-4a1c-a05f-153ba20cb0ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4dcb5a7c-2157-4732-8542-b7483b256488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d654bc32-5a10-4df1-8886-94210ba4b899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a00f22ac-23a2-418d-8de1-bedfd95b2a1c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ebcc894-a637-4793-b076-3cf65ff62ce6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01112705-c6bb-4a7e-b5b4-23686a8ccfec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e91becf-b4f8-4471-9d22-95ba0c307034",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d440391-8865-42f9-8b62-b675a54a19cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "379e170f-f2c5-4282-8ba8-f90b66f8e323",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fe3df709-ac12-4ff6-9317-7f136fc938ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7635caf1-6638-48fc-9a0d-641291fb2d78",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5806b446-adfd-4dd6-93b1-b65642161c76"
            }
          }
        ]
      },
      {
        "id": "415bfff2-84bd-42f6-a310-cd54e407815d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "239ca872-11c6-4d9f-8806-41d115d0f216",
            "name": "Negative Testing",
            "item": [
              {
                "id": "413cf513-dca6-4698-ad79-e393a2af7e08",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "663fa630-0255-4131-a315-42637d26adc9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc63d499-4873-49f6-9735-c7aa813cde4e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "18a6c591-a1df-49fd-9016-bae9fa8b3147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c771b9a-0a64-4045-a123-0978e0b41fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5e8235f-5c3e-4503-8194-5f6806016a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a48ef7-ce94-44a6-ba70-dd0e31a72f14",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5dd25d-76db-4f1d-8b64-3415d467070f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c84ea67d-2b17-4dd4-b0a1-7ad23b5ae0bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c9cca1-4a74-43f0-a697-fd1d0e7a8993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bf94b25-4abd-432d-aded-fb8e535eeac8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17acafe0-70a1-4493-8b53-6b4eab64fcf5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "417a97cd-72b7-4444-96a8-4efa5e9e2a88"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25a585b9-47c6-4680-bada-cd57486d6b10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d766f43d-deda-4abc-8f09-3b95b9c46992"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6acc254b-e1d1-4ae6-a0e2-83da704c69e3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "15dca5fb-e282-470d-b1b1-a4b835f142cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3fbaba63-ff8a-4508-a157-c08894416145",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52453ace-06ff-494d-9177-aa3783e5f920"
            }
          }
        ]
      },
      {
        "id": "211353d8-dd8b-4ab1-b512-07ea5c2429f1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "44959873-c411-4064-8e30-305566a2d88d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "413cf26c-79c3-4314-8709-aa433e0e76dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f52631cf-c986-46ec-8b13-f79414876e18",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873b2efc-9b6f-4cbc-8e3b-2aae32761dd6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1ae8d015-9ade-44fb-bfd4-c38febb50945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc685ee-254e-4f36-90e0-21d95fa04a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a47cf673-9e00-4a1c-a4ac-3cc72e520d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d33fe58-9751-43f0-a3a8-9022d2d5cb4e",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7927b707-f24b-4f5d-8b27-31b4150097a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4bd6b0ca-d934-47cf-96ae-1d349c29ef34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1595de-2e4f-4e7f-ac65-e9453b801f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91c3de78-a2d4-4f3a-a227-67f15abefb0a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b6d925e-92ab-48d3-9615-4a3567a1d40d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01c6e295-911c-4788-ac28-6d9bd990d36e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2df6bbd9-e8fc-4e4a-b5ab-8f273d4bccfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90e8a1be-dbd0-479c-9711-983c18552d93"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0972a260-b68c-4833-b334-9d8c9712d572",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9c70bbf5-f972-4b65-ae8f-58c029a386e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad4ccd0f-14db-4f03-a945-a4e1ad0f30c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87d9c34e-dc26-40fa-b6c7-2ddecb198d26"
            }
          }
        ]
      },
      {
        "id": "ac98c6f3-11ab-4c71-9185-d11570f4df9a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7c25da7-e987-4f1e-b761-67ad6fcd6cb1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4a344f0-3ef2-46a7-8796-1e9418219c90",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6a7254cd-7007-46a9-ad6e-e71c5118a0cd",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a4626b1-39c5-42dd-93c3-b79f105ec2a0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80beaa32-da23-4b88-be46-7a479a7cdcbd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 13
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 440.6130268199235,
      "responseMin": 9,
      "responseMax": 2977,
      "responseSd": 343.20507545048963,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1670892137485,
      "completed": 1670892264893
    },
    "executions": [
      {
        "id": "f04f81e8-b3e3-4cbe-8489-c9b7d1b611f7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4a29860c-a9f0-4a69-a7e7-03303928b887",
          "httpRequestId": "563a7c7e-a644-4456-a155-a62b803be863"
        },
        "item": {
          "id": "f04f81e8-b3e3-4cbe-8489-c9b7d1b611f7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3a6b2ff7-518a-4ad0-9b3a-c38b33f517db",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "69987c5d-3654-41a9-a6f0-9f1bb1e5ea99",
        "cursor": {
          "ref": "77886f52-d7dd-4103-bb05-2beb366a68e4",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2e6f95ab-7b2c-498e-9eba-f562b30fa34c"
        },
        "item": {
          "id": "69987c5d-3654-41a9-a6f0-9f1bb1e5ea99",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "87a89faa-3af2-4949-9c73-ba1a939fcf02",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "308db3f6-56d3-4f99-8a6c-eea027dac604",
        "cursor": {
          "ref": "70a717a6-113e-4717-9a7a-4b5334251e5b",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b2e346f8-7b29-4e2e-a017-5347b3773460"
        },
        "item": {
          "id": "308db3f6-56d3-4f99-8a6c-eea027dac604",
          "name": "did_json"
        },
        "response": {
          "id": "7d726529-3b7e-4c39-8a57-4a4bed82aadb",
          "status": "OK",
          "code": 200,
          "responseTime": 1097,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff039df-affd-452d-9c4f-53f186a43c8b",
        "cursor": {
          "ref": "a6d5633c-a2ef-4056-aee8-ca523261f70d",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "da383135-1978-4f8a-88e0-2771f748137e"
        },
        "item": {
          "id": "dff039df-affd-452d-9c4f-53f186a43c8b",
          "name": "did:invalid"
        },
        "response": {
          "id": "2d2cd057-a049-44dd-8074-13023ffbf59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 957,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff039df-affd-452d-9c4f-53f186a43c8b",
        "cursor": {
          "ref": "a6d5633c-a2ef-4056-aee8-ca523261f70d",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "da383135-1978-4f8a-88e0-2771f748137e"
        },
        "item": {
          "id": "dff039df-affd-452d-9c4f-53f186a43c8b",
          "name": "did:invalid"
        },
        "response": {
          "id": "2d2cd057-a049-44dd-8074-13023ffbf59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 957,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15801be9-98e9-4a43-998e-392892eb56c2",
        "cursor": {
          "ref": "3541c79e-a5c8-4391-9473-c0c0addbcb44",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d5af8b7d-1786-4897-ae57-57072c5ad393"
        },
        "item": {
          "id": "15801be9-98e9-4a43-998e-392892eb56c2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9520fef3-dfd8-4c5c-bf45-7390a3e004d6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 598,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb935ca0-3c39-417e-8ef4-e3b2e62d5a01",
        "cursor": {
          "ref": "6ab83fe4-a168-4d56-b745-c4f25c04fba1",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b7b198ef-4940-4537-9ad0-28c00b977125"
        },
        "item": {
          "id": "fb935ca0-3c39-417e-8ef4-e3b2e62d5a01",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "61ff5aa5-3066-4c6f-85f4-79e4d6d598e7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 529,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5464a20f-04de-4530-a6ce-f40a2d2a556a",
        "cursor": {
          "ref": "38d0c602-742d-4785-8475-363af2f2bc98",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d272bc85-8a3d-48ba-8586-a63f97ed4d00"
        },
        "item": {
          "id": "5464a20f-04de-4530-a6ce-f40a2d2a556a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5d3f7edd-3585-46c5-9934-19001a790c1a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73457f8e-e794-4679-9e02-5c160b01226c",
        "cursor": {
          "ref": "d6607d4b-fc75-4939-bfae-0d2bb44b208c",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8afb6bd9-51c9-4f2c-8a8a-c121e5aa35e8"
        },
        "item": {
          "id": "73457f8e-e794-4679-9e02-5c160b01226c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7f0131dc-66e7-43a4-90a5-40b4d5204fa7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 468,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73457f8e-e794-4679-9e02-5c160b01226c",
        "cursor": {
          "ref": "d6607d4b-fc75-4939-bfae-0d2bb44b208c",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8afb6bd9-51c9-4f2c-8a8a-c121e5aa35e8"
        },
        "item": {
          "id": "73457f8e-e794-4679-9e02-5c160b01226c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7f0131dc-66e7-43a4-90a5-40b4d5204fa7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 468,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404e4c55-c65f-49f9-9e03-316c5ad66b7c",
        "cursor": {
          "ref": "7a63f8c2-b4ad-43aa-b281-3dab0c8a76a5",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2a5c34f0-d3ed-412a-b688-fc467df2e852"
        },
        "item": {
          "id": "404e4c55-c65f-49f9-9e03-316c5ad66b7c",
          "name": "identifiers"
        },
        "response": {
          "id": "493c436e-068e-4393-bd4c-fe6ba27e9693",
          "status": "OK",
          "code": 200,
          "responseTime": 705,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee56d9f-6a56-4644-b70f-0675c1faa010",
        "cursor": {
          "ref": "24a1d13c-64f5-4d8f-a8a0-7ede031d6f7a",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b9723230-04cb-4cff-9c1e-bd38054ff03b"
        },
        "item": {
          "id": "eee56d9f-6a56-4644-b70f-0675c1faa010",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fed8e93c-02ba-478d-88d7-7ef61fa7f805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee56d9f-6a56-4644-b70f-0675c1faa010",
        "cursor": {
          "ref": "24a1d13c-64f5-4d8f-a8a0-7ede031d6f7a",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b9723230-04cb-4cff-9c1e-bd38054ff03b"
        },
        "item": {
          "id": "eee56d9f-6a56-4644-b70f-0675c1faa010",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fed8e93c-02ba-478d-88d7-7ef61fa7f805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6651c178-dff4-4149-b03f-15b16e727ec9",
        "cursor": {
          "ref": "319fddfb-0ef2-4f2c-99ee-76d034247cd6",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "25731c67-c4e3-488f-b866-fb63a90d8611"
        },
        "item": {
          "id": "6651c178-dff4-4149-b03f-15b16e727ec9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5567d487-58f2-4714-8d50-1fae4848c51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29936684-d805-47c9-b10d-4adb95a8e18a",
        "cursor": {
          "ref": "0fcc2245-9151-4c85-8c22-aeb57a432e4f",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "40a90389-d830-4428-a8ed-6df896ffbd60"
        },
        "item": {
          "id": "29936684-d805-47c9-b10d-4adb95a8e18a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d9ab2c1d-f366-4555-8599-308561c458e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009884af-2f68-42ab-8e8d-f37838fff0b5",
        "cursor": {
          "ref": "2e75c430-da2b-4ed0-8b5e-485c788ba7da",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "466b5931-1090-46cb-aa4b-803178684651"
        },
        "item": {
          "id": "009884af-2f68-42ab-8e8d-f37838fff0b5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "08965595-8237-402f-9d81-c99b30741320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7fe9dc-26cf-4210-80b8-a808268e6ba1",
        "cursor": {
          "ref": "d33aa227-595c-40eb-8c59-7344b3730665",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b7d8eac3-cf6d-494b-824d-d8353379bd0d"
        },
        "item": {
          "id": "cd7fe9dc-26cf-4210-80b8-a808268e6ba1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fc6e3756-4fbe-4471-9c3f-b1b3848d6ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558f6a2c-9ede-49e1-80fe-5e7d4247b0c6",
        "cursor": {
          "ref": "e96b8ddf-d31d-4b77-b512-649d846d1c6e",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "71e3c4df-8b3b-4ca1-9a54-8668622a3ee0"
        },
        "item": {
          "id": "558f6a2c-9ede-49e1-80fe-5e7d4247b0c6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4222e28a-49c5-4fee-9076-6298aa4e5a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d0eb8c-298a-4928-82f8-b85615b1f679",
        "cursor": {
          "ref": "639ce387-8056-4b10-a992-58688c5afb10",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3ad02100-40cf-4fba-8225-bfb3b47ad399"
        },
        "item": {
          "id": "64d0eb8c-298a-4928-82f8-b85615b1f679",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5807a180-38a4-40e6-8c66-3d96af0db445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8254fc52-46b4-48ce-b2ea-7b7aa708073c",
        "cursor": {
          "ref": "decec2ce-25c0-4aa0-be85-a8b6e931ca35",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f9999761-10c5-4d23-82c3-b8b32a98f771"
        },
        "item": {
          "id": "8254fc52-46b4-48ce-b2ea-7b7aa708073c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a7c3521a-70e5-4567-bb32-4ffefe6bd9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471dd429-9df7-4570-8ad4-a05ebc9f26cc",
        "cursor": {
          "ref": "6bdff404-394e-42ec-9286-7bc04a1a6b31",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "adc2f182-0cfa-4287-ba52-7d36050fbcca"
        },
        "item": {
          "id": "471dd429-9df7-4570-8ad4-a05ebc9f26cc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8b80bad0-c02c-4e41-b558-bd5da95333c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c157c132-85ae-4c30-9069-6df93b929347",
        "cursor": {
          "ref": "b853ac2b-30c8-4cd7-90d5-a1ebd8fe5b5a",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1ada97cc-7557-447b-99de-ea519841d5b6"
        },
        "item": {
          "id": "c157c132-85ae-4c30-9069-6df93b929347",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "165efe94-597d-41fd-8bd0-ede7d69dd005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac401783-78cf-48bd-ace8-057fc97ea792",
        "cursor": {
          "ref": "d4007fc4-77d2-4902-94f3-e21095bd3920",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5670fd6a-0d73-49ca-b11d-096a8bad80de"
        },
        "item": {
          "id": "ac401783-78cf-48bd-ace8-057fc97ea792",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ce236394-2b81-47e4-be94-92caafe10694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a17c82-a187-4cad-841b-1dedcb992236",
        "cursor": {
          "ref": "33934b84-8726-4a44-85ac-c882129d602b",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "893f4aca-554c-4040-a84d-6b203993290b"
        },
        "item": {
          "id": "b5a17c82-a187-4cad-841b-1dedcb992236",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e3b0d5d4-246a-4f51-b0f8-f5e9c5fb67f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa2a491-5b13-487b-9728-e896da1fd554",
        "cursor": {
          "ref": "e93db822-7771-4cc3-a86e-ac014b0772e4",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "055252ec-c6de-4bbf-b670-93d258bf9f02"
        },
        "item": {
          "id": "3fa2a491-5b13-487b-9728-e896da1fd554",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "95680a2f-1a0e-4f6c-aa91-5a161cf0b716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2f24a7-be87-4df2-9ab8-5eb31e27e7dc",
        "cursor": {
          "ref": "3231dbca-d719-4261-9476-847f2cb94f77",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e3a3680f-171c-4d8f-988d-08fdd94d060d"
        },
        "item": {
          "id": "ed2f24a7-be87-4df2-9ab8-5eb31e27e7dc",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cd5e1c39-6ae7-452d-8255-a9d2dd44943b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75e8a3c-f58b-426a-8a8b-83bacb5b1521",
        "cursor": {
          "ref": "c87804f0-513b-4f7c-9373-ea00b21fdd0f",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "efabb6f8-17d9-4e80-8b1d-d9d11b5823de"
        },
        "item": {
          "id": "d75e8a3c-f58b-426a-8a8b-83bacb5b1521",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c9822358-190e-40c3-a3d0-862cbd0400d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbe4bfc-124d-437b-8e8d-bb88ca9f2861",
        "cursor": {
          "ref": "79c75473-8f7b-4531-a043-47177158fbb8",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d2a7e7e5-92b0-404f-bc22-cf5afa16294f"
        },
        "item": {
          "id": "9cbe4bfc-124d-437b-8e8d-bb88ca9f2861",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2afaa5b4-0936-4337-a8af-a5b9a9a10d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffc0727-4f6c-43be-8bed-a8593b55f85c",
        "cursor": {
          "ref": "5313fa74-3a00-4c47-a5f3-05522b5faa3c",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "038d1e14-0057-4fd9-88d1-fb8101133e64"
        },
        "item": {
          "id": "7ffc0727-4f6c-43be-8bed-a8593b55f85c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7d3d6175-4df4-4ccc-bb0b-ba83fc6acfe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ee5f23-65de-446d-af6b-6768e0d054f4",
        "cursor": {
          "ref": "50cdcf4c-95c5-4f42-be4d-e2ddb68174d1",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "33c0ca42-fda0-4163-9a83-a4db8203ee2a"
        },
        "item": {
          "id": "c9ee5f23-65de-446d-af6b-6768e0d054f4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "704140b0-97ae-4399-b9e3-bec458fbb7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c11a612-87df-421e-84f0-6cd4a67499c2",
        "cursor": {
          "ref": "995a8aac-155d-4837-ab84-1ee213bcde80",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "37654a73-6754-48c0-b1b3-281842678e9f"
        },
        "item": {
          "id": "4c11a612-87df-421e-84f0-6cd4a67499c2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f3f37b0a-8730-4e9c-9559-ad2f3b0900db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d69fe2e-3848-4621-8808-4e15b8c9c900",
        "cursor": {
          "ref": "f505831f-dc08-49d3-ad80-53daa9b634f8",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d997ebaa-a4d2-48ec-9934-98cbf2da0dfd"
        },
        "item": {
          "id": "2d69fe2e-3848-4621-8808-4e15b8c9c900",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "257d6295-ef16-4c2e-96af-41eb1f22f38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d6ea8f-9c55-4d15-a64e-7e5b284e93fa",
        "cursor": {
          "ref": "32c8b0db-c05c-4f16-8f99-69c5725f4da9",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "589ba4f7-9f39-48a0-98c7-39cd7524783a"
        },
        "item": {
          "id": "a4d6ea8f-9c55-4d15-a64e-7e5b284e93fa",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "06e5b4c7-1054-4fe0-980d-70a77078ce8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1d17e3-a594-435b-9a11-632438f879d3",
        "cursor": {
          "ref": "c2472031-ed5b-4684-ae56-92e9ee1c351d",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c6c0f810-2ec0-4ca9-a0dc-8041daa9d3d4"
        },
        "item": {
          "id": "cb1d17e3-a594-435b-9a11-632438f879d3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0ca03ad2-aacd-4973-8d30-2048a314b113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdb7554-69d4-48d5-80b4-d04908252a77",
        "cursor": {
          "ref": "d632c24f-c9d7-40ea-829e-9b1c214e2aa2",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "14ad3d37-740c-4a7b-9fab-2e45f57f2591"
        },
        "item": {
          "id": "ffdb7554-69d4-48d5-80b4-d04908252a77",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "adea325a-b76a-4e36-b62c-bdcf49726197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585c3fb3-d1b3-431a-82f9-2f668fd8cbf9",
        "cursor": {
          "ref": "39ed4107-e398-402f-9e65-fc7614ec2c45",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4fc67ac5-3297-46ab-92b7-efc15e4324a3"
        },
        "item": {
          "id": "585c3fb3-d1b3-431a-82f9-2f668fd8cbf9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f991cd5f-87ba-4156-aa66-57af78b1c85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a374f7-c6c2-4dc4-ae91-002c494f9167",
        "cursor": {
          "ref": "0d6bee9e-ae6d-43cd-bef9-7cd2b97716a5",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "73b0fc98-f5a6-4ebe-bc5d-a6925abbed0d"
        },
        "item": {
          "id": "49a374f7-c6c2-4dc4-ae91-002c494f9167",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0bb6f477-281a-46f7-b97e-ecc7ffed742f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad8f9ff-0371-4b2b-a1d8-043a42a4a769",
        "cursor": {
          "ref": "5b0183e4-4277-4738-85b4-b74759272275",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "024760c7-c33a-4124-99d9-7fbd8142de28"
        },
        "item": {
          "id": "8ad8f9ff-0371-4b2b-a1d8-043a42a4a769",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "958a7883-1d07-4fd0-b0fc-0270593d915e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dca7579-95ed-41a7-870d-7fea985d8152",
        "cursor": {
          "ref": "776d2a35-22e9-4bf9-af34-6d8f4d532d0b",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "17f3e1a9-c8e4-4068-8821-d2f5ceb0b760"
        },
        "item": {
          "id": "5dca7579-95ed-41a7-870d-7fea985d8152",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "68ec2253-76cb-4cf4-a766-a85c2d59f877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317d6d73-4dab-47e2-8e3a-c69d28f62292",
        "cursor": {
          "ref": "6e6e6603-d15d-4a24-bfa4-e8755d734326",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d94a517f-08f0-461b-bdfc-81f47c6b008b"
        },
        "item": {
          "id": "317d6d73-4dab-47e2-8e3a-c69d28f62292",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c8748cb9-6f66-42ca-9e3f-f1db294055cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df811a78-56ae-46bb-91dc-6ff8c94b0794",
        "cursor": {
          "ref": "ab696a44-f7f8-4c9d-95b2-5f83c24ccec7",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0d584cd4-e688-4706-9859-d91e8e4874d5"
        },
        "item": {
          "id": "df811a78-56ae-46bb-91dc-6ff8c94b0794",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9cf347e3-3167-4e88-8fbe-362e2df407b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2398f570-19e7-453a-9ae4-794a10299af3",
        "cursor": {
          "ref": "a186ad7c-0b19-48b2-8b6a-a0f082ae936b",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6349e486-fb76-4271-97e0-f9f03c333e86"
        },
        "item": {
          "id": "2398f570-19e7-453a-9ae4-794a10299af3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e349bcc1-93c8-4725-b802-770fab78cf63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9295ba3-a582-4564-900e-b8550693503f",
        "cursor": {
          "ref": "e6f5582d-8dbb-402e-adc0-353f292a1f77",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e23cd109-4459-4782-840e-03dd88703898"
        },
        "item": {
          "id": "c9295ba3-a582-4564-900e-b8550693503f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "082796d8-bb1c-4ff5-81a8-36f877b4c721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a908f80-8037-46a3-a7e5-75d087c9004b",
        "cursor": {
          "ref": "b1c3ae18-1c1a-4ea7-89a5-e5fb631f751b",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "975eeadb-e15c-4595-a55d-9ec5189f9cdd"
        },
        "item": {
          "id": "4a908f80-8037-46a3-a7e5-75d087c9004b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e5124022-3f66-4f84-9e4b-b49c26080070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798e9480-8766-4c87-aee9-81c70b87df68",
        "cursor": {
          "ref": "c81d533c-7346-4a3d-9373-39320bb20f5a",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cb62c819-1a82-4b3c-ab0f-97947fc04772"
        },
        "item": {
          "id": "798e9480-8766-4c87-aee9-81c70b87df68",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "daba4a39-bf14-44ec-b825-8c777c986c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73eb2f0-318b-4690-9f7c-511024005feb",
        "cursor": {
          "ref": "72a89460-2e4b-4df1-bae4-0e7aeaedbd1b",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3a2e8359-2f19-4f7b-a275-a6bae62df9b7"
        },
        "item": {
          "id": "e73eb2f0-318b-4690-9f7c-511024005feb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3429a7b1-ace3-4b25-b65a-20ab85e4e65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca47adb-f340-40b2-941a-4a1373236b88",
        "cursor": {
          "ref": "35721ec1-2b0c-49d8-b42b-47551c1ae94f",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "dc4ee8f6-e6c0-495f-b491-ba73ad3bcf14"
        },
        "item": {
          "id": "dca47adb-f340-40b2-941a-4a1373236b88",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "577c81a2-852d-464d-94f2-0283448a388b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09899731-08ea-424b-8e3f-e2727a478517",
        "cursor": {
          "ref": "b34f3940-668a-4fb3-921b-67e620e04d73",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9650e1b2-0217-4e5a-9c46-a299408b7afc"
        },
        "item": {
          "id": "09899731-08ea-424b-8e3f-e2727a478517",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d3fe0aeb-dace-4e76-87fb-472ff8dcd281",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 584,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bdf63a-e619-4fe9-ab9f-6b69d704c5a8",
        "cursor": {
          "ref": "0490a676-67c6-4e17-8f14-6bb7191becb5",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "818cd7f0-271c-4f85-accf-44ff03152c9e"
        },
        "item": {
          "id": "56bdf63a-e619-4fe9-ab9f-6b69d704c5a8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cb48b2d4-8c8a-43ef-868e-77e60d917d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4603096-6c64-42ea-a21e-55263344b9ac",
        "cursor": {
          "ref": "b2118430-bb8f-40af-9efb-f8ae927dfa71",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "31a94c74-2b49-46f8-ad24-b5db7c05d566"
        },
        "item": {
          "id": "e4603096-6c64-42ea-a21e-55263344b9ac",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d33b61ea-71a1-402d-96fa-53b3ddbc855a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2273070-b6b1-4c57-9327-0db6390572b9",
        "cursor": {
          "ref": "fd0a6e12-c261-4cb5-8ce2-cd5a0055b5a6",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6867034a-3e66-4636-99a7-dba22e896500"
        },
        "item": {
          "id": "d2273070-b6b1-4c57-9327-0db6390572b9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "dec03752-0038-4ebe-a898-892de2889044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b08579-765a-438b-a5b5-442b4735fc46",
        "cursor": {
          "ref": "e35d5a6c-c555-4bbf-9d22-b3dad926bc46",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f6d079a0-d719-446b-b9ab-98c343367e4a"
        },
        "item": {
          "id": "99b08579-765a-438b-a5b5-442b4735fc46",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "86d068c8-6903-48fb-bc5c-2c57ff30236e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee89eca2-d7d6-429a-a6e0-79bd3c5b933a",
        "cursor": {
          "ref": "8bb5bf16-f208-4c6f-abf2-79c8982a9b9f",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "68caafda-cf2e-4c68-a3b0-afbbbae0e08f"
        },
        "item": {
          "id": "ee89eca2-d7d6-429a-a6e0-79bd3c5b933a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9920face-7f0f-48a9-838b-23e741edf7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b987ac9-7b14-406d-9d02-338249357b4f",
        "cursor": {
          "ref": "fc1e982c-1610-46ae-95b4-224718cac9eb",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "442d5c60-1d4c-417d-ab48-93f43e3fcef7"
        },
        "item": {
          "id": "4b987ac9-7b14-406d-9d02-338249357b4f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c96c0f89-34b9-4d22-a939-42f933aec150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61dfa9bb-d645-44b6-8594-caeae7fc479b",
        "cursor": {
          "ref": "351753bd-da0e-4630-996e-313a59ad95c5",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1a2a0b6b-b693-456f-b578-24c06f5022b9"
        },
        "item": {
          "id": "61dfa9bb-d645-44b6-8594-caeae7fc479b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ec433ff7-e3fa-42f1-aa2c-a9af36b1eac4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 526,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88966f1b-af7f-4baa-a787-e66f0dcc43c0",
        "cursor": {
          "ref": "22a0c89b-2f83-434f-ae74-72324a85d9ac",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cac74a85-7f9f-4892-b36c-f985eca08908"
        },
        "item": {
          "id": "88966f1b-af7f-4baa-a787-e66f0dcc43c0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b48ef52b-9345-4e4b-9a9b-016719e8e678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f2fea9-da36-4de0-beb9-1437f2328927",
        "cursor": {
          "ref": "107d28d0-ecb7-4a51-89b4-6d6326d612eb",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b5efb4ae-4ef4-4974-8783-04512ca33c97"
        },
        "item": {
          "id": "e6f2fea9-da36-4de0-beb9-1437f2328927",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "12934e92-0b23-4ac4-84cf-42c12175e6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5138b4c4-e570-4fb5-9e66-d356ad5dfe5e",
        "cursor": {
          "ref": "5f64ecaf-b8ee-4a8b-ac76-55be43fa48aa",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7ddd81f8-e6b5-40cc-8473-56b4ea1e02d4"
        },
        "item": {
          "id": "5138b4c4-e570-4fb5-9e66-d356ad5dfe5e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "86373f11-5766-4c2c-b6a2-7fd8837f861a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330a34ec-6630-48c1-8837-6026d1d8d664",
        "cursor": {
          "ref": "827f602f-9f74-4533-8430-9b0de2401b1a",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e1e93894-b042-4853-9d11-9a567150b5b4"
        },
        "item": {
          "id": "330a34ec-6630-48c1-8837-6026d1d8d664",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "598c6da0-b2f4-4072-bfcd-c5ee8b48b4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb968b64-e1cf-46b1-9677-acdd9905d79c",
        "cursor": {
          "ref": "d7dd0585-7cc4-4afd-9f80-027b933e5976",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "90716f3a-caf4-47c5-9e43-e0a59b3f6705"
        },
        "item": {
          "id": "bb968b64-e1cf-46b1-9677-acdd9905d79c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b243e59f-7ef2-4ab3-a07c-e67640c64b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361eaf4c-2e0f-4c97-90bf-082469ef4e8a",
        "cursor": {
          "ref": "e92a1263-73bc-4ebf-a6b0-17d707a15a87",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "44967f4b-9eea-46c8-b8c1-77d6f681f9e2"
        },
        "item": {
          "id": "361eaf4c-2e0f-4c97-90bf-082469ef4e8a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f4136620-207e-4233-858b-76c059bddb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a25a8d-2bcc-4586-8e5f-f6993d3b4b9f",
        "cursor": {
          "ref": "d8ec9a16-40ed-4fd0-a39d-743a580a2344",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "82b0728c-ed88-42e4-9efa-63b43a17cf7f"
        },
        "item": {
          "id": "a0a25a8d-2bcc-4586-8e5f-f6993d3b4b9f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a5019eb8-5f55-4aeb-9074-749a9c82ff0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e23fe81-0dab-492c-b24d-c1faa0e1b8bd",
        "cursor": {
          "ref": "01fab4e2-cd91-4a0c-bfc4-286b1404e69b",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "246f6897-69a3-4ccf-8aff-9a3c49341fdf"
        },
        "item": {
          "id": "0e23fe81-0dab-492c-b24d-c1faa0e1b8bd",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "22db4b52-3250-4cdf-97a4-e53ca81e8039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8bf29f-128e-41d4-9729-e60b915b1f17",
        "cursor": {
          "ref": "47dee6ff-2dd4-45d4-9bf5-6940dfa7e821",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9e2cee1b-ec11-4cc2-bc0a-2f2820ac112f"
        },
        "item": {
          "id": "8b8bf29f-128e-41d4-9729-e60b915b1f17",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5ff1ed94-ce7d-41b8-8c9c-97b3d5311718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d73ef0f-3ed3-421e-b1f8-d093fd9d4c35",
        "cursor": {
          "ref": "3fd49bf3-0005-4a20-a09c-cbd7e216f712",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c4ef553d-56d4-48d0-98db-e7a6af625f81"
        },
        "item": {
          "id": "8d73ef0f-3ed3-421e-b1f8-d093fd9d4c35",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b797eb82-0fba-428f-92ed-14315c6f7f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32183f82-0211-486e-92e2-30ab332bb1a3",
        "cursor": {
          "ref": "fac647e6-2759-4412-92bf-eab974f4b35d",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "42979fc3-ec03-4740-82b3-cdcb6ddc04fd"
        },
        "item": {
          "id": "32183f82-0211-486e-92e2-30ab332bb1a3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "93b1e88c-daad-4bab-98b6-9d3f1c4bdde9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ffc77f-d751-4eea-9859-79dfbfecde61",
        "cursor": {
          "ref": "4a65f051-db74-4fe7-88d4-e55b778548da",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e92c2d29-1d78-4f87-bdb2-9613f1504908"
        },
        "item": {
          "id": "e7ffc77f-d751-4eea-9859-79dfbfecde61",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7da35e29-d770-4f5c-9621-d08cd2a76c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a276d610-c3af-4c01-854f-e5c1ace5ef14",
        "cursor": {
          "ref": "57302019-715b-4e05-aff7-21379ea649f9",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e3eaef91-e664-44c8-ada3-29f71c5a3464"
        },
        "item": {
          "id": "a276d610-c3af-4c01-854f-e5c1ace5ef14",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "268ebdc8-6f10-429f-bc84-91a26345831e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a252e2b1-8f75-45c6-b808-d04c25ed3727",
        "cursor": {
          "ref": "b57e82e5-bf8b-4964-bce0-a5381591dcac",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "84c10d54-98cc-491e-9c3c-1f3ed8e4fbe1"
        },
        "item": {
          "id": "a252e2b1-8f75-45c6-b808-d04c25ed3727",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "728b14b0-02e1-43c2-b59e-adfe92915303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c0adcb-03d3-4c07-9969-d9cb7e9dec31",
        "cursor": {
          "ref": "ced1cf11-4a1e-40b4-827e-c8bac88bf80e",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "24640032-bfe6-41b2-bea2-9e5dc6596462"
        },
        "item": {
          "id": "a7c0adcb-03d3-4c07-9969-d9cb7e9dec31",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5b1265cf-3d8e-41ac-9786-88269390988f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b085f108-4b94-4795-a19b-fda024314b69",
        "cursor": {
          "ref": "c9755fee-8a4e-4f2d-a7a5-3fbbfe437ef1",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c50c68c6-f017-45b7-bd5a-50b7c96ca9da"
        },
        "item": {
          "id": "b085f108-4b94-4795-a19b-fda024314b69",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8cebea79-c448-406a-b91a-5725f02cfb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ec29f6-06ac-4615-b921-2d4ab5fd4f84",
        "cursor": {
          "ref": "87df1b93-a041-4fe8-ae86-a8402e0f61f6",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3a3a1300-8318-4997-91fb-13576e83ce40"
        },
        "item": {
          "id": "37ec29f6-06ac-4615-b921-2d4ab5fd4f84",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6f81417a-2e3f-4c05-978e-02184b3ac35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce7fe47-eda0-49e9-a1e7-ec8efa9f009b",
        "cursor": {
          "ref": "4b21e3bf-c81e-4cd8-a712-711fb0dbb3a7",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1cf1d1b3-aa31-4ae0-b3b7-4bf57e42d42d"
        },
        "item": {
          "id": "9ce7fe47-eda0-49e9-a1e7-ec8efa9f009b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fc1ccca3-d233-4540-8909-d42efa666087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e609d55-5319-4f8c-80dd-cd00d0c12206",
        "cursor": {
          "ref": "50d4428f-4e9e-4512-b211-84497b8db192",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "20931b01-7d4a-4e0b-a1bb-d90477fb33db"
        },
        "item": {
          "id": "4e609d55-5319-4f8c-80dd-cd00d0c12206",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "630cae8f-70a2-44ea-8994-283e331149ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7529fbd-9b75-4ae8-8f0a-5520dbab6834",
        "cursor": {
          "ref": "eded2b55-5d47-421f-982c-1bd56cba4efa",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "23862a19-589d-400f-ae51-e5dfe9494b89"
        },
        "item": {
          "id": "b7529fbd-9b75-4ae8-8f0a-5520dbab6834",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6bc981f2-ae9d-455d-87e7-b1194edfd8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8620589f-c2ca-4ad2-a0e0-0a481a3492bc",
        "cursor": {
          "ref": "0667bf9e-bdbc-4ba1-ab5b-418a384579fb",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ea0490e3-5927-4b9d-ab53-9618b0451a42"
        },
        "item": {
          "id": "8620589f-c2ca-4ad2-a0e0-0a481a3492bc",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "35e1a9ea-2089-49ca-90cc-f84bf443a56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e207ed3-9e2c-4240-9e15-eff7646f8593",
        "cursor": {
          "ref": "98b5bf7a-9ff6-4717-9187-3c1e86c0a41f",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "084bf1d9-8b90-4613-8d66-e63dc504c08d"
        },
        "item": {
          "id": "8e207ed3-9e2c-4240-9e15-eff7646f8593",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e9f1848b-4f33-4b3f-b54c-b986e29d0a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5447f2b6-cf4d-4045-97cb-ffe9fb427f8c",
        "cursor": {
          "ref": "32c24884-5995-48cb-8044-627ab60ccacc",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a49a4598-bef6-404e-bc1c-e7b0e9453ee0"
        },
        "item": {
          "id": "5447f2b6-cf4d-4045-97cb-ffe9fb427f8c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "432601cb-1ae7-43be-939f-f69ab1b86af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28001eae-5910-47af-8dee-eff6c9f5d9ba",
        "cursor": {
          "ref": "6e43c5a2-dc00-47e5-b731-63411b1433ea",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "38f03d48-7ebe-45c3-b2d6-bed1cde9f2a2"
        },
        "item": {
          "id": "28001eae-5910-47af-8dee-eff6c9f5d9ba",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "06c8bae7-f1ff-45be-a242-08fed62f87ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b7c7a5-f568-46fa-bea3-dd61b9d1e8b4",
        "cursor": {
          "ref": "0fc576d8-c44d-43ff-bef7-a6f9fb6e6fe8",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f27093e4-dc98-45bf-b20d-52011b6e3a6b"
        },
        "item": {
          "id": "a4b7c7a5-f568-46fa-bea3-dd61b9d1e8b4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a46b0b16-54ce-4e0d-b857-67ecb76bbaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225b3db8-b762-427e-819f-7f8897e0a7d0",
        "cursor": {
          "ref": "aa5e3f8c-3217-48d7-83a3-0a0436257933",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "dc17435f-6714-44ce-b8d2-cdcc65241ce6"
        },
        "item": {
          "id": "225b3db8-b762-427e-819f-7f8897e0a7d0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "21afa6f5-084a-4784-baf3-d6bf01e3de57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989135f2-e952-41d4-be24-c869154679fe",
        "cursor": {
          "ref": "6dd83b2d-f63f-4660-87d7-1b2780e6dcea",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0b8b759e-9fb9-4e49-a86b-943d981fa9cf"
        },
        "item": {
          "id": "989135f2-e952-41d4-be24-c869154679fe",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "32afd33c-ff27-406b-99d0-ac0e0bc939fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c624ad-d436-4f7a-852c-ad364ccc7224",
        "cursor": {
          "ref": "8e8b1c8a-7e2f-4b43-a09f-f7e7efcf1f11",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "cb24a771-b51a-4f18-a729-1d4133352756"
        },
        "item": {
          "id": "50c624ad-d436-4f7a-852c-ad364ccc7224",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c19f6f3f-de52-4c64-935b-218307428f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 734
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4193c0a5-38ed-426f-9c1c-f1046f0c6f72",
        "cursor": {
          "ref": "f91d0c7c-8943-466d-aad8-00c716085f61",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "22098569-65fd-42ea-b519-559f127040d3"
        },
        "item": {
          "id": "4193c0a5-38ed-426f-9c1c-f1046f0c6f72",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a4f81993-a52a-4cc7-8f64-eaf5a0ea2e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 736
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bea13c5-ee6b-4375-8b60-369dc1d07d87",
        "cursor": {
          "ref": "58c61173-13bf-44f5-84a4-9f0d94a4501c",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "44bd9783-b5c6-4fff-a9e5-9d208fb86a9c"
        },
        "item": {
          "id": "1bea13c5-ee6b-4375-8b60-369dc1d07d87",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2a95b9ac-a794-45eb-a644-4006674de75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 734
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e26ba8-5893-4abf-9a57-9a48634a58b4",
        "cursor": {
          "ref": "705dd45b-049f-4e68-a1fe-2ffa1f8bec32",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4889bdcd-2461-415e-b8d6-a2ae452f3cc3"
        },
        "item": {
          "id": "c7e26ba8-5893-4abf-9a57-9a48634a58b4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4dd7301d-f491-4624-a3a1-05c45e18875b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cd171b-d90a-4dc5-804c-1d35bd159a02",
        "cursor": {
          "ref": "a1f7d2fd-1cf8-4a9e-8187-d1c77ae3fb5a",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "db4e3e30-7f37-4641-bb9e-bebe00198201"
        },
        "item": {
          "id": "70cd171b-d90a-4dc5-804c-1d35bd159a02",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "da6231a3-2f96-48ff-95f5-b63dd75c0260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297804ca-72c1-4565-baaa-937ff81a49ca",
        "cursor": {
          "ref": "1f3b9dc5-544e-481e-adcb-1435e44e97a6",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e8c947cd-19b0-43a2-8371-0af20367b742"
        },
        "item": {
          "id": "297804ca-72c1-4565-baaa-937ff81a49ca",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fb185cd7-a5fa-4c61-91ef-ec36db7bf885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b6814c-79ac-4c55-bc8d-22b314bd34dd",
        "cursor": {
          "ref": "4cc1bef3-2e51-4f34-97a4-86f351222043",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "aec92a83-e913-41fb-9c64-352e6229acca"
        },
        "item": {
          "id": "43b6814c-79ac-4c55-bc8d-22b314bd34dd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8d98d1dd-3b9c-4699-866d-d93bce10d8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3aa9dc8-f092-4d8b-83d0-4d5466425681",
        "cursor": {
          "ref": "ac2cf821-d7e9-465f-ae52-de06ecee2c13",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "54feb167-9103-4961-9b1b-b61d6f9acb10"
        },
        "item": {
          "id": "c3aa9dc8-f092-4d8b-83d0-4d5466425681",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ee19a775-750c-4b3a-afbd-d2b1a54bfdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49606297-2fe3-4722-b7c8-ca3e70786653",
        "cursor": {
          "ref": "79c6ce97-be9d-49ee-8f0b-13dd5ab63e49",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8854d406-b982-41cd-a027-4bf4df884dc7"
        },
        "item": {
          "id": "49606297-2fe3-4722-b7c8-ca3e70786653",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3ec1d262-ccee-4fce-9eec-6da6281b715d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84768f28-0505-4067-864c-f5c5a8d969a2",
        "cursor": {
          "ref": "8505ef2e-7587-4152-9a7c-278eafe155d8",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9588a5d5-75a8-4f39-a4fa-82aa7d32ab49"
        },
        "item": {
          "id": "84768f28-0505-4067-864c-f5c5a8d969a2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "94cd97b1-21c2-4330-8582-3d57078ef7cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8652f406-eb57-4608-913e-3ec2bc55f96c",
        "cursor": {
          "ref": "ef3b5289-361d-4e4b-b63a-e100fa6c6cec",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "be29ea4f-4b88-4e35-b41b-034820dd3b3f"
        },
        "item": {
          "id": "8652f406-eb57-4608-913e-3ec2bc55f96c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bf0f48c4-e337-4fe6-856f-f8263d1fcabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd4ad98-7e49-4329-ab93-0ed7cc2a6bbc",
        "cursor": {
          "ref": "32461364-fc87-45c4-bcb0-d1a2ef7e6fd2",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2a19e406-9ed5-4381-b5f4-55438e286094"
        },
        "item": {
          "id": "3cd4ad98-7e49-4329-ab93-0ed7cc2a6bbc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ce68220c-6fdd-40ae-bcc8-cb18fd64f069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d912157-6579-4083-9ac3-f9287a9a932b",
        "cursor": {
          "ref": "5d17b472-11f3-48d5-ae95-f02fddf22155",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a63bce8f-0e52-4865-8b72-d0f5f80c8406"
        },
        "item": {
          "id": "1d912157-6579-4083-9ac3-f9287a9a932b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2a1a1801-e711-485c-aaae-91b64366e05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66331711-58db-4e6a-9bc1-3f1a14548897",
        "cursor": {
          "ref": "de10f7a2-f7ee-492a-bd00-dede418b473c",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c2328191-bf17-4dde-939b-c71bafccc8c9"
        },
        "item": {
          "id": "66331711-58db-4e6a-9bc1-3f1a14548897",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "725f45f4-29f3-4b2c-bf1c-b97456881bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2b5cb8-4aba-4286-a160-63dea632909d",
        "cursor": {
          "ref": "d5aa0257-336c-499e-afb1-efb16ec22622",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fd6cb906-9f0f-4476-93c4-ef0c52be0820"
        },
        "item": {
          "id": "db2b5cb8-4aba-4286-a160-63dea632909d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f88b6171-09ba-4d6d-bd77-823fc18e2529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1f9fce-1def-47d3-9e83-ea1f5d6cb2a1",
        "cursor": {
          "ref": "b587084e-f3bd-4cd1-ab09-d930b3fee210",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c38f0df7-77c8-4505-8b54-ec6a3eaabaf1"
        },
        "item": {
          "id": "6c1f9fce-1def-47d3-9e83-ea1f5d6cb2a1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "825908e3-6287-4ede-b645-41f3dd82b10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3c11a4-464c-4d01-899b-850be2e6835d",
        "cursor": {
          "ref": "5d3715a7-661c-4a42-849c-b72b75b7f688",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f1188798-b670-4422-ad5d-d25c720a18a9"
        },
        "item": {
          "id": "cb3c11a4-464c-4d01-899b-850be2e6835d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "15977bf8-245e-4419-aeb5-54d180bc7db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 873
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3846d0de-72fc-45b4-a45a-d16076d58cac",
        "cursor": {
          "ref": "e62805f0-b121-447a-ac35-6a151e40d4f1",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ee58c4ea-f32d-4446-adb5-f91e594c3a23"
        },
        "item": {
          "id": "3846d0de-72fc-45b4-a45a-d16076d58cac",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1d5d849a-2cd3-47d5-b62b-54afcf78dcdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 850
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7347f17c-3261-4694-ade1-8128d851579d",
        "cursor": {
          "ref": "7db7f1ee-a782-42c1-9064-92f2174997e9",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f772a646-a751-4511-8acf-fef76ac65863"
        },
        "item": {
          "id": "7347f17c-3261-4694-ade1-8128d851579d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2cf9df59-3185-453e-8f92-6139b963d7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 847
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a89029-5531-4b59-bed7-da8437c1abd9",
        "cursor": {
          "ref": "5595553e-5118-4aec-bbd8-e7ca9b61a433",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b0ef558f-c958-4fe7-8d0b-557911be8b88"
        },
        "item": {
          "id": "00a89029-5531-4b59-bed7-da8437c1abd9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0be5f491-473b-4d60-aaa6-267d73d9b949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 849
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6472e435-c474-4bf0-9fe0-89a29c4a31e8",
        "cursor": {
          "ref": "53ab21be-b1d6-4afe-870e-c778e1908873",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "356bd714-a0c3-45ca-9709-100ddfe9e29c"
        },
        "item": {
          "id": "6472e435-c474-4bf0-9fe0-89a29c4a31e8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8a8c484e-961b-4432-a700-3d81429c120f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 847
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1658253f-a266-4daa-9f00-9308304043e0",
        "cursor": {
          "ref": "e3537bfe-c78b-4ebc-93b4-b158b2b365a0",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b74a4294-a269-4e39-bd5f-d5588309048f"
        },
        "item": {
          "id": "1658253f-a266-4daa-9f00-9308304043e0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0dab92a3-c793-4595-be62-3dcc9cfefb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b694c4f6-edeb-47d6-a465-5d66c0b04e47",
        "cursor": {
          "ref": "42dd1e8c-2a5b-485c-8b84-0cf0fb79f339",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "81a7e190-038c-4b1f-b4d5-7f2e2fe69eb9"
        },
        "item": {
          "id": "b694c4f6-edeb-47d6-a465-5d66c0b04e47",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f19b28b6-44b5-4c91-8a8a-7cb103cd39be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436e6c05-5f2c-41ee-bf09-6b101ec154d7",
        "cursor": {
          "ref": "8e84d96c-ff32-4091-af55-00a0917b77b9",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "54eaca82-8625-42db-a8de-55eab32c6cd4"
        },
        "item": {
          "id": "436e6c05-5f2c-41ee-bf09-6b101ec154d7",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "4553805f-ef5a-4112-8e8b-bb2e8616f6d0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 484,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de904950-4312-41fe-8102-157d88ad0870",
        "cursor": {
          "ref": "4572eb54-1e7a-41e3-8fb8-17d565150933",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "069ad153-2c09-4544-8005-76f5ed372429"
        },
        "item": {
          "id": "de904950-4312-41fe-8102-157d88ad0870",
          "name": "credentials_issue"
        },
        "response": {
          "id": "51f8983c-eac2-4525-96ba-5a57d796d7de",
          "status": "Created",
          "code": 201,
          "responseTime": 2521,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "c59c6506-c4fe-4177-b4b1-dc4fd2864077",
        "cursor": {
          "ref": "dd491816-3cd1-4970-a92e-636160c8f904",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ce7e20fa-e478-4701-b5c0-93d42502e4ff"
        },
        "item": {
          "id": "c59c6506-c4fe-4177-b4b1-dc4fd2864077",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "67830781-36f3-4d66-867c-edcaf12221a1",
          "status": "Created",
          "code": 201,
          "responseTime": 2314,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "b13d29b9-61ce-484b-a81a-09cc201a35e3",
        "cursor": {
          "ref": "56e3a3f3-bc70-4c90-ac66-4f8affbe1753",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e6a976b7-dd95-4528-b434-59628288b7bb"
        },
        "item": {
          "id": "b13d29b9-61ce-484b-a81a-09cc201a35e3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "39c8d98c-055a-4eb1-9d60-41ef3f070c3e",
          "status": "Created",
          "code": 201,
          "responseTime": 2357,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "bcccd160-7402-4683-87ae-fddbdd6e1ca2",
        "cursor": {
          "ref": "6829b14e-8a0e-470c-ad5e-e274d3bb9948",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "03914d8c-5cc5-477f-88c6-55431b228b23"
        },
        "item": {
          "id": "bcccd160-7402-4683-87ae-fddbdd6e1ca2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "da0a3dbe-e4d0-4188-9b59-6cc95610a0f8",
          "status": "Created",
          "code": 201,
          "responseTime": 2263,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "3da39504-1c02-4af5-a428-f7e63cb17b68",
        "cursor": {
          "ref": "ac0e4e24-7b9a-4e1e-baf4-419efd73ed3f",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2613c38a-39cf-451e-9477-f019f298526c"
        },
        "item": {
          "id": "3da39504-1c02-4af5-a428-f7e63cb17b68",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b6cee11f-0474-47f5-966a-0ab5cc23a0a9",
          "status": "Created",
          "code": 201,
          "responseTime": 2360,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "03b1ca97-ac1c-4860-8c3b-9da66cac8b38",
        "cursor": {
          "ref": "4ce7a61a-e7bc-42af-a7ba-0de2932fae1a",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "218d3161-7f08-4e55-9136-17224b06b043"
        },
        "item": {
          "id": "03b1ca97-ac1c-4860-8c3b-9da66cac8b38",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6a7b6073-47ff-448e-b5ce-4061524842cb",
          "status": "Created",
          "code": 201,
          "responseTime": 2977,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "dd905d21-9d3d-4776-bea7-d7d9c8c178d9",
        "cursor": {
          "ref": "a9f5f867-c3f9-49a7-99cc-cdda4743ec53",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "97f29b39-b76b-48b6-88a9-4a23e414d77e"
        },
        "item": {
          "id": "dd905d21-9d3d-4776-bea7-d7d9c8c178d9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "16f7515b-29a0-4114-8f1a-6a565e2c0e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd905d21-9d3d-4776-bea7-d7d9c8c178d9",
        "cursor": {
          "ref": "a9f5f867-c3f9-49a7-99cc-cdda4743ec53",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "97f29b39-b76b-48b6-88a9-4a23e414d77e"
        },
        "item": {
          "id": "dd905d21-9d3d-4776-bea7-d7d9c8c178d9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "16f7515b-29a0-4114-8f1a-6a565e2c0e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fc47d6-0c41-456a-b11a-3e27dc80a6a5",
        "cursor": {
          "ref": "ce03e2c8-8800-4a86-9f35-e3fecc3e4380",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6502397b-cb4f-4acf-9d66-183a4a2fb176"
        },
        "item": {
          "id": "87fc47d6-0c41-456a-b11a-3e27dc80a6a5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "06540c64-1ce1-4c01-9c7c-2d1a7d929c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50d586a-a569-42c5-94fc-f37f8af4ec05",
        "cursor": {
          "ref": "d9eaacd2-f823-49a3-bd83-b069bca7e400",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "698d2168-8eae-4f0f-a977-ab3cd8dbfa88"
        },
        "item": {
          "id": "f50d586a-a569-42c5-94fc-f37f8af4ec05",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3a7b27dd-6548-44d8-ae68-0265bb31cd2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512187bb-563e-4848-a2a9-bbe3d76cb86a",
        "cursor": {
          "ref": "40fe7d31-6234-4089-b50e-a5b4baf10832",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "aaee2c0e-6238-4280-9308-937515ffcc37"
        },
        "item": {
          "id": "512187bb-563e-4848-a2a9-bbe3d76cb86a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "31eddc58-7b3e-4db9-9f30-ce66d5173f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c598f06e-c1af-4e7c-bca0-b4cf9105d46a",
        "cursor": {
          "ref": "ecba820d-a913-4e94-a8d7-d1899f12c32f",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "210c2e71-bb18-4d1a-a7a4-5a234cf5a30a"
        },
        "item": {
          "id": "c598f06e-c1af-4e7c-bca0-b4cf9105d46a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "abdbb9ca-0d2c-45ab-bafd-49b28bdc142f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eeb91d8-5a6a-4594-a1d9-09f34986ffdd",
        "cursor": {
          "ref": "7f82ead7-415e-4d34-b829-d7d9dda596f7",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f1f826fd-e6a3-4d5f-86b9-779ea21a73f6"
        },
        "item": {
          "id": "6eeb91d8-5a6a-4594-a1d9-09f34986ffdd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fd1bcfb5-749e-4b4c-aa71-8ccd76602f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac5d4ac-90e9-45be-a515-7283fb660b39",
        "cursor": {
          "ref": "7050d5d5-6826-4827-b17c-d97264afdcd4",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3c224af1-2b8a-4018-b69c-74f14b895423"
        },
        "item": {
          "id": "7ac5d4ac-90e9-45be-a515-7283fb660b39",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5181c007-57f0-4973-ac71-414c8aafbecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52b923a-adf0-42af-bae8-46a0154607a2",
        "cursor": {
          "ref": "9b57e058-9e28-46f8-9104-d11a35963e2d",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d52cc917-b901-4241-b5e3-e5dc80b77881"
        },
        "item": {
          "id": "e52b923a-adf0-42af-bae8-46a0154607a2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4c4231e4-7306-40aa-b5fd-c9dd253a96fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de258fb3-c437-4d6c-adf2-2d00529a7c65",
        "cursor": {
          "ref": "8fd423b5-efaf-4035-ab6c-8b3d286c96c1",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "faa2c509-4391-469e-a7a4-ead7bffad515"
        },
        "item": {
          "id": "de258fb3-c437-4d6c-adf2-2d00529a7c65",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "be486492-726d-4e26-88f7-1a6bf7891d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e708f74-160a-457e-a37a-703718c273e3",
        "cursor": {
          "ref": "4a2f4766-88b6-48ec-b8ac-27a5a87bccb9",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a9a35281-d8a9-482c-9ab3-658891672b13"
        },
        "item": {
          "id": "8e708f74-160a-457e-a37a-703718c273e3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "493abf9e-df45-4274-8525-4260efcc8fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f71278-09c9-4913-a05f-c3af15e8d543",
        "cursor": {
          "ref": "8119e3a2-020d-4561-9e8a-f2b8f3ce9150",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "69cf55fc-a737-49a2-860a-416d52e60774"
        },
        "item": {
          "id": "d9f71278-09c9-4913-a05f-c3af15e8d543",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "04ebd8e1-ab25-4af2-a4f7-cb4e07d3b599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6263ae97-6b3b-4de3-b10e-ab6a6088eda0",
        "cursor": {
          "ref": "ff886577-ab1c-43b5-92d0-5af5c7bb0794",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "99e22746-9b02-46b5-ac44-61360491ae43"
        },
        "item": {
          "id": "6263ae97-6b3b-4de3-b10e-ab6a6088eda0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e304740f-fcf5-4097-b698-967c80e26dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372173e7-1635-4f6b-853d-ba826daa43d4",
        "cursor": {
          "ref": "f6694bd1-cb39-4c5a-b72c-92e63bc4b197",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1abff57d-e775-4292-8a3f-fdf0af35b594"
        },
        "item": {
          "id": "372173e7-1635-4f6b-853d-ba826daa43d4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "19afe9e4-8ea0-4002-8a44-00caae01d3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f5de9e-6fe0-4daf-bbe9-3a68e680795d",
        "cursor": {
          "ref": "d5505df2-37d5-442a-a80a-7b27b3a13c1a",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9cbc74ed-4c3d-4c81-bd87-c959baab6d2c"
        },
        "item": {
          "id": "b2f5de9e-6fe0-4daf-bbe9-3a68e680795d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "aaaad6c3-e7df-49e6-b325-636730f60b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4746370e-a9a6-4b37-8237-e69f478ac5f1",
        "cursor": {
          "ref": "2694e55b-65d0-4b5a-9d4b-56622087cf96",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4fe6be53-499a-480a-9494-387e938dad6a"
        },
        "item": {
          "id": "4746370e-a9a6-4b37-8237-e69f478ac5f1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "49674c93-9103-467f-8247-8068f3af1896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9849afa5-36c8-4970-acef-872ce89ad48f",
        "cursor": {
          "ref": "09e17f51-c60e-4200-86fa-a763408ccbbc",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "86716783-13d4-4498-990d-2bf5246146b3"
        },
        "item": {
          "id": "9849afa5-36c8-4970-acef-872ce89ad48f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "72630699-3934-4a7b-a3e4-b0feccbd013b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8dee14-6ec6-465b-bb48-e78f629ff8ea",
        "cursor": {
          "ref": "55c0501e-1f05-45e5-ab37-916d4addc49c",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5def5d74-9ee4-4d14-91e8-1752e1652724"
        },
        "item": {
          "id": "3f8dee14-6ec6-465b-bb48-e78f629ff8ea",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d8c65c67-8835-412a-8e5c-0fe9d55aa197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f8e515-d781-47e1-a7d4-b0c52174585a",
        "cursor": {
          "ref": "25ec68ce-114e-43fc-a3a5-981c45ba69c4",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ba7cfb2e-ade9-4e10-8430-9d6adee6376d"
        },
        "item": {
          "id": "13f8e515-d781-47e1-a7d4-b0c52174585a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2fd360ba-cc51-45a0-844a-6c55de07332f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edc6ffd-00db-4fc9-b911-0cbdf942e85c",
        "cursor": {
          "ref": "f925cd74-0856-4bbc-9cd7-0f8cb246482b",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d94340f2-1fb1-4f8a-9021-663f0d9b6b0a"
        },
        "item": {
          "id": "6edc6ffd-00db-4fc9-b911-0cbdf942e85c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d542df3f-7e2b-4331-8449-6111d94f7544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1b2be5-5924-4be7-ae1d-dd63cf74d71a",
        "cursor": {
          "ref": "82460bac-c5e5-4b3e-b22d-7711944218b2",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8725c85c-640d-46b3-bf2b-4d5a3dc2bbdc"
        },
        "item": {
          "id": "4a1b2be5-5924-4be7-ae1d-dd63cf74d71a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5913d2e8-0c41-42e0-ab5d-b929db17b6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ff90d5-a945-495e-88b6-1378b747546a",
        "cursor": {
          "ref": "cdd566ef-5efd-4858-b4c6-767ac446662f",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "98359fd9-b8ea-4240-87cb-be3b70645cf8"
        },
        "item": {
          "id": "e8ff90d5-a945-495e-88b6-1378b747546a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3782da0d-e1bb-45dc-8d3f-466c6ebb9428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb56def-c8c6-4ad5-874a-b11554a0305e",
        "cursor": {
          "ref": "20e6382a-78d8-4882-8e9e-fdfcad98fb3e",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "54fd0d1f-61b2-4a19-b296-68fbc46b473d"
        },
        "item": {
          "id": "aeb56def-c8c6-4ad5-874a-b11554a0305e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6f3062dc-1c36-4bac-a76e-6dfdf3ee66ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b529a05-62d8-495d-8701-973d46ed6910",
        "cursor": {
          "ref": "0e869e55-8393-4e27-ba0e-985ae41a36ce",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "934eb244-7724-4f87-a359-d642cc5898a9"
        },
        "item": {
          "id": "8b529a05-62d8-495d-8701-973d46ed6910",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "230f21dc-e266-4d56-beac-12a7f264ab90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2ebe3d-1f56-4240-b75b-1265790c67a3",
        "cursor": {
          "ref": "b860e0d6-ee5d-4e8b-a64b-22d64a630dd7",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6bc25d4b-802d-4dd9-aa1e-03b1c0238509"
        },
        "item": {
          "id": "7a2ebe3d-1f56-4240-b75b-1265790c67a3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "62a624b7-3512-4255-b5f7-b10c8c829962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c96f2f4-6e56-4f1d-84e0-a7ab72353874",
        "cursor": {
          "ref": "d019b5a7-62f8-4a43-8227-06ed35505fe2",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fb93269c-f2ca-4f85-a433-79f57dacf927"
        },
        "item": {
          "id": "1c96f2f4-6e56-4f1d-84e0-a7ab72353874",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f07e31d2-4077-454a-a8d1-5aebca8fc15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6519bba-4fdd-4999-b7aa-e5f66c293a6e",
        "cursor": {
          "ref": "24f6a241-ae98-4a35-9154-acfebc58f351",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9aa6b3fa-22c0-4992-b877-472615b0b366"
        },
        "item": {
          "id": "e6519bba-4fdd-4999-b7aa-e5f66c293a6e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9be62af9-3680-42b6-aab3-c565be71bc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe42a1fc-606e-4c9e-8512-a7ff686326cb",
        "cursor": {
          "ref": "8c33b93d-d59a-4cb5-9bae-aaaf6cb334ae",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "436bb872-15a2-4598-bd56-7aec89144257"
        },
        "item": {
          "id": "fe42a1fc-606e-4c9e-8512-a7ff686326cb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "210e7f72-ee4b-4bc1-ab38-3725cc366f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f7ae1a-d842-4099-9395-848ad88e7da6",
        "cursor": {
          "ref": "63305140-fe93-4bbb-a710-90443e54f752",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bfe1415b-80f2-44e9-9635-06d518bcbc9b"
        },
        "item": {
          "id": "12f7ae1a-d842-4099-9395-848ad88e7da6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4d322d92-e44b-4670-a629-63fc39aaa831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba03e63-3306-4584-bf65-6c3084553e4e",
        "cursor": {
          "ref": "0920698c-8479-4dac-84fb-e6f0d4222ae6",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e4d5fc4c-3777-45e5-81e3-21a65de3ee37"
        },
        "item": {
          "id": "aba03e63-3306-4584-bf65-6c3084553e4e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5d8ab9a4-0c4d-41c6-93aa-6352607d2424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f379e93-fe21-4f63-acb6-f0c3f52e6707",
        "cursor": {
          "ref": "51044ff6-1d64-4a58-8dcb-54a1251ca902",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f54f4df0-5063-41fc-824a-c26a464f85d1"
        },
        "item": {
          "id": "1f379e93-fe21-4f63-acb6-f0c3f52e6707",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "47e4b433-644f-4b2d-bc47-47dcdf0819e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c349007-110e-46a8-8bc4-522e018277e4",
        "cursor": {
          "ref": "2aeac08e-7671-4b0b-90f9-f26ef29755b1",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "cebf4ced-17d6-46f7-a21f-317bd60fcac8"
        },
        "item": {
          "id": "8c349007-110e-46a8-8bc4-522e018277e4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f61cff92-34a6-4150-b86b-d8527a98ab7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b643c94-1259-4154-bc81-90d5b408f350",
        "cursor": {
          "ref": "b9b3d321-d0b3-4d25-9872-4ef1dd600131",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "fa253d97-40d5-40dc-a643-c0a367480e36"
        },
        "item": {
          "id": "8b643c94-1259-4154-bc81-90d5b408f350",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "89f4e30d-f45c-4d60-862c-911204f51072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e5e1df-5272-45c7-9b0a-cd2e5d4f6840",
        "cursor": {
          "ref": "a8fbda92-0b96-4fc8-b5b2-1bce982f1a4c",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d6174e26-306a-45d9-be27-0590c96883b9"
        },
        "item": {
          "id": "49e5e1df-5272-45c7-9b0a-cd2e5d4f6840",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b0c1794b-4523-4eca-91a5-b9b640441580",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd27bd7-f5cb-441a-af8c-f600eca61127",
        "cursor": {
          "ref": "e7bc71fc-28d8-419e-8671-cff3d6b11404",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c6b402be-6a99-4ecc-a697-01f4f21acc4e"
        },
        "item": {
          "id": "fdd27bd7-f5cb-441a-af8c-f600eca61127",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "ed689fe5-fe9d-45a8-bd97-4c7b6cb0cd5b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 500,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5cfff4-7624-4255-81e7-37eae86acafd",
        "cursor": {
          "ref": "13604e52-e965-457c-adc6-5b09302c764d",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8f074623-32a4-42fd-bbfb-6f102d02f553"
        },
        "item": {
          "id": "8e5cfff4-7624-4255-81e7-37eae86acafd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4c4bf62c-ba01-460c-ad6c-fe24a2232747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5cfff4-7624-4255-81e7-37eae86acafd",
        "cursor": {
          "ref": "13604e52-e965-457c-adc6-5b09302c764d",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8f074623-32a4-42fd-bbfb-6f102d02f553"
        },
        "item": {
          "id": "8e5cfff4-7624-4255-81e7-37eae86acafd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4c4bf62c-ba01-460c-ad6c-fe24a2232747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b4335c-e688-4f5f-ac29-9f7a1b309e6b",
        "cursor": {
          "ref": "51be77a5-2549-4ee5-a31e-647ea5b283d8",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "582e2139-c8fe-4c88-9df6-b0b9fd07b67e"
        },
        "item": {
          "id": "95b4335c-e688-4f5f-ac29-9f7a1b309e6b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5f13ac2f-1d98-4992-b6cf-a93f8835b3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3093af1e-89a0-4bdd-b8dd-ed9c070ba394",
        "cursor": {
          "ref": "18fc6e1c-b4bd-43a9-b59a-412341febbc1",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "22f3e7dd-cb97-432e-8354-11a1189439a6"
        },
        "item": {
          "id": "3093af1e-89a0-4bdd-b8dd-ed9c070ba394",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "59011f12-a5a0-4448-a2c3-3a839025280c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1b30f3-0902-4e75-84dc-39ac33b5b7a4",
        "cursor": {
          "ref": "0ad85d3a-d6b0-4a5d-b2ce-d48efd1e07fa",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5b745b00-2e2e-41c1-aaa3-43d022f92c07"
        },
        "item": {
          "id": "ea1b30f3-0902-4e75-84dc-39ac33b5b7a4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6db600c9-6b85-49d2-a190-18beb1c1fe3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e832933-5765-4d9c-8d8c-45aa2f96c430",
        "cursor": {
          "ref": "03a335ef-1d46-4b22-8c12-e22715a32010",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "031d7d0d-15b0-483c-8287-82b72dc328e4"
        },
        "item": {
          "id": "7e832933-5765-4d9c-8d8c-45aa2f96c430",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3bdf82c1-063f-44a0-aca5-c44484defa6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845b886d-0b54-4352-8262-ce4b56acaacb",
        "cursor": {
          "ref": "8a623317-1de1-4bbb-bb6f-ff89fa8eba60",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2d39f75a-b3cb-4604-9169-fa83c201b81d"
        },
        "item": {
          "id": "845b886d-0b54-4352-8262-ce4b56acaacb",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8344378a-1d9d-445c-958a-153d17821790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3907aae7-2784-40c1-952d-67ea0ed6fca6",
        "cursor": {
          "ref": "eddb1c7d-10cc-4f47-8d08-4f866ff5c0e9",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "28df5f99-5454-4003-8804-32a7b544d6a2"
        },
        "item": {
          "id": "3907aae7-2784-40c1-952d-67ea0ed6fca6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e3128dcc-d80b-4216-9d5f-1b24750cf13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb1af76-e6ba-4b76-834a-8cb65143250b",
        "cursor": {
          "ref": "075bdfeb-84c5-428d-8318-4116b21dec5f",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ad517598-c0a6-450d-aba7-e7423f945e15"
        },
        "item": {
          "id": "efb1af76-e6ba-4b76-834a-8cb65143250b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3baece6e-f0ad-45b6-8902-f5533fc975b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856f8927-f057-4682-ab97-2b00e29d9a4f",
        "cursor": {
          "ref": "2c420890-e05f-46ad-8311-ebe920304f1f",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4467e743-e76b-43e2-866f-942e6057ef76"
        },
        "item": {
          "id": "856f8927-f057-4682-ab97-2b00e29d9a4f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f5d2fe34-1b67-41bd-a3c1-65f967fbaf33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee23fa7-151a-42cc-80ae-75efe126b313",
        "cursor": {
          "ref": "c2d34315-b8b2-4e97-891b-521e93ea554c",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f67d5454-9d07-4499-a455-a7e6673bcabf"
        },
        "item": {
          "id": "1ee23fa7-151a-42cc-80ae-75efe126b313",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b253c57e-ae1c-4aa9-9d78-83656e85a3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930948e2-a7b3-46c2-8f09-4d5551971398",
        "cursor": {
          "ref": "9fe791cd-403b-4c6c-9a67-fb04edbdb93c",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c6b9d72b-e2dc-406f-9158-20ce76ba34aa"
        },
        "item": {
          "id": "930948e2-a7b3-46c2-8f09-4d5551971398",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ae1f204a-47bd-4202-9877-718cc3fff8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfc1ff6-5de2-47de-861c-747dde33d008",
        "cursor": {
          "ref": "68e260cb-bbd5-47cc-86c3-4055dbd4686d",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3818a922-7be4-4f49-9eb5-bf8a32232fb4"
        },
        "item": {
          "id": "0cfc1ff6-5de2-47de-861c-747dde33d008",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d3036ec8-bdc5-4002-af1d-3cd732cb7977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c5b072-6a4e-41c1-83b1-fc1208a794b1",
        "cursor": {
          "ref": "45115ffd-59db-4885-8c7d-13d08d419672",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9e922623-f6ec-4f74-a34a-0a3d97f39fd4"
        },
        "item": {
          "id": "a7c5b072-6a4e-41c1-83b1-fc1208a794b1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "08fc67e4-7293-4495-b47e-4df72dd2ab4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1843
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de79d85-c40b-4dd2-a02b-310a8bab0810",
        "cursor": {
          "ref": "50be2695-c9e3-49d9-bc93-60994171e1a6",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d5d09c38-7330-40ce-9ea3-3ade6b3fb02d"
        },
        "item": {
          "id": "4de79d85-c40b-4dd2-a02b-310a8bab0810",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "442a5c51-a7a2-430e-95e5-b31f7ab79662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1833
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f5105d-dece-487d-8b05-5381d833350f",
        "cursor": {
          "ref": "a124bc9c-e1ad-437d-8f48-fb0e62b6fded",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "30fc23e2-ff5a-4a84-bbf8-3f0114f4493c"
        },
        "item": {
          "id": "a6f5105d-dece-487d-8b05-5381d833350f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "da96e210-b6d8-4c9c-9b3b-55791f46e42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1832
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01838aab-ed45-43ca-b784-fa3f0eb72d64",
        "cursor": {
          "ref": "7bb44427-09f9-4164-b991-262220278286",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f97e6556-39b1-43ac-8c29-7da8779b0006"
        },
        "item": {
          "id": "01838aab-ed45-43ca-b784-fa3f0eb72d64",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ce0a1484-e84c-4c0a-9a45-05d6269451a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1833
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497453ea-b574-4d63-8546-7112a01093e0",
        "cursor": {
          "ref": "6ea23c96-2854-4d92-bb35-c1d5c187c16b",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1d9e4b74-296e-4a34-9c3e-624ff064a6b3"
        },
        "item": {
          "id": "497453ea-b574-4d63-8546-7112a01093e0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9ebc61e8-77d9-4d16-918b-027a4fdcaa92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9af9b2-9865-4536-b910-1c2a930d101b",
        "cursor": {
          "ref": "cffb1514-a65b-482b-acaf-eb62a4b90c3c",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9cb680be-fcb5-4101-8854-40b455c64c0f"
        },
        "item": {
          "id": "db9af9b2-9865-4536-b910-1c2a930d101b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "95446699-76fd-46c8-a963-aaea3739d7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ad32a2-74e1-4fd5-b3f9-e8e354e1ec6f",
        "cursor": {
          "ref": "4a5a4049-1e10-4892-8d89-d1b1cf8858d0",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b0600fe0-af44-4bae-9f44-0db8825739a6"
        },
        "item": {
          "id": "b2ad32a2-74e1-4fd5-b3f9-e8e354e1ec6f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1778c3c1-240d-4ef0-93f1-ac9728803bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2514cb-ae71-4c76-9cc4-67810bed17dd",
        "cursor": {
          "ref": "bea78a3c-73ce-4128-9db3-13867b42915a",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "14d9cc82-a60e-4987-8691-307625d3515c"
        },
        "item": {
          "id": "7e2514cb-ae71-4c76-9cc4-67810bed17dd",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a4531e9b-9df8-4835-84d0-3debb95d143c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1bebef-3826-46f9-a5a4-f54c17bd9198",
        "cursor": {
          "ref": "fec26d51-a90e-4244-be9e-778f7e716271",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "181fe34e-eeee-4eb9-8cb2-6ac34715989c"
        },
        "item": {
          "id": "8c1bebef-3826-46f9-a5a4-f54c17bd9198",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d940f53f-7b90-4736-a7fe-4aae03162b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86351db0-3579-4a5a-8dca-5de628cc9f68",
        "cursor": {
          "ref": "52ccdd5c-19a4-4958-8d48-f80824e65866",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bfc0c348-d389-4bff-b604-ad079db4fef6"
        },
        "item": {
          "id": "86351db0-3579-4a5a-8dca-5de628cc9f68",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b44609db-418a-44aa-8cbc-45a476c5e4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300df6f1-e852-409c-abe6-af5525ce1709",
        "cursor": {
          "ref": "60b14ce2-1787-4dc2-bdfa-104096655a8e",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "84629143-e371-4a84-a905-7e18406514c5"
        },
        "item": {
          "id": "300df6f1-e852-409c-abe6-af5525ce1709",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "40baf11f-dc59-4ad5-8f23-e943aa18a6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9177db-cb6a-4cf9-a63c-5725fa295766",
        "cursor": {
          "ref": "5d9d9011-ba8f-4479-b99e-53356befd787",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b456187a-94f4-4777-9c83-673e6f7a37db"
        },
        "item": {
          "id": "4f9177db-cb6a-4cf9-a63c-5725fa295766",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "98f08259-9462-4bbb-97e6-316761ff5593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67bbcc9-bea0-4e27-bb44-c61e5b027e24",
        "cursor": {
          "ref": "bcdcb13a-79bb-471a-a2f7-2a54f7e14b14",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "84ef07cd-823c-43fb-8a39-19c9555c4b8c"
        },
        "item": {
          "id": "e67bbcc9-bea0-4e27-bb44-c61e5b027e24",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "374dffea-ffda-4210-be77-68a95feac953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5202f2-80f6-4ed0-8d69-cda14a0a3c7c",
        "cursor": {
          "ref": "bb02f2be-c41c-4c7a-8845-0b794fcce999",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3f44d378-a5c9-46aa-b118-c4cb4e08e73f"
        },
        "item": {
          "id": "4f5202f2-80f6-4ed0-8d69-cda14a0a3c7c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "57270fb2-c9c5-4c80-9c64-be8d39617757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f50aa8-2baf-4902-aa31-70bf91705257",
        "cursor": {
          "ref": "9cbddc88-c3c4-41c3-936a-42836503cbe2",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b3e7e738-b5a9-41cd-ac96-219611e82338"
        },
        "item": {
          "id": "52f50aa8-2baf-4902-aa31-70bf91705257",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9fb96700-6f77-4e15-85a2-85d2724d186f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179922e9-8d28-45a7-a989-9d8c9dac7a0b",
        "cursor": {
          "ref": "02e51b55-8b8f-42e1-a4e8-2b49965fbc5c",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fee38c82-c68f-4ddc-886d-e3d29cf231a5"
        },
        "item": {
          "id": "179922e9-8d28-45a7-a989-9d8c9dac7a0b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4d8a64e2-dfa8-4624-ba4c-37c47119885a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce27046-51e7-4913-800c-84096b50b1d9",
        "cursor": {
          "ref": "a8d16b25-9e49-48a9-aa25-16f8b2602afc",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "64091677-755f-4acb-973e-267ff5eb2c26"
        },
        "item": {
          "id": "6ce27046-51e7-4913-800c-84096b50b1d9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c149a518-282b-4d79-a8f4-40af1e995b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd33937f-283b-4e11-8ea7-39b19d56b2cf",
        "cursor": {
          "ref": "317982bb-7df0-483f-953f-3bfe6ea66696",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "456bd49c-3bff-408b-aefc-e3ed453b73e2"
        },
        "item": {
          "id": "cd33937f-283b-4e11-8ea7-39b19d56b2cf",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a9524832-2633-4198-bc3c-8f5bfc4fee67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14789ce-f2af-4a1c-a8de-36589c8b636c",
        "cursor": {
          "ref": "484cd0eb-c7f0-46b8-b2ca-284b53d73667",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6b07a516-e626-402b-8f6d-af75c218ad8b"
        },
        "item": {
          "id": "a14789ce-f2af-4a1c-a8de-36589c8b636c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7803f7b2-fc99-4720-bea2-aa3f93865871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8f3adc-9964-4b62-9eb5-3bbcf2d179da",
        "cursor": {
          "ref": "5a490fee-27ae-469c-b28a-3a37656c4363",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f8f09e45-3d6b-4646-9ddd-9c6e25280c3b"
        },
        "item": {
          "id": "cc8f3adc-9964-4b62-9eb5-3bbcf2d179da",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c66ae589-0b2a-482e-9113-0466f41d64f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5eb571-8df4-4959-9163-6e9cfc0b7c49",
        "cursor": {
          "ref": "41715174-65aa-46bb-8dec-ca15c3d4a338",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "aff52563-63f6-4e95-99fc-a307d4403b27"
        },
        "item": {
          "id": "5f5eb571-8df4-4959-9163-6e9cfc0b7c49",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9d29b483-c76a-4e50-b6db-e327772dba25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937c194a-99d5-4c6f-bd56-bb24f0247568",
        "cursor": {
          "ref": "1693ca2c-c3a2-49a7-958d-5182c8afc8cc",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "61ec5a1b-7ad0-46ed-891b-7b994a4eef03"
        },
        "item": {
          "id": "937c194a-99d5-4c6f-bd56-bb24f0247568",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b4a6cd96-cc5f-4636-95c0-e823a150369d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2d43f2-62af-4ce1-a229-a7945c37ddd7",
        "cursor": {
          "ref": "2d2a74af-fc39-4bae-b033-eb5f397f8fd7",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3900d67d-6043-46f7-bd8c-f84fbe6752f1"
        },
        "item": {
          "id": "db2d43f2-62af-4ce1-a229-a7945c37ddd7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "56827af2-1179-4baf-8809-2b804d804bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46811a33-c786-4034-bb70-ae8164b54026",
        "cursor": {
          "ref": "f9a02a9b-80ce-47e2-bde8-2f0c824a6179",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c008d389-aafd-4db2-accd-2c0c9241613f"
        },
        "item": {
          "id": "46811a33-c786-4034-bb70-ae8164b54026",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "bfb20ae6-d88b-4d63-b49c-e5e1ec04b9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2ab4c8-8dbb-44ac-b1b5-6692a0aecec4",
        "cursor": {
          "ref": "8939a083-d419-426a-9d57-19d13a326fb7",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b7c22cc5-526b-4844-af02-69ee696b89e9"
        },
        "item": {
          "id": "ae2ab4c8-8dbb-44ac-b1b5-6692a0aecec4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fd4c473d-9e2c-4e78-90bc-0fb8d44b3c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d125dacd-9ba3-42ca-b7f6-8c00764ac9e3",
        "cursor": {
          "ref": "143171ab-c036-4d86-9a36-c51b347e8814",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f339a6f2-8a6a-4c6d-b563-0694757ede7b"
        },
        "item": {
          "id": "d125dacd-9ba3-42ca-b7f6-8c00764ac9e3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "58aacba8-ce64-43f3-8a4a-0300a283a2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fa6957-47ea-4f3f-98c8-782993dc20fa",
        "cursor": {
          "ref": "0e53bef3-5150-4b4c-89c9-b5c749a33962",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "33358883-2541-44c3-9741-9b2dd7125aa2"
        },
        "item": {
          "id": "67fa6957-47ea-4f3f-98c8-782993dc20fa",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e851892b-5638-4de3-b9a4-414d56af35d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d92b0f-4fd6-425f-b900-3c68a840b347",
        "cursor": {
          "ref": "fb8db2bf-d008-48ac-9b88-b90f025abac0",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "616e0943-b625-4414-a2b2-7e142fe77b67"
        },
        "item": {
          "id": "d6d92b0f-4fd6-425f-b900-3c68a840b347",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f4e205cb-ca52-4ec9-9f6a-45c9ddbef726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5be25eb-50d8-4557-be54-0d298c37551c",
        "cursor": {
          "ref": "eeec080c-bc12-4551-8c62-46470115c995",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "95600e71-b657-4c99-a08e-41d6eda06529"
        },
        "item": {
          "id": "b5be25eb-50d8-4557-be54-0d298c37551c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "556dfc2e-30a2-4ef4-8a39-856c49463dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a75d15e-99e1-401a-b149-148f2b0071fa",
        "cursor": {
          "ref": "c2f7e5c5-da76-4c96-8c9c-2dce2fd8fa41",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "040e7339-8010-48b1-8163-54c2006d6fbc"
        },
        "item": {
          "id": "0a75d15e-99e1-401a-b149-148f2b0071fa",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9db81b18-83d4-432b-8eb8-b2b58660af32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580b14e3-0171-4771-ada1-3d3250d2d5b7",
        "cursor": {
          "ref": "2009c43a-bc77-4d98-8ac7-2d11359c3d4e",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d2fea211-5873-499c-b8bd-ce3ca4cdf0aa"
        },
        "item": {
          "id": "580b14e3-0171-4771-ada1-3d3250d2d5b7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3975f1aa-ebff-4c07-83f3-0e3a6550f324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e44fe1-4d13-438d-989b-0766d152efcb",
        "cursor": {
          "ref": "fb53cfac-8f7f-42d3-928f-a0b6cd099b94",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c33780f0-c00a-4b12-8836-0ab717ca040d"
        },
        "item": {
          "id": "e2e44fe1-4d13-438d-989b-0766d152efcb",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "10a8045a-dd1d-4c91-bda9-1b71ed9fdbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edc436c-e824-4015-99ed-bcf2e0d37921",
        "cursor": {
          "ref": "85d610bb-7aab-4d22-8e3e-cfcd6f0d1441",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "398ae882-0111-4f56-aecb-b7956d9d7c4a"
        },
        "item": {
          "id": "9edc436c-e824-4015-99ed-bcf2e0d37921",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "43ee2f60-2faf-4b59-b715-e0bc186f1c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec49f86-ccc2-4bc6-a66e-0b46cd51fb5e",
        "cursor": {
          "ref": "b852a513-3c93-484e-90e4-14367e3b6517",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e0e115cd-ea47-486c-8a61-83a6227228cf"
        },
        "item": {
          "id": "bec49f86-ccc2-4bc6-a66e-0b46cd51fb5e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7135a21d-723d-4e08-8315-079376feab86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4469445-d82e-433c-a9de-11a34d209912",
        "cursor": {
          "ref": "7b18f474-0dc2-4333-a9cc-ddf3d1fbc505",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f6b67965-b597-4801-b6aa-fbf675d41501"
        },
        "item": {
          "id": "e4469445-d82e-433c-a9de-11a34d209912",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2d8272ca-f291-425b-baf4-122655241443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427ea9c4-f8e0-4f96-90aa-5bbdce5e5f75",
        "cursor": {
          "ref": "3df8dfed-4d93-4ae8-b1da-0891482fc224",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8754ac0e-b981-482b-9d6a-4396a0f4f591"
        },
        "item": {
          "id": "427ea9c4-f8e0-4f96-90aa-5bbdce5e5f75",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5e657ad7-9e51-4cce-a754-453ae4d81b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc335fff-7d8b-4b82-aa92-2ec0ecbc1884",
        "cursor": {
          "ref": "b3ad5051-9dff-472d-97ea-b1d355778cc3",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "14e05b59-520c-479e-bc0a-73cafd560cde"
        },
        "item": {
          "id": "fc335fff-7d8b-4b82-aa92-2ec0ecbc1884",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "76616640-e3d9-4613-bdbc-a7b0e95b9658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb83b1e-932c-4f1c-a66a-91db79a4952c",
        "cursor": {
          "ref": "fe1a1295-37c4-4b41-a042-24e6f3d0f48a",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4bf24713-6629-4568-ab40-66292eb2f17a"
        },
        "item": {
          "id": "6fb83b1e-932c-4f1c-a66a-91db79a4952c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "30a1d050-8af9-4204-8e22-5e3268813cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b3d240-b0ee-4bda-99a2-9c5a6decfb22",
        "cursor": {
          "ref": "977334b6-f509-464f-8292-cb018f68aa75",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2e77d0a0-2e55-450e-8992-3fe730df6a80"
        },
        "item": {
          "id": "09b3d240-b0ee-4bda-99a2-9c5a6decfb22",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6081b772-d80e-4295-9b7f-b57ae6f71cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6987ed-7812-4e10-b1df-1b3eda604d34",
        "cursor": {
          "ref": "39c65256-b3f4-4c37-a7d5-9f9a838182cf",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e2886f5b-df0d-4cf4-bea3-86e1414e58b9"
        },
        "item": {
          "id": "ac6987ed-7812-4e10-b1df-1b3eda604d34",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "dfefa373-6991-48d0-b1cc-d4dad438151c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a64d9d-8486-4dce-a53e-90a8b98f8062",
        "cursor": {
          "ref": "86bc4821-f591-4d12-8da3-b7a6d6ffd5fd",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c980afb6-dc66-4e6a-ad19-e3b82a4383e5"
        },
        "item": {
          "id": "09a64d9d-8486-4dce-a53e-90a8b98f8062",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "65e60301-bf53-4fb6-9cd9-11c8fcc04958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760b15af-d896-4572-83e1-14d884015677",
        "cursor": {
          "ref": "f968dcd2-3739-4ab3-abff-c0d1064d2983",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "847b43ee-1bb9-4aac-a075-49b1b3663988"
        },
        "item": {
          "id": "760b15af-d896-4572-83e1-14d884015677",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "612c9811-569b-4ff0-be3b-e595b17efdb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140a7c4d-daee-409a-8509-ccda1d8bc4f7",
        "cursor": {
          "ref": "768f8bea-7bed-4ce2-9ac2-23681d89d36c",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d52ba1b2-5873-4d84-8ba1-a3688746493f"
        },
        "item": {
          "id": "140a7c4d-daee-409a-8509-ccda1d8bc4f7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2574ad22-5b48-4fa3-a36e-847d4f5c91f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1754892-ccdc-4af4-9862-ae234addc2e2",
        "cursor": {
          "ref": "53845a6b-20c7-4dca-90dc-5141c87c74de",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "788468e6-ba48-4404-a64a-f346ddbf99fe"
        },
        "item": {
          "id": "d1754892-ccdc-4af4-9862-ae234addc2e2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d26e2fdd-fbf1-468a-ab8d-2027096ddab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40508a32-8dda-45b3-b857-4332873c2039",
        "cursor": {
          "ref": "617807f9-afd5-4be4-872c-580fbc0ef74b",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2d8bdb4c-9b8a-4b4e-bfda-7e7c237cd2dc"
        },
        "item": {
          "id": "40508a32-8dda-45b3-b857-4332873c2039",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "20a99909-5d60-4b68-bf21-7f7894848380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717448a6-689a-479f-a924-12f0bd0daac5",
        "cursor": {
          "ref": "02bdb405-bb50-4b95-8402-7c49ecb8dde0",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9802378f-fa7b-4e21-b995-127d3051e12c"
        },
        "item": {
          "id": "717448a6-689a-479f-a924-12f0bd0daac5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9f0ee12a-027b-4731-b3da-3b6769d816b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5cf479-76a0-423d-9117-cd521df5f4f7",
        "cursor": {
          "ref": "5850bff1-cee4-4ad7-a266-22133576c674",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fbd683c0-ab2e-428e-95e7-d9cbce263de7"
        },
        "item": {
          "id": "8e5cf479-76a0-423d-9117-cd521df5f4f7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c5d945e2-5876-43ce-b1e5-2891c4051a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc2ed17-59d3-48a4-acdf-31fe25df5b59",
        "cursor": {
          "ref": "530cc15a-aeab-4ed7-b7d5-b45506c51b0c",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "212ae40a-2d2f-4b70-8e82-fcfc34af7bf6"
        },
        "item": {
          "id": "6cc2ed17-59d3-48a4-acdf-31fe25df5b59",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "cadb1e52-f4ed-4fed-90a1-8fb7f4b6f2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3355be-cddf-4256-bfbd-ffb025c2be42",
        "cursor": {
          "ref": "ce4a4bd8-6dc5-4d5d-b1f6-4ecedd1aed75",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "453b0a0b-30d8-4bae-bbbe-1ad7122db7a1"
        },
        "item": {
          "id": "dc3355be-cddf-4256-bfbd-ffb025c2be42",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "64abe1f5-64c9-459b-91e0-a9fa2eddc5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86252be-e38b-4890-a2d6-8cbe622b49c9",
        "cursor": {
          "ref": "236e36e3-af68-433b-b429-48210046d7bd",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d1595d15-7b80-4777-a856-ec4134ebdc0b"
        },
        "item": {
          "id": "b86252be-e38b-4890-a2d6-8cbe622b49c9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0c35450e-71e2-4efc-a14b-26f32115492b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2918057b-24be-4c49-957a-3dc6370b6ed1",
        "cursor": {
          "ref": "4ba65e3b-8ab1-4abb-bedf-1cfed72664d9",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "141b7fd5-c9a9-49f3-9e2e-ee0e738839f2"
        },
        "item": {
          "id": "2918057b-24be-4c49-957a-3dc6370b6ed1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "66966a22-17ae-4cec-b11c-afb6dd81696f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b842eb9-ed28-4966-8470-ca8a5d887f60",
        "cursor": {
          "ref": "0a903513-eea8-493b-bea0-23997ef9b2a8",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "70a99890-407a-4d3f-b833-eb9667079e67"
        },
        "item": {
          "id": "1b842eb9-ed28-4966-8470-ca8a5d887f60",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9ed8db6b-63cb-4b9c-a66d-385e362dc868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ae6102-fe81-43d6-8ecd-2f61f5240ea9",
        "cursor": {
          "ref": "4a365ac6-198c-4c28-886b-371681ab3e06",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "17e2f7a5-a18e-4774-ad66-fe6df41b7685"
        },
        "item": {
          "id": "20ae6102-fe81-43d6-8ecd-2f61f5240ea9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fb9e0b98-0959-4369-aa15-5673358ba360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b814588-77ec-4cdc-a1ec-fa4c7bf19ad6",
        "cursor": {
          "ref": "2a38541d-dfe3-43b1-8607-19f108246056",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b3fccda5-726d-4efe-9fa4-552018abb521"
        },
        "item": {
          "id": "1b814588-77ec-4cdc-a1ec-fa4c7bf19ad6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "35d9f4f6-aeb3-4703-b86e-d835fbd44247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933b29d7-5b12-49a7-b8c4-557f4875cfb8",
        "cursor": {
          "ref": "8d7e91e5-32c4-4ffc-86e1-429550fa4a05",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c6ad0c89-b7e5-4f05-af8b-006539bd31d3"
        },
        "item": {
          "id": "933b29d7-5b12-49a7-b8c4-557f4875cfb8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b8567877-b476-4c5f-8a8e-750f59be9d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f136eaaa-5d1f-409d-8df3-72eee8cc9337",
        "cursor": {
          "ref": "890413ad-e807-442d-8b0c-a43e7d22c13a",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "797ed1ab-61ec-4738-ad82-671ec4bdcd01"
        },
        "item": {
          "id": "f136eaaa-5d1f-409d-8df3-72eee8cc9337",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b8086b49-8655-4e13-bed4-421b7537821b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b78676-5de3-45b9-8234-c12688109937",
        "cursor": {
          "ref": "4a8fedb1-011d-4837-9c23-0aec268b8882",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0ea441cd-102b-4f42-9525-1744e78ca03e"
        },
        "item": {
          "id": "29b78676-5de3-45b9-8234-c12688109937",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d1a7dc27-e633-4020-b11c-aa7a30cc5346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786da73e-e788-4c5a-88ac-9b35d8f6b40f",
        "cursor": {
          "ref": "e4b87484-cf9e-49ed-aa69-5caeec6cc4a7",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "476317b0-8765-4d5d-96fb-591666152ecb"
        },
        "item": {
          "id": "786da73e-e788-4c5a-88ac-9b35d8f6b40f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2aee2d0f-fc94-476d-b3d5-b0b3bc7868bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac81668-e89c-4d31-bc57-56d1b1a85536",
        "cursor": {
          "ref": "8c0ff644-4dc5-40db-92d2-9c861b16978b",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "81da72db-a004-477e-954e-b6f4506edd04"
        },
        "item": {
          "id": "fac81668-e89c-4d31-bc57-56d1b1a85536",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5c2a492b-cf05-4102-86fa-ce0b21255a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da949582-dd56-43be-85c9-6f25bcf13dd1",
        "cursor": {
          "ref": "eada2786-6cce-467e-85a6-fe7b5ead0d16",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fcbcfcd4-a675-4175-907d-3c6c6a4011ea"
        },
        "item": {
          "id": "da949582-dd56-43be-85c9-6f25bcf13dd1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d012b96b-a0d8-4d3f-bc8a-b461e4f80c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012f1576-ec9b-40c6-a82e-5bfdbb569c04",
        "cursor": {
          "ref": "8853aa3a-5e5f-497a-a12a-d611e54b0762",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0e33970d-b4f9-495d-b49a-9e4634d4edaa"
        },
        "item": {
          "id": "012f1576-ec9b-40c6-a82e-5bfdbb569c04",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "dcf29e7f-6add-42d5-a584-b693c79d3cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b28b55-77a9-4dd4-b28a-aa51f3c94cd9",
        "cursor": {
          "ref": "5f904f8a-b93c-4e1f-92fa-f7c955793643",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fc641be4-40d3-486a-ac5c-566c7f6a31a9"
        },
        "item": {
          "id": "c5b28b55-77a9-4dd4-b28a-aa51f3c94cd9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "474b4e54-edbb-47b6-a70b-7c02b367104a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e4cd8f-3687-4f37-94a5-8e808254700e",
        "cursor": {
          "ref": "7d1ad040-a22d-4ef2-9eda-85dfd57a1095",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2473dbff-4a9e-43ab-a352-eafa766ffc9e"
        },
        "item": {
          "id": "23e4cd8f-3687-4f37-94a5-8e808254700e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "94e6b399-ab1d-418c-b50d-7a0d6334fb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896f4fc1-2c87-440a-ac0a-6277c90dc91c",
        "cursor": {
          "ref": "dd3da9b6-2cec-43e8-ad8a-a882d487204f",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "98f4e6fd-cba9-4bec-a327-6eea55af34c0"
        },
        "item": {
          "id": "896f4fc1-2c87-440a-ac0a-6277c90dc91c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0296efbb-2bbe-4ef0-b08d-11a11b419df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fa672a-03c4-4aad-892d-e7bc77cb2b72",
        "cursor": {
          "ref": "02f6b203-143b-41e7-8074-a00d05dfa4a1",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "10e2ead4-bf98-4a1b-b28c-9a28f4031876"
        },
        "item": {
          "id": "55fa672a-03c4-4aad-892d-e7bc77cb2b72",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "85a7ec4c-d5b3-4859-b226-0e74a5a6b3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf95b0f4-596c-428e-b1ae-95391a4a3b2a",
        "cursor": {
          "ref": "977c19a1-b8f8-48a8-a84e-f4a68f25f7d2",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2963bdc1-d018-4e59-96c3-52ec1b2f328e"
        },
        "item": {
          "id": "bf95b0f4-596c-428e-b1ae-95391a4a3b2a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3389944b-f8d1-4519-80ce-469e205d47b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3cdf13-6579-4bc2-ba7b-0ed6ea5b22d0",
        "cursor": {
          "ref": "2bca089f-b977-4d19-9ad6-b671c06738f7",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "dde5494e-b4a9-4964-8d64-21b7bf21a4af"
        },
        "item": {
          "id": "6f3cdf13-6579-4bc2-ba7b-0ed6ea5b22d0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1113ba8f-6226-4a4f-bacc-ab20e0c1d1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a662d69-6804-40fe-a62f-a1f079e59f44",
        "cursor": {
          "ref": "558c6597-842b-4a07-ac34-1f7fb8352551",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fc645a86-0c8f-4917-b9d6-f0f5a11374f1"
        },
        "item": {
          "id": "3a662d69-6804-40fe-a62f-a1f079e59f44",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a7595210-99ce-499c-98ab-0ee701679822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5102c7de-e01f-4851-af0b-d390f31c63b5",
        "cursor": {
          "ref": "5cacbd30-b471-4d20-961c-e5ca2156b366",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4e5cdb65-2dbc-4fd6-8c98-204844650d5d"
        },
        "item": {
          "id": "5102c7de-e01f-4851-af0b-d390f31c63b5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e84819de-ac15-470d-bfb6-f4f626239612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc5ef1b-7c02-4eee-bc8c-3af21cbece46",
        "cursor": {
          "ref": "ba3b822a-69a6-493a-af2a-06915624e03c",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "03762387-15e3-4b9e-97bb-bc0b5c5f5ae5"
        },
        "item": {
          "id": "bdc5ef1b-7c02-4eee-bc8c-3af21cbece46",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "39d33b69-4773-464c-a00b-aa25489a3aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f55f5d8-8315-4a7a-bf5d-8638cf44bf35",
        "cursor": {
          "ref": "8d94c3f3-b72a-4e7c-a8a8-3923c24cf096",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dcd27318-1a20-4574-a67d-3fbd69d944ea"
        },
        "item": {
          "id": "9f55f5d8-8315-4a7a-bf5d-8638cf44bf35",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8f5d2cd4-1691-41f2-bb9b-a514ce3eab9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e78f694-8432-4b3d-9595-28d457352776",
        "cursor": {
          "ref": "f062ae7e-5f67-478f-af39-7e925bf81c24",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b64e91b0-9c73-46a7-8c3e-ab2a28b90819"
        },
        "item": {
          "id": "8e78f694-8432-4b3d-9595-28d457352776",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e5d04d54-8b10-49ec-94f6-c42b0f497a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c7f24f-024b-49c9-bdb6-722c0431cdd7",
        "cursor": {
          "ref": "f1957a4d-76fa-407d-a175-1b348afe9c55",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "109afec2-f512-4e24-b0f3-22677ac8add9"
        },
        "item": {
          "id": "c2c7f24f-024b-49c9-bdb6-722c0431cdd7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2ee57ef4-f6c4-4b81-a52f-27163fe5afa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d1b3bb-7cc6-4af2-8eb0-c150c6d757bc",
        "cursor": {
          "ref": "9cb0f65b-53e8-47f0-b622-f1602b72ce57",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6ebcfcc4-a1d4-4582-afdb-db8529e00642"
        },
        "item": {
          "id": "d0d1b3bb-7cc6-4af2-8eb0-c150c6d757bc",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "16d861cd-b540-495f-a146-d92484833a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f60478c-511e-4b27-b7d0-352423dee23b",
        "cursor": {
          "ref": "698371d3-9b90-40b7-979e-fd88a220333c",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "65da1a55-1bfb-4580-9c74-ca1dcdc25f5a"
        },
        "item": {
          "id": "9f60478c-511e-4b27-b7d0-352423dee23b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f7522614-36c8-428a-a1f0-b2aa4cd7116a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfd3531-2f50-4ac1-a911-a1bbaf418b82",
        "cursor": {
          "ref": "4e862214-1cd5-4dc3-8810-2d89444b31a8",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "04d2ad8f-2d55-4af3-ba10-528cd0383445"
        },
        "item": {
          "id": "9dfd3531-2f50-4ac1-a911-a1bbaf418b82",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6b293d47-9345-433b-a8af-c7cae01bd976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d428a0-dc17-4eaa-84a0-08a195c02f0f",
        "cursor": {
          "ref": "1f3a7cbb-455c-4cba-8bfe-e47387bdfce1",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fc4d081a-f5be-46f3-a487-8eebb8c6c0e8"
        },
        "item": {
          "id": "c6d428a0-dc17-4eaa-84a0-08a195c02f0f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d1450cc9-3730-46a3-aaf6-56b59ad31d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75ed7fa-050f-4253-9ee3-1b8c674a4259",
        "cursor": {
          "ref": "c81fedb2-b692-4583-94f7-0da387635c94",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6fb4c7d4-0314-43ed-9d02-7840fbfb6cd0"
        },
        "item": {
          "id": "d75ed7fa-050f-4253-9ee3-1b8c674a4259",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d7123962-31b4-47dc-ad17-d6848f505565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2ca257-47fa-4d95-acbe-4b9f1c902eee",
        "cursor": {
          "ref": "e0050939-23fd-49be-8e77-24ffd4396a03",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4e016263-b9ad-4977-b359-a5fc78e07f05"
        },
        "item": {
          "id": "bf2ca257-47fa-4d95-acbe-4b9f1c902eee",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "59b25394-3c78-4aa4-a08a-b8636c3d629c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8f0054-2f4c-42f8-96c7-f8b06a1b0d65",
        "cursor": {
          "ref": "07b6db37-00e9-4fa9-8d12-804f822b92ce",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "122ceb1d-b0b9-4c70-9bda-a04686a21b9e"
        },
        "item": {
          "id": "4e8f0054-2f4c-42f8-96c7-f8b06a1b0d65",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d9730c27-5ed9-46f0-bd97-92801e7a73d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f97ac2-0335-4f5c-bcd4-263260338163",
        "cursor": {
          "ref": "2ca17831-1206-47de-8e99-60ec7bb20a4a",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "23fa8b3b-2d82-4563-93c7-fc38d4a2a1b3"
        },
        "item": {
          "id": "87f97ac2-0335-4f5c-bcd4-263260338163",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6a4a7eb3-931e-4d3a-bc5c-b8dade2dc972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97aca33b-8ca2-4d13-93c9-fd16bf4e694c",
        "cursor": {
          "ref": "c9c53cc8-ad8a-4dfc-a310-8d20bf000f39",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "82d7cf08-84a8-4c00-8c2d-0cf1350122fe"
        },
        "item": {
          "id": "97aca33b-8ca2-4d13-93c9-fd16bf4e694c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "984f6881-0b70-491b-8563-236155beb0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f28f18f-43f4-41fe-8177-1d93371c6fb1",
        "cursor": {
          "ref": "8a7b8c13-7ecb-4aa4-83c7-e904f7c615fa",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "605e95c3-d5b1-4fee-8d64-51516b93ab8b"
        },
        "item": {
          "id": "1f28f18f-43f4-41fe-8177-1d93371c6fb1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8e9f7ae9-26d4-48a7-ae86-3b46eb867842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737a7ef0-ef6b-4e33-8b63-9fcb1fa4d5dc",
        "cursor": {
          "ref": "73c9861b-7699-47ff-9e76-9a09185b6637",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "98b5d530-c40d-473c-8160-36bfffdc5aa0"
        },
        "item": {
          "id": "737a7ef0-ef6b-4e33-8b63-9fcb1fa4d5dc",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c0bf719f-623c-4197-90d0-637b6debb8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24182b87-3e91-4c9b-b050-e448cb52172b",
        "cursor": {
          "ref": "3da2c18f-d777-4913-9a74-a8c05b7acf25",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fb2d8954-1717-443c-8bb8-b61022fd8397"
        },
        "item": {
          "id": "24182b87-3e91-4c9b-b050-e448cb52172b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c87fc5d0-50eb-4d56-8903-2a0ed46adee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a456b19-1784-4feb-afbc-0a4d1b6205d8",
        "cursor": {
          "ref": "8e47bf65-274c-4c54-beb6-ac12e9cf4753",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2faaf603-6290-4e8c-9056-d619754261b0"
        },
        "item": {
          "id": "0a456b19-1784-4feb-afbc-0a4d1b6205d8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "090f5a3a-c03f-42b2-9e19-e659bfec9782",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46cff53-451d-4553-b7f1-fd96036b4d3a",
        "cursor": {
          "ref": "b2f92170-940f-4d7e-8f43-13f13d5e8ccd",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "33e256a3-cd52-4cf4-9707-3f482ec8d34a"
        },
        "item": {
          "id": "a46cff53-451d-4553-b7f1-fd96036b4d3a",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "27fe1627-69c8-462c-a946-79a8d9356bfb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 263,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da72625a-ab48-4df1-9c5b-3854e655345e",
        "cursor": {
          "ref": "0b6ac7c9-52d2-4c54-8efc-188123bfac24",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "508708ce-caaf-4260-82fa-a04287abb3d2"
        },
        "item": {
          "id": "da72625a-ab48-4df1-9c5b-3854e655345e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6d95e499-2654-4065-9d88-118543ca1ac1",
          "status": "OK",
          "code": 200,
          "responseTime": 414,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbe71c7-0a8c-4ba5-aefb-f78d8f5996ee",
        "cursor": {
          "ref": "39107b15-3e13-42ea-8526-8d80bddf8718",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "688eb71d-6715-46e9-b70b-0ccfb4863ea8"
        },
        "item": {
          "id": "3dbe71c7-0a8c-4ba5-aefb-f78d8f5996ee",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8098ef4e-9eba-4396-853a-0025fc9f96c6",
          "status": "OK",
          "code": 200,
          "responseTime": 388,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "343f7387-70d3-4525-9713-3fe211d7a2f0",
        "cursor": {
          "ref": "2338ed63-f9f0-4c79-bfc5-546d46b559bd",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4ed3a675-16cc-47cf-a592-d36c1295615f"
        },
        "item": {
          "id": "343f7387-70d3-4525-9713-3fe211d7a2f0",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "6fd03fa6-40fc-4dff-a5fd-1f830c4792d2",
          "status": "OK",
          "code": 200,
          "responseTime": 352,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7a5076-34c5-46f3-a452-614a6635d0e9",
        "cursor": {
          "ref": "302d764f-35c6-4710-b8ac-f87751963fb9",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "187839d6-3141-4a87-936c-e4eb6a9adc1e"
        },
        "item": {
          "id": "da7a5076-34c5-46f3-a452-614a6635d0e9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "84a93eb1-22cd-4090-8ce3-ea65c0c0a8b1",
          "status": "OK",
          "code": 200,
          "responseTime": 347,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0feb32-703d-4b00-b4ff-82f8a80ec6cb",
        "cursor": {
          "ref": "1c9aabe3-b6b2-48a9-878d-2b9fe75bf009",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5e8f7a3d-95d7-4791-8625-7f7c6d258f18"
        },
        "item": {
          "id": "3b0feb32-703d-4b00-b4ff-82f8a80ec6cb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f9ea4843-3506-4d81-a556-00a66efa76dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0feb32-703d-4b00-b4ff-82f8a80ec6cb",
        "cursor": {
          "ref": "1c9aabe3-b6b2-48a9-878d-2b9fe75bf009",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5e8f7a3d-95d7-4791-8625-7f7c6d258f18"
        },
        "item": {
          "id": "3b0feb32-703d-4b00-b4ff-82f8a80ec6cb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f9ea4843-3506-4d81-a556-00a66efa76dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0feb32-703d-4b00-b4ff-82f8a80ec6cb",
        "cursor": {
          "ref": "1c9aabe3-b6b2-48a9-878d-2b9fe75bf009",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5e8f7a3d-95d7-4791-8625-7f7c6d258f18"
        },
        "item": {
          "id": "3b0feb32-703d-4b00-b4ff-82f8a80ec6cb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f9ea4843-3506-4d81-a556-00a66efa76dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c270d33f-a503-4950-b470-bc6e0c478216",
        "cursor": {
          "ref": "9bcfe8ed-f878-4e06-b4c1-8025fb3f1381",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "02c52711-7c25-478e-9ad3-85e117877e32"
        },
        "item": {
          "id": "c270d33f-a503-4950-b470-bc6e0c478216",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "8ce187ef-1808-42d2-98f5-249ebb3beac8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 247,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663fa630-0255-4131-a315-42637d26adc9",
        "cursor": {
          "ref": "4cc29bbe-a847-4e9a-8d8a-aac7a709b4b9",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ffe08e2c-d595-4c8a-9e0b-bc607eb09eac"
        },
        "item": {
          "id": "663fa630-0255-4131-a315-42637d26adc9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ec869318-7e8e-41c3-8496-f88f70c24135",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663fa630-0255-4131-a315-42637d26adc9",
        "cursor": {
          "ref": "4cc29bbe-a847-4e9a-8d8a-aac7a709b4b9",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ffe08e2c-d595-4c8a-9e0b-bc607eb09eac"
        },
        "item": {
          "id": "663fa630-0255-4131-a315-42637d26adc9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ec869318-7e8e-41c3-8496-f88f70c24135",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a48ef7-ce94-44a6-ba70-dd0e31a72f14",
        "cursor": {
          "ref": "88505c12-91a6-4262-bd1a-322796b7b967",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d4ccb496-7250-4b61-bf48-64c6c1f93648"
        },
        "item": {
          "id": "e0a48ef7-ce94-44a6-ba70-dd0e31a72f14",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "f67d4e4b-df97-4e20-b276-5895a24460e9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 482,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52631cf-c986-46ec-8b13-f79414876e18",
        "cursor": {
          "ref": "b0d8f91d-74fd-45f3-ab0c-d878e044aa0e",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "aed5f3a3-1dd6-44c4-a42a-b46de3f8701e"
        },
        "item": {
          "id": "f52631cf-c986-46ec-8b13-f79414876e18",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "af5e1645-e646-4a3b-b042-d4b62630fdac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52631cf-c986-46ec-8b13-f79414876e18",
        "cursor": {
          "ref": "b0d8f91d-74fd-45f3-ab0c-d878e044aa0e",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "aed5f3a3-1dd6-44c4-a42a-b46de3f8701e"
        },
        "item": {
          "id": "f52631cf-c986-46ec-8b13-f79414876e18",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "af5e1645-e646-4a3b-b042-d4b62630fdac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d33fe58-9751-43f0-a3a8-9022d2d5cb4e",
        "cursor": {
          "ref": "bede83b1-78ab-4b61-9328-31503cdb0960",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "031d1ccf-0d6b-4add-8851-55bf101873c6"
        },
        "item": {
          "id": "4d33fe58-9751-43f0-a3a8-9022d2d5cb4e",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "2deffa41-f0b2-4ef3-bfb2-4c44a333007c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 474,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}