{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b5bcf3d2-abfb-409b-991e-8a5017692a19",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "99ca94b3-93a2-42c4-98db-be95d5712349",
            "name": "Positive Testing",
            "item": [
              {
                "id": "baebe44b-7d9d-4683-93e8-79356e034853",
                "name": "did_json",
                "request": {
                  "url": {
                    "path": [
                      "did.json"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "154bbb90-6024-4c9b-91a0-2726dd557b9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "45d029fb-665d-4b65-8911-5b80d0b963b5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "8b63137b-08e1-4011-8dd8-0cbbbbc05e14",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a200d0f6-5801-41a0-9d43-c2319353263a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "729e9d51-6671-440e-bbc5-57083d9ec304",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7078545e-7c0f-4f1b-8e88-fd58414a0b08",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e8a583-d98f-4b87-a715-74d55930616b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7701e98-56b5-4842-a5d1-ce5deb802455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336f701d-586e-490f-a1f0-d6164f6f75c5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea74332-3071-4536-bed7-bbb1d95e37e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1cd319bc-dc6a-49ee-bd08-0d8749f3d16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caaf7b8a-0870-47b4-bff6-caea484ebdd6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4498ad81-3252-477a-b9e6-5ba31101fe73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d26e9240-cb4a-4585-96e6-26b94a6bff9f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "96bf7539-ded6-4cc6-8cfb-d7ba401a8938",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3cb7d61a-4853-4f3b-a23e-21a92fc982a9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f426995-a508-4ae6-868a-84cc6152a295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e497932c-1a2b-4184-83a0-6cd1ad5db8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c0993d-5880-4174-94e0-8cfa0ddfbca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97da82e-a8cc-4b1a-ab24-a662bc1f3640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ebb8cc-f13c-4977-b516-3953e27f2c6e",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308e40a3-5700-4be7-b973-f0a0c5ae3333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4982d4e2-046c-4f0d-86bc-9ede473cd932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e421c3-56a9-4dab-9df6-70ae342a3831",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "e28ca52d-b8af-4ecb-beaf-8daf467f9dd9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fc1a90f9-0541-406d-a7f5-7e6a672a6c45",
            "name": "Positive Testing",
            "item": [
              {
                "id": "318275d6-6eb7-43e3-a5ec-e55b2c121ed0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3213721-cb4f-428e-a1a2-06639f6fcbec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6fc24c92-df3e-4b3d-8908-0d3d99093fb8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "886aee34-3333-447a-9de3-6923ec185aed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "6f31d4f3-bc9a-47cc-a4c1-b16ecd208055"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "967287bf-6412-498f-8ef1-6f6ef825686a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "432cc4d4-17e7-4344-bd94-fce7d8856a78"
            }
          }
        ]
      },
      {
        "id": "a6345674-6846-4f83-8025-06c2abfb4789",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "12633b22-fca9-46df-95e0-ef2604a1adcb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9dafce22-2008-4765-97af-3192cd0b16c6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1d14d4cc-972d-482d-8275-69c06d73c0d7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb5ad8e-2dce-4139-9e33-88c0cbbc2da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f941caf7-5a02-4bce-806c-58052602f6ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7aace9b-c3ae-49c6-a8f0-a70b696e470a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cca22ca6-942d-40af-8c43-150ac2006d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0628ee29-980b-41c0-a92d-3a2f1bf64a4d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77161e26-dec3-45f1-b347-dc0cea4c07b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ed48ab-1581-428d-b281-0c8f2011144d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c169750c-342b-44fd-8c71-1c96263384cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80adce2a-776d-4efb-8136-089f5c4945a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27dd68ea-b491-45ef-8b8e-054755f1b027",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5091a6ae-493b-4c5d-9b17-e54d1925024d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b43baec1-8d65-49d7-89a3-051d9579973f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bf4d39-67d0-48e7-9caf-f50eff8106da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72f9ce15-f864-4dc9-a9db-eeec181b91f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3c47e7-ea61-404b-a85f-1565eb4fa88f",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19254b6a-3700-43ee-a7b4-332eeab613d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5039124-94b0-4221-8f13-36055284e9af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1930994-675a-4595-b7b7-3e0eac2b1c52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5617556-d21f-43dd-bd3d-4cbacf163fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c427da9-4475-40ec-ae94-f2542117bf2b",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b739c9-e7ca-4881-b544-fa6c9454c6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c0612b0-2168-488f-a743-ce317182a455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c138a3-5c48-43f1-a1f1-4949b8e5978a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ea792d2-f746-479c-8e4a-bea199731396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0f8fed-40d8-439e-868a-bcd646da549c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc8f5c6-1468-4fe0-baa7-2a06e91ff5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6999bc9c-f01a-482f-bde7-934fc3a66b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7feb30-c095-47eb-9c0f-f827cc77f41a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83426f89-3042-4c70-9eaf-b0535f098a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784aefe5-3ffa-4ce9-bf5a-ca92f6894c97",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773211a5-5bb4-48f2-a5cf-8ad955d74344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae9400c-0353-4e00-9041-16501027170e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01549a0-61e1-4f82-964d-7196135a75ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a67f62da-902a-4fd1-aa5d-1deb2a67dc9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a70d61c-000b-4428-8aeb-d3f75d1b451d",
                    "name": "credentials_issue:credential.type.members:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ad7a7f-7fb6-443d-bda9-5fad92c53f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7581bb1-36ea-41f6-8664-91bfa7cb9f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e876a42-dfad-4b1b-a2d7-2f5336ad3265",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain at least one element",
                            "rawBody.credential.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "419cf30b-5c2a-4bd2-8634-b1370e4c87d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17fa64d2-0b28-4943-b0ee-60c7a35fc52b",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c2cdeb-71b8-4464-a526-355b85992a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9107b21-6349-4ffb-bd30-c233a6504ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2798a9ed-c678-4caf-bf15-7c0b8fdd15ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4f8237f-225e-48a7-8202-2727645e7240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967614dc-bd30-40ee-95e0-deaf2c0052f4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4306d9cd-27e2-4995-98db-95d679813688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44777a3-f9f3-4f92-9ea6-1f6a578cd87d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e077fb-ab4c-4b5f-bc78-199b5c67f998",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eca6d48b-7ad6-462e-81b3-78d15d480e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c01ed01-7d3b-4e1a-898a-fbbde94ba5c1",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b0ad0f-3f0d-463f-97ea-17327f228c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbda7de3-8986-4bb9-8836-e6ae9e9457a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e445e2b9-e5f0-4927-a992-69a4e12fee92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e6869a8-a371-4463-a319-2eec4c5b7db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db09f8c-1be9-4353-b5cd-3625abf6f04f",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7a27c5-a643-4aff-942c-d2044ca32a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2239115a-ea91-474d-b927-84cd75da2786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45081aaf-f704-41b1-87b6-f5259f2d1c77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "c6de855c-39c3-44eb-b230-b61ec43d1857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef563a1-8e33-4ec2-88be-4d907aa60760",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a249f8-24b1-4558-858d-701c36ea89c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18636f2a-5915-4334-b09e-d9d648476164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb375542-7d4e-40ba-8c33-fcb255b0041a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "29601a16-c133-415b-a923-1fd787864052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c776e3e-65bc-4f63-9ed1-710571725fff",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24354b67-78ba-4625-ab00-ddbc8bc4d304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6311c1c7-0045-46c3-b240-4ec26da870e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6461a7fd-8914-49f5-a005-f24227425360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c48d4045-4e9b-4c51-83a3-ef2601df550b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1b2ad2-baa2-4a7f-b4cb-5e8c4d4a9b2d",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564a2d8f-649c-48c4-84d2-166a8b8b286f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff91f5d0-f67e-4587-863a-46b7aa1ef5f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad392281-6d06-4c03-bcb3-c51d45df1acb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40671031-c11b-4716-bc0c-e2f1f76ac348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7b4702-e73c-45a9-9964-cc7d3442b78f",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116241ef-2bcc-43bb-8d47-fe52ebc50795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca092c3-3303-4ca7-a750-5effbb52cd8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae888809-84e2-4953-b69b-177048745699",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "800383eb-f4cf-44e1-bdc0-dfeec819a6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d3b3fe-77a2-4384-9b10-73096f64e6f6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa9ae68-bab2-41b5-8b19-adfbe633e128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed54011-72cb-4fc9-8531-a210feed07ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1b83bf-5d8b-486b-b302-725afe32b3a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "8cb2edb0-ef97-4f3d-ae47-228c0db46f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d784b9-9658-448f-b657-efe33203d54e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3873d5a-f5ee-40df-b9c9-b5fee4c41090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a11e810-a525-4a6d-afaa-81c29754e778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4808b41b-594a-40e8-8fbf-3119db515bb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "337c7322-f905-4f35-bb53-d7b745fbc3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead9803c-7535-4fef-a1b0-79f2b2309c09",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fd1280-02d9-41f3-8c4b-12baf07bf289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926185f5-b7ac-4e1e-b7e6-972ae773beb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469c9c93-f3c5-4f9d-a11b-413f4aa5d594",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fb396d7-5b44-4b71-bd93-ed5a7bd290a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718840b4-c767-4c11-b5ed-6b02be59eec3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bdeb7b-b118-4cab-8880-d29bb7b37643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3018c95d-e0a9-4a72-96a6-d20e6b295cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec6b26f-b57a-4d42-a726-c604f84a6b98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb517744-0b5d-4f6b-afc9-f61581c3a4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318ff0e1-c509-4900-8898-5c17d96b7f1a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d32f22-3c0b-49fd-9cb3-330bdbe02347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c74aada-f839-43eb-8f3e-ced3dd313002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19818f98-ad69-4d63-b747-2c566cd63189",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea2aa2f9-e90b-4fbb-bea3-3bb5e456484c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0d96a0-e01a-4a55-990b-b591b5a2dc03",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c49830-c598-447e-8c93-495bcde09d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f077b6c-a1da-4260-bc75-e97f348bbc26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7dc972-bd35-4db8-a636-3da2a177b9ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe1d9142-ebf7-4867-a13a-ffdadf063c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6859f87-d2b2-4ff0-9a0f-887601132594",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cb9b5d-2633-4b8d-881e-0eab04f206fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7109c187-9137-4854-8598-f830979c1774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab57802-e1e9-4ef5-9f3a-b6cf61c0d705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a4bccf7-b76c-41c3-80ea-6cd40cff459e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897b8252-a248-4217-9dda-680285737981",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448bee96-863b-4436-ab42-e84ba869eaf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1af921-f58a-4100-a465-52c4a7d2bb59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f99393-f506-4876-9eea-19303f44784e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be327208-41b1-4116-aa3c-699a1a274dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139859a7-bf76-497e-b45d-41317fd00e26",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3072e5-891f-4997-abb4-4070e2341ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12e8b11-5294-453c-b10a-69e76e31c107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c193a2-4b0d-4832-8769-2d3a12f789d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e3705c4-b73b-4403-b9bf-348005142609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fc9b0e-eb35-4794-9897-ee79ab049408",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a25fc10-4beb-4cc4-b624-1fc9dcdc5964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae759de3-e116-4858-bc07-d53b5a08f547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70e1265-ea9b-49d6-9f60-e2e26bbcc0f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d14b8d1e-f037-44b9-83a7-93385b465f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43029b8a-7124-4d7a-bb6f-2237acc6e802",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5000d4-1b12-40df-82f0-d42d89d64f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e64833bf-e5ad-44f0-b677-8359d24ec08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964257a3-66ae-4d8e-a178-4871a2b9cd3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "030fffde-4e0e-4ed8-8806-752e8cdd76e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd48b72-4d8c-4d57-9f70-f8217a2c8c07",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed2d478-b39f-4214-b72e-5adea8e48a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e229d4c4-3515-464c-8010-ccd03a42c377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db31991-9441-4196-a85f-16f14bda37d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ef1e928-4a18-4dc0-ab33-26396d8de434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bccd9aa-033f-4971-b42e-cf15a07462a0",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34a5c87-fe98-4294-8920-f6f1d1d6206d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b854a13-c38c-42d0-9588-6428a5b9554d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59592f5-c262-4916-b06d-757f5080f380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe411b29-1565-42bd-937a-f01e0fe9d260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa78946-0b2e-4177-a150-59d67e9ca9c9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8a75bf-7f96-4ff4-9966-afd466144c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb3f75a-6958-4b1e-b22a-c1c6ad6f467b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658efd55-af75-46eb-94c3-de02fe1eafd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must contain \"type\" when present",
                            "rawBody.options.credentialStatus = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be656eb4-ce24-4f61-ba44-4e08184fc2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35602f27-950f-4173-b763-bec0075b0b47",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec69d0a2-babe-4259-be76-8f4bc5855247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f7672a-513e-4ce5-8881-ec071bb27ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1a0309-c518-47c9-95dd-72746d1601d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c5b8701-8dc0-4c9e-b84f-871495a31967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc40a8a7-a2b0-44f9-980a-6cb3689156d2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014f5215-a479-4bbc-a089-842717e9e949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f514dfaa-13fb-4c97-8aab-874e07c31760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26adbdba-54c5-42ca-b4e2-c547b83f48a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17461950-699c-4ce6-ad5b-30e8cc77febc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4515affe-25ae-4112-a2ab-95f5858f38c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b164d671-c3a9-4d05-bd18-96f9071ca6ac",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c788f6aa-5ad5-4e8d-9500-654d77a808c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de3b656b-ad37-45eb-800e-22158ae05c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b467a81-e5cf-49cc-a8ac-f9d66ae3964b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "3e91ca02-085d-4a05-82a2-1c7e717c6959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6c73ba-e49d-43f1-b01d-ed0660b9f2c5",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7484f69b-0afb-4630-a920-f74fa2df034d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0aaa37d6-7ab0-46c8-b95e-96e9dc2cf77e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51bf34f-66d0-448b-9b29-6f909a26b21e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "90ecf1c5-1c1b-48d0-9cb3-14f72db6c321"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4308f70-dac8-4eac-8b8f-1d630078bb9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2480fc42-adb4-4c84-a55a-637fb6565409"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc903a6f-6a19-4cc4-9a8e-4d03c7631165",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8253dce0-692c-4a7f-9bb9-e6b47c14b1d6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "500a6dd0-42f4-4958-80ff-fa5c5d5a9ba6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "217d7fbe-03cb-4e8e-b274-09a6018f1698"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "46c495fe-9a7c-4521-93cd-1b530824763c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "811ff920-6b3a-4578-bd3c-1b130be25f65"
                }
              }
            ]
          },
          {
            "id": "8105fd17-04f8-4944-8d5a-52f4cc6106bf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e2c1e2e0-5f4a-455c-8c6c-b95e9d4337cc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba3d5a40-807e-48fb-a199-8c87ad9875bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a435fed8-1af9-4515-9870-a895660764b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "133393be-8ec9-4f9d-a90b-f4d6e1b950d9",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "23011415-0a94-4000-8e44-21c9749b48d2"
                    }
                  }
                ]
              },
              {
                "id": "4a5e6020-29ef-4c5d-9eda-1003995528d5",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2fbbd26f-b6aa-4f50-a62f-c316a096a8b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e63fe28a-dad7-44b9-9aed-0cdb850a41a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41e863e3-c442-461e-9f36-ab42888040e7",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "bc532a59-6cab-49c4-af0d-95690708becc"
                    }
                  }
                ]
              },
              {
                "id": "7d65735b-85b0-4c35-9c1f-b93ee5907ea8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3063176-7bd0-423a-b6b3-c695c3578d4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0b751a96-78bd-4f08-ac39-16bf3556e9dc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e03e7299-ec6c-464e-9dc4-2de53e4eda4e",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "8d149b0a-20fa-4b64-968e-7eda4b913d2f"
                    }
                  }
                ]
              },
              {
                "id": "19ec729b-4f2d-4d9a-a074-c6be4687342f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ffb9fe0-7b72-4ff2-a654-3d5af1e2181c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "163a0d00-3c50-49e8-a4ed-40b0c3820767"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c427b810-2ac5-4b6f-9a66-dddff6add2e6",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "8bfb0171-9965-40fa-b853-e43d9bc932b3"
                    }
                  }
                ]
              },
              {
                "id": "c09a2363-bb9c-4244-82ad-f6b6c0b1fdcd",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28afc779-8b4f-4546-856c-e2004fad1979",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6244862b-c4a8-4eaa-858f-9102c73223ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ebcc0bb-5392-43cc-b13a-2af24e76cb7f",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "f5e99d9b-ac76-42d6-88c3-889c9b5f7d06"
                    }
                  }
                ]
              },
              {
                "id": "677ce03c-4236-42e4-ba3f-eb8564cae33e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "afa346d1-2084-4474-b153-c02f41e0d668",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc170f92-b986-45a3-a1d8-6548be8e7235"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48561845-be1c-4573-b89b-d65172cb4479",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "66700560-a514-492d-945d-441e97e483bb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac4fe93e-6e39-4e46-9c0a-d25c8c9299a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d1ff5ed5-599b-42f4-a3d2-8fdf8461395e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "90b128e0-4a9a-4113-adad-5aeb5c4948e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1a00c9be-ee31-4958-8e25-7d0e24adab5d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f118484a-974e-48dd-84ba-1d40c5c6de69",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{ORGANIZATION_DID_WEB}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "ac43b1c5-9e32-4836-8678-16eb889fc172"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9d2d5dd-c0a6-421a-8be1-669f183deab3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b934958-6640-4c15-8320-ecf1de1457d9"
            }
          }
        ]
      },
      {
        "id": "cecdd941-cc8e-4529-842f-8f5acefec2ff",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5bffdef6-32a9-4f24-8499-e8a539db4ff2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5837c242-b0e1-48ca-b220-2cf8893a197c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57a26722-772a-4ae2-824a-5b0b42e61346",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6707a393-f22e-4ca2-b01c-d3f39cc5e201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa48140-84d5-4bcb-a8ec-66c43225779b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ed96f0-7673-40c6-b8eb-7af652f2a030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "712a8c09-a5e8-4ed0-a135-faf7fa8ce722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed5ad7c-8284-4b47-b7db-4c663b51c0f3",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b837181f-9a71-40e3-9d42-62b202e338f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "aed2ff83-259c-4bfe-8b12-6979e08cf906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6cf23da-70d2-441b-9847-874c2f594753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82639cfb-e6db-444e-a9ab-46efc76c25c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86e34865-79d2-4a8d-9ca0-2ecd57b71e71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd16ec83-bbec-4637-9883-9fe3185f183e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "14557b3b-0ab3-4cd6-8442-0b22d610549f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ad50ec3-ae21-4dd3-928d-c25871874a28"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "769eeaa3-f72a-4cae-9ebd-711b0e7f57d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "b80c3733-4c2b-4b62-8ffd-3c88e4dbc3a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1991c4a-229e-4213-94d4-6d3a974934e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a6f8b089-f6f9-4a2e-a745-b3b248905a50"
            }
          }
        ]
      },
      {
        "id": "a37bf264-83ae-4999-9277-d64a4972059b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5f6c4838-09dd-49dc-8bf9-f007cf734f1a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "908e08e7-7b5d-4aeb-b57c-8a5ce650a8cb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "73881f48-0420-436d-a563-45ee6c1f0f6a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9431b76-366e-428a-8b95-b6190f14e8e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d08837e4-05ef-445b-a3ab-6f77a3a201c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6b3cd6-4677-4701-9a4e-64c48bcf3cc3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0e638d-f607-4d22-9714-ecb5e1299ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baaa0d33-dd30-451f-bdbc-1cfaf3524ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8aa4b4-5fd9-4877-9a3e-9b40447303f2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c472878-c71b-4b72-a38a-1f2258b3fd51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521137cb-fabb-494e-8b8d-10f84ce6652f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc7b286-fdbb-4751-84c4-bddbf3811008",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42f9b7b-1a75-4520-9fcf-a20da0800be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd728306-3d5e-499f-96ce-7b4742c32ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f04d6f1-f910-4d57-b77a-d534dd7f41f0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0a7aa0-7f32-46da-979e-685e27464aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8fdd393-371b-4c22-a8fc-462cbb4307f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0cfdc0-fa80-458c-9084-9c411dcd6c93",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6c3432-30b6-4c73-a9a4-cebee99d1c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2a8125-136f-439f-bd18-24fecb59732d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f31b3a0-b548-4c9b-9695-32434149d167",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c97be40-015a-4623-951d-0a480110cf48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca114f0a-774d-4ed9-abde-36463768e664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee306458-48e8-41db-a15e-659189be1ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162be472-a08d-4a9e-998e-ce8f622d00b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18daeecc-34e7-41b5-94a5-39eec8840b0d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdfa22b-9b21-456d-9999-813a7d3609a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5904ec81-451c-4ed8-8ff6-a551b84d4f99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f8a220-ebfc-4653-99db-1ad04c152a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7f8fa2-f26b-41d3-9c52-d48e54502fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee81978-ecc0-46e2-bdb7-5aa953063295",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c392c768-1831-468e-9795-272c156787b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f62a0a6-187d-4e7f-8c51-9217c80812d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397bd51a-c318-41c3-a41e-9df29b61f2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f95e889d-96ff-417a-a03f-de863b3593ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074cae20-80cd-4d54-8414-61ba22ad5a43",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacf2ddb-fe3b-47f8-aa7f-dbab996ff6f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b14a0b4f-b360-459e-841f-3409246d6b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "977d4073-080c-45e6-a1c9-f938d97e952e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6424c787-ebfd-4f57-9820-c4281ac9627d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad8a16b-36de-46bb-bb5a-1b84e93bb93c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d1945e-0062-46a6-8fa7-df9d1fd03d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5348542-5c63-4cca-989e-f7cb522e7e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cce670-13fe-4abd-a030-7bd9a80e06ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903cdc99-6f15-4fab-b5f4-532c30aeff18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2821a32b-7a9c-43d8-afae-a7aa18477841",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b2100d-eb85-46ca-9a02-2ffad65ce457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bf3525-8d7b-48f4-96c3-f3a137612000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3fc68a-c64a-4d3f-b3a5-9ec32278fc70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d66032-ca1f-4a01-bac4-d3422ca98638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1dbfc07-2149-437f-ac0b-b250b74d737d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41079eeb-78a6-4219-bb3d-d988da526f82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1931e367-eba9-4e3c-9fb9-90821f00267b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "497934ed-f2bf-4e75-80aa-50c54b6db622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ac2bf5-89d4-4feb-97c6-858b5789345d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e2c92d-b989-494b-8629-65642934213f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2933eb70-f624-469b-9681-73878c0c1d6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "207dc270-5d48-4ba2-aba2-fcaa9df3512c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02e13ce-027e-45a2-86b9-dc6231bee61b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "219b4aa7-19fa-4df2-90e7-243e419bc308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59d6a76-dbd0-4be7-9ecd-d22b65bb97d1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5962a0-7b0d-45dd-a38a-1d087832bdf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32941ff9-2d49-4dbf-b3e1-c110c3c25df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc522c5f-dee8-4e1e-8b3b-bb96cd68071e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf9709d-7381-487e-a53b-dd340b0e5b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f573d7-61f2-4987-a908-0f0f3f049c71",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adba4836-1063-4a2b-9919-de03e722bd46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d00e825-823e-47ed-9c45-ce4ed0600234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756e8cbb-d39e-44f5-a82c-ed9e6d98b21f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9246969-4cfa-417a-b9d5-4570abc4e77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11be2774-0fa3-4e29-94ef-9afc31edd00e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d079b3c-41e1-4e55-b4ef-f4c80bec6abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c41f344-a8f4-4e37-9cbe-678ca16d02a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "018f1748-479a-490c-9b5d-dd19019bedb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32de6b75-6e94-4af2-af19-fb42f82f582e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0858f6d7-9a9a-4cb2-acd9-e6de24331109",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979397fe-f892-41c2-95d6-6342fbd03cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66529da4-86c4-402e-a69e-80f042390190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b1aaa0-4cb6-4319-b119-6322cf3adb16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41dfc2ab-58fb-4e8d-ba29-fe2afc698f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26465083-54cc-4ecb-9578-1e336a3a64aa",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ea73ce-2f83-4a7e-b5cb-441a0c49d475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf1f35d-6142-435a-af52-059515165350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0614fbd8-597a-4deb-b0dd-a983450e7768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b3f93d-ed75-4745-8d92-2f89f26c36e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c96bbc-98e2-4f2b-8667-694506133492",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c9b70f-4af3-446e-95bb-dead6fe44225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adbcb444-d34c-4f39-aecd-627fdb67bace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3553de35-4625-43ef-8982-c46f8a2e373a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38fbb940-8016-4c95-adb2-bdf0bb01fd04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3237c6fc-9763-4993-a526-8fecc5e1a4c4",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7470e526-9a28-4bf2-a70d-141b470d6ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "274957d3-1421-4bec-89fa-f3992397c0c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "749cb236-d45e-4ca1-bd02-9f9385b71e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1484e32f-ae66-4bc0-955f-32e8ccab842f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a0cb6f-6352-4b02-89f6-ff2eac29f65c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44402742-bf84-4968-93c9-2d7c70b9ea11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe08bc0f-b1a5-4a0d-a317-14414f7448a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "635dbdfe-7d41-4dfb-9376-d989e7036b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83a4f6d-eabd-495b-9eeb-d0bb3e96fbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2974a59e-b509-4ceb-83b1-427d796c2693",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2a7923-93e7-45b2-9f67-ec66db199ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0f81c1-65b3-4913-853c-e34a02669a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d0c59a-6bf0-4357-bca2-42f7176ecbe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "067c5b11-4ece-443f-be9d-ad6722349bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9042af8c-9d3c-4b07-a328-bb5cb1ccb544",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7682b651-7794-47ed-ba4b-9354d173bd15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "290589b1-9bca-4e26-a164-eab5383215c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0b5d8d-4d90-426b-be26-b4de62fdc5be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e72faa0-46a4-4d8a-add3-2c70995e2b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0086715f-b2b0-4509-90de-13b0ffb6cf9d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4333b33-fde6-4e36-b0f8-0f8a455fd4ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bac926b7-e2dc-43ac-8046-54ac914fea75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05814cc8-992f-48d5-8f14-58403a848193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "104eae73-79c6-4b5c-b51c-f31e6c9ad623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e4d4ba-820a-454f-8f8f-862a38745be8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75076ffc-7e3c-4fdf-bffd-fc08eb82f63e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ef377a3-926a-4b23-8b8b-ff32c040ec77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "896290bf-3933-4d2a-afbf-b931d19f1938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8995c9cd-ad3a-4be4-9522-5cdba6705c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01271c45-6ccd-4b32-b7da-801a38acce8b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7405a2cf-9c1b-47e5-9a30-d2f20eb50e3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcb73d68-491b-44f2-b4a9-2d880f2d6ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e24ecb2-e0d7-4d62-b2fb-0e078f8e5e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a63c7f8-9938-4a83-b733-75baf6e47816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4e3a35-9a59-4f19-9cc0-bd38a22817bd",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5344ac30-77ab-4785-a145-fe255dd29d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f408b9-be1d-477e-9647-a827d5ff1ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ebc5e4-b22b-4edd-85d9-471d7fbe17d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2a2fef-0910-48ed-85ff-01b0a778b9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c8257c-1bf3-4d48-950b-d77b69ed7159",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e352aae2-6578-4f24-94fe-1ac95621a273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95009805-fb33-4385-b040-cfe41a3b2c42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13475fdf-3dd4-48a0-b577-3b378e3d685b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6db7c44-005f-4eb8-a072-19c00f0a9896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f77a0d-457f-400f-9301-dd1f1247f994",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3f503b-95df-4b55-9644-17f068813d5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c21c5763-57c7-44c7-8746-70c194a4749c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c1848a-40c9-4a98-a186-ae49b7fbfecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aed03ad-9905-48b0-926e-3b0eb9af757d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e13a8b3-ce88-419a-87aa-15d1e193dc88",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea06eab-9d6c-48f0-bff3-6e85afba246c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "284a08de-4149-4b88-a970-ab5d6e31bb10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38132e02-fb64-42ea-b42b-20784aa96aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db4eeb02-403a-4074-81b7-c4e873712365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e7eb1f-5a22-4bf9-a3e9-7de1c7a55559",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5470eba4-2df2-498d-81e0-fe15cf7a1994",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94e6fe43-e94c-4da4-b53e-c7f2b06c3bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b3dee9-bc22-4935-8727-bb2b9d1e0912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ef2b9de-8707-46bd-8d8e-6d2b46005081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e736fcd0-124f-4880-afd0-25ff4f7ba6ee",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4bf4ba-c2d3-4a3c-b710-771901539694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e867011-10a1-44a2-b596-2839405ba901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc760e0-d09a-445f-9181-e2573f04990b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da25d797-e0cc-46eb-b771-986201a9d956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f513f9-756e-41ad-be56-b359bc92873c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d582c0a2-c1ae-44bf-87dc-f6be427be47d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da96fa8b-25e6-473a-961c-628ea811f7c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed2c6ca-a804-4ad8-9318-2eda45cb4da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e45b1e-e874-41ad-a3f9-d077e6a80919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250c29b0-59c3-4dcc-86c1-e4260db6e858",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64085c59-0c82-4ce4-aa27-d93f6645cf48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ebe460-2369-43a3-851c-f0986a42a9ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee30e2a-4005-4f98-947e-5d86f26cedc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c7b6b8-f58f-422e-af38-99f0133749ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91981068-7fc9-42ef-b3a0-98b3f826a125",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4649a24f-5bc0-4665-94c2-f8908a83f48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc95c30-0a28-4057-9d6f-e07835c07c6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "012f2376-514b-4c39-81b3-5e13a3d2195a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13512ffa-565d-4990-800d-771604bfa091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b870570f-3011-4370-9067-3b390adfc9a2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e145f0-f29f-41dd-b111-e7dbbc54e2a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe44076-cf17-4eae-9378-3c672ecccd94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1f94cf-247a-4b63-89b0-d48c7fb64db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32a7ae8-dff0-41fc-bbec-a40c1185a065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffd66e0-458b-4682-8033-0cf031d60e61",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b3aefc-8fe4-45ae-908f-f7f5e7708f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61d095b-fe8e-43e8-b769-3aad8df6a5c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb31bf4-916c-4d9e-ae5c-093be2af52ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f64a829-4b94-44f0-9291-228494e767e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6220219a-837c-4600-b22a-0842ce384487",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e003d0-dd18-4233-9715-879ba26f228f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be0a8bb-97a3-4521-8662-56249cc502fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c435986-13e8-4622-95aa-9d0dd2a96bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bbcc879-0201-42d3-99a1-bb3dd77aff79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b44352-a113-4384-9ef5-87e79dbb1841",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b39350d-b326-4fab-b016-36ef320a7b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b25901b1-f6e0-4a78-aba0-d40230d71a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4bfaca-e77a-4362-9dcc-cf9fc64adf8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5913a41-3fe6-4eca-be13-f194ed24e8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df39c784-3406-4a3b-84a6-a706cfb9234b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a2236f-797d-45f7-863c-50455f23e0d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b87092-c288-4ab0-a10d-15387632635f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "082b65c3-7353-40bf-91c6-5164825c3621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6a0a7b-c8c2-4cd5-9511-51d302a05592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254264a1-2175-42ed-8325-0e204c048f82",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea593270-ca1a-4a05-b2fd-f2214ae2a546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77067595-cb19-4811-b41a-bc0406b3f6d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbe8d2e-e5c8-4bbd-a054-6d5b2563a7c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f661ea6f-db0e-4c86-a2f3-72fee58af3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b06c74-33ec-4135-be04-33109e54a669",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066777fb-fd15-4d9b-bae9-5ad507917b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c040ab95-4fb7-4e3e-92df-3d952dbee155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4001851-d46e-4351-bdcf-73bd996db1d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142b6aad-4eea-4676-87af-808e9b76c7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973af931-c81e-4faf-9117-fce46e778304",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebe48c9-e1f1-437f-b9da-86c0797a253a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98e6910a-ab69-47de-b055-4b89eb6cbcac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20acaad2-b9e5-4867-9a7c-60489b0978a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d325fa-770c-4aea-881a-66b244cfa135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e5aab6-1e99-4c03-b281-f40e3fab17f5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9da38a-0f69-4b14-b691-cda53bbd1cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37934f58-bbb3-46d1-8a16-da1992c2a98b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c467224b-5f07-415c-bb94-eb49349a01f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f543f3f-1fbb-4de1-b6c0-47a5477aa4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a55d7b3-7f0c-49d5-aa34-bdff7a56f982",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d110840-6d02-4272-81c0-c414798ecc64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16052cce-ddb3-4b87-8bc8-817ee08fa207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3db6e63-208e-40a6-9578-fd95b57fc824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13bbc089-9a10-4581-ab67-4a5fdfd9ecd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5bfa53-3206-4e26-92f7-ffabed136462",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a57272-c95f-4565-ba5d-197b9a631e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e1d3df-d531-4ce9-bb6f-ccd69888684c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b54aa6-c687-41cf-829e-4572576e113c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f4c5f42-0e58-44f8-8c87-f2b0f9240ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f50b980-a59d-4955-a065-2098704eb1ab",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0f91ad-9ad7-41f9-b419-cd3f9ed1b223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b09f8a-98a5-4c9d-ab28-efc680e2b3d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf8b145-c642-4229-bf0f-ea4885d6ff0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c65f62-4f2c-4f2a-b900-97bba42cb256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4dd1ae9-fdf1-4a5b-bac6-e12fa0213202",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdacf790-e4de-4952-b6cb-bc74d065314a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5087e5-12f6-45ce-8373-a5e6fd6e6deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b154278b-e2d4-492d-9b11-5a98ba0bc03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2fe6939-b7be-4ba9-ac6d-a0ab560093d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd172ef-1f02-40d0-95d9-63dbb4ff29b8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6ddf74-c5c3-4146-84f9-9d6ccc0e9280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70a270b-78d1-4ede-97f7-d92ee7ff4be1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b311ca96-63a5-4112-b746-85665c38f102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b460e18-ad1f-4ab1-bccd-9d6db047d32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e85fe55-6303-420c-b329-265cef9002ac",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0042e2-2be0-49f7-9589-53ef140150f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d158d2-b6b2-4c6d-b9a7-b3b3bb493a2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5ee3eb-fec4-4b31-8f2c-496b56c40745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ed7f2a-41e7-4a00-9dc7-7e0680543447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9220d037-edd6-4f53-bc1f-83c655c8bc71",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c5a7d9-4650-4b0a-a126-7bd10e4670f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da977be9-ed1a-4ed7-aaf0-5d88976b17fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3ed227-0711-4cf2-b039-0ed46c756881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd18243-ddf3-4547-ba93-b17fd5c0f754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52e8079-5782-4823-a43f-caebf261dc0c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e44a703-dc68-4a4e-b569-258e68369d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7725002d-6da9-4833-b0dc-0194a0c5da02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5336d3-dc16-40ea-91e2-5f315a58c975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3c6652-25de-4297-b156-1dfe0c247b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0faa2b-64e8-4d8e-8a51-b4bfcfe093db",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7136570-6a5b-443f-93b9-a7091018145a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3c3fe0-43fc-430d-9b90-a7c31b180f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d8d731-f80d-4b54-957c-bed0b849193a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e9b291d-eb9f-45dc-b28d-59a7d2e0b3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd0315a-37d0-4c96-a4e7-dc03bc62b677",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c078fe-ecbc-4fb5-b231-d4b4350f1af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b303af8d-10c0-492d-a7ce-f8bdfae4192b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53794d0b-6691-425c-83eb-4935ac9a1e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3abd56f6-40d9-4605-9d85-f73bdfa1037e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d65d473-3eb8-48d4-8a66-bb1963f1938c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fdecb5-be57-47d6-a717-85d5fa6bd5cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c928807c-ca14-4e70-9040-f36ebb22c61e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f3934e-5848-404b-89eb-19503b756a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bffce07c-414b-40ca-9795-1765cc2a2c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51bca33d-6679-456b-a880-c7456246d1dd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab486824-7dce-400b-9ce1-91f074360f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e67a38-38ee-45e3-8e5c-11397dc2a4a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce4f2d6-be3d-4aac-b524-6a3ca696bd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24167337-d17e-4f5a-bd17-3d05ca5e2a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d813d72-2a3c-4c39-952e-bfebac9a83d9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca5ae9b-35d4-41b5-bdf8-85fdb7f8c437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4123740b-5689-4d3d-a9ff-09f2c80c46e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4378e0e-11ca-4487-a6c2-007d4147492d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9fa698c-5224-40f5-978d-7490f4d94a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6efd563-122f-4117-95c2-fbe80f59b022",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b833734-8db2-4123-826e-439c526bf5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94220d1-a89d-4009-99bb-f5a3bbe72f12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe46ca6-66f8-4c9c-924c-3193b555c724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46956078-3315-477c-9103-0c6063bb39e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0b2d1a-530e-4bff-8463-f9653f69244a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a993349-7645-4a13-8320-f66fea11a303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50288f8e-c0d7-429a-a6d5-2b9283979206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d790b042-9190-464e-b693-e11b2931653c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c417834-190e-479f-82f3-ce44805836c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9afa4a-17b4-4711-a337-a6505569602c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8b03db-36ab-483a-aaf7-89dd667c50c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b73b79f-d607-4c3f-9aff-096b6fdf1799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f8b82e-c585-44e1-9b2a-ae0881b52cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1581184b-3a1f-4f62-a3ef-bda06c0c48cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44509f24-f044-4b22-af3d-4da680def787",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9716a80-1527-4843-9d2c-83f2180aeb8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b77055-0b93-440b-9dcb-f01b595aa7f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27d706c-f95a-4dd3-b24e-78cc9b012f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7cc111a-3856-4912-98c3-f86389fd99a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed39f9a4-c91a-4488-bbe0-0c7e38b82909",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d462150c-483f-4d47-bfb4-609f38bda710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fafa4336-6c51-453a-9764-b9f69b342ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f522fb-68cd-48ba-bee9-b49bfc3e3649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae5bf8a5-a9c4-4643-bd9b-cf73b46a9b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72902703-dbfc-42c6-90de-bf1b3ab24259",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f4ced0-28fc-40c7-8d5f-7c7bcf9df668",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dff427ce-62ca-41ee-b1ed-6c003b2455a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22f6145-42c7-4811-bda7-62858daecfed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9fad9bc-a1ea-4d18-9095-eea3c81306ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c8c6bb-8e9e-4302-8eb7-976677517524",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04f9190-9732-40a0-8726-1e5afa9592e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "032d19e6-fd76-448e-a006-87e09985eb51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c91eea2-d921-485b-a579-c1dd63b93501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce256a07-83d6-4ebf-895b-cb22dffad7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6bfdae-7b9e-4143-94e0-2c2fc5c8597b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84580d3-e4bb-4f7f-8fbf-898b70c56dc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "609a701e-a62a-4b48-ae11-85d7c550811c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae85eb3e-83ed-451b-86c0-8db1e4414d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d386af20-a616-49d6-b787-790324ee30d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a00641-cc35-4797-b701-ec5e7323362e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a5a222-c117-49f9-aef0-c2121ad69cd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5af217d0-72aa-4f89-86d4-69fae26fbadf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2510e0c7-a843-4648-953b-eefa2bf3b727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e805ec-fc82-47ee-86e6-8c0feb8bbac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f82894-173b-42be-a269-a62b764c4455",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2deafa01-2d39-4dc5-8131-642f8b5add9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdb69d9d-9955-4d5e-bae4-71c773ff6814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bc2b33-d962-439f-81ad-2df480bda47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef4e974-aa0e-4695-a82a-438a3930a238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f964125-122d-4089-83ae-65c2e72a9a51",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f861180f-37e7-4b30-9636-695fbddec845",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3720a0e8-37e9-436f-9062-95c1212d7845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31040565-9279-477a-bed5-b69dc123b883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80816c2c-c8fc-46cb-91d8-6d78f783f43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba238a2f-d891-4156-a882-e8e627126a5b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f01dd25-0a08-483c-8cf8-da756b8905f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1efdeb13-0d69-417c-99b0-bfdad1a5e04b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64574ed-a546-4f45-bcf3-9469b84fb7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19b37b3-35cd-46d7-9d58-2f73cf07ab09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766b890b-ee6e-44d6-b12a-46f16d1fd067",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c30cb57-1331-4a5a-aefb-cf88f79e73e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a47b80c6-5db4-4a4e-9cf3-f053a892effd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f488139e-3bf0-408b-bbf1-86d5a1b40779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206c5e64-64a7-42f9-be50-37c5a8f17193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77e15e5-495f-4c07-91d4-c6f58507c947",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7431557-8518-4f5f-8ee6-d508bb6027f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ff75dbd-0ee0-4296-977b-ba8c3d2a7efd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c44213-672e-47c3-847c-4b1d12fb7ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08e93344-fd19-4aa3-a013-62fbbeddb2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9ac46d-2902-4b66-a3ab-75c0fd284473",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcfe0c2-7abf-4204-bbb8-a0acc8557441",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dd41457-b58f-496e-8cb4-14dfc805693d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "788817f2-de01-493e-a958-a416ab5d93a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd927745-b553-40d2-8ccc-23bc82d297d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e9b17e-4fb7-4df7-bd17-50d7726038c7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c3de34-12a4-4789-ae9b-65bf82493e1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88975163-3aa1-4b6d-9ba8-f031f5945c12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8875e310-9ba1-48a2-93cd-f64c4cdbd6b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f92b1e-9094-45ad-a70c-d66b2dd90059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c80d2f-1e5d-4eef-83a1-de497aa9be3b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350eee55-7de0-4cbc-a56e-147d6cceffd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b26e55f-5fef-45ce-83e0-718ff1cfffda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfff0413-09db-4470-9c8e-31e537bf9808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "191503f3-ffaa-4095-bb2f-b8bec443f72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b587e3b-6881-4c88-ab01-0e1293ba4fbb",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cdbc52-17c1-47b8-a0da-157532878343",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11ab2292-a355-48c7-87a9-de72d73303e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7e00b8-2c67-4c2c-a842-c8dc730a968a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "524ecdda-d2d2-4d73-88f2-6b4247ded114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbc154f-ce97-4648-81e2-3404c53821b3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bced79b-a548-4085-b01d-8aa89378886b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87dad361-6248-4688-9d8c-a9fe461d00fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c271664b-17a6-4378-9f4c-2a3866e1fc41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0379b6d-ac9d-401f-a1e0-121ea2309cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80251d6-fc5c-444d-83e0-0de869b1195a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e0a4dc-4c81-4c77-83b3-d210c809f3d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03bfb613-80d9-4928-994e-654dd75d413f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7d7fb0-50ef-4260-856c-fec6cbd3f6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "697f203a-fc7a-4623-8fb6-dabd1ff88f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcb9d1b-156b-4c08-904e-f069f2ebc510",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42db4b6e-5e6a-4ebd-b27d-ef96a8bc75b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ec978a0-126a-48bb-ac8c-87f66cfc0d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb307da0-6a76-491b-9fef-9973413d599d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f226376-67b0-4e42-94e8-0a9bebb657d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5cbba0-f0e9-4521-8134-533aa05862fc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7959c8b-3f6f-42cd-914a-7a29907dc3a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1901a8f1-e238-4193-8758-0fa4d1aa6842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1ad306-3938-4f4b-9c3c-ff0320077159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5879804-0920-4f0a-b4d0-4f148ca0e2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7d2cb7-ea1a-4683-9cc2-f50f7b6b12ff",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ce4ea6-7ff4-4a2e-9ddc-6e9b2c55c2b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf8a5ca3-b4a3-478a-a3f5-c59df6a399b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56233517-55aa-4af5-bae3-078ae3ac7079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ea0dc5-cc35-480e-a4c0-2113888511f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c87c741-a34a-479e-abf7-a1f665b7405b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa68cc08-6662-4aef-935c-57b29a78bf19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c71766f7-0e5c-4daf-a1c7-fadaa0e949b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e49bd3d-63c2-45ed-8226-41d5342d32fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c63ee0-e9e7-4268-9f15-5462889186b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29dcbfa-4d1a-4e8b-96ef-ecfd14e56319",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e844f5-cb3f-4481-b3f6-fbb32d7966d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7049bd7-35be-41f2-9df3-0befd4332dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c0a6fe-d0b9-44c6-bcc3-f31fc6d754e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d040c4cc-ea86-4c68-b892-d229e2ffd89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41952639-8d9e-4d8d-82e2-345e6185c6d2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d791fcff-8631-4936-9e92-a105384e7bdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe64530f-0ac0-4f19-afa8-9b8da48083fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de438acc-1170-4c0a-9522-35edf6166e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9f6578-8009-41e1-87b9-fe68d265512a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e2236b-5854-4e5a-8729-b83ac7558548",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb8800a-6f02-4c1b-b3ca-f9fc626e940f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eb87256-b124-443e-813f-a8ba24e06d99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "383fcede-af4d-4b0b-9087-46e27ef895c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e008486e-0bd1-4624-890a-babc3209f678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c997c23-bd9f-4adc-a619-0c78f1fcf0c8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0141c0-9785-4ad9-8672-2890084191fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0276a6de-015b-4175-9f42-6689931b3c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bfa34b-b9d7-45c9-a21d-4a1370bed778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ca079f-b3c8-4600-a6fa-656291978fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcf97be-eec3-4567-aced-f4c5e3009c99",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df92b394-902f-47b0-bb39-da91d5d79251",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bfbcc46-fcb3-4363-aff5-b94df1260097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0955db10-0128-4621-b60b-19b440909578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4cdc27-6369-41e4-8955-02c763f107b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db14a614-8362-4287-bc6d-6d35d58fa045",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e324a816-0dfb-43bc-a16d-fc586ec58585",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3a7d06d-e5bd-4278-b3cd-a2de9d13941d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e06044f-45d8-4187-a803-5896135a59c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828e3904-1b37-41ef-8e9d-63e7a7bbd9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14be0b9d-c006-4cfb-95f7-77afbbe33f22",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30cf70a-82ae-4a17-9282-c8cca791fd5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89e252b5-478b-475a-a26e-3dc13f7004b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14880298-cf59-4444-a682-cf8039506a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f892756a-a07f-4fc6-a072-1898e3c2b5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0e4a13-f0fd-45a8-934a-665237fb6792",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f937ddf-26aa-47ea-bed2-d255ec309c47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "449fc0bd-db92-4d75-b131-1b69f1008f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ecd34e-d6a7-4115-b8b6-626d9d7cebf1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5429823d-0dbb-4c8e-941f-36cd46d042fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83258b8-f9b6-4228-b853-f368193d3b39",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3632a9f5-47bd-463d-966e-df3e89ff8649",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53081592-e192-4017-a981-c793cbbdc9e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97e322c-595b-4b42-a6d3-59187ea49784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd2dc8b-db2d-4b00-b09f-773b203f72f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebd2c1a-ced9-4640-8fad-18ec80e9f917",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d979dbe3-e2c7-469c-8ae4-21505da67d12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcd0579a-5e2e-45ec-a326-977caf5c6511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfe1e14-7721-4938-9181-e241ae825ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "190d1e1a-eb66-4d92-b601-4b06c2083e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82e27ac-05c7-4b28-abb7-4a8c96d107be",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360972d7-86d4-4251-8f50-058f8bb6c1d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5587ca83-d9bb-403a-ad0e-cf77550294d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a48df3d-707d-47c9-a827-1b4f43234e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad705850-ad27-403d-8f77-d36c99c19809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d23a5e-15a6-4b49-9a09-4d4946129915",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfeb98c4-ab15-45ea-9890-1bf69529f348",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "270b88d4-62ca-4010-8dc1-70a35e23dc04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b1d73c-5e6c-4870-b3b9-ae41f2a0b1da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1472a0b0-9243-4608-9cb5-0baa2abc46c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a720f76e-ea6e-473b-a1b0-3a855cf8f616",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eec5067-1d4b-4af1-a102-65397b78c1f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e6efcc8-e7cd-44f4-8bdf-c18d5cf4624c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cbfc7c-5c1d-4e7d-a3af-f1bcbcdc4312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c02da5-acdc-4c71-8f21-b3e56940cefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c92d8b-384d-4b1e-be86-0d6560f1e7d3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb42d7e4-8623-4cac-8ea1-fac7712533a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc77f0b9-4c71-4e24-a503-4249e9a34844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5402ed-12c6-4a4f-ab6d-3fb08201e5f4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93884fa7-ec6a-4168-bd0c-3f72653a1d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6babb7-70bf-41c6-afd9-3ce125c0421a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774ae2d1-f5c8-4f9b-9188-172e12b9ff54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3db4917f-14c4-4ce6-82df-1eb5eaf0dee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4387973-54b9-47cd-bdd6-e574159cfc21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15fd0d9-7e80-4421-b51e-3037985a383c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f568edbc-4d22-469b-85be-788a14219e3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59601c0c-fad7-41de-9a68-3dfd117efc8c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "deae676c-e218-4544-a66f-d97a45aede9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c5092075-b876-4a5e-8403-65ac3b792c32"
                    }
                  }
                ]
              },
              {
                "id": "0123bcf5-d2f9-48ca-b6aa-c94a77f2e636",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65e11784-b719-423a-b541-96c1a57e6159",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29d4be0-092b-463d-8f83-cb87144162a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1ca13586-6935-40fe-838c-230600863acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff82ae4-1034-4f16-ab45-841c11cb29df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74a6fe13-d314-41d3-b8d5-a7a5cf3d8745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88dede9-e991-47d8-970d-b64e6df6b029",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5ee4de-bd92-4534-b439-f5156bdb60f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2d129910-e357-43e5-8944-d516f58968dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76344fed-2c18-4be4-9d80-872e204862d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a41cebb1-47ac-4977-8554-10343487d65c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a30d1930-453c-4fed-b5f0-43aa53376d6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8076f06-2866-4e5c-8283-1b5fbeab68ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73912be2-64f4-42b3-a782-e61b9dedbf1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "750baf67-c9ed-468d-b2da-4126f89da171"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "b6ca21e3-bba2-4129-ad65-97b8e675a706",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e7806ddb-eefa-4309-8fe6-54c062150218",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "236e50dc-c2ad-469a-9b77-81646612b594",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92e4c84d-7a77-4e02-80f1-5987a4db4bf2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8877b725-2081-453b-99ae-f4cc8153d836",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bec2644-3e93-4adb-9fb5-93d7ade954bf"
                    }
                  }
                ]
              },
              {
                "id": "be8cf052-581e-40b0-88eb-2cac16ab98a4",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82227077-6f46-43f9-9141-9021b8d7b17b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a829734b-2bed-4520-8b1e-d3d6fb25d2cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79f1b753-16a2-41ff-81d4-4ba03484a17d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "600a10f6-379f-41b7-9273-f7bd8884f1e0"
                    }
                  }
                ]
              },
              {
                "id": "3b5dcc0a-68f7-480a-90ab-5f69e2a61b61",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "447b0a23-5b1d-4ac7-84a9-5923a4f2d2d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a2d0244-8d9f-4e95-a9bb-a77f5bdea7ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55e004ba-dce8-4a49-a1a6-2b820f524880",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a062b913-0398-41c0-ad55-e08efe2befc9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "204ed84e-3f07-44f5-aa44-4128834ed7ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c2a7b760-b723-469b-9667-eb959e4fc07c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "406672c7-a111-4464-add4-b0725368b247",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0fb2d441-c90a-4066-bd9c-d13202334e15"
            }
          }
        ]
      },
      {
        "id": "573c627e-a35a-4b53-a397-125f9a4d3439",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c30bca50-affa-49be-85bd-5c3652f5fe7c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e60032c7-ee27-471e-8664-26682a4e309e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eff05aec-0054-4176-8bbc-a3d030319e43",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653e2211-60bc-4b27-9a87-a505453246ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9088b5ee-590d-486a-b924-dadba6c575bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55be955-4676-4616-8c30-0e8623d30063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d486f19-3253-447d-bb5c-85040dfe3c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3f1004-b2fc-40c3-a78a-ce8b6e9a3418",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217f0395-1627-4ef5-8f35-34cb3060ffbd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "7b832fe1-e327-4e62-8ade-3dfc4f115a02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9541ce9-e570-431d-99ab-e813546eeb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78d55c05-abd5-468d-8f00-7fd45678e502"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c56b6e30-2dca-41d3-a579-ec3cf904f677",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d22c020a-c7ad-4e41-96ca-c72d10a7af57"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6be68871-7acb-46c2-9930-7c8b3a1824cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "298ba68d-dc03-45d4-9c0c-eb7bfa68db1a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "263e8508-d027-4a4d-8f3e-6bd98f21c5ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope",
                "utils(pm).getAccessToken('submit:presentations');",
                ""
              ],
              "_lastExecutionId": "7fc45556-ac32-47cc-8961-9a13b3a22b93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ed5cf99-3d26-4dae-b537-2101ee7cac2e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4bbc1089-7721-490c-ad87-0b094ac654b5"
            }
          }
        ]
      },
      {
        "id": "fa0bf620-748a-402b-8dc8-3bce94929452",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "27742798-4a28-4b6d-a6a1-cb27cb827180",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b6dbf012-78e6-4fea-b451-3eb247d9f671",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "da7101c7-ca85-41db-b9ac-df2aa77cf58c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d44c98c-7fd2-4b29-ad89-7afdbd7b1901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a0be41-ce83-462d-8b07-83269f79f85d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e459994-5216-423d-be79-ed64679ba1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "676e7b78-2922-4e65-9159-08dd957324cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cffe19-ca9c-49ec-bfed-a2ec2109f1b1",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0021b4c6-222f-4603-b46f-6541a6f6f2cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "aa130685-1521-425b-a04d-ebe1ca8a1209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "441682be-ad04-4c61-9cf5-8b3a0a5a1dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "017ee241-fee1-4aae-b96d-be1bbf99a08e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f50b1807-0a40-463d-9241-a622a9b69c8c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a739a9d-c2b8-4385-9c37-b8fb18ab2bc3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08f69e97-23aa-42ff-bad8-d00d47e9e92c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "caaf8de0-1739-4ba7-93e1-17c3f39e6eab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aed5f107-0a0f-45ea-b44a-7de9ec3cd913",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope",
                "utils(pm).getAccessToken('prove:presentations');"
              ],
              "_lastExecutionId": "d850cd47-d784-45af-b63d-f5c78707ec9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13076c98-5088-4c60-aa7e-f65c2aa631d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f691382-3b6b-46ad-9bee-9d79c9d4e146"
            }
          }
        ]
      },
      {
        "id": "575c3c18-25a5-467e-aa5d-51fba99bad88",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "88a73ebd-35ae-454f-8164-bb2341a7e412",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a0d5ddc-8325-4b23-b58d-2c61dfdadb22",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32d2a052-153a-4073-9269-2bffd7aaef88",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed7b62b-107c-476a-beae-a5275f10a645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "032b3965-5f00-4afc-be12-cc22508332a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b240cf20-fde8-48bf-99ba-77069a4946fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "122c9816-7ca7-4438-a06d-e90f6e2caf6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311e1877-f5c7-47c6-ab17-47ae48c51de5",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ef80f1-9598-4e30-a59c-9ec8af93e633",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "179d83b8-b1d5-4f84-8790-ae2846f04b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edf283b-3a90-4c5d-b73d-982303ab217a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a77b3b2f-9849-4e05-84c3-ae29c0e1ffcd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a360234d-f0fb-4d09-9c43-654dd1f76255",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6aaab610-8a2c-4083-ac43-dc54fab819d1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aec406ed-0963-4d3d-9380-44ef57457fd6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c61d4a17-139d-466b-879f-ac13cd241074"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "935a6d04-1405-4b59-8191-4dbc2ff8c1d2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope",
                "utils(pm).getAccessToken('verify:presentations');"
              ],
              "_lastExecutionId": "ada0e383-86c7-4fee-b77c-1b51aa5a0b31"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b034edfb-b64c-40a7-8658-322bf0784866",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1595560-3d11-4baa-a73c-86830743a897"
            }
          }
        ]
      },
      {
        "id": "4f0cae7d-516e-40f1-92a5-71fd25ad7f7f",
        "name": "Presentations - Notify",
        "item": [],
        "event": []
      },
      {
        "id": "242006df-05df-449b-b4b5-8f665c433116",
        "name": "Presentations - Submit",
        "item": [],
        "event": []
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1227,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 165,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 320,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 619,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 608,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 206.95757575757577,
      "responseMin": 31,
      "responseMax": 1614,
      "responseSd": 274.38657426991153,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1665104869247,
      "completed": 1665104910241
    },
    "executions": [
      {
        "id": "baebe44b-7d9d-4683-93e8-79356e034853",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 157,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cbcbde69-c102-4ec9-ab77-482322eaf1c8",
          "httpRequestId": "d3d60842-3ed8-4310-a972-f2f83a6dd76e"
        },
        "item": {
          "id": "baebe44b-7d9d-4683-93e8-79356e034853",
          "name": "did_json"
        },
        "response": {
          "id": "ef55e2ab-9cec-4f19-8bff-81feac3eb42e",
          "status": "OK",
          "code": 200,
          "responseTime": 881,
          "responseSize": 1369
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7078545e-7c0f-4f1b-8e88-fd58414a0b08",
        "cursor": {
          "ref": "445d524b-5320-4aef-850f-9cca78319de2",
          "length": 157,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dcfbdca2-f148-4c91-b9ee-28223d9bc8db"
        },
        "item": {
          "id": "7078545e-7c0f-4f1b-8e88-fd58414a0b08",
          "name": "did:invalid"
        },
        "response": {
          "id": "e15da04f-8291-4554-af72-7de2cd923789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7078545e-7c0f-4f1b-8e88-fd58414a0b08",
        "cursor": {
          "ref": "445d524b-5320-4aef-850f-9cca78319de2",
          "length": 157,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dcfbdca2-f148-4c91-b9ee-28223d9bc8db"
        },
        "item": {
          "id": "7078545e-7c0f-4f1b-8e88-fd58414a0b08",
          "name": "did:invalid"
        },
        "response": {
          "id": "e15da04f-8291-4554-af72-7de2cd923789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336f701d-586e-490f-a1f0-d6164f6f75c5",
        "cursor": {
          "ref": "447ef481-57e7-40d8-950f-6bb85a3c5c8a",
          "length": 157,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a20768eb-8e80-4dc2-a353-ee2c8bbf46d0"
        },
        "item": {
          "id": "336f701d-586e-490f-a1f0-d6164f6f75c5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0cb155c9-895d-4d29-b670-edd78ea16e74",
          "status": "Not Found",
          "code": 404,
          "responseTime": 501,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caaf7b8a-0870-47b4-bff6-caea484ebdd6",
        "cursor": {
          "ref": "53c49593-21ea-494b-8164-56fbb551ac82",
          "length": 157,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "22fb1f83-0f0f-4d57-b365-0267d29ab0c8"
        },
        "item": {
          "id": "caaf7b8a-0870-47b4-bff6-caea484ebdd6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d45d011d-ed21-4a8f-9b91-9e53f40b59c6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 54,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb7d61a-4853-4f3b-a23e-21a92fc982a9",
        "cursor": {
          "ref": "7e59cf1f-6ff2-4d99-8bd9-62037b670200",
          "length": 157,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f941f9b0-1acc-478e-8b14-7e9894a92c7c"
        },
        "item": {
          "id": "3cb7d61a-4853-4f3b-a23e-21a92fc982a9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "eae61b02-5048-43d5-a2de-859b7fe84785",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 97,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ebb8cc-f13c-4977-b516-3953e27f2c6e",
        "cursor": {
          "ref": "09b1dfb3-9b74-48e5-bc3b-6bba9faa3221",
          "length": 157,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "646eb640-06c5-4bcb-8469-b35e8d8919fb"
        },
        "item": {
          "id": "70ebb8cc-f13c-4977-b516-3953e27f2c6e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f94c5d02-87ca-4d5a-a839-00a620979940",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 146,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ebb8cc-f13c-4977-b516-3953e27f2c6e",
        "cursor": {
          "ref": "09b1dfb3-9b74-48e5-bc3b-6bba9faa3221",
          "length": 157,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "646eb640-06c5-4bcb-8469-b35e8d8919fb"
        },
        "item": {
          "id": "70ebb8cc-f13c-4977-b516-3953e27f2c6e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f94c5d02-87ca-4d5a-a839-00a620979940",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 146,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318275d6-6eb7-43e3-a5ec-e55b2c121ed0",
        "cursor": {
          "ref": "88717616-74b2-4963-8ca6-1072ce1ebeb8",
          "length": 157,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "14c1392d-bde5-471e-b618-790b214131a6"
        },
        "item": {
          "id": "318275d6-6eb7-43e3-a5ec-e55b2c121ed0",
          "name": "identifiers"
        },
        "response": {
          "id": "7c9d82af-2d35-4a66-be27-ed5a12664470",
          "status": "OK",
          "code": 200,
          "responseTime": 771,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d14d4cc-972d-482d-8275-69c06d73c0d7",
        "cursor": {
          "ref": "00597106-616b-4f31-9a07-6946bde3b781",
          "length": 157,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "85d8cac1-32cf-42b7-a8b4-17b1c29e6336"
        },
        "item": {
          "id": "1d14d4cc-972d-482d-8275-69c06d73c0d7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3d688cd1-a653-43e9-b462-d85a9fd09a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d14d4cc-972d-482d-8275-69c06d73c0d7",
        "cursor": {
          "ref": "00597106-616b-4f31-9a07-6946bde3b781",
          "length": 157,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "85d8cac1-32cf-42b7-a8b4-17b1c29e6336"
        },
        "item": {
          "id": "1d14d4cc-972d-482d-8275-69c06d73c0d7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3d688cd1-a653-43e9-b462-d85a9fd09a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0628ee29-980b-41c0-a92d-3a2f1bf64a4d",
        "cursor": {
          "ref": "efbc98e0-99b2-41e2-a7b9-abfc400700f5",
          "length": 157,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3eb6f4c0-5668-428e-ab77-73131461fbcb"
        },
        "item": {
          "id": "0628ee29-980b-41c0-a92d-3a2f1bf64a4d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "fe541fb9-2238-432f-a2e8-3b94293425d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dd68ea-b491-45ef-8b8e-054755f1b027",
        "cursor": {
          "ref": "96276108-9840-40c1-b9b0-96beeba3355f",
          "length": 157,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "638797ed-5d5b-42b9-a3ec-d002c2037578"
        },
        "item": {
          "id": "27dd68ea-b491-45ef-8b8e-054755f1b027",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "0ca8ee0c-50e6-456e-a934-099e3cfb30ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3c47e7-ea61-404b-a85f-1565eb4fa88f",
        "cursor": {
          "ref": "2ca9a252-6a0e-4a76-9bfe-0844b9976691",
          "length": 157,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "245cf65e-71cd-48e5-94a8-3e389c742c28"
        },
        "item": {
          "id": "0e3c47e7-ea61-404b-a85f-1565eb4fa88f",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "f9305e96-e009-41c8-969a-b2dfd6f8f7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c427da9-4475-40ec-ae94-f2542117bf2b",
        "cursor": {
          "ref": "56e80a31-cc02-444f-9752-cad4ade0331a",
          "length": 157,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1d1c266d-1c69-4762-8c88-b498c48b1536"
        },
        "item": {
          "id": "8c427da9-4475-40ec-ae94-f2542117bf2b",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "6f7e0d3f-5186-4a25-a52d-ab67696ec6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0f8fed-40d8-439e-868a-bcd646da549c",
        "cursor": {
          "ref": "2ffae15b-138b-42ea-85b4-d11d13667108",
          "length": 157,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "63eca017-885a-464d-8b96-8ac6372fdac2"
        },
        "item": {
          "id": "0d0f8fed-40d8-439e-868a-bcd646da549c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "75998399-2286-467d-8ae7-db8905676298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784aefe5-3ffa-4ce9-bf5a-ca92f6894c97",
        "cursor": {
          "ref": "0e7d4c2c-edb3-493f-ad4a-50c81e19a288",
          "length": 157,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a70b3383-906e-4f5f-af9f-3bf81234814c"
        },
        "item": {
          "id": "784aefe5-3ffa-4ce9-bf5a-ca92f6894c97",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "cbc22b75-d853-4bc9-9a8e-45c8adeb38e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a70d61c-000b-4428-8aeb-d3f75d1b451d",
        "cursor": {
          "ref": "3221ebef-9507-4083-a75d-7d3679efc8d6",
          "length": 157,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5958524c-37cc-4482-bb31-ebcc77d6d63f"
        },
        "item": {
          "id": "6a70d61c-000b-4428-8aeb-d3f75d1b451d",
          "name": "credentials_issue:credential.type.members:missing"
        },
        "response": {
          "id": "0c2bd30d-bb0e-4579-b0b5-7778c8a41900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fa64d2-0b28-4943-b0ee-60c7a35fc52b",
        "cursor": {
          "ref": "09349829-2b4b-40bc-93d5-a5000b1f7bea",
          "length": 157,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "bf40eef1-89b5-4d11-8782-8756ce2b0f89"
        },
        "item": {
          "id": "17fa64d2-0b28-4943-b0ee-60c7a35fc52b",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "3305fce6-1a85-489e-98a9-be8edae618d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967614dc-bd30-40ee-95e0-deaf2c0052f4",
        "cursor": {
          "ref": "07118018-3a5c-4c5c-9fd9-5a8d5a0e3f01",
          "length": 157,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3ab47052-8ebc-4598-84ef-3d4da9e90d3d"
        },
        "item": {
          "id": "967614dc-bd30-40ee-95e0-deaf2c0052f4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6d8e4267-c535-4a9c-a572-7a5a085291c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c01ed01-7d3b-4e1a-898a-fbbde94ba5c1",
        "cursor": {
          "ref": "57731793-e75a-4d00-988a-d16358d43b31",
          "length": 157,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "74389de0-b767-4424-9f24-9bff2681318b"
        },
        "item": {
          "id": "0c01ed01-7d3b-4e1a-898a-fbbde94ba5c1",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "9821193a-1d42-45c4-b8ee-1c56d59214d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db09f8c-1be9-4353-b5cd-3625abf6f04f",
        "cursor": {
          "ref": "c33b99f7-92fb-4fb5-9407-eb2c62477ac7",
          "length": 157,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3a317d2c-cbb4-4946-92b4-746496c0c7d9"
        },
        "item": {
          "id": "5db09f8c-1be9-4353-b5cd-3625abf6f04f",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "a82ef831-cc2c-45ba-b1ac-066a247a09e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef563a1-8e33-4ec2-88be-4d907aa60760",
        "cursor": {
          "ref": "169bda28-ffc7-4394-b781-ec5173b017fa",
          "length": 157,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9520bfab-4755-4482-9516-b5fd565c9f64"
        },
        "item": {
          "id": "1ef563a1-8e33-4ec2-88be-4d907aa60760",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a7a5cdbf-2f7e-42c5-ac7d-0da9a71952bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c776e3e-65bc-4f63-9ed1-710571725fff",
        "cursor": {
          "ref": "2966d4c0-b0d4-4f1d-834b-636e9c3190a3",
          "length": 157,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fcb6a044-1f80-43ae-a363-01f241ae5f28"
        },
        "item": {
          "id": "4c776e3e-65bc-4f63-9ed1-710571725fff",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2a5b2dde-26a2-4cd3-ae52-67e925159228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1b2ad2-baa2-4a7f-b4cb-5e8c4d4a9b2d",
        "cursor": {
          "ref": "e1b272ed-d85e-4746-adfc-118525e33f6f",
          "length": 157,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "22bc5691-8b1f-48fb-8311-fc3f95fa86eb"
        },
        "item": {
          "id": "9d1b2ad2-baa2-4a7f-b4cb-5e8c4d4a9b2d",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "337dad3c-a249-4e2e-b347-585996f1b6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7b4702-e73c-45a9-9964-cc7d3442b78f",
        "cursor": {
          "ref": "62fee7b2-859a-4c13-bf11-b7455828448a",
          "length": 157,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "039fda0a-58ab-4af2-92f0-e1f2c3884d53"
        },
        "item": {
          "id": "7d7b4702-e73c-45a9-9964-cc7d3442b78f",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "8d11cbd7-dee3-4a0a-81c5-26bd8694d01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d3b3fe-77a2-4384-9b10-73096f64e6f6",
        "cursor": {
          "ref": "64d72b18-0bf8-4d13-b6ab-ee880c9051f9",
          "length": 157,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "da2989dd-a4be-4bc7-9d04-ac4bebe9a449"
        },
        "item": {
          "id": "98d3b3fe-77a2-4384-9b10-73096f64e6f6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "fc7d2c91-c19d-49c5-b6b3-cd7c79655d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d784b9-9658-448f-b657-efe33203d54e",
        "cursor": {
          "ref": "565c70a5-bf39-492a-b4e8-359d34245aa0",
          "length": 157,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "92ab4142-6c22-490f-b725-120555782143"
        },
        "item": {
          "id": "a5d784b9-9658-448f-b657-efe33203d54e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9e0eb8a0-6656-44dd-9b2d-9599c83f3cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead9803c-7535-4fef-a1b0-79f2b2309c09",
        "cursor": {
          "ref": "286ab793-af1b-4630-9bc5-3d44b071c52a",
          "length": 157,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c3eed783-cc67-4490-86e1-82886616e51c"
        },
        "item": {
          "id": "ead9803c-7535-4fef-a1b0-79f2b2309c09",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "689c5def-8418-47f3-aebc-4a98fd5b6263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718840b4-c767-4c11-b5ed-6b02be59eec3",
        "cursor": {
          "ref": "56e1b7ad-1a14-4f91-a9ce-9a73d2511cd3",
          "length": 157,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "39ed3772-9c24-41a4-8265-4cc7d238b0dd"
        },
        "item": {
          "id": "718840b4-c767-4c11-b5ed-6b02be59eec3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e8c02993-39c8-4d7c-b22b-47e2ca4ff832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318ff0e1-c509-4900-8898-5c17d96b7f1a",
        "cursor": {
          "ref": "062325b1-30e6-45b6-bfdd-8754ec48ddf6",
          "length": 157,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a26ecaff-3ccf-4348-a22c-3abfcc752f93"
        },
        "item": {
          "id": "318ff0e1-c509-4900-8898-5c17d96b7f1a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d0ff51eb-e9cd-4a7d-9890-281c8f5fd6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0d96a0-e01a-4a55-990b-b591b5a2dc03",
        "cursor": {
          "ref": "9f6020e4-3ccc-46a1-b6a4-129e2490b609",
          "length": 157,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "aa582cbe-689d-4cbb-9afc-bac0703b2e3c"
        },
        "item": {
          "id": "de0d96a0-e01a-4a55-990b-b591b5a2dc03",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "8f3a03ca-7bfd-4c9b-8504-11451813c4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6859f87-d2b2-4ff0-9a0f-887601132594",
        "cursor": {
          "ref": "2e3762e7-41b4-48c5-89da-d08e1b08d866",
          "length": 157,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6b4dd776-e828-4068-9f00-7d2fb771e3b8"
        },
        "item": {
          "id": "b6859f87-d2b2-4ff0-9a0f-887601132594",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "a855aa16-6bbd-4d31-99eb-8b88e962ac2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897b8252-a248-4217-9dda-680285737981",
        "cursor": {
          "ref": "c2c8bba5-66c5-4f77-914e-00709c654b34",
          "length": 157,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0e544b0d-a88f-4631-ad72-93faa08ab288"
        },
        "item": {
          "id": "897b8252-a248-4217-9dda-680285737981",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "bdc4c932-e3cd-4cec-bdd0-c8e92a52a975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139859a7-bf76-497e-b45d-41317fd00e26",
        "cursor": {
          "ref": "cdb3a4e2-a804-4cd9-b9b6-ff17dcea6bde",
          "length": 157,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7bec76d1-77e7-4c45-99ba-da511dc54f79"
        },
        "item": {
          "id": "139859a7-bf76-497e-b45d-41317fd00e26",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "adbca7bb-b645-4b90-bd60-8523facb96a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fc9b0e-eb35-4794-9897-ee79ab049408",
        "cursor": {
          "ref": "4ee55722-dfd1-4940-a724-c716327eea26",
          "length": 157,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ce7d7f37-dadf-407e-98ac-750d3eed9922"
        },
        "item": {
          "id": "74fc9b0e-eb35-4794-9897-ee79ab049408",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "360b30b1-7e4d-44b0-adf5-de894e0fb5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43029b8a-7124-4d7a-bb6f-2237acc6e802",
        "cursor": {
          "ref": "2558a5b2-83e1-4079-a405-6c0f633d2a28",
          "length": 157,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "93af1209-8152-48f3-a167-d5478d026796"
        },
        "item": {
          "id": "43029b8a-7124-4d7a-bb6f-2237acc6e802",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "384c64a0-801d-412d-997b-e4c8be496254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd48b72-4d8c-4d57-9f70-f8217a2c8c07",
        "cursor": {
          "ref": "b6f5f96c-13ba-435a-999d-ede9909bd36c",
          "length": 157,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "dfe6c057-2678-4d29-b540-137a4868aaa2"
        },
        "item": {
          "id": "bbd48b72-4d8c-4d57-9f70-f8217a2c8c07",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "39ca6752-e492-4266-82e1-3377eeebf453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bccd9aa-033f-4971-b42e-cf15a07462a0",
        "cursor": {
          "ref": "8340a651-beb9-4b20-bcb6-dce83d077bd9",
          "length": 157,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "48e77eec-5e27-483a-bfad-48f53b8e4e68"
        },
        "item": {
          "id": "5bccd9aa-033f-4971-b42e-cf15a07462a0",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "8628359f-b182-4f79-a6d6-46ed01917659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa78946-0b2e-4177-a150-59d67e9ca9c9",
        "cursor": {
          "ref": "072a92a3-0cc8-467d-82a8-d0a36800ce5e",
          "length": 157,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f105dc88-c5b7-4943-84fb-d5b7e05df24b"
        },
        "item": {
          "id": "6fa78946-0b2e-4177-a150-59d67e9ca9c9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9cc3d89a-1570-47bc-87d6-5022f0c47977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35602f27-950f-4173-b763-bec0075b0b47",
        "cursor": {
          "ref": "dc13f12c-95ab-48f8-9be3-4c628c98b0b4",
          "length": 157,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1828cc3d-5315-4574-8265-20b67eff537f"
        },
        "item": {
          "id": "35602f27-950f-4173-b763-bec0075b0b47",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "438a7ea4-39ca-404f-a225-48c0883e0fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc40a8a7-a2b0-44f9-980a-6cb3689156d2",
        "cursor": {
          "ref": "91879c2f-d4c9-41c3-862e-fff0457903f4",
          "length": 157,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "29d58af8-0f16-49fc-9ad5-a92c6483ce45"
        },
        "item": {
          "id": "cc40a8a7-a2b0-44f9-980a-6cb3689156d2",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "a290320c-565f-44d9-bfe4-d527a81622ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b164d671-c3a9-4d05-bd18-96f9071ca6ac",
        "cursor": {
          "ref": "ba064907-f59f-4728-b8eb-85bb9def79fa",
          "length": 157,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e66850b5-3a49-48ae-a9e3-684793613835"
        },
        "item": {
          "id": "b164d671-c3a9-4d05-bd18-96f9071ca6ac",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "dd6dc67a-4fbf-4ea5-85b7-1dbdcf77f034",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6c73ba-e49d-43f1-b01d-ed0660b9f2c5",
        "cursor": {
          "ref": "c23255a6-f31e-4e47-b481-a4c526afc7a7",
          "length": 157,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7f44fb59-1c07-4d4b-b04e-2878de77eaaf"
        },
        "item": {
          "id": "1c6c73ba-e49d-43f1-b01d-ed0660b9f2c5",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "01967c4d-54c1-4599-ae1b-c66d39b542a3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 42,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c1e2e0-5f4a-455c-8c6c-b95e9d4337cc",
        "cursor": {
          "ref": "3a0bab12-da9f-4f70-9141-98e924f579ad",
          "length": 157,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8d4de091-4edc-499a-8675-58085cfd9367"
        },
        "item": {
          "id": "e2c1e2e0-5f4a-455c-8c6c-b95e9d4337cc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5aec6bff-68e0-4572-b664-a5a21732818d",
          "status": "Created",
          "code": 201,
          "responseTime": 472,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "expected 'did:web:dev.vc.stg.mesur.io:v1' to equal undefined",
              "stack": "AssertionError: expected 'did:web:dev.vc.stg.mesur.io:v1' to equal undefined\n   at Object.eval sandbox-script.js:3:42)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5e6020-29ef-4c5d-9eda-1003995528d5",
        "cursor": {
          "ref": "e58abd06-f754-4ee3-8e4e-0fef47c01169",
          "length": 157,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e6c26ced-88db-47ee-ab08-a21d9c045626"
        },
        "item": {
          "id": "4a5e6020-29ef-4c5d-9eda-1003995528d5",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "b7e01296-a253-44d1-a5a5-a9b46d8e9784",
          "status": "Created",
          "code": 201,
          "responseTime": 614,
          "responseSize": 591
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d65735b-85b0-4c35-9c1f-b93ee5907ea8",
        "cursor": {
          "ref": "77879bf2-d9d2-4a2a-8494-98d56a82370f",
          "length": 157,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c73022fe-f8c4-48f2-9c67-af4504275636"
        },
        "item": {
          "id": "7d65735b-85b0-4c35-9c1f-b93ee5907ea8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "eb2c560c-c6ed-4227-b650-ea4ad43c03eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:44)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:44)"
            }
          }
        ]
      },
      {
        "id": "19ec729b-4f2d-4d9a-a074-c6be4687342f",
        "cursor": {
          "ref": "e731a4f3-c181-43ac-b558-2aaa4a3d873c",
          "length": 157,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "452a6d42-6bb2-42bd-a408-6ca591251115"
        },
        "item": {
          "id": "19ec729b-4f2d-4d9a-a074-c6be4687342f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "634c733f-0307-4fd1-ac97-c621fb1fd2b5",
          "status": "Created",
          "code": 201,
          "responseTime": 553,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09a2363-bb9c-4244-82ad-f6b6c0b1fdcd",
        "cursor": {
          "ref": "8a654a75-15e0-4940-b372-86ed0bb3296c",
          "length": 157,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5eac2606-90a4-4b6f-96ed-8be29e56d8e2"
        },
        "item": {
          "id": "c09a2363-bb9c-4244-82ad-f6b6c0b1fdcd",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "766a7fa0-a4d9-4c11-ad91-73aa931f66bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "677ce03c-4236-42e4-ba3f-eb8564cae33e",
        "cursor": {
          "ref": "9cf06b36-2c8d-4d13-b0e5-e2c34c229ca9",
          "length": 157,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "36ec01d7-2fef-4b7e-bd3b-ab6abe86342d"
        },
        "item": {
          "id": "677ce03c-4236-42e4-ba3f-eb8564cae33e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "755e97c7-2092-43ce-b1f6-4238297f6e3f",
          "status": "Created",
          "code": 201,
          "responseTime": 612,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a26722-772a-4ae2-824a-5b0b42e61346",
        "cursor": {
          "ref": "56c30f18-b271-4d44-81cf-1b2f46b23ea3",
          "length": 157,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "011b14da-9ded-438c-a124-e3adb515233e"
        },
        "item": {
          "id": "57a26722-772a-4ae2-824a-5b0b42e61346",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "54dd5495-0aed-4001-b3f8-35e89d680fb4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a26722-772a-4ae2-824a-5b0b42e61346",
        "cursor": {
          "ref": "56c30f18-b271-4d44-81cf-1b2f46b23ea3",
          "length": 157,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "011b14da-9ded-438c-a124-e3adb515233e"
        },
        "item": {
          "id": "57a26722-772a-4ae2-824a-5b0b42e61346",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "54dd5495-0aed-4001-b3f8-35e89d680fb4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed5ad7c-8284-4b47-b7db-4c663b51c0f3",
        "cursor": {
          "ref": "97cfb36e-a09e-47b1-8412-38e13572c06d",
          "length": 157,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "082ef8ac-edbc-4024-a742-ee5d75dbfe5d"
        },
        "item": {
          "id": "aed5ad7c-8284-4b47-b7db-4c663b51c0f3",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "a4731a4f-6456-4ef3-8318-065da5b58930",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 38,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73881f48-0420-436d-a563-45ee6c1f0f6a",
        "cursor": {
          "ref": "08ad3125-64d2-4666-bc0a-dbd8c85e2c3b",
          "length": 157,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "df77b37b-3328-4878-bc59-28104bfd612e"
        },
        "item": {
          "id": "73881f48-0420-436d-a563-45ee6c1f0f6a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ba685a6f-8fe3-4aaf-a150-8f516326dae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73881f48-0420-436d-a563-45ee6c1f0f6a",
        "cursor": {
          "ref": "08ad3125-64d2-4666-bc0a-dbd8c85e2c3b",
          "length": 157,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "df77b37b-3328-4878-bc59-28104bfd612e"
        },
        "item": {
          "id": "73881f48-0420-436d-a563-45ee6c1f0f6a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ba685a6f-8fe3-4aaf-a150-8f516326dae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6b3cd6-4677-4701-9a4e-64c48bcf3cc3",
        "cursor": {
          "ref": "95195df9-3bf0-466b-97b2-e69cc6f68311",
          "length": 157,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "216bedc0-c63b-4473-9127-373617bbabe1"
        },
        "item": {
          "id": "7e6b3cd6-4677-4701-9a4e-64c48bcf3cc3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b4bed19e-7348-4a89-819a-f0c4310a9263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8aa4b4-5fd9-4877-9a3e-9b40447303f2",
        "cursor": {
          "ref": "c59f05a1-d67a-44fd-8dc5-21b99d3c53d7",
          "length": 157,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7dc7fbac-bfcf-4409-9843-a835f342c9e2"
        },
        "item": {
          "id": "ea8aa4b4-5fd9-4877-9a3e-9b40447303f2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f696e2e1-d8b0-47aa-844c-be520ad6c5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc7b286-fdbb-4751-84c4-bddbf3811008",
        "cursor": {
          "ref": "7e91b033-5178-4ccb-b4ab-cf2f19bba2b6",
          "length": 157,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "112e1efd-d6aa-444c-a104-419efc31b78e"
        },
        "item": {
          "id": "8bc7b286-fdbb-4751-84c4-bddbf3811008",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4adbd422-7362-4a7c-8e4b-b24ad71cf3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f04d6f1-f910-4d57-b77a-d534dd7f41f0",
        "cursor": {
          "ref": "b2808962-9748-4fe3-b700-195f43858d86",
          "length": 157,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2a4f7dc8-a69f-4a03-aea1-6d1290f9a34d"
        },
        "item": {
          "id": "9f04d6f1-f910-4d57-b77a-d534dd7f41f0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5cfde396-b80f-41e6-be9d-e6e4721936b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0cfdc0-fa80-458c-9084-9c411dcd6c93",
        "cursor": {
          "ref": "3a66278e-baf8-40a0-9640-3fc4ffc13661",
          "length": 157,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "34ce6092-2313-4df9-bb11-38d1c8c12ee4"
        },
        "item": {
          "id": "8e0cfdc0-fa80-458c-9084-9c411dcd6c93",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8bbb32bc-6da6-47b8-a993-f0e2703be887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 164,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f31b3a0-b548-4c9b-9695-32434149d167",
        "cursor": {
          "ref": "e1fd7039-5a99-4c7d-9429-33e22b88ae7e",
          "length": 157,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "45c52793-f560-486d-a28d-632b7c68c72d"
        },
        "item": {
          "id": "9f31b3a0-b548-4c9b-9695-32434149d167",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b8c722f7-cab6-489d-98f8-08e751ae7a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1272,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18daeecc-34e7-41b5-94a5-39eec8840b0d",
        "cursor": {
          "ref": "2a824238-faeb-4745-ac80-8ff9518e7ab8",
          "length": 157,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3f8c5b96-4ee0-4bc0-85a5-72391de66a97"
        },
        "item": {
          "id": "18daeecc-34e7-41b5-94a5-39eec8840b0d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5342eead-cd1c-4aa8-8e0b-6d4bfa57bf40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee81978-ecc0-46e2-bdb7-5aa953063295",
        "cursor": {
          "ref": "c2c54a5e-53a9-4487-820d-75f23fc45d80",
          "length": 157,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4c4498ec-f2c5-4933-9948-9f3fd0444d9c"
        },
        "item": {
          "id": "0ee81978-ecc0-46e2-bdb7-5aa953063295",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0e25e405-8d90-47cb-b526-d8f2d3dac06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074cae20-80cd-4d54-8414-61ba22ad5a43",
        "cursor": {
          "ref": "50a31687-7c5a-4dcd-bf7e-69354350aca1",
          "length": 157,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "332c8aed-7f38-4f7c-93a9-b1a4b46c4ff0"
        },
        "item": {
          "id": "074cae20-80cd-4d54-8414-61ba22ad5a43",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "91d98890-3e42-422f-b87d-b2def2df156d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad8a16b-36de-46bb-bb5a-1b84e93bb93c",
        "cursor": {
          "ref": "a646cd15-f8e7-461a-8b7c-161d6897fe9a",
          "length": 157,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b35af64d-0cc8-4451-9aca-918935c9d24d"
        },
        "item": {
          "id": "cad8a16b-36de-46bb-bb5a-1b84e93bb93c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "47837c13-d524-4758-86ab-6ea1b45c5abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2821a32b-7a9c-43d8-afae-a7aa18477841",
        "cursor": {
          "ref": "28db451f-345f-4237-ac80-72ff3ace251c",
          "length": 157,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ed0e9535-ce96-4657-b233-e5c387b3007c"
        },
        "item": {
          "id": "2821a32b-7a9c-43d8-afae-a7aa18477841",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "04134dbb-3ee4-4219-a253-4d699ca4f3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1dbfc07-2149-437f-ac0b-b250b74d737d",
        "cursor": {
          "ref": "e23f6bcd-41d1-47ad-b05b-154b6bcae70f",
          "length": 157,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2eb8d3b2-df25-46aa-a364-ab2399dfccb7"
        },
        "item": {
          "id": "f1dbfc07-2149-437f-ac0b-b250b74d737d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a7edcc3d-5f5d-45ff-acc8-924c3bac886a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e2c92d-b989-494b-8629-65642934213f",
        "cursor": {
          "ref": "370597cb-01fc-412e-838c-bdf2bbea7b00",
          "length": 157,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "af14d6b7-5528-48a3-8d85-577256564250"
        },
        "item": {
          "id": "85e2c92d-b989-494b-8629-65642934213f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "18cd708b-72e0-4498-9b59-dd71d7f13f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59d6a76-dbd0-4be7-9ecd-d22b65bb97d1",
        "cursor": {
          "ref": "395ddb69-1cfd-404c-9224-d5976656e765",
          "length": 157,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e38c50d9-2d01-4c71-91be-e5c41b01f4f5"
        },
        "item": {
          "id": "d59d6a76-dbd0-4be7-9ecd-d22b65bb97d1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "401af059-5b4f-459c-9140-a3fd044234eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f573d7-61f2-4987-a908-0f0f3f049c71",
        "cursor": {
          "ref": "366f8393-057e-4738-ad4d-8186aeb9ebad",
          "length": 157,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ea4eec03-924a-4259-aa8d-7af2ca0cb9ba"
        },
        "item": {
          "id": "e9f573d7-61f2-4987-a908-0f0f3f049c71",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3a33dc97-5e96-4c96-b8dd-2cf3c85a0653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11be2774-0fa3-4e29-94ef-9afc31edd00e",
        "cursor": {
          "ref": "1ba16fc9-24ab-428d-946d-8cf6124f3f29",
          "length": 157,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d29ab48b-b1cc-48e0-9c60-47d94de8e30a"
        },
        "item": {
          "id": "11be2774-0fa3-4e29-94ef-9afc31edd00e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2916b921-06f9-4022-9728-902a0562c840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0858f6d7-9a9a-4cb2-acd9-e6de24331109",
        "cursor": {
          "ref": "0fd22818-fee7-4c3a-949a-1c7df84d0fd5",
          "length": 157,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2df9d9bb-7c6e-4fe4-bc53-c1670a5bd933"
        },
        "item": {
          "id": "0858f6d7-9a9a-4cb2-acd9-e6de24331109",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a6b585e6-f723-4a71-8688-f5a5243e612d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1614,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26465083-54cc-4ecb-9578-1e336a3a64aa",
        "cursor": {
          "ref": "2719145a-3385-4214-ac66-539226b26a4c",
          "length": 157,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "14c5bd88-cb47-43be-a012-9321234323bd"
        },
        "item": {
          "id": "26465083-54cc-4ecb-9578-1e336a3a64aa",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6d025b61-4f44-44ba-9c4a-60c4739d62b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c96bbc-98e2-4f2b-8667-694506133492",
        "cursor": {
          "ref": "44d01b25-2f03-4ce9-bf8f-db13bcc6953c",
          "length": 157,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "030cf009-3e91-4edb-ac41-76be5151b1cc"
        },
        "item": {
          "id": "71c96bbc-98e2-4f2b-8667-694506133492",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7ab8ea63-6df0-49a4-8d2f-b2b47005614b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3237c6fc-9763-4993-a526-8fecc5e1a4c4",
        "cursor": {
          "ref": "b7027efa-a41f-4b4f-a694-14c7d1579995",
          "length": 157,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1f54dae3-081d-4562-9492-1c19afc37323"
        },
        "item": {
          "id": "3237c6fc-9763-4993-a526-8fecc5e1a4c4",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2e88a375-fce8-41ef-bef9-967995d392fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1338,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a0cb6f-6352-4b02-89f6-ff2eac29f65c",
        "cursor": {
          "ref": "85ef8983-4ab1-4e4f-a4e4-243e3f1ebf25",
          "length": 157,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ee9178b8-cace-4a7e-8995-644f7677a815"
        },
        "item": {
          "id": "f7a0cb6f-6352-4b02-89f6-ff2eac29f65c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0a9663ae-dcd5-4b95-bf03-3e24d4767780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2974a59e-b509-4ceb-83b1-427d796c2693",
        "cursor": {
          "ref": "b48d1e8f-70fb-42ec-98e7-5281b80fe57c",
          "length": 157,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "57d87f8a-0410-420a-af77-aa5aea03827d"
        },
        "item": {
          "id": "2974a59e-b509-4ceb-83b1-427d796c2693",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bba3ed22-98a0-4267-969c-bbd11192d68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9042af8c-9d3c-4b07-a328-bb5cb1ccb544",
        "cursor": {
          "ref": "5e23ae0c-10c1-4e0b-b177-b5883b69b39a",
          "length": 157,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e00c944a-faa7-450f-b7c8-b1949c576c13"
        },
        "item": {
          "id": "9042af8c-9d3c-4b07-a328-bb5cb1ccb544",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ec4aa7e6-77dc-4821-bcec-9282f7ef4935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0086715f-b2b0-4509-90de-13b0ffb6cf9d",
        "cursor": {
          "ref": "19a02225-0882-4192-9981-b75274d12d4b",
          "length": 157,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "dd2e8769-2a5b-4518-9f98-af4b3bbff308"
        },
        "item": {
          "id": "0086715f-b2b0-4509-90de-13b0ffb6cf9d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "711aaf6c-04e7-4406-a05b-0c2f121697ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e4d4ba-820a-454f-8f8f-862a38745be8",
        "cursor": {
          "ref": "5068a7a3-69e9-41ca-9a19-63cb5978aa99",
          "length": 157,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e994d0bd-4728-4a5c-9709-df122106cdfe"
        },
        "item": {
          "id": "54e4d4ba-820a-454f-8f8f-862a38745be8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "aac2c8eb-6627-4607-8a08-3d947632f458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01271c45-6ccd-4b32-b7da-801a38acce8b",
        "cursor": {
          "ref": "fac0bd57-c351-4254-9fe6-f8949bedcb94",
          "length": 157,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d31b0135-ff40-4caf-a3c0-1b6e994e0d99"
        },
        "item": {
          "id": "01271c45-6ccd-4b32-b7da-801a38acce8b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f1791fd6-ae88-4472-bfaa-d11bf0a45035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4e3a35-9a59-4f19-9cc0-bd38a22817bd",
        "cursor": {
          "ref": "d5cf33a3-9cd9-4ee2-bcc8-cd0782ce34f1",
          "length": 157,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "54403878-0384-4f4e-8b92-da6c3f159fdc"
        },
        "item": {
          "id": "fe4e3a35-9a59-4f19-9cc0-bd38a22817bd",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "354217e1-43bb-4018-9182-914eae29bb26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c8257c-1bf3-4d48-950b-d77b69ed7159",
        "cursor": {
          "ref": "8e06b015-e9a0-47ba-a62a-2d175d6b824a",
          "length": 157,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d1120dba-e7b8-4d4d-a511-ee852c9f6ebf"
        },
        "item": {
          "id": "61c8257c-1bf3-4d48-950b-d77b69ed7159",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ed2e77d9-10fd-4033-9702-7d84f7738da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f77a0d-457f-400f-9301-dd1f1247f994",
        "cursor": {
          "ref": "7ca13dcc-97e2-4f72-93c9-276ba08bd64a",
          "length": 157,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "66723668-7ea1-4d69-85c7-aed91b11dc70"
        },
        "item": {
          "id": "51f77a0d-457f-400f-9301-dd1f1247f994",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5ad4b368-a2a3-47f3-ac7b-742501a0428d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e13a8b3-ce88-419a-87aa-15d1e193dc88",
        "cursor": {
          "ref": "4bb1977b-d7fd-47e0-a43c-b79b41c51ec9",
          "length": 157,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "328cb528-d098-4839-a07e-beb21a378662"
        },
        "item": {
          "id": "3e13a8b3-ce88-419a-87aa-15d1e193dc88",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "742b4866-eac7-4209-b9f0-cc56c89a5da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e7eb1f-5a22-4bf9-a3e9-7de1c7a55559",
        "cursor": {
          "ref": "e8535b7f-4dbe-4a4a-9333-b73654cf4e39",
          "length": 157,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "16a3ec8f-2b4f-4938-b985-8966c6ee49af"
        },
        "item": {
          "id": "73e7eb1f-5a22-4bf9-a3e9-7de1c7a55559",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8859a37e-f541-48e0-a40d-86059c3fe1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e736fcd0-124f-4880-afd0-25ff4f7ba6ee",
        "cursor": {
          "ref": "823bfb3e-78ea-438e-b2fe-db29d3f2be09",
          "length": 157,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3bb442c1-edfd-476b-ac1e-85fef0a68ca9"
        },
        "item": {
          "id": "e736fcd0-124f-4880-afd0-25ff4f7ba6ee",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "70e5bbe2-7343-4fad-8fd2-356a458dfcb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f513f9-756e-41ad-be56-b359bc92873c",
        "cursor": {
          "ref": "b3b8f89b-1c14-4ff4-aed6-3c6ce4abde7a",
          "length": 157,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d231a08d-ea2d-47f1-90ab-ab06b91bc43e"
        },
        "item": {
          "id": "75f513f9-756e-41ad-be56-b359bc92873c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "562b7b7f-8d87-4ef7-ba2f-80cd72f12593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250c29b0-59c3-4dcc-86c1-e4260db6e858",
        "cursor": {
          "ref": "d774ed00-352a-4e1b-bef8-0872e21646b8",
          "length": 157,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8324fb21-6ef1-49de-8dad-a9baa252924a"
        },
        "item": {
          "id": "250c29b0-59c3-4dcc-86c1-e4260db6e858",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fe4604cc-5c25-46c5-8b2c-9a698623a11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91981068-7fc9-42ef-b3a0-98b3f826a125",
        "cursor": {
          "ref": "0d3e32ad-8d44-4a8d-9c13-21e46b73cabb",
          "length": 157,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "99029a92-377e-4143-83a7-5f90e0d2b845"
        },
        "item": {
          "id": "91981068-7fc9-42ef-b3a0-98b3f826a125",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "737e3183-77fa-41d5-8311-3061e057fa28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b870570f-3011-4370-9067-3b390adfc9a2",
        "cursor": {
          "ref": "344f0043-a442-4567-bc59-b4947752c5e1",
          "length": 157,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a7dccee9-5e9f-4729-a138-d2c8e27118fe"
        },
        "item": {
          "id": "b870570f-3011-4370-9067-3b390adfc9a2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4e7402d0-f612-4d24-abab-249783359de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffd66e0-458b-4682-8033-0cf031d60e61",
        "cursor": {
          "ref": "880b8a20-b789-472f-a7c0-361c85a3712c",
          "length": 157,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e313cc35-4ac4-44bf-b7ef-3f8f06b84911"
        },
        "item": {
          "id": "fffd66e0-458b-4682-8033-0cf031d60e61",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1e53befa-5d20-42d3-8f41-2d1f434b4f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6220219a-837c-4600-b22a-0842ce384487",
        "cursor": {
          "ref": "640fc962-25c5-4f13-a043-28c8927ef379",
          "length": 157,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "13fe4862-2140-423b-beb9-d93fcf751781"
        },
        "item": {
          "id": "6220219a-837c-4600-b22a-0842ce384487",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "019682aa-4996-47c5-b411-3aab721c8cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b44352-a113-4384-9ef5-87e79dbb1841",
        "cursor": {
          "ref": "a04d11b0-194f-43e0-beaf-9f8a6d105d3a",
          "length": 157,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2469ba20-63fe-4959-b892-af7b14c76e50"
        },
        "item": {
          "id": "f9b44352-a113-4384-9ef5-87e79dbb1841",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "71b109d1-293d-4806-98c8-ea1f4a9bd896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df39c784-3406-4a3b-84a6-a706cfb9234b",
        "cursor": {
          "ref": "c01d87bc-3c21-4db8-a149-c69c55ff5cc2",
          "length": 157,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "914875d3-853d-47cc-ad78-ff663da80f45"
        },
        "item": {
          "id": "df39c784-3406-4a3b-84a6-a706cfb9234b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4b87cfa2-2ffb-43d9-96f9-9320a8c45a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254264a1-2175-42ed-8325-0e204c048f82",
        "cursor": {
          "ref": "3aca36b8-c073-4431-9d89-cf0f3d43c6ea",
          "length": 157,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "774c51b2-65d7-44ae-b2b4-a7eea40e3628"
        },
        "item": {
          "id": "254264a1-2175-42ed-8325-0e204c048f82",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "204156cd-1997-453f-a252-0d39bd05e7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b06c74-33ec-4135-be04-33109e54a669",
        "cursor": {
          "ref": "1b2b8ea4-d34a-422c-afb1-d5eea18d066d",
          "length": 157,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3441f600-6daa-4f2b-9a2b-11192eaee049"
        },
        "item": {
          "id": "b9b06c74-33ec-4135-be04-33109e54a669",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "24c4ee55-5924-4d91-b618-135f19dd97e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973af931-c81e-4faf-9117-fce46e778304",
        "cursor": {
          "ref": "f77906a0-276d-4f83-a36e-7bd0a801d683",
          "length": 157,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "23680350-481b-4c87-9762-9977b3723ce0"
        },
        "item": {
          "id": "973af931-c81e-4faf-9117-fce46e778304",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ffad194f-9717-4074-bf03-c0040fbb6eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e5aab6-1e99-4c03-b281-f40e3fab17f5",
        "cursor": {
          "ref": "e88f264c-8f71-48e8-949b-181a6edc8dbb",
          "length": 157,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "92e861f3-82dc-44d0-a7bf-b849baab63ff"
        },
        "item": {
          "id": "f5e5aab6-1e99-4c03-b281-f40e3fab17f5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "dc64d1ac-edec-4a51-8afe-4777ab154af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a55d7b3-7f0c-49d5-aa34-bdff7a56f982",
        "cursor": {
          "ref": "a00e305a-a037-42a8-ba77-6b5df8e0e85c",
          "length": 157,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "40232547-baf8-4583-ae0c-7a7d1d66138b"
        },
        "item": {
          "id": "4a55d7b3-7f0c-49d5-aa34-bdff7a56f982",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "767df04b-9b0b-4d99-83f4-f53f8079914b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5bfa53-3206-4e26-92f7-ffabed136462",
        "cursor": {
          "ref": "7ce5a298-c0eb-4d0a-86cc-23b3cc4e3dd4",
          "length": 157,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b1f09d14-b6ab-4816-8393-775a92214721"
        },
        "item": {
          "id": "8a5bfa53-3206-4e26-92f7-ffabed136462",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fa88cf2c-6256-41c2-92a5-8facbfe00230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f50b980-a59d-4955-a065-2098704eb1ab",
        "cursor": {
          "ref": "bc0996b8-00db-454d-b366-ca2c83c9fafb",
          "length": 157,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c298754c-7a57-41b6-90f0-3c0308457805"
        },
        "item": {
          "id": "6f50b980-a59d-4955-a065-2098704eb1ab",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "12bee167-629c-447e-be9f-8690f2e87b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1009,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4dd1ae9-fdf1-4a5b-bac6-e12fa0213202",
        "cursor": {
          "ref": "4d8c4cbf-2f08-44d5-8a22-c9c95c59f02b",
          "length": 157,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1c59873d-bbf4-4919-8c40-2de3d9b51960"
        },
        "item": {
          "id": "a4dd1ae9-fdf1-4a5b-bac6-e12fa0213202",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e463cc1f-3ad0-4dad-87a5-d35f1e02537f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd172ef-1f02-40d0-95d9-63dbb4ff29b8",
        "cursor": {
          "ref": "c1c9ffc1-a54d-4536-a186-f00986eb4801",
          "length": 157,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b41c0e2c-32e3-4468-b44b-896a4a982fe7"
        },
        "item": {
          "id": "0dd172ef-1f02-40d0-95d9-63dbb4ff29b8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "162ed719-4b7a-4027-9d62-165377f99141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e85fe55-6303-420c-b329-265cef9002ac",
        "cursor": {
          "ref": "1cc2dd45-8ea4-467e-9ae9-b3e1e34aba56",
          "length": 157,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ff372bf4-d2ee-4ddb-9271-f187f4262871"
        },
        "item": {
          "id": "4e85fe55-6303-420c-b329-265cef9002ac",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d65ab938-d1b1-44a2-9ebe-cf39d235d842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9220d037-edd6-4f53-bc1f-83c655c8bc71",
        "cursor": {
          "ref": "07356179-d7a2-4a69-be03-0a918e80336a",
          "length": 157,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3a2332c4-12e4-46b2-b6c0-fbbf351e865c"
        },
        "item": {
          "id": "9220d037-edd6-4f53-bc1f-83c655c8bc71",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c0588c74-45e2-4b03-88a2-2cca38fce6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52e8079-5782-4823-a43f-caebf261dc0c",
        "cursor": {
          "ref": "80665a52-2e67-4212-a592-b3a52d213d76",
          "length": 157,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "dd1289b1-c790-48f3-b6f4-20bf6fd1f412"
        },
        "item": {
          "id": "e52e8079-5782-4823-a43f-caebf261dc0c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8c61b520-6c6c-4f71-8a13-48a9df0135fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0faa2b-64e8-4d8e-8a51-b4bfcfe093db",
        "cursor": {
          "ref": "f641bf20-d546-4cda-9c1f-114011e769c8",
          "length": 157,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c76c2281-8884-4b37-9585-b72bc7e228dd"
        },
        "item": {
          "id": "ec0faa2b-64e8-4d8e-8a51-b4bfcfe093db",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "72218158-248e-4ff1-b63b-38877f7800a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd0315a-37d0-4c96-a4e7-dc03bc62b677",
        "cursor": {
          "ref": "a19c984c-fac2-43ab-a193-95e61c53cc70",
          "length": 157,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7480824c-d27f-4947-b7cd-6955fbdba24b"
        },
        "item": {
          "id": "cbd0315a-37d0-4c96-a4e7-dc03bc62b677",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8174719a-9488-4d7c-a7be-32b4ee61fb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d65d473-3eb8-48d4-8a66-bb1963f1938c",
        "cursor": {
          "ref": "251f454f-1f41-4daf-b8c5-4938bb511c3f",
          "length": 157,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "01f8c917-16fd-4761-8576-cde963afea0c"
        },
        "item": {
          "id": "3d65d473-3eb8-48d4-8a66-bb1963f1938c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4e051921-72ea-4bc3-b938-1f529ff7088a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bca33d-6679-456b-a880-c7456246d1dd",
        "cursor": {
          "ref": "943c167b-52f9-47c0-aef2-e7616b39f9a0",
          "length": 157,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a1cb495a-7108-4fa8-a0e0-685c4062e78f"
        },
        "item": {
          "id": "51bca33d-6679-456b-a880-c7456246d1dd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ee859fe7-fc50-4353-b637-028c0d44a215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d813d72-2a3c-4c39-952e-bfebac9a83d9",
        "cursor": {
          "ref": "273c03b2-2383-4a7d-afaf-0a67b7272069",
          "length": 157,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "704d04b6-819c-4dc3-a833-6c36521a2f1b"
        },
        "item": {
          "id": "3d813d72-2a3c-4c39-952e-bfebac9a83d9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "aef0020e-ffae-41d5-a6aa-a01619625a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6efd563-122f-4117-95c2-fbe80f59b022",
        "cursor": {
          "ref": "10c036ca-15b0-4590-b87c-1ef9e8dc4e39",
          "length": 157,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0ffb672d-7b67-45af-ae8d-ab76c47c9e6e"
        },
        "item": {
          "id": "c6efd563-122f-4117-95c2-fbe80f59b022",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "213bed6e-2b63-4a36-82e6-f4500653a2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0b2d1a-530e-4bff-8463-f9653f69244a",
        "cursor": {
          "ref": "b091c4b8-26c3-4d23-a23c-cec247013b32",
          "length": 157,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5b6c2827-e045-4004-9917-d827de3aba81"
        },
        "item": {
          "id": "1b0b2d1a-530e-4bff-8463-f9653f69244a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ff80445a-a66e-4dc9-8836-57c04269b55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9afa4a-17b4-4711-a337-a6505569602c",
        "cursor": {
          "ref": "14b9bc38-1381-451a-a81c-3ebf002356f6",
          "length": 157,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ed262d68-ce01-4f81-89c9-6c3a00d48338"
        },
        "item": {
          "id": "4e9afa4a-17b4-4711-a337-a6505569602c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "cac6f0d0-3343-43f4-8be4-4b6aa05f5368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44509f24-f044-4b22-af3d-4da680def787",
        "cursor": {
          "ref": "9354d267-ad20-40d7-ab44-466e52641a98",
          "length": 157,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "28622319-daf2-4e00-899f-a0aee7addb99"
        },
        "item": {
          "id": "44509f24-f044-4b22-af3d-4da680def787",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a990268d-447d-4149-be64-9b7d5ef530a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed39f9a4-c91a-4488-bbe0-0c7e38b82909",
        "cursor": {
          "ref": "bc16d2eb-1f3f-4c22-a8f6-4f899d8f7c76",
          "length": 157,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7ebdface-1029-44eb-aa93-46d278bb5960"
        },
        "item": {
          "id": "ed39f9a4-c91a-4488-bbe0-0c7e38b82909",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "48e5bf4a-6789-4093-85ad-5f9d8f288ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72902703-dbfc-42c6-90de-bf1b3ab24259",
        "cursor": {
          "ref": "95be7851-31bc-42be-9181-751c4d052f65",
          "length": 157,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d7358913-b367-4d4f-8bbc-1ef7aa503750"
        },
        "item": {
          "id": "72902703-dbfc-42c6-90de-bf1b3ab24259",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0240f60c-3663-4e35-987f-2edcbfc759ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c8c6bb-8e9e-4302-8eb7-976677517524",
        "cursor": {
          "ref": "406c5e6b-fa3f-459a-82c8-c1206e35f298",
          "length": 157,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "dd071618-8604-40ce-b189-8b6c0735607b"
        },
        "item": {
          "id": "73c8c6bb-8e9e-4302-8eb7-976677517524",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2db07820-55b9-4838-a932-ceb7b9cef866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6bfdae-7b9e-4143-94e0-2c2fc5c8597b",
        "cursor": {
          "ref": "dd9e3bd3-2b93-482e-a9b1-b90f011a93e2",
          "length": 157,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0b14d859-c3b2-417e-9d60-67b171523c69"
        },
        "item": {
          "id": "af6bfdae-7b9e-4143-94e0-2c2fc5c8597b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7229d270-ce2f-4a54-9ab0-464a72c5cbe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a00641-cc35-4797-b701-ec5e7323362e",
        "cursor": {
          "ref": "98cab692-652a-458a-9e2a-5c77cfcbd023",
          "length": 157,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7a3d969d-cad8-4227-86b4-dd2b9e88ae36"
        },
        "item": {
          "id": "70a00641-cc35-4797-b701-ec5e7323362e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0462d8e2-178f-42dc-ad53-b0a4b5dc5e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f82894-173b-42be-a269-a62b764c4455",
        "cursor": {
          "ref": "912586fb-fefc-4c8b-9673-e39d17a1af4f",
          "length": 157,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f1fe5fa4-c58b-46ea-8074-ea2bd1e23201"
        },
        "item": {
          "id": "92f82894-173b-42be-a269-a62b764c4455",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "69092793-4d38-468b-8d7b-eb9436ab4784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f964125-122d-4089-83ae-65c2e72a9a51",
        "cursor": {
          "ref": "970179f1-1dbc-4b65-8867-eeea03831bcc",
          "length": 157,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3f42c06f-da12-41ba-b8ae-fd4382a6339c"
        },
        "item": {
          "id": "0f964125-122d-4089-83ae-65c2e72a9a51",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "53e7134a-0280-4743-a3fd-88ae858b1b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba238a2f-d891-4156-a882-e8e627126a5b",
        "cursor": {
          "ref": "4fea249e-ab88-48e1-98d6-473439135d9e",
          "length": 157,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "47c3045f-681b-44ae-bc4b-833597cc5838"
        },
        "item": {
          "id": "ba238a2f-d891-4156-a882-e8e627126a5b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "90932d6f-a0a9-4385-b53c-0905d4abfc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766b890b-ee6e-44d6-b12a-46f16d1fd067",
        "cursor": {
          "ref": "9c69fe0b-f5f6-4962-93c4-d5377cc2dab6",
          "length": 157,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2e59a8c2-331b-4583-a280-e7335c33ab07"
        },
        "item": {
          "id": "766b890b-ee6e-44d6-b12a-46f16d1fd067",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "daebf04f-3511-41b1-aee3-50cb8b507771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77e15e5-495f-4c07-91d4-c6f58507c947",
        "cursor": {
          "ref": "ff385f2c-5121-4d7a-bbce-a7ef72ea6e3c",
          "length": 157,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fdd671d5-1489-4680-b929-35422f911baa"
        },
        "item": {
          "id": "c77e15e5-495f-4c07-91d4-c6f58507c947",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7da85cc0-64c9-47ad-95d8-4e45465b01c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9ac46d-2902-4b66-a3ab-75c0fd284473",
        "cursor": {
          "ref": "a2949234-6727-4c0d-b618-e88e948624ad",
          "length": 157,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "37ff23c5-f9b7-4adc-931c-a03d794e6d3a"
        },
        "item": {
          "id": "0f9ac46d-2902-4b66-a3ab-75c0fd284473",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b961229a-622f-46fe-abc2-8cf809801c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e9b17e-4fb7-4df7-bd17-50d7726038c7",
        "cursor": {
          "ref": "f417b42a-516e-4532-a8c7-bc1204c24ef8",
          "length": 157,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "96fc3591-aa4b-404a-a822-370ee7291949"
        },
        "item": {
          "id": "27e9b17e-4fb7-4df7-bd17-50d7726038c7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b539e7a6-4b50-4454-babe-867cc0c59e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c80d2f-1e5d-4eef-83a1-de497aa9be3b",
        "cursor": {
          "ref": "7cebc1b6-61f8-43ee-aec5-626f1a3d3860",
          "length": 157,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2d3ddd96-1a45-49da-861e-6be11ecb40a3"
        },
        "item": {
          "id": "63c80d2f-1e5d-4eef-83a1-de497aa9be3b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1ea3ea1a-8233-492a-ab95-18a0e4559687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b587e3b-6881-4c88-ab01-0e1293ba4fbb",
        "cursor": {
          "ref": "fe581c7e-df90-4581-83ed-ca98b134f112",
          "length": 157,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9c4b3dd2-a197-4d3d-8ca0-e01a3fb846c6"
        },
        "item": {
          "id": "8b587e3b-6881-4c88-ab01-0e1293ba4fbb",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a61ce2e1-3ddd-48dc-b4dd-24afa915ba75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbc154f-ce97-4648-81e2-3404c53821b3",
        "cursor": {
          "ref": "f9c2b757-0da4-4864-9d72-f65866bfc433",
          "length": 157,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d4f03e99-d087-43b5-8b90-6a7c91574e51"
        },
        "item": {
          "id": "2dbc154f-ce97-4648-81e2-3404c53821b3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "80301652-6132-455b-b3ea-9ac33fcb688c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80251d6-fc5c-444d-83e0-0de869b1195a",
        "cursor": {
          "ref": "a0454355-4597-4c52-9ca0-2b880cd27293",
          "length": 157,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e35d8905-26c0-4274-8a97-35c1de424512"
        },
        "item": {
          "id": "f80251d6-fc5c-444d-83e0-0de869b1195a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6ce6c1c9-a188-4acf-abc7-591e16322dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcb9d1b-156b-4c08-904e-f069f2ebc510",
        "cursor": {
          "ref": "34cbaca4-ef07-453c-9934-4a2cc53723be",
          "length": 157,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "15157fc6-91c9-4598-8740-e3be87ac4a68"
        },
        "item": {
          "id": "1bcb9d1b-156b-4c08-904e-f069f2ebc510",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ec49c71a-7507-49d2-991c-be9d74c9fa6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5cbba0-f0e9-4521-8134-533aa05862fc",
        "cursor": {
          "ref": "6310505f-f111-43ac-8160-1a3faaa607d8",
          "length": 157,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9bf6aa08-20cf-49a2-b262-482b5ea47fe0"
        },
        "item": {
          "id": "bf5cbba0-f0e9-4521-8134-533aa05862fc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c0c50574-74cd-436f-8638-10d049429675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7d2cb7-ea1a-4683-9cc2-f50f7b6b12ff",
        "cursor": {
          "ref": "756545a9-83e8-48d0-a8c6-9679f9192640",
          "length": 157,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "922fd1ce-daf6-4cbb-b524-8fa6a19b2124"
        },
        "item": {
          "id": "8d7d2cb7-ea1a-4683-9cc2-f50f7b6b12ff",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "04621d1b-3b83-4f3d-ae7b-4b4af333a935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c87c741-a34a-479e-abf7-a1f665b7405b",
        "cursor": {
          "ref": "cb7d95a4-17e2-4c9d-8cc4-f331caa02b7a",
          "length": 157,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d5eb658d-1a62-4f3a-a907-8c5ebd3f8506"
        },
        "item": {
          "id": "9c87c741-a34a-479e-abf7-a1f665b7405b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8fd7107c-6f72-4fb5-a8d2-38f4c8e92c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29dcbfa-4d1a-4e8b-96ef-ecfd14e56319",
        "cursor": {
          "ref": "b1df8ad6-51d1-42d8-b766-8c460cf5ac5f",
          "length": 157,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "fafccaba-fc2d-4f2a-aa13-fe2741d57aee"
        },
        "item": {
          "id": "f29dcbfa-4d1a-4e8b-96ef-ecfd14e56319",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a460a1b6-0a8e-4b3d-a364-3a6e37d4a44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41952639-8d9e-4d8d-82e2-345e6185c6d2",
        "cursor": {
          "ref": "8e492e29-318c-4d03-b0d6-431ce1f47b0a",
          "length": 157,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7579a42e-4a62-4b79-bc85-8ca8749595c7"
        },
        "item": {
          "id": "41952639-8d9e-4d8d-82e2-345e6185c6d2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "10d7a564-df8d-4474-ad2c-92213860645a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e2236b-5854-4e5a-8729-b83ac7558548",
        "cursor": {
          "ref": "a98fa540-cdec-4645-a7c9-032a97ba3891",
          "length": 157,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ab23906b-aba2-488f-a67f-cfa867f64896"
        },
        "item": {
          "id": "b3e2236b-5854-4e5a-8729-b83ac7558548",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c4633bb7-ad1f-4f44-b396-9b100796ec8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c997c23-bd9f-4adc-a619-0c78f1fcf0c8",
        "cursor": {
          "ref": "bcd172a3-86c2-4670-a68e-9086746679a1",
          "length": 157,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "93912d81-aee5-47c8-a62a-e30b0151cde5"
        },
        "item": {
          "id": "7c997c23-bd9f-4adc-a619-0c78f1fcf0c8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8e4e3156-b1eb-4436-a8fe-bf9b1a7e9d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcf97be-eec3-4567-aced-f4c5e3009c99",
        "cursor": {
          "ref": "e0d1c686-af8c-49f7-9982-d52e032128e8",
          "length": 157,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "74e810ab-7e62-4f15-a1f0-70e7f95a632f"
        },
        "item": {
          "id": "0fcf97be-eec3-4567-aced-f4c5e3009c99",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1523ce11-c38b-4cf9-b3c9-5cefde9b3673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db14a614-8362-4287-bc6d-6d35d58fa045",
        "cursor": {
          "ref": "61f35915-6be6-4a05-99b9-96fdbd8320a8",
          "length": 157,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1bc8a9d7-958b-4920-a154-58621352124f"
        },
        "item": {
          "id": "db14a614-8362-4287-bc6d-6d35d58fa045",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "41e3d035-4197-4f65-b2fb-f081493dd540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14be0b9d-c006-4cfb-95f7-77afbbe33f22",
        "cursor": {
          "ref": "9a4b7263-68ab-4ea7-9df1-4a2fd151405c",
          "length": 157,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e40cf824-214f-42e5-b456-c254df53b7b3"
        },
        "item": {
          "id": "14be0b9d-c006-4cfb-95f7-77afbbe33f22",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1e32979d-e4bc-429c-8362-94cbb7f75a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0e4a13-f0fd-45a8-934a-665237fb6792",
        "cursor": {
          "ref": "4c783a61-6288-4528-87a8-93596f73c39e",
          "length": 157,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "87683476-17d4-4830-98bc-64784d0ae39a"
        },
        "item": {
          "id": "2d0e4a13-f0fd-45a8-934a-665237fb6792",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "01a70b4a-b81d-4f2f-aa06-3868aba45715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83258b8-f9b6-4228-b853-f368193d3b39",
        "cursor": {
          "ref": "7a770075-4b76-49dd-84cf-133b554f0af8",
          "length": 157,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "acdc97a7-5877-48af-ad62-a931641fa1e9"
        },
        "item": {
          "id": "a83258b8-f9b6-4228-b853-f368193d3b39",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1d1c5e8b-a461-4d12-a0c2-5f1b183f6817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebd2c1a-ced9-4640-8fad-18ec80e9f917",
        "cursor": {
          "ref": "23676753-1ab2-4c10-8ed5-ff06f9042ea5",
          "length": 157,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "82380853-c47c-4e50-bcb4-405d88cbcc2b"
        },
        "item": {
          "id": "5ebd2c1a-ced9-4640-8fad-18ec80e9f917",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e698c111-b329-4e1a-a220-9a4bb4c712b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82e27ac-05c7-4b28-abb7-4a8c96d107be",
        "cursor": {
          "ref": "93141a5f-21bf-4485-8866-b4b51e33fbb3",
          "length": 157,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c54428d1-c9ff-4ac7-9f49-8c237efbac42"
        },
        "item": {
          "id": "a82e27ac-05c7-4b28-abb7-4a8c96d107be",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1880eee9-3c0a-4032-a163-d8470d50aa56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d23a5e-15a6-4b49-9a09-4d4946129915",
        "cursor": {
          "ref": "5c32333d-971b-4dcc-a778-68c204b0b324",
          "length": 157,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "39d18321-eb4b-4029-8f35-c6540951abfb"
        },
        "item": {
          "id": "96d23a5e-15a6-4b49-9a09-4d4946129915",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "118db061-73ed-4ce2-8bd1-230bde1063b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a720f76e-ea6e-473b-a1b0-3a855cf8f616",
        "cursor": {
          "ref": "e2ed30c2-1beb-4b6b-9bec-45eae3b01fd6",
          "length": 157,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5067bf68-49e1-4d95-8f79-6fa67fb1fe53"
        },
        "item": {
          "id": "a720f76e-ea6e-473b-a1b0-3a855cf8f616",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b5b1e809-54f6-45fc-8ca0-69b5dd9315e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 168,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c92d8b-384d-4b1e-be86-0d6560f1e7d3",
        "cursor": {
          "ref": "e4022e9c-dfc7-4a00-9242-bd0d5f4929dd",
          "length": 157,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "47c4747a-6ecd-4a22-a9ee-9f81facc9a2d"
        },
        "item": {
          "id": "b9c92d8b-384d-4b1e-be86-0d6560f1e7d3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "31edd065-5656-40de-845f-4d225126e00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6babb7-70bf-41c6-afd9-3ce125c0421a",
        "cursor": {
          "ref": "1367be37-d783-4213-a930-80d15d194745",
          "length": 157,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "90bb91e0-1284-4e24-9007-d34453716e73"
        },
        "item": {
          "id": "7a6babb7-70bf-41c6-afd9-3ce125c0421a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e0d63055-ea11-43a4-89c3-815122634fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e11784-b719-423a-b541-96c1a57e6159",
        "cursor": {
          "ref": "895def49-6682-41e4-a8a4-ad5e1482a672",
          "length": 157,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "062246fc-3141-49dc-905f-17bd48347c82"
        },
        "item": {
          "id": "65e11784-b719-423a-b541-96c1a57e6159",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "869d1fc4-7bda-46ea-a838-d3fb2f867aaf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88dede9-e991-47d8-970d-b64e6df6b029",
        "cursor": {
          "ref": "f174b696-9b12-49e4-9e84-22a263723ad3",
          "length": 157,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "542f7d2b-d04e-4a48-bdab-4ab5201cb358"
        },
        "item": {
          "id": "f88dede9-e991-47d8-970d-b64e6df6b029",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "979a1ae5-4245-4619-852b-e1eb26091394",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 186,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7806ddb-eefa-4309-8fe6-54c062150218",
        "cursor": {
          "ref": "ee9b9c4b-6499-4b16-82af-2d17c29c433b",
          "length": 157,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fd09c611-d43e-4fe1-9cfb-b250b132eaa4"
        },
        "item": {
          "id": "e7806ddb-eefa-4309-8fe6-54c062150218",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bd059700-e51a-41df-a4d3-393641bf3aa2",
          "status": "OK",
          "code": 200,
          "responseTime": 1241,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8cf052-581e-40b0-88eb-2cac16ab98a4",
        "cursor": {
          "ref": "38ec098b-8a56-47de-9bc2-bda7029300cf",
          "length": 157,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2fb592b7-6d3c-4b15-bae9-801c5c5810d3"
        },
        "item": {
          "id": "be8cf052-581e-40b0-88eb-2cac16ab98a4",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "e50440db-3473-4769-9133-6c135b748db4",
          "status": "OK",
          "code": 200,
          "responseTime": 588,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5dcc0a-68f7-480a-90ab-5f69e2a61b61",
        "cursor": {
          "ref": "b0ef0408-a36f-411b-8616-fef5c1b5b67c",
          "length": 157,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "25e4ced3-5368-4007-9e10-5cbb94aac497"
        },
        "item": {
          "id": "3b5dcc0a-68f7-480a-90ab-5f69e2a61b61",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d3eb499f-61d1-47de-9921-4a3e0bc79df1",
          "status": "OK",
          "code": 200,
          "responseTime": 946,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff05aec-0054-4176-8bbc-a3d030319e43",
        "cursor": {
          "ref": "e200c762-1ef3-44fe-b2da-72733fafad29",
          "length": 157,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "41e240a6-a59c-4758-b2b0-9e089af0301d"
        },
        "item": {
          "id": "eff05aec-0054-4176-8bbc-a3d030319e43",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c82b4ad0-057b-4eb1-8546-18ae17f64fca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff05aec-0054-4176-8bbc-a3d030319e43",
        "cursor": {
          "ref": "e200c762-1ef3-44fe-b2da-72733fafad29",
          "length": 157,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "41e240a6-a59c-4758-b2b0-9e089af0301d"
        },
        "item": {
          "id": "eff05aec-0054-4176-8bbc-a3d030319e43",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c82b4ad0-057b-4eb1-8546-18ae17f64fca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3f1004-b2fc-40c3-a78a-ce8b6e9a3418",
        "cursor": {
          "ref": "29da833d-67ec-4d2e-93dd-394ed6b01a9c",
          "length": 157,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "16681e42-2e3c-4f07-8565-c0853332ce50"
        },
        "item": {
          "id": "3e3f1004-b2fc-40c3-a78a-ce8b6e9a3418",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "e3e4249b-6010-455c-bc71-5a8fccaea74a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7101c7-ca85-41db-b9ac-df2aa77cf58c",
        "cursor": {
          "ref": "7c17649b-5ade-45b3-a2c6-616fb7e90d6c",
          "length": 157,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "660c65bd-2c01-423e-9d90-33a635d5cdd5"
        },
        "item": {
          "id": "da7101c7-ca85-41db-b9ac-df2aa77cf58c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "88d558d8-5c64-4146-84bd-22666a058133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "da7101c7-ca85-41db-b9ac-df2aa77cf58c",
        "cursor": {
          "ref": "7c17649b-5ade-45b3-a2c6-616fb7e90d6c",
          "length": 157,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "660c65bd-2c01-423e-9d90-33a635d5cdd5"
        },
        "item": {
          "id": "da7101c7-ca85-41db-b9ac-df2aa77cf58c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "88d558d8-5c64-4146-84bd-22666a058133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "22cffe19-ca9c-49ec-bfed-a2ec2109f1b1",
        "cursor": {
          "ref": "808ad81f-fa75-471c-9bd6-9f986a9065d3",
          "length": 157,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "104452b1-112f-4b58-80cf-5282dc6f93a8"
        },
        "item": {
          "id": "22cffe19-ca9c-49ec-bfed-a2ec2109f1b1",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "e59486d0-4bbf-4e4f-8c1c-d8f4d3f1aab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "32d2a052-153a-4073-9269-2bffd7aaef88",
        "cursor": {
          "ref": "0e6dea3c-a49a-4016-8e29-a8e0d23d3d39",
          "length": 157,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0636649a-9d27-49c9-98f5-854bf7b06f04"
        },
        "item": {
          "id": "32d2a052-153a-4073-9269-2bffd7aaef88",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "284d07c6-9678-454b-bc04-6ce3a62bfde1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d2a052-153a-4073-9269-2bffd7aaef88",
        "cursor": {
          "ref": "0e6dea3c-a49a-4016-8e29-a8e0d23d3d39",
          "length": 157,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0636649a-9d27-49c9-98f5-854bf7b06f04"
        },
        "item": {
          "id": "32d2a052-153a-4073-9269-2bffd7aaef88",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "284d07c6-9678-454b-bc04-6ce3a62bfde1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311e1877-f5c7-47c6-ab17-47ae48c51de5",
        "cursor": {
          "ref": "87aa52a6-0c9a-424d-bbbc-4b0f18e3697b",
          "length": 157,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0a3269ee-2245-4ac7-a266-f9263fd0bb86"
        },
        "item": {
          "id": "311e1877-f5c7-47c6-ab17-47ae48c51de5",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "101cdafd-0b3e-40a9-9f25-7b3decfc9d5b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}