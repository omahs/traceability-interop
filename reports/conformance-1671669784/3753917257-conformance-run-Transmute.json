{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c06f3d81-5fba-4c93-a160-2d4e60292fdb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c37cd0a5-f4f1-4303-ba2a-d73984152aef",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5f33812e-4985-4b56-99d0-e0737c48349b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "861408f2-8038-4960-bc51-e172072db7a5"
                }
              }
            ]
          },
          {
            "id": "58f8245a-5521-4e99-a0f6-fa4e60b0be28",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "70181a37-2b66-46bb-9e71-edefd1d05bd1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3efb045a-c448-4536-9d73-abb04033a85f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7143d96a-c273-444b-97b1-26454d992739",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8e47b5e1-642a-49e2-bcac-213249013c9e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "75e04682-ec9f-4fef-8c90-10386b40fb0e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac30ab56-96d4-4240-8e81-637256272777",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2e76f1e-28f5-4542-bf94-50e10b8d0411"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f592bc46-17c3-436a-9668-8bd09a2a10f8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c1e894f0-640f-42e8-9cc5-316e17a99a51"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "45becb81-b14a-46b4-a7f3-0bc41968d9c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ce5bbed-1792-4d78-a592-0d3a507f32bd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c83840ea-dcb4-4e3d-acc8-ec723a933d6c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "190d10f1-32e4-4f06-98aa-d335276c957f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7006ea53-b816-4759-bc88-61e20dace9c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef189dd8-7be3-462e-8d10-7561abd07c13"
            }
          }
        ]
      },
      {
        "id": "87e4fc9f-79f3-4b02-b47b-0aa131b899c3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8657eb7f-8f86-4dc9-b510-bb41d7b4bce0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c9d4886b-cf57-45bb-937a-9703c3d2010a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "893ab6d6-ae4e-4824-a09d-2926a1544649",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6773b1e-affc-4bb4-83c8-644427cd42f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3175849e-540f-4692-8246-71702ef85916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773b38cf-317c-478b-b41a-3fe6cc61f327",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f5142f-bcb6-496c-bfe3-5554960ac266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3598c97-8523-4e90-ac2d-2968ab8d897c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27a0823-513d-4b82-a073-6426376bc190",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bce9b2-a0ac-4633-a19c-aa3cce986337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9eba226d-32e7-4f72-9a63-a68bbfb849a4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5feec698-2152-4379-93a2-3abe8857090c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "866091f6-527e-42d3-8eb1-8f9873e5d2a1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d185e83-42ec-45d4-a7f8-dd80727499d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35d30adc-ee83-4f01-b70e-b2f6d3c3cc89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da703cb-0b0c-42b5-acd8-aec579f49992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23525cc3-2f7d-496e-ae0d-a3f7d798a09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccab27a-3e29-4c43-81a1-ddbfb7ae2a9c",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb440d6-75e1-4161-8a8e-afafe5da5161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61f74f3c-b050-472f-9cca-9edd4ce5dfd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d366282-097c-4a32-9f7a-a3486d1b9aab",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "be909760-8a10-4896-a498-a5c84e413ccc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6cc9b2e6-2972-4b94-9c19-b4a14d67862e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "34fda921-5719-4968-99ae-ef181bbafb34",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5985e5d0-0fe7-4c20-aed9-e3e531dab574",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "79de82ec-f82c-4840-b63c-12fc3bf2d79e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44fa876e-f759-480c-a010-98e896bb2861",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "770a1b94-e880-42ea-95cb-694f38456307"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "671b6291-cf9f-4a90-b063-389ee67f4de6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba4bfe23-7f37-463e-a7d8-7d8c3fea0502"
            }
          }
        ]
      },
      {
        "id": "ffb2fb14-85a0-40b1-9889-fb195bc601a5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fa40f90e-f34f-45a2-aa5a-e3e13b73130f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec275960-f9db-4e9e-940c-deb08f156c80",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "33172e53-16a1-428a-b00d-29b1213a7c42",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578ff439-a0f9-4764-a573-1c3ac240fe39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a94268-0b14-44c4-a9e3-fd16b170249c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a555e0ba-33ea-4dfc-b280-1a8986ec44bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22666837-3e95-47c2-b986-b2ed46c42514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8928594-a313-4721-90a4-885b781bbb9f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f909df3-8133-466a-a2ac-6243e79dfbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1564b403-eb08-47de-aef9-5fe3131208f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c74ae0-7506-41b0-8fdf-b650f6aabc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa37da28-4171-4b8a-b3d2-6291bd062763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878b028b-eac8-4398-892d-d0d178410ba6",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9deeed2b-538a-4c10-998c-4354c9218fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65eec4db-4e93-4d4c-876b-c1d6a2a872b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b804e49-a133-46d8-ba58-55aca0aea966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ac73066-6f1e-4241-b45b-cb7abc3044e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134947b4-aa17-4c2c-b1df-64fddb5840b5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae74ad7e-e30b-4630-b6ee-17b15d322730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e158c4e1-5c43-4aff-9ecd-046fe1a01e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb6d400-78e6-4de7-8693-1b068c9a5994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbf06e75-acfc-4af3-84f2-64f336cd90b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a43666-445d-4c54-b99d-5a914ad8ee85",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8244da25-5507-479d-99d7-114aa9f9e38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd06f5f-f54e-42a2-9044-1189aeba69d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be0ab74-0716-43d2-8d56-b4af649a1966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8087eb5f-ca6a-486e-93ba-ae3a7845ef1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8b3ec6-dcb9-4bfc-8f3d-4e5f5ba01640",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7527f1-7ac1-4028-a90d-e113f59a2044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9522b1fa-b9f0-4cde-b438-29c3a5a5c246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96288f9-5008-42aa-81ed-d72d4db14d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d16faa4a-2191-42b7-8cfd-0a097291e893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb02eea-4732-4b3f-b814-fa62f9883620",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788e40f6-fc60-428b-9669-9d23064ac41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae25aec-93ff-4473-b099-10896e7126b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6523457a-6d60-49e6-9201-62777c5b26a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "590191d5-d70b-41ab-8546-51f323694b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3c8eec-417b-4130-a8af-fc60504646d6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e44091-ceb9-4ed6-9b08-ddde2001bfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21446d1b-918b-443c-bf2f-28a7c5bfec4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5c50b3-4342-4a25-97a6-6ee1732d24f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cb7b417-ef9c-45d0-8069-488fbc0fd6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053d180a-3b30-4140-a757-64eb7f60410e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0cadb27-fbf9-4c79-8bd5-89c1ee20e2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a57b739-c2ce-4120-88a0-4f83b88bfb6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123a655e-86ca-4a99-a330-dc21df13ad54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e1f3e80-cb08-4946-b21d-f294991811b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56cb51b-23f7-49c3-8ab2-b69fbbc6d892",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f82efa-c6e9-47b3-ba3b-23873b5d6fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e220fd-39ab-4898-b5a2-21bf41a83107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50075b2b-0e42-48ec-8aef-059b8f1c9600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a341178-f833-4e90-88ea-a4851f0db339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d088bf-61bf-4bea-b54a-85efa86f0b17",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4917f41b-a541-457c-9d57-365deff31d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a11725-38d8-446d-b67d-444cf9ccdf18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b151653f-4b20-4665-8453-e9db7487862e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e00eb5ad-7023-486f-8b00-d835f7728e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b93780-3e82-4667-94c9-989cdad1ec14",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8833e113-bf58-42b4-92b0-658d64d0a8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f56e08a-1a60-4388-ae7f-5969829f6076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6c89d9-e79d-4315-a90f-8bc5af202809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce032607-b1f7-4c71-acf9-2015f0118df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4c1341-3f13-4ca6-abed-6caa6ee4d132",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8499de7a-c5ac-440f-8a41-b11c33e1e596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22f33a9-6b20-4e97-a929-6616e1019b18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66dce1c8-e18d-4639-be23-a68e4a378669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b01f730-90c8-45bf-8142-a4bbd619451b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbafab3-adab-4372-bf49-014b451dc226",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac47f6c-3520-40dc-b29c-acd54263448e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f465c01-3024-4c78-b86a-654209d9553a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dff3074-055e-49c1-9629-a77b5c80f1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "18054484-b01c-44cf-92a9-d67fe308b0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b9072e-127e-4543-b4ab-9e2d3176323e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a90ecc-cb71-4e26-badc-50a910e9ebb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9af4a6-e456-4e9d-a83f-502e128fbc81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc7e7d5-74db-4387-acbc-ae0dd0692f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3669bef-2cd1-410f-ae6e-8afb28d91519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddbe204-b5e3-4153-b01d-9179980f3752",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925247f2-d4b7-4990-9bdc-caa682d59b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5708300-1cf8-4a8d-b41e-41b0568ee758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdfe5043-13cd-41e6-ab9f-8fed95624cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "489fc364-ee9f-401c-b8a3-d48a008ff9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbd1697-d346-4db7-87c9-ec5b3eb2d14c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9186e5cc-2450-4b42-b7ac-1ecf718ab507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d809dbb0-cf61-40b0-b75b-4f6b86bb479c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb153491-312c-4569-8b35-dc4d7480a64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e26d7042-1ff4-4466-abb7-7023094070d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae02ca73-0ad0-4974-89b0-31374548dc97",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43f6bb1-7c96-4cc7-bb4c-657e686d273a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c046d91c-e47f-4757-9412-72d90c6c5cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722ec25d-488f-43e0-a621-316cfe4c6428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c245150-989d-4852-ac82-ea84c2e60291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d89a758-f6b8-47f5-b7b0-d309bd66cf03",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999e4481-9a17-4377-a555-ba130f76b239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5a6113-bd71-427d-ab08-3913713a56fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0526526b-c54d-4e0b-9721-d82a0a797f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ed2a30d-e6f3-4f5f-8759-6c7bb0bd38de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef785196-fc0b-4af2-b6ab-2b183515c0a5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7f6e47-8f5e-4263-885d-f4799cb824ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe985197-edd9-4640-badf-503545cb633a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cd391d-6021-4ac2-bddb-d9c9478ab6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d137c4c1-da1a-4984-b362-4e6a24b4cee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d54495-d03f-40ff-91b5-af1e11803da8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47d6780-8d12-4594-8130-f51929549bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45bf23d9-60bb-42c3-9c63-12711cbcd227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f41a71e-fbf7-46aa-8a73-2fff039ec664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d9c0f5-f1e5-48bc-94f1-60a210c1ef2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d4f2de-e045-4a4d-8419-8eedabb5e307",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fcf938-2c62-4fc7-9092-527e4af946f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c6182af-cc3c-49d9-88a2-2f1d89c867c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5707cb1-78a4-4117-a345-7108f307c3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3a8a673-25f1-4123-a850-6dacdf4549d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5c823f-4186-4f68-b39d-11abfdded396",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c0bc1a-4896-46cf-a845-072c1e698472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7325638-5d5c-4d92-ba64-6c7beb499564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda6b811-f7ee-40b2-a94e-7aefe49d5b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0108563-acea-434d-9f0b-8e4f27215c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ed4a29-0e8f-49f6-966c-68a880ae589e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636c1670-09a8-4e76-8d12-30e57afb6740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c1b30f-f879-4459-8f04-ac0e97f3095a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60497801-2782-4ec5-b1a3-a71061e65d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8388d926-52a4-4510-aca4-29bc6520ed25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0976a4-faef-4ce9-9cd1-b60508824a47",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec2db1e-1a18-4ccf-84fb-67d4574ede04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425b8ed8-18e7-43fa-bb85-795787f68865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408b81b2-b090-471b-8760-c28154d13962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a2a271-1c1c-403b-8874-3382ad960f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05a66c0-7be0-49b3-b7a8-2835cb7ef1c8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ec5192-87c9-4f4d-a7b7-11f9453a0b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef73c7ac-3d94-445a-9c9c-bddc3971aec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52579555-00b3-4e2e-8d27-d9d63ac8d285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "57e7010c-748f-4254-980a-c755babaa20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06c00be-3f18-4881-96f6-b3ceb68bd47e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2afcf3-c74f-47ef-9ece-5427bade01a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00c29cf-8a34-420a-a348-b04046e36c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d74588-7a60-4578-a3e5-ad0f2ce1a573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a36f6fe3-6b3b-48d2-b3c8-e73ff991a734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1498713-3faf-44de-9b81-1e82dc405bef",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740e9502-4911-4946-ae49-04bc7930dd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4271ae-f84f-4260-baf8-f13d198042f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9c7c00-e0c9-41d1-ba9f-04a07b412d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9d0d4f-4bcf-4920-b10b-9f3e4eb3e1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c527d597-8966-4ba0-823e-98f6523c1282",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aafaf64-eaee-490f-819e-d4924bbfbc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b26b67-b5cc-4167-8cf1-ee606dc3d46e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5602220-fbeb-43e9-98cb-9f0258cf99cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c00dff4-2e09-4784-b528-264501171b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c493c57-76b1-4049-abef-2556f3c552d9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4f3934-5c3b-4fa5-bc59-d6854464f374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d894ef-caba-43a2-8dbb-1451a419df49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956643ea-7931-4882-93b9-ad33de4f97a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d011039-bb31-4f76-98b8-4f996968e846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349cb0a6-5488-49d0-b4de-80546beb0196",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596b5e07-fb69-49b4-9dfe-59bc4575b24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4bd842e-d388-410b-89a8-d2bb6dfd8f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570d0aa5-d08a-429a-a66f-a52714958a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "db7a0eb5-98ce-4c36-81a4-ad97fc595872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f48df2-e9f8-45d7-bf9d-b753f732f915",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96abc5a-eea2-4924-884c-1348f17859bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce23a7f-84f4-41b6-b80c-d68f848925e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d57ed9a-95b9-4bce-9e31-c2e62de593ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa293e9-f958-4bdb-ab2f-a4ee3c0675ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6f4b69-c13a-474c-80e0-df10fbf2a9f5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cda771f-bcb0-478f-8f58-7e78710742c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0dbdc37-35e8-4f49-bafc-f4f5179949e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f36a397-dae3-4bbc-9b57-7331df7925af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "375dc961-1d07-4142-a515-5a9cfd71953a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec18f5af-d03a-4939-a0f8-43e999af9722",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b8a3a8-800a-41b1-9fb5-9b5eab1f6795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c810f292-860b-4d58-9811-b75729365277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f353ef8-8a2e-4ac6-a9fb-ece113d4659b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f141c9-5c68-493f-b59d-b80bf268c935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c63e9be-fde9-42db-b037-532736578dea",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb52155-6361-43e9-9545-babbfbb15285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea39f0d7-b132-40f9-8a47-54057a2faa05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c5e389-b515-49c6-9e46-c055ec6cb88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7163625-de87-45df-80bd-1617232071e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8837ee5-46a6-4877-a5ba-0b43a993eb7e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bca98cf-bb16-40cb-9992-0ef05a47ae86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7d7f0c-5030-4b25-ba69-861c26d27fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04989fa-4d09-4f3c-8f38-1a6db7c06b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43a7830d-e003-43cc-9486-0acbd72c3cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5b4840-f183-4eee-809c-850f1f063ffe",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d2aa4c-4339-4c79-b829-ff5b4c959996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4a0c35-7149-40fc-b23e-f1cbe176b9ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1485e702-bfc7-4cb3-a03e-023a8044740d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ec92e8cd-ee23-45ad-8b98-d1b9ddd0844c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a4abd7-b71c-4348-a3f0-e83da074b0d7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3841549b-8d94-4892-aa35-4970b61433f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8a10d8e-6178-4750-bf53-2a7093242232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50a7466-1595-4ca4-a530-9f094be26e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11e9ff13-e3d1-4a36-b37a-8894bd66f1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd32aac-13a7-4b0c-93dc-2bbd420a1b79",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2a6470-d6fe-41a7-b7d1-11fcce2ce7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e181ad-194d-4e9e-a726-313de62baebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cca987-e71e-48b6-ae55-5666a4a836f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "81d2417e-bb5f-4825-a1fc-c2307f5df61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca1194f-1b57-4d6e-a5f1-da422251c14b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e560d59c-6089-47f0-b81e-75d8cba7c9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3c993d-8b14-49ef-81a9-9f6671ad023a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b612166-9ffa-4076-950b-537e803a95b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3fc1ebb-ea23-43e1-a2c2-3e48934063ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0774f294-dfd5-49f6-9e4d-8189815c8a49",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea1a222-e7e3-4575-9c00-89767a0be8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c933e7dd-ca5c-4270-986e-5ffd31c23230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5201886b-ded6-4932-92c9-09dd4f4131cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7166739-7112-4124-becf-9f4fabece6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3367a6ac-1367-4e27-8276-9b17d4bc9b88",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94e5162-60c0-49da-8d4b-3255af727a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e8ef58-0b6c-4615-a6a2-9c0dd5875b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edaf620c-65a5-499c-ae09-b64fd05a2df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c422c5da-62db-4acb-a78e-eb561a7e1c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd139a4-f2f8-4b78-b194-0e066300f69c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0610c9c-0af4-487b-86fe-34d59149ff03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e05ab2-778d-4656-a65d-d317fb6a9a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03966bf-a716-4c8d-b6cb-e2ca7c64a596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "75d46506-888b-4858-8efe-cbadd768cd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6214bfd7-c954-45c7-ada4-4b74bc379f01",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf70ce5-f757-4f51-8a81-12402bbc9a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ee65f5-b994-4c0a-af24-94123c6029d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c65b6c-d016-4abc-a076-3f8b5d9f136e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1a3048d6-d6f5-433f-8794-9c239b4a5001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5b21f3-8164-47b4-8417-416f03261a24",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d922ab3-f712-46c0-871e-744b14634271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa66722e-a828-42c3-ac51-e2d183b57c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25bbdbe5-7be6-45eb-906c-74dc99799b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "40b57149-66c9-4005-89de-584ad031d7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c3c40d-4536-4c49-8aba-9db35336dfdb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3921625-5f97-41f3-bbcf-30ca28a69d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6145077b-38c1-4ac3-abdf-9b3d7871b5c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a876642-4a5b-40d8-9149-6bba995452b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f44c0d62-02e2-47dd-8033-d7bbb37c94ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec21b45a-16b6-48f9-a773-b3c86ca8967c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8624933f-62f3-4f21-9990-d9838973e02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf4ee1e-0776-4af6-a53c-bf2214206fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05927f15-78f4-43bd-8aef-b869f1c76e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "73a1554d-0f86-4b76-b5fe-9fe1f2b9b1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd626a7a-351e-49e7-b0bb-4e91782193ec",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8084dbf-06cf-4525-990b-dc633b8c1efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ace5050-bf86-49d5-9b2b-caf893e58ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50de7b12-c0d2-4bfd-85ca-24987168e5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e80c0beb-8c78-48b8-9394-4b38d7a64d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e24cf80-8784-4026-998c-b76c55383655",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e67f2d4-6d22-478c-b952-d3002defe603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617afb2a-1d30-479b-8657-63b7ce2bd5fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36547012-6b70-4789-a4d6-d2a5442e374a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1e9bb4-8cd7-45f5-a611-b1102881ac07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbee7a5a-9669-4475-9191-55e38faa942c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921bec21-0606-4f21-a01b-147745cecf26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01536cd1-f69a-4733-a9aa-bb50af71041a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a62332c-3bee-48d8-b043-230a819b94b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "babe22d1-669c-4b65-b89d-89da50a5a1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a414bfbe-dfeb-4188-acd7-fe74fbd0f871",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e9d249-c86e-4a58-8bb0-aec174348f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3794f558-a51b-441f-9d08-a9ed93dc86f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475b03f4-519b-47d0-89a7-50da8ee673d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2421af8-fc48-4f03-84f7-28dd46e0ed96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6af6cb-3b0e-4bcd-80e6-cf044d123c8a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ea37de-e710-41a4-ad0c-5cb479e88336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270407d4-d711-495e-a04d-5da6029b996b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b298147c-c5e9-4a15-a59a-b0b9cf5d36df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96eb09b5-aab8-456a-a272-c7496b59e69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9433b5ad-3e57-446d-a027-6e1f612782a3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1489d30f-b5c4-4928-bb6c-6c69810c4cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37872af0-4958-46b0-9d6b-a59271e41bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a39abe-f520-410c-a71a-10c6f41998a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb95185-8144-4820-a395-0c9438723208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d3f1fc-f357-4323-88f3-39ef846a4817",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7d0ce1-f247-4121-a2bf-35fba4f5933f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b8ded4-f2f4-45c8-8716-44bb0b2b5e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e65eb88-1885-402f-8c19-314b903bd218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e15cb3a-80a5-4db6-9538-a4a5f03e5634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1294c5-37f6-4d5b-84e6-93971edaf40f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2474c84d-e1cc-4cec-bc63-668829e79c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603f0144-4aed-4017-bf8e-a0e3fbd152f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6e4770-0916-4162-a399-a1e52e42f07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f41371d-f980-4c31-8f80-fa8e438e86b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b64ac8-618a-422c-a505-7b4100773c57",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe41e63-32bc-496a-b831-f051ffbaab9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6baa24e3-c219-403a-9e51-b62d9178ed5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf8cd73-1683-4e39-9ec7-fcfa7688899c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04ed9159-cdcf-46e8-9098-53722390a7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31da1fb9-a14d-486b-8165-4edd2786f7c2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944d3172-1b82-4d2e-87d3-21abb7277ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aeb84d0-d623-485d-ba9f-a78d881567aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048317a3-f5c5-4767-b727-a79b53131c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a10724db-a035-4faf-a4fd-7599f3194803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57fe8af-358e-42e3-9e1b-72b38f35a08b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d338c5af-bc83-466f-bb34-1dbb49ba6b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d117456b-afc7-45d0-9c2d-f495c6a79439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0e9e3f-90ad-4152-8f3d-2e8d150a0b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "99a8f752-5b1b-4df9-ac72-ed5c5628421d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a19961-f3fc-4239-b233-e00edf925718",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b03ac7-e184-4738-ba9f-c76caae30823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd95e86-eaef-4b36-a2c8-a4fc455b524b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0539bd-e549-484e-9ebd-b1c8b96b35cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f241fe0d-c653-4c0b-adbd-5f69c7362423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1566e463-1c43-4a8a-afc9-a61bf5d0c7a7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7703d0-7890-47e2-8f8c-cf77a4f33303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7554401d-af43-42e2-ae7f-9d44751ec258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2ecb81-ffd0-4aa1-85d5-d956edabfec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf3d9965-533a-4dcc-96c6-1ab7b4f039a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3878b7-690d-4462-ac76-da595607c984",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "231c02b5-d864-40e0-85e1-e30fcd302b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197440b2-ca90-413b-869f-c05d5de5db1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1d7439-ea7f-4d78-abc9-4eabd2df96ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0920b2ec-85d4-4986-9698-b1ffbe40b35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56501ac1-1862-4c19-af08-5f31219dbaa5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa08e7e6-981d-412e-8cdc-b2903979c843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d50716-4600-4611-8c97-da0ea93c0a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc1353d-c221-4087-bfce-6ecfbc32a8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8a2e06-7f12-4031-ab67-0a3647c1a6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323c54b2-63e5-4cab-97e5-31c19ecbdaf9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2703fc18-2b1c-4a17-b076-2f7e81ea5d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73fdc887-dbaf-4853-a0d0-5d1135a78ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1117086-4c3a-4586-9879-835ba630189b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff79c32b-4579-4464-b4ef-ed47011fee88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65033653-b652-4bde-aacd-a3ddf5807b6b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d3e97b-0366-481a-bb2d-6b4f7e67d520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9e4e12-1954-4428-8090-cc015c7afbb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ebb457-9988-43a8-bfe2-884605d4a9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d67e0b-33df-40be-928d-2361c30968aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259d8e48-9686-485d-b181-4e65c6d19826",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f9ae77-ad53-4e90-bf9b-2dc5e09ad45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "604785dd-15e5-4573-bee8-422427f47cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ceb7c88-4aaa-4457-8ae4-8f7cb65a05f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "df22944f-a13a-4ec7-bed9-41903b842c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50527fc1-bb2a-42ed-b4f0-93d165843cbd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a170eb9-bbc7-4bcd-93fb-d46193bccea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386ab322-181e-4692-b292-222e0ac59c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9e2d27-ffed-4f6a-9a4c-bc3c50bbbe1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7b28d3-7da6-45bf-bfd0-22202c377610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da4c819-fd54-41c9-8d72-b246fbf01311",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af55094e-0d38-4d61-aa42-a0dbf1e23576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21600852-24ca-40f2-b380-364592b23299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3338a0-e026-4102-a0a2-51b8ce6f9450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "811a88ec-ab38-4aa2-b3df-b8fdb4d2433d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8f7b93-50a2-4982-afe8-70d4b2108732",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4e0f3a-baeb-4f95-a10d-059afee45478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5e0e7a-3b3d-4782-a3cc-1592ccd3860b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32278b5d-0068-41cd-b447-b39b2eea0ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7f122d-31ac-463e-845d-edf88f3a7073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a784c23-3118-4a6a-82eb-e50e77901c9d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10901bca-877c-43c8-a5c0-2aab6404b263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab751d7-810a-4dbf-b9f2-48e1c4e9abe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda9e520-54ea-4170-a94e-2b760d6b0637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd8e11b6-5d5b-4665-bca7-19d4d162a55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4fec30-1833-48a0-a33a-e722c74af75c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d79498-f211-42ac-a08f-d755e26153d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e9a2d10-daa2-4a27-a624-fb674469dac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb45521-8184-44a9-a5ae-0848e3a228f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf396e04-290b-4283-ab65-8f3e1eca0ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34cfc567-230a-4828-a430-1bc22c42b2f9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863658c1-6310-438b-8a26-7fb076746a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42870631-2210-43c9-aec3-f4227f642303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427793f3-406f-4f5f-a203-38df1d38e43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f83600d-99a8-4c73-b9ce-9caeed63b27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba5e190-694e-4134-ac43-9b3802c909f9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57bc6db-08af-4d33-a3c6-d605f8b8e03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39def65b-b043-4cd9-b8c3-e61828eb46b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62fdaf75-5a6d-4733-b808-b08f04eab06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b02bdd1-8906-4909-ab0e-dac712ef106b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268187d5-efca-4bd1-ad6e-9d4bbb6e03e2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243e6811-581c-4d3f-9d43-3c294ebcc2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274cedcf-9b54-4486-aea6-2ac0806fece3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eadb934b-1238-4273-8ede-4f296262b244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42814a77-83c2-4b33-ba5a-789a2b68b81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c275056-509f-44b1-9ff8-94e8771c978a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72968c44-cac5-40e1-a852-e6f6167cbcd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538f7353-bcb8-4747-8516-dac14ce632cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df25891-7188-4a94-9c78-49167384a234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc71b0d1-d486-449b-84d4-2c849c2ad4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9d4520-ded1-4059-8edf-63e648018440",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9ad00d-f399-4db8-b6f7-c8cfc670c70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308b00f7-f670-4083-b6aa-9bbaf580aede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c13d31-a23f-478f-bce0-cea3709189a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85b54560-649a-4a00-ad70-f54757b60620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2da3cc9-a647-41bb-b816-f0b4f83f58a5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e65cab-fd64-4d24-9f48-717dfa7e490c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7171af-0291-486e-ab8e-d4a3d32adbcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3528485-560b-4854-bcad-99360d8e2679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb859048-6652-46d9-b98a-a1a907c94932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fd0f80-6be1-4d11-b17c-645fc3df6841",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb44ada-0872-4648-b0e8-9a240e21b87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fbbf15d-3002-4b8a-a9d9-537dd3dc494e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c7987b-639f-405c-96c8-2b20fee702c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e63e5fba-0281-4419-98c7-d4f397d68054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30eab92d-0061-490f-a411-be6db2387fa2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cf9672-e4b6-4a03-9099-5d1571590100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd76384-86fc-4e33-9dad-e49bbce4f967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a8032c-c69a-432b-b076-6f83d48afc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0a97af-7527-4d61-9ab3-f52f55642a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02392a06-8efc-4811-9cb5-f254a8dcf996",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6dea21-78e2-4d00-bba9-497379e39278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "486e8b42-6fd0-418d-87be-b81aee912136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614c0a11-dfb4-466c-89a9-cb1740df8670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26f213c9-208a-440e-8194-0a1b3ec09536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6a7e96-d2a7-4408-bf75-9793d533676d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b41f6b5-86ef-4b02-813f-c904de722268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e85dbec-b6a9-40fa-8706-79da0a56e87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55390f58-9e30-47d3-8fdd-69150dc9c559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "002a0de3-2f9d-482d-a8e1-3cbbedd67d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5711a134-1702-45dc-942d-89fb41406ff3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e89ac6a-4886-4c8b-8f7d-4ca54470c07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a81ae7-85d8-4e10-a27b-eafc06d15510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4746269f-3ada-4421-9d35-b8d89e4934c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b73537e3-7041-4c33-aa1d-bcce7d1f5764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0cadb0-0f8a-4fa8-a139-d16f36d915bb",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd06f042-3f7e-4fd0-b1b4-d5085caced22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb246a9-9300-4aa3-8fd7-995187a53ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167b72b6-8fe6-4d7a-9b45-e207f75756dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25755562-ad58-458f-861c-4ef6ee338040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb43f31-2be8-40c3-88d5-97f77ae1474c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88d6014-453a-4779-abb7-1454ee3dece8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e98a1d4a-30c8-4eca-802e-c9a703d07d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004064d6-7d8f-4c13-9313-1f121f238863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe14e833-a9b1-4dca-b5f9-da9ce01434e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35b3eaf-2e6f-47a8-8d0b-8ae90219e966",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65e32a0-d215-4515-b14f-421b11a23d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd32affb-97f5-400e-82a9-4accd74233e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8a29e2-1ee1-45ba-83e2-a51416ae814e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "275c553f-853d-4605-b848-26f7f4e39947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31cdc519-a0dd-4883-aaf9-5926e6dd6acb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef21c937-6247-482d-9ac7-92798241769e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d85713-bc01-4dc9-b6a1-c8d7ead1f6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ab6f7f-68c2-405b-bfc6-1fc8ba8472c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8708d04c-43c3-4a7b-9030-e80c53121b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a64fd0d-5a55-497e-9209-c22c333197fc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbdca6e-19a4-4890-9de3-52227a9ff49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c078c7b-1927-4f23-a495-441910c38aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834afa57-3491-4069-a0b4-22ee0b2fe0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b28b5322-116c-451f-af9a-ed3d055cb75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34e3290-d8dd-4bf9-bc4f-e4b562008b74",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f29607f-4eac-4605-a5e2-bf22b71337a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cae0845a-a76d-4d97-89fe-fc63db361d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eeb0527-0b1e-4e99-a2eb-dfab10c04b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59925bf8-9dc9-4148-b3bb-c2be7db65a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e7f74a-f24f-49ce-8951-50de90e956ee",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb367411-1e78-4d3e-be04-45f5af07efba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b27516-4e4e-468a-a131-fcece0674126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91c8cdb-42d4-4a32-871e-6d054b58294b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f250dbe-ae0b-4d89-9df4-80428a43c188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b813cd-1167-4d23-a022-3b037a6bbea6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df52ac8f-d01c-4ace-b9c2-e54e495eb682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be449749-2f3b-46f0-84ab-820324930962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7313b5f0-da77-4924-8448-15e5bc9ca2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "390d510b-8ae7-41af-a62e-1a79aa9a3f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5ee14a-63d7-4b2d-8083-9c049ce8705c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b291ca-7140-47b5-8f34-b2bca439243d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33abd8a7-17a5-4d6b-928c-333687c7a444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7467933-c3c0-4444-b748-5c7e365fb020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "757a40aa-5634-4654-9658-2f57f1a0b5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55cb340-5024-4a24-a11b-0782eb0ddabd",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b6f17d-56ea-460c-a0c5-49b8354895c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e8e012-ac16-4c9c-836e-8220e2dfc28b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbaca9f-21b1-4006-8bdf-8aed6e930883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "10c407bb-6f74-44c2-9f70-27fe02e93e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2849e7f1-79d7-497a-b409-77983e76f652",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3f4a37-9d10-4bdd-b3e6-8684e22719ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8658dbb7-c662-4aad-88a8-5ea05f0f04ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6a2d5a-7145-4696-87ce-ffd6452f18c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a274ac1-3087-4003-b243-c5b2c8e453ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760c9ccf-5146-448b-93bb-b7e3ed915079",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "decfef4b-a6b8-4eff-bea6-0c6e719eca7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d50a0ad-fcd2-4784-b6e4-0b84bd711d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13591a1a-7ac5-43ed-a4e8-2a06df31c8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b56add5e-e558-46aa-a5a0-6b119312ee70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f40021-678d-4583-8699-ac6467bed784",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61c4106-904c-4ec7-b422-214c2db8d496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e3912e55-0b53-4ef9-a1d0-9200ffb4bdc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17896256-53bb-4fd0-8f82-73a69b873e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "51903ab5-005f-4977-b8a7-1f38577e9435"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ac174416-6fa9-4472-a462-0ae4f24fbebe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "86d38f30-e084-47e7-82d7-d9d6a9ab9d0f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04965285-7dc8-4405-9578-122697db82fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "015e1407-7175-49c5-a0e5-72f6d1c18497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558232aa-6c7b-4d35-b7be-5afb9ea491f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "c468c921-2e71-4ebc-b4c4-e813ecdc3022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f8d652-c97c-41f9-8433-8a2e06f07ac9",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff34b82a-03f7-4ad6-8e8d-ed0a864ac4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "618da5b5-9a7f-481b-9803-7aa0a0257fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca1ea11-d186-4aa2-a4f1-1e1181f18e41",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "00a443d6-9e63-48b0-ab0d-bc410f4722c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "734bcc0b-dca8-4450-811b-99d7d9b191b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "629298dc-e26e-49e0-bf59-3ea72a5537c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36dae9cc-2f64-4e6a-b030-48c17cd8790a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4659d5c0-dfb3-4cbb-bf31-a4b667e91de5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8b2974a2-f9b9-4d7f-b166-193bccf06503",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e988787-5a77-47c3-8a8e-07c51bd6a759"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "819c99c0-647e-46f2-b162-a806194d4c88",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e7c90c5d-3413-410a-9ff4-77a3d6b79bae"
                }
              }
            ]
          },
          {
            "id": "c4eb407d-3fbd-4cd4-8972-46cd81ecf8da",
            "name": "Positive Testing",
            "item": [
              {
                "id": "63803523-3c17-4cbc-8f71-977f2d1c4d51",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "907f8e95-085d-49b3-9719-1018a61800af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5928a5c5-19c7-4623-9264-1ed3015230d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b595b59-2bbd-4256-8f2c-b950af01cfd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5f4f1be5-37c4-4094-a49d-c5c301db5ae1"
                    }
                  }
                ]
              },
              {
                "id": "3fe37d00-dc9b-4db5-a92f-2ef5fdacd707",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8625e19-74fd-4749-83fd-47df6420b3f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "59e5cc18-75e1-492d-9b73-87268aaabf59"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a3576af-7bc5-4287-9c31-5878f2751f8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "08c5ec6d-1194-4e6b-aa99-99c64d125ecd"
                    }
                  }
                ]
              },
              {
                "id": "c96c3297-8aae-41d6-b3f0-391d527eb314",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07824708-6a88-441b-8819-966de5303d21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84f7823f-58e0-4fb7-b103-00e61770d744"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c92d7c10-493b-4701-acae-88155d5c7720",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ad9303d1-fe79-4a9e-b8ef-ced15e227706"
                    }
                  }
                ]
              },
              {
                "id": "72f85d58-cd9f-4fd4-854d-4f682a6d7f83",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26967ee3-90cc-47d5-9770-fc74d81199c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4538ba58-2027-4d20-8b8b-289d67bf9f0e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7e0358a-08d5-4a33-9d33-59b5cec332f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "634da22d-e230-4fc1-a0ea-5871708b9861"
                    }
                  }
                ]
              },
              {
                "id": "c1eab4a1-7242-45fc-9aca-baab68759c4c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2324fed2-f869-4b78-b132-04c46a81c9b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80d423bd-6cca-4907-987c-012c48226e37"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11e2d3f3-28a6-4cf1-886f-c76201195ece",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "65d831ce-8ada-49fc-871b-b39e4feb7b82"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8ece567f-8f62-4fdb-8acf-eacb66630fb1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5717c60d-2012-4f90-8941-e8e01092de9a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b0e75341-5272-4c97-990f-6be28b17cc95",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a4d9d2cd-bc6a-42bb-ade8-0575bcc7d47f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5334cec1-b637-4dcd-b558-6821c4d91a1d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1daaa838-c19e-4c0a-9583-428ecf8136ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a46748c-e6a5-49fd-9a85-7f91b39133de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "723a33f7-fbb7-4524-8e06-8ff5eb128ac1"
            }
          }
        ]
      },
      {
        "id": "081d3113-8aef-4e64-84ee-10fa93ed7c90",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b3d52fd7-0c24-4173-80b4-f3ff993e8f49",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e1fda00-e933-4f63-ae3a-56d2caea3867",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8b782960-896d-41c2-b286-8e07c04a5bb8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0317a5e0-dcd8-49b4-9d12-373f6aaa55ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3cae12c-ac30-4a54-9c0a-fe373c4be584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c58a5a-157e-40d4-a219-b359c6b6d2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6340cf8e-586d-4669-bb16-8ac10c23a933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a44a97b-6371-4cbb-9dd8-56247b0ffb0e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a46a655-2188-4cc7-bf2f-8ce0361fd19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee5998f-f311-490f-86f2-bbc85cc65ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff61004-8886-4deb-b26e-393db6fedd7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "928ca194-4fbc-4bde-97c6-2a6be374e444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a516b4-52e3-4126-bdc9-15d9ded8df0a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c0712c-b257-4435-91eb-34b761d7879f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485b1562-d679-48ba-8c6b-77d1b97fbde4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d81e14e-e696-400c-af8d-e9dccab8aacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9032a36a-e1d0-43f5-b925-6289074b9f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ff296f-78d6-4d1b-8169-c6e419764120",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d4696e-9a1a-4dc8-9ffe-c567f72e3719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8780d38a-40e3-4af2-b41e-909bd4369e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f302319-1dfd-423e-80dd-873aca5bfb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3354c18-a103-4b9c-a13b-6d2194d5b7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837231a6-1af7-4505-99d2-b2369551bf00",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9fc921-c616-4073-8eef-9773a2af67cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f5e87ac-d7db-4f63-9a0d-4129156e5166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9f835a-3f63-4f80-9921-9ba38a6adc90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8cbe7da-2c3c-4174-be85-6a870b2cd2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b322d2d-3e52-45a1-815e-bc6cac0728b1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4189b752-416c-4788-a647-478820cd8b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "045c6fce-8fb1-4a38-a41c-dc8b0497ac04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c5aaee-17ba-4f7f-8ec0-73ed2b36e3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83107d8d-321c-40b6-8345-cd0fc5621685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31a2353-6c8c-4ffe-8202-d011394ed113",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b19b1c-7c12-46c3-ad96-2a21bcc7ac79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93380a2e-2bf6-4d4b-9be2-911df3449b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f55982-c04f-4214-9223-8ab54065f5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "383ddb2c-11d2-4257-83d9-abbc5f2545ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9301b5f-3654-4245-b79b-ed7666903143",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c650687f-8458-4676-95a1-7e9772faaa0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2fc006-37ff-48d7-bce6-656cd0baece8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db60d721-d615-4df0-a7a2-3b24bbb6e87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8101b09-a0f6-4ea1-adc3-1c26e88efb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6991534c-56ea-4157-a0ae-eb0beec870ff",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e3fe45-d5cf-42e1-9246-de70d0d9d518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6945fd-8e5e-49e8-a747-17ad097fad95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac601cb1-7aa1-4552-9f61-e22ed6f5ee4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dce5a64-ed18-4bcb-b81a-833177e2eaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36bb464c-e3d1-4b65-bdeb-218f77fb56df",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f65983c-236b-473e-8dcb-a14a4d7966ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90fa7106-4e6d-4552-a252-5b82ffee0c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554533cb-7733-4454-8d28-cf9de8dd7a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9907d09c-1b4f-4c35-bff4-b798df7f2493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47cc23d3-fdce-4d8a-b64d-b7f08b123d44",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d4cced-2289-45c7-86af-7660f8971aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4e7db5-41d0-4a61-ac8e-ede79aacf754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5ff329-ad5a-4514-9701-8f4f9d5f1511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f72231-423f-4a7e-b19f-7abec9b19caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d1f6d4-aa79-4fb6-8e9a-519681885759",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccff37a-3985-4822-9b8f-c1b0c219c0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695e629f-cc42-4457-affb-707e473b0b57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8e329b-e748-4867-9eda-16377f686499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6630382-aefb-4736-a790-592c1dd95480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec631056-1bbc-42a3-9e1e-62ae905fc415",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5600b9e-4e58-4c3f-b1da-d5abb483e429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe100d3-8a27-456c-a064-d9aeebf9af94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8ed8fe-c238-4534-b64a-ef55f1db6c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0f0651-5d77-49b9-a756-85f2881912e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df44867b-1182-422a-8bc1-2153e24e8b2a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d53d16-1a62-4985-acfe-1f4ae78dc83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90357d04-a68a-4dc2-91d5-59e3719daf86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342a53de-c3dd-44a4-83db-d98c71cb4b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "debe18a6-9cb0-4971-8ca9-f92f45056457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384f6c5c-a1f9-42d1-b4d1-bf09d55165e7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c856e5-77d6-45ed-b6ce-48b43cadc7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b4449e-d426-47ea-a8cc-6589da3e4a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44585776-9037-4465-a8b2-c704f7bebb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "30d36e26-077f-44f4-9cd7-e7a9ec67c723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487005e8-b84b-4481-b040-84a7ab51ea7c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d2d905-a2df-4d98-a7b7-7742329cab32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34929117-eb84-4926-919a-2226f7316159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1157bb3-7f6e-42a6-b2c6-13a6adf63f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "64ff39ae-b992-4ae2-8b3c-b0930b5dfd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01dd7a1-ec83-4cc9-9066-fa10fc0b8986",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "730a5cc1-1a71-453e-96d9-5aa83ca17181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9120666-9f0e-47e5-a71f-db50197719e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733df256-449d-42c4-ae92-70b13be08c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6577f8e1-9053-40fc-8d64-7cf8c7256ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d1d244-e547-43e0-a505-4defd4db90d0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66389ee7-579c-4fba-abc5-343b0b3c4c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816f476d-0e9b-477a-88bf-dccc5f14e8dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a9ecce-d54a-4d8f-b553-d5992e2301e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85f17010-38ad-47d3-bf71-3ea138c9b1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c65e31-6a6a-41e7-be84-89a63ed32f7d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d7de7a-b598-4797-9154-5bff3ee07b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452de35d-52bc-4cdd-b53d-ddace6dd9833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055f6fef-9437-4b8e-9472-845fb5613c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8488d93e-132d-46d0-9e2f-dd671481691b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa944848-c6e7-48e4-8e87-55881db2623a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd9dea2-da85-4be9-b6a0-dd344e012293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1479636c-7acc-4518-9ab3-77fb5301efdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6327c6-42a8-4e7b-8148-418ae89e02c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2de780-219e-425c-9283-60192a640ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35649c95-7aaa-4eb4-b25d-ec8ec1e66ae2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1157b8-e5c6-4f9c-a30b-8ece4359a82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "861abdf1-6b91-4dfc-af50-9bb1bfa49bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a605e4-5d11-487a-b8fa-34ca87cd3702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7049343-18a9-4c93-aced-d930119dd674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456741c8-e980-4b11-9416-e84c1b6240c1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27301a9f-605b-4acb-9882-22aadda6914c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5d723f-dac5-4f13-82f3-2bf2a9989283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeacfec9-eb31-44db-8323-72d88d61f607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81128dfe-446c-4040-a251-25bc10f02a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2ebfd0-ec2a-4dc8-8a7e-49760238bd2e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e59849-e91c-413a-bc59-d54d77ad1d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a0f113-eddd-4251-a875-0f5391f79579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c3245b-702e-445d-b3a0-ac45c75d9479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3bb7fa-ce6e-4210-8814-3555dbde2dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b686f1-c7dc-4d5a-a740-4775cbc5ccff",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55184c27-3194-45ea-a980-97485cee5f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfab920d-2a07-41c7-91d2-6080f165bdb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5382d56-80bd-4ea4-a586-7a77ec2b1b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c498846e-2708-4e5b-98d2-d26ef6a1be26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a909b1-6e8e-475d-8623-f40ab2a8ddbc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3868a4fc-14ac-4a54-88d3-082243333a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b15357-ecbb-42b9-9415-76f8d5e75687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fdb564-7c91-42ef-988a-80aec56ec309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c015926a-a073-4ed5-a1c8-48edaaad74f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2654a7-46d0-455e-8b6d-304b089305ac",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7620b7c6-f07f-427b-a7c4-20fb077ed258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad556b20-7dae-4b65-bf24-97658a489898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40792f07-8247-4689-971a-7345b4afebca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4771ed74-b30d-4182-8157-d368c5419a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e78faa1-0df2-41ec-b4ba-ed4ae11330ca",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01378438-67cc-44f9-805a-e6d04a9f0f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275930c9-e119-4cff-984c-bb2022a007be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b90c23-6a5c-42b7-ab8b-80ac615ec659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5492d99e-0674-4992-a38f-fc89919280f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c857efc-a042-47ce-8349-3455e11731ed",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb53e92-6b99-45f3-b361-e9b8047a069b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6cc72c-fcd3-4cf2-b4c2-d28f1909813c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859f5877-4166-470d-a883-209a4cbfe01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1063cf3c-531a-4dd1-af3d-5a56e5edacbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088b3da3-d6af-4979-b177-6d02372c66d7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17cc83b-2ab4-4933-870b-5f455ac31981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892f2d2c-75e0-4102-b501-3e9acf4070c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3926b6c-060c-42ce-826a-3ea8ca6ad989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ccea2df-6c69-4a63-a4e1-0d173b64b8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c38d78a-c542-40b6-991f-d00cf3f7502f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1a7d68-c568-4fee-a0bc-fc9e142ed8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0e80ed-9550-4ea4-b15b-797f89708706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d69329-2689-4061-a319-acdc97ccc8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "343fe1a1-c9bb-4b4e-b520-f46f920ac894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601514bc-a741-4e17-b668-b651ab1c0b69",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c3739a-c920-498c-91ce-c814dcb9e409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6fb0f8-b485-46e2-a9dd-202acaf17fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cc393a-4dcd-490f-b4cf-39c52ea02a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86ad51da-be4e-4768-a799-602364251cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3248e4f3-a166-40a2-bb76-ab4b765d7c27",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749e36ff-3d2e-4e80-870c-2438ed6b9e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "320f80a3-93e2-4730-ac17-e3fb0f86f170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2297ce-f766-4dec-b675-8121298df542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa1447e-9d2e-478e-aa16-610e1ad4199d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c9c0f2fa-087d-49e6-9106-bdb0a9750e0d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d154b495-e532-43c3-96f9-5c8aefeefe0e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f57ffec-928d-4f24-97b8-d9acec7b4cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9715c22-6dd5-485b-95ea-d201fdcabd1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e21d259-7328-4892-89ce-802c127f3ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2194d40e-17be-4cf7-886e-e52067e67f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92dc7fc-892a-40d1-b7c6-70e44c5fd162",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9c11da-0ecb-4f40-95ce-39b85b0df9c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "e1f675c5-eef3-4477-b7a6-76757ca815bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d0d35c-b5dd-4727-ae79-edbc4ea2e7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe6fe079-c97b-4061-b76d-ff6f57ff4e3f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04bf11f4-8204-4425-8255-89a91a6d8e92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec70d49c-9019-4d13-ba0c-a2d893f9101f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46157434-06b8-465c-8008-4a3c8d553a55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31ea8190-df92-4aa5-8daf-c5c64d129610"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11585411-560c-4677-8a40-cc9b5785a5b1",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c7657d8a-0047-4f94-b4b6-588ab82464c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf9660d5-3872-48cb-99f1-e169912f15c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20655899-4be4-48ef-bec2-0cc3f12308b0"
            }
          }
        ]
      },
      {
        "id": "7ce86338-1dfd-4f35-b344-7eb1b417f279",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "554c1e88-a3cf-4e8b-b2ce-d9807d2cad0d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b34c563-b8a9-4bf4-83ee-5637ae08815c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2727e817-07cd-4854-aee8-b0a326af757c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce69025-6680-4e8a-96fd-cc4206e7ec0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f340bfdf-8a92-4aae-9883-1db71cced3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2a3672-b26a-4d62-a0da-6b2595ef9eed",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a8b14f-21f2-40fe-8ecd-e0828df8c9c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df308e15-55da-4164-bf14-d5083e372429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc8c521-5d0f-4cb8-9fe6-c916fc4f0688",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa883dac-5d7a-4891-8727-b3fbd732c240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b1c31a2-565e-44f1-9a60-52bec5a51543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b54f11-5d19-4b46-8532-6f31fb652a49",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa646a85-ce14-4aaa-abfb-b1c5f7f8cfc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8fb12dd-209b-42ec-a15b-bb765bbdb095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146396cb-ee4a-4694-8fb4-d98591bd2acf",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56cefec-e644-4986-8e7d-ba1b11537b00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1135b86-3f9c-4d5e-b5e3-e109930060d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a4f309-ab4e-478f-ab32-d070966b2322",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70807615-f8fc-4d61-a324-a5184c4d9deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e772a52-2578-4d04-b7cd-48aa6788e67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db9042b-0715-4561-993f-3fcc174957c3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5617ee2c-823e-47c3-a402-3e639c536155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda74e06-6401-4041-8a92-e4b90e6d5dd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3699c3-953b-48a5-91ce-01962db54014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52aeff6b-9ceb-41c2-8354-f67a537ab1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9696047-8116-49ef-967b-0f1ad3e48b25",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f046d9-c36c-47aa-a860-6965bc26c269",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79004ff6-5fe7-44b3-9013-5a9ce787e2a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c784421a-cd25-4d12-957c-93752f4bb965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40811f2-8639-4da6-a636-24da283c9b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830da1df-fd7a-4efa-97f7-d6870699c153",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315f0ab1-6315-48cf-90aa-81c4f9e14e51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2d12fa7-1cef-468e-ab3b-d6d08595b437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2f7bdc-e4a0-4f03-a323-9aff87a364b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9624b45-7ee8-4d8b-94f5-659ba896329e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2feb14c-a056-4c20-bb7c-e7c76af8c962",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104525e8-386a-43f6-b775-9deaf7cb6bf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b57190e-f8b9-4dfa-985b-9cf0c9a0cc86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79103c8-cbbd-4378-8543-31f92a724c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda50425-22ec-4ec3-a720-cd65456145d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763a5748-5438-4cbe-8a8f-8b37951b6d51",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b10a7bb-e1c4-4ed1-bf4c-dec73ac8fce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "107f94dc-689d-49c9-8432-61b4cd54aab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8008da0a-1967-4bf5-a61f-2a5bc9db0a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ac1c9e-e4c2-4084-92cb-ac166f2ffe34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a114624-99ab-469f-ac9b-611bd4a564b2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662eef96-db83-43da-b5c5-f2ff676a7b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "875b96a7-9567-49fa-ae95-b44c76487b5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90752b28-cefd-4808-915c-e518a8ea1233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3eca273-d1c2-4565-b6ff-b561d3589c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507ccf0f-ff45-4101-9ba8-bef315dd105f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3631ed-abd0-4f94-bb62-63f3af35427f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba4deb09-199b-4f41-b392-3900795f8fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b768edd5-f383-4a7a-9e1d-df4212308706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba273ca0-9798-466f-b25e-7160ff04717e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6244e17-c8ac-4da7-ae07-afc077c03970",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad8c670-0cae-4090-b665-b6f8690695e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e585d2d-e235-4af5-8701-99b2487bc1c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4288c5ad-390f-4bd3-ae30-3ebf580682ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c12b9b-fb5a-4710-8069-8a5c0553e8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad769e9-e25a-4f5d-b50e-c35b04fe31c3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c080f068-1d03-4734-b62a-914c862e3964",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "086c30fb-8fe7-43b4-bd5e-983df88e393e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62d50d5-d824-42fb-a140-6153d773d41b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569034b2-5847-4849-8af9-703d00340e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb9d11c-bdf8-40d5-9187-223a0af77a39",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1460bd2-1f4f-4bc2-9f86-777212df5761",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12bd6506-fe18-40c0-baf2-83e05390a71a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "389e5fa4-50eb-4cda-9107-33fd6ebcf029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98051a8-7b56-4392-97e2-281c12d9eada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14d4ccc-e703-4170-98aa-4409ff7b8a15",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a871a123-6736-4241-8cbb-a95fc21d8218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc23c5a-4fd0-48b9-9ba3-4c9701458ff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8e9841-ca28-4623-87ba-5abc62c2547c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a001e6-47bf-46ec-bf65-d943dcebe14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841e36c1-cf79-4d5e-9a25-b112a8926e1a",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a439e52d-4c1a-4071-8c38-bc238355f1c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b50b3cf0-7797-43eb-8cc4-f1996cb5725e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "378114f7-f0a0-404a-8451-ac55502d3f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad80b6fe-1deb-43a0-8793-626ec3b26760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0dde58-c5c2-46ae-9837-e81a9d09bc76",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e32a1d-d9f1-4f1e-a786-4c4d5d4d80e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dfe131e-e8a8-4778-9a4e-8183917d9118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ee53a4-1431-48a1-b28a-b7292e0243ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be5fddfe-ab9e-46b7-9f56-0c970555acb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed5c20f-ea8d-4021-99f1-d7018f698b58",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3828fc-f1a2-4a27-8b14-8cc33c2b563a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b5a69b-dc8e-4681-81ae-bc56ea516fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3815278d-b8dd-4f4b-8e0e-6fd08749d793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71810bf-ef5b-42dc-9472-f095380ab39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5209239-6d10-4525-b4f0-20cf2dd0ebdb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a392ee99-7ac2-4f7d-8cce-9789f1453f93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1dd35e1-2a9f-4522-8a73-a90fd51a49ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f02fe69-d4f5-4020-a4c6-69810fd429d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a820716c-1fd1-4763-9449-70777330581d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37444dff-71f3-462e-abce-3f7406760c01",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce671b9-ce23-4d0b-8dae-553702352afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0ea41c-9a6a-44cd-b211-7c15139a91dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cb9ef3-b4be-4817-9a12-c9958285a73a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa5ba44-83c3-49a6-bf11-aa41fe686a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba76cbf-112e-48ee-8c83-ae21a70c96f0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55ad666-18a1-484f-a893-de967ac28726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267ba961-c53e-4a0b-b8a6-877026c0a381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b07fedc-c085-4c9c-86f1-9c5bf696dd0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf75a81e-f433-4696-89c0-b58d9ec201a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4e562f-e879-4774-8794-7516b24a0bcd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7576193-f7f0-4c05-bd16-8db5cde18434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbdd9a2b-3216-4c2d-8d4d-832ffef5d1e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7900be-044b-4265-a4f0-5c95213d3e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82cd6498-efc5-4fe4-af41-85bba864ee3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62785676-3fe7-4b0d-94a3-7fe312dbb429",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c106872-3229-4d53-aa8b-a3609ce253fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18d5a708-8320-42f5-a1a4-6957c25bc0fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41901a36-f1b1-4589-b8dc-f001f9357129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d223c59e-5d05-427b-a53e-18d60ad9728b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50134f2-e1d1-49b2-9203-fa0a7cab20a0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364e5d14-f74f-4c70-bc74-241817819a2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "025c0951-32c9-4a16-89c6-0d7ad4c8453b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "971356ab-2f49-4315-8e17-5bc39414ccec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13096a59-09de-4a38-8fb8-673e93231ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334ab818-2e70-4a72-8643-a06521fc1fcc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bb0b8e-8e9a-4a63-b4a3-a5261e05d0ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "848137bf-2fbc-4201-b242-a0cf647d95d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6c632f-4841-4523-984a-a06ae713922a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7553d92-a157-4816-99a4-cf1d1597f1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b623cab6-efa4-4961-a82d-de90c84d8b4e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7752d9b8-bf20-4838-93d6-415126453eaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa2ce76e-ffac-4fbc-a7a8-c82377154c12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e2f717-d49c-42f2-9456-f4e7bce06859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1baec424-6a33-42d3-894f-64936d41b88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7e38d3-6556-4631-ba27-f45004ec9746",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef69cf3-7e30-4192-89dc-cd601d5e50ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef2f34c-732d-4f93-9d7e-4ee6572eb31b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c45ead-036e-4d8d-91a5-ffbe097881ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c27580-5fa4-47b9-a5fa-5723415ef488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bce47d6-b02d-4f41-9c24-da7b68f7d7f4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494ce24e-0e5d-44bb-97e9-5f9a400b0b21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1420ea3a-b58f-476b-bd9d-215c80c1ffb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6277a687-3df8-4b69-81c5-cc127986f38a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f87cb67-2654-40c1-b3d0-16fae028786e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a86043-f396-4003-9772-74c46e18b620",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f53ef1-0697-43ab-91de-25639ac15155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8b4f0e4-c986-4c6c-b08b-67c0d3a295ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23df3ba-1506-4452-a443-d1ce9f14ca62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446ccd77-7ca0-4da2-b096-7460c65492db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e51761-5ef8-47a4-be8e-dab901dab7f8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31fad25-8d3f-4519-8c52-083e00c59ece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5e7f1de-093e-41ed-b893-fbd8cb005e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7280dc34-60dd-4b0c-b4f9-ff50cc8f20fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee142285-864c-44d0-acd6-a17cc82c0c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c18dcc-5baa-4991-b7e8-9a709a6c045c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c6d970-59e7-4e12-b3e4-a02067683746",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d8998a9-3ead-4006-9241-00beec797463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4d13f3-3fa6-4983-9105-06de51fc1a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5109f81-d74d-4c62-a904-a84bdb1a38cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f383d2e9-a0ac-41b9-b0ee-fb3579a854ec",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309f76f8-c8d0-4e9d-aa34-3a1e27e973a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "391b4640-e611-4aa9-bd59-757d907482ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "075f0d61-a76e-4b1a-8495-dcbed09afeeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e377735-9708-4599-b5cd-2e53292ccc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d2dce7-b84d-44e5-9f81-0d2cd6490ce6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9694a2c-c936-4469-a082-3ba91045725d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2180b8fb-45d7-42a3-b4ef-afb027fcdef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a2008c-4086-4eff-b933-534265466ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8872b0e-bf50-4a0e-b6f8-9edecb7bc6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882541f1-c49b-4776-9721-099b39d9b9ed",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4093fa8a-c7cf-4bfb-9fcc-e1c327a2e1eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcd6ea3-aa33-4168-a2e5-c929e179491d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26594dc-5933-45fe-b37c-915b74ff46ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834ec4ed-4288-4502-b161-8a17e681cbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d442538b-5d8e-43a3-a3e9-cebd9ae5ec3c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7da83a9-2ba5-4c97-b571-eeb48d5057b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a2c5bb1-bbf7-4100-bf14-ad559a139d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18874c3c-8d7d-4b68-871c-30e53408eed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1001a04-f879-4aa0-861c-5ac22cb08c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a28cf2f-64fc-45d5-a349-39b246dedf4e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a75d9e9-62bb-4d53-b0d1-d58a09a5cf57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "224bfc64-f5e6-48fc-a75d-813f03c5707d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f950fe7-7b73-40c8-8f96-d51d7e94a57d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab12412c-00bf-47c2-9bb1-b84caa958a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190b744e-2baf-4864-8a18-6dec668f25b4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0461d0-3d03-4199-916d-74674b8f1401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f319419-6bbe-4313-b145-ff7f025aa690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4659ea21-2c59-4586-bc6f-3b958d0bae13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3881f6-b56a-41ce-a95b-dffe0cf45ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f70f7ba-bd4d-442c-8393-ab796acd5988",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77712e57-1b18-490d-8d2d-3742a22d6e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a6f08f-7de6-455d-89f7-cf019e50ab85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99cf8c8f-7a6d-4878-83bb-70c548c17d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be0c97f-b4ed-4d52-a378-93c304e45cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137a0645-2745-44bd-a29d-c48946017959",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843f2280-7bae-47e1-b7fb-1c161c68c3ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf677d5d-993e-4efd-a7ee-79e35fb31675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "265d9530-f593-4e4a-a906-25257e74c613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1224854-e6db-4eaa-b4d0-311e60db176b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6885df30-f1e5-4efc-a0ee-dcf7221b5c9b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed20383-f569-4d42-ba32-692ea7b4b6fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b112ca-09e7-4a99-b39e-6eb8674c4bcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5095090-3fd5-4afe-b147-ec7b73774879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6911b1a7-92cd-4f83-b456-17a0b7e913d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bbe0a1-4526-4a89-b143-7caf58840881",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2317814-f7d3-4cb3-8d3f-efbde7e150e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef9d4a3-dca9-4887-8d1b-cece31683d22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b45c6f4-f58f-40fd-a53b-707adbc8f621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a34aa825-7909-496d-83fd-c6e64a310638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd266af-e32b-4b81-afad-fb3b06082b54",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714e3077-23d1-4bd3-a2d1-5128b0645b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "104251ef-73ec-4e44-9aa5-1f4725065805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9d7eb5-7d66-4a65-83d4-c65773b59e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26990699-ab8a-48f7-995a-e3d05d3bc16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73508e2d-6d60-4bc9-89a8-245b864e80a8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f78cad7-51ba-426d-9bf9-35cc3c878a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "125f88f5-5b40-4983-abb9-699b9a1b4be6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba53950d-1315-4015-b80a-6825386b9330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51605245-b147-4957-bf93-381dda1d2d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9f636a-5ecf-4614-aaff-ddb3c5948ef5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7d9c17-cad4-4ade-81bd-4ca332f694b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce151cd-f444-4718-bd4c-ba35eb3d3b44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e48566-d966-4dda-a9f4-6329923b8eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e28381-ee1e-4a04-8b13-8a6a82b2b303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5f2420-a600-4fd9-9a62-d53a5bd8610e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabc7677-e899-4d34-a976-a4869b70cd26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0efdac38-c8ac-4caf-bfda-dea92428af1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90d9396-f321-43a2-80e0-2699710a279a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bdcf199-504f-4662-a6bd-dea656b4ba28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db84243b-673c-4f3f-b815-e15ad873dbf1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3a3410-bce4-4429-ad9b-fe06e7b5c4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bbcf645-7eaa-415f-8fc9-4ff917174327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa601c4a-f705-401f-808b-f175d24cd41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f2df86-20a2-4cef-974f-6997d33188a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da14922a-60ec-4f76-b3c6-6932a24cc368",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959335db-7853-485d-a32b-5468b8cc11c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0cb92e-5e57-4784-94c4-62917b200bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c45c46-9863-4da8-a26f-3a4d5f8d09f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48245e1f-1cd5-4647-918b-373163096d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6404c32d-8b71-4cb9-a571-473284c1b99a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181950a0-4285-4833-8cf6-7c4f28469a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "472b300d-7fff-440b-a150-b2b82ea0d9d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "387e6825-3a54-4f8f-99f3-09a0d851e92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b49445-e3ec-449a-a1fa-c90e69db6ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dab0d87-0bc8-416e-ba47-634bd25d1854",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19818b21-2c28-4cc6-ae7f-8a569b40d4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a0b8ad-d97f-425f-b44c-abd79d713306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf7766b-9789-4549-857d-57df227da416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d203cf3c-30d7-47c8-977d-058324b9c7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b18e61-b67e-40d7-b79a-5faf6e80f732",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f94779-dcef-4d3c-ade3-9281c05de123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30e4bf6-b263-4a50-8e34-4ab6aeb29221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28afd01e-2f6a-47a3-b6ba-f92e8959934d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5e2da3-8f43-4c41-8dba-ed047a297fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca2b013-deb3-417a-998d-dab98d78f23b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1130133c-3c9c-49f0-95d7-a49c40873849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72f1ee2-c073-4c19-8c80-b6d64a2b08ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75168851-780d-4c4d-a69f-5e023f42d027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc646aae-df26-44d5-9b6f-b4e3dee95cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a23d707-6937-453a-925f-e91ec4e75a97",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c2acb7-e1fc-4575-927f-ccfa0346403d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c54524ca-f8c5-4fc3-9c08-133cdf03715e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27faa921-ecc9-45d4-a652-72e43b2f08a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaaa93be-49b5-43e8-ac4a-c80d941b76de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ca9a28-4f9a-4101-a556-62b6615859ef",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02081d7-5475-408b-aa56-b60d646464d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33bcc074-16dd-4469-b687-2c6b2a44cc64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2f9711-69d4-4917-b5a3-af2bf4931750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ba949f-09c9-40e8-97f2-b0cef67827d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f477eee5-ad9a-4eb7-bbda-426eb6cd1482",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d58435-af5f-4e09-aa65-0e4691d9b570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f71f93-f93c-4e3d-b165-b98f374267d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f88a50-e6d1-483a-8037-702d9b193079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bbd5d52-698b-474e-b1c5-54b371178bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3f7e0d-2b35-40d3-bae6-03d809ffad11",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7eaae9-b127-44bc-983e-c347af487f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba73fe94-e715-40ed-8bf9-7719008af289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d66d9f-af54-4c11-8a79-4af48dc627bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55ef2ad-713c-42e6-8106-d2182fbd2a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6bc487-d9c5-48b2-9278-afdc6fbbdc16",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee54afde-47c0-46e6-86d6-f1217dd0e5fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75620a2e-2445-42b0-9cfc-b605103d749f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de371b81-0871-4530-ae55-bab9801ec88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "882616a3-a787-4124-a857-b7e4038437dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a14bb06-73bb-4d3b-bb34-0fd749d33ef8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c149a46-8b95-4a6a-833c-02c9bda1275f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73c3c24-bb09-4fc3-b416-82e8f8fcd2bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcab1d61-c546-49f9-accf-1a437fc01c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "907bebd4-53bd-4d88-92e4-18bddea3d980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ec564b-8abd-4532-b8a8-be0d4f48c538",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08087cbd-2993-47b4-b194-f3a072a91397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e468d65-a576-403e-90c6-98105a4fbf04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0f4485-f8cc-4b08-b4b8-c1290113fc81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c2bc06-7b44-4c14-a41b-1917796226fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de647486-c79b-49ec-8bb9-4ca36adc8259",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9682f42b-41d6-426b-9c65-333812b1364f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af07f78b-da70-49b2-a66c-4ce4464a9b44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36454671-db52-4740-a0b6-817158bfca15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139d6383-cf04-4bba-bcbf-e49903e4b3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0043327-4084-40c1-9a32-ccf4ef4192f6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e5340d-a6a5-4f7b-a131-563cf188cb75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f266344-5909-490e-a37e-4724bcb715cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304703f8-b67f-4ce3-926e-a2d29a462ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eaec34b-b1e4-47a1-9bdc-f30a3b577042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b3c0a1-634d-4c4c-84bc-2bc1a2590686",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a182608-2370-460e-a9e7-8941372a85ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ab9926-7b08-40e1-a03a-3ae127610432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1246b146-83fa-4432-87d6-3cfb13cde636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "775d264c-1398-4d93-b653-e8dace5c35a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4516e62e-d2a5-4c62-8f39-51f1c705f28b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8aa4204-83b1-44b7-9382-d88f8e23352f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce72ef71-9a61-43dd-9b55-2d4bc949c66c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6caee10b-30ee-4b57-9cb0-512c9b7ee180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a81f88-ceb9-4211-a31d-bf1f56c1ce58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794b8551-d247-4db1-b1c3-74b99503b0fe",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38f2f8f-615e-4c2e-b81d-6f5d1100c7d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eed03eb2-e68b-4c37-967a-63e62a709e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2346b06-aba6-4c82-96c0-6706726af962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b967c97f-3bd2-44fa-9a3d-584f1c9c2fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7163f385-1409-4653-8b20-99f11bd0e982",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5ad2e7-8084-4384-bad4-a9128608ed63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39ef56a5-abf8-4efa-be2b-2810f2b7e953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81efba3-b051-44b8-b04c-ff02220e48d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbdd44c1-52b3-4b60-910e-fda87626c517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa74bc3d-4e3d-4e95-9f66-8711b51bd8b7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4a4823-f8a6-4ee4-868e-aebb8c8e11b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c34591dd-4551-40ba-bfad-d071eb2d28fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "890aa9b6-66ee-4d70-8a7c-490660ff00de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a2320d-f8b0-4fb2-803d-d54b8b274364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21543840-20ab-4bc9-9e52-e0ad1931a6ae",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f21a17-532d-4736-aa53-2d6a9db1be7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b616ec5b-330f-44d1-8d24-ffb7ea59be2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b981907e-090a-406a-80c4-c08b7f107745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fe332b-8d9b-4d80-a7ad-caba66888f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17e133a-eb00-426b-a29f-1235f158efab",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8463a0-be2f-4c3d-9d47-0ebf2b1ebf67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66a7c5ed-c5f1-4c9c-8431-244312fc18c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fdbebb6-d89e-478d-89d0-1a218fc8294b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425a6f0d-4742-41ba-8cb4-70f9878fd80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95840deb-fb50-4f3a-8850-779babae645d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c80d0f-58c4-43f5-a717-7723121641b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89ba6ad1-68f4-4088-b8bd-e29d7e896e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be86225e-9b0a-4aa9-8983-92683d8f235f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e21429c-b5c0-4e61-ab9d-bc029b483340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccbf275-e8f2-410a-9d44-fc29dabca4e0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671b0a93-b202-4619-95af-06774b70232f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d281346-2376-4961-babe-9eb8e0be0519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b09b999-23ee-40e8-9899-6bb9586bd27f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab50d582-a465-4858-8982-226b5315bfb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703ce962-69c7-4cc0-8ea5-add0a0e619cb",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54a86fe-c04b-4a65-a9a5-67596eb9d841",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a8606fa-e538-4e75-a88e-8b9578d122e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5c46a8-44e6-4b49-a728-2bf62339ca6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fee77a6-865b-4ab3-9049-031825a93baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfe4ef0-c0fe-4073-a056-b65b007d744b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba262fd-ca2b-48f5-beb5-4a49ddd70c6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fdc3834-0b2e-4686-a89c-4fe9fd1df37b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdba99e8-316e-4f1c-aaeb-dd8c53be5a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa67cbbb-a500-4756-937e-1cc25d524df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f504ef8c-d239-4880-b083-0e5478224009",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ce2c8f-787d-4aa0-bf4f-835535db2507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef29378f-2316-48ec-b3ae-a62398691c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "639d9a83-3f6f-49c0-9390-c0f4c61d07e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b3f39f-9793-4b6d-8222-94c145c7ce68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6144ca-05df-4765-9bfc-d2eb226eef7f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72e90c9-e44c-49a9-8c30-f11f83856d74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f31c224f-1b92-46ec-8309-2488eb454d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea342c7-9ab5-4a0c-a56a-de5c61a5307e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db62874d-59da-4f1a-a652-6e72d5c53d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423ed87f-d806-4081-911c-6003390f53d0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3461a0-7e36-4148-9dfd-c96d1c8f76a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "491a471c-873f-4999-ab27-040d37c9afe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaef9a4f-6b6c-4dd1-b9c9-10163ae96100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f5ef07-4a4f-4c5b-8674-70e7454fa92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcc2d11-93d0-4902-93a7-bb679b9fe4d0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90f008e-6610-4731-9b1f-ba5e91c61589",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feeee59f-ee3f-4697-bc01-3fa145610c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa8fb1e-ee62-4378-b53e-49680ac21fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eeec964-adf9-425a-a166-5a5112288069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f11ac8-3494-4d9e-b0e6-269590b2c6d0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535aaf34-182f-46f3-848b-076d655dcc15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfcab65d-2e31-4af3-a407-4cab758b797c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a5e386-0f86-4e08-bb33-8e0befa005dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa03d76-cdcc-4e9d-b577-f1fb9efab8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76c9314-cd9b-4424-88af-b5753063d5de",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f2177e-010c-4698-a9bc-e4dfda9be082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a0f323f-8bfc-4f4e-9ac7-d2e5e19921e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "537e51bd-d59e-4575-b5f6-0de1a9a67a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce872b60-dba6-46a8-a9da-eb2863528dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503990a7-3cef-4f0f-815e-9709d561f289",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b169b3b-a860-4ca2-ae8f-ac030e28c94e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e18f7bd3-bd0e-4ebb-a2a3-9c332c78aec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62041e57-2c66-4936-b552-ea1436867980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07cc9d06-26da-4da4-bda0-ee017244427f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38583fa9-6559-48f2-b43c-ad097bdc2b2a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4c8cd2-daf4-4e00-b44f-243f0c2e11d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ddffe6c-9640-40e6-8a78-1c5e1a89052f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69096008-207b-463e-9447-287c9cedc728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf417dc-d110-4420-ab7c-ebba24a67a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0f5fa9-c1fe-427e-8193-04c6f3e999fb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da38d651-bf79-43f8-8e5b-234b66d71d9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e691698e-6d9c-441c-a9ff-d504825e2b67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5535c0ec-ad00-4ca9-adb4-c3a27f56ff23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f55151-d545-4681-9358-34395e9cd76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf249d7-4d92-4eae-91b7-e6adbc846675",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd11952-464c-4005-b7af-7a29a3ddce8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fabfa8ab-e245-4d8d-a6fc-6284f1ca1cc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8be265-3ce9-48e1-97bf-7ec117530d85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7c97e4-8f85-40b0-b8cb-656572f4242f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f1ee15-969e-4923-bb25-778f834c5e78",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd632bc5-5214-4c74-ac8a-c156e5fe819e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed592f08-649b-4ca6-9bb6-f5ec35e5ff22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e7abb3-6e0d-4b14-a7c7-498be7a6afba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0702bcbc-eed7-4079-8638-4e857eeba1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bb0a7d-2408-4158-bb04-3eea354de5be",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b0ebc1-81c2-4f99-b71d-2586a92ae07d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9de3f147-de30-4bc1-8864-411f180c26fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8415eed0-83e2-4932-ac62-acae220d35c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca703057-1572-4a1e-a20b-735c800dd93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd8bc75-1646-4e7c-b771-e6df4f187f35",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbe4a5d-7e85-45d7-8d57-9d300417887f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8c556bf-4877-4210-90f8-bbf56af3cb9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd9c892-f292-4777-952e-0f48c0a424c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352f5c13-fa1d-4370-be8b-4bda422e2ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5157d9c2-1f08-46fc-835c-4106796a8257",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ad3bac-9ed8-464f-9e29-d91e082ac27b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3e49291-4262-453c-a905-1420ad76bd71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18932d2c-fb11-4117-b9d9-7e896918e2bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d57bdc-cbba-407b-a2da-f15868299b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0c2fbb-b466-41f8-941d-d7c088f39558",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086e231d-4ee1-452b-b90b-f9bff52c1ae0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbff0992-53e6-4bee-ba9c-fcee182aadc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f301ada-8156-4988-b132-0dbb617dd99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "519d5b1a-dfc6-43b7-9f00-ee7e9dc89a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97bc820-34aa-47c3-b11a-22923c6e3565",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bdeba3-5c17-42c7-9961-8475dd6e39d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27cd7aea-e3c8-4e81-909d-c1974fd70f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7e2431-7f81-4457-b06a-e36c4d9c835e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae784498-1c83-4ef6-b6e9-5057276f0ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0543a211-4c83-4f5a-8556-57c22995da0a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a4c040-c10f-427c-91b0-f7856e072e8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fdeec09-070e-44a8-82cc-d6bed88b9334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1a4036-108b-4bec-83ba-b5780b668ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d314b1bc-57f5-4829-93be-ddef1ec0e14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d828d287-4f08-4a24-80a6-9af245a3a138",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e9bcee-ddec-40c9-8ac2-a8a9a480490f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b978fe0e-9f18-4d29-8a12-36c2f3261199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f46f84-2087-4b64-8682-af98b2d19fba",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f582c7e0-d7da-4116-a1b0-caccbccd5127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c14d459-ce97-4209-9b32-d3245fb7cc7d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0de5207-0cf5-44c0-b42c-a57f4f4ad8be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5417bc48-b809-44de-8cf6-66dec32ec249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1065c434-e65d-4cc9-95b8-065295896c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9dd94bc-97a7-423b-b7a0-d72639223e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e14c8ad-5a17-4033-8178-e1da1e5e2751",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a400d0f-05ef-4200-b875-8720d5cbab74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a44641e-3aba-41ad-98c7-2d912d706e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d632737-1ba7-4ab2-9b96-2780162b63a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a509f393-c9f1-4ab0-9cbb-f0746566ac69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e0febf-f7c0-4d9e-a337-d8eeb287917a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0438e6ab-cc09-4188-944a-a0ffe8248cfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f121a8d-af58-4da3-914a-d9c088b09f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a45c6b3-d46f-410d-af87-d5136188a0ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c9f5530-6ffc-4375-b697-690e4add121a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84dc42f-9696-4a04-ac24-ae23dea15399",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64188cc-060e-491f-b11f-0d12f9bb5f0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6224813-7095-4943-ab28-1d850aaf6e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "645f6ee4-d085-432f-849d-f3f68234acd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95b5402-6fdc-403b-982a-841c57f14394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4aedf1-38a6-4e42-b364-b5d9117e96c3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0308bc7d-0e17-475a-9425-70783e5d7249",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fca0bc0-0f97-47bb-b817-a79ecd6324b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4abb7b2-7958-40d2-b950-6b494aa84d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d8a875-9f6d-4c28-9d7e-920392463e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0b4361-5527-45ab-b927-d8240450f969",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332537c9-7a08-4fc9-b5a2-9f61b734ed92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4d88ffd-af2f-4abc-bdff-7d765fc00634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3431df-7000-44d7-927e-c53f165a4450",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d78ebd8-d767-44bc-b61f-24a3ff99c5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e697e1e-67e1-4edf-93de-c8bbaed20bcf",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac889431-778d-4588-9e34-7775840e9b47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb49788e-927a-46ed-9eab-c78f6337cdbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a630605-f8bb-441b-bcf9-b9a54fde17b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "737c2c5d-e142-480d-a43e-01ecb591a80f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e04f50f-20c3-418e-8745-0c2ffd25b644",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3750b70a-745b-48e3-aa83-e2bc4d670446"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24eb4c00-47e6-423e-b815-25da90aefa7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4702a43-b8e0-46b0-8471-79f6f53a1a92"
                    }
                  }
                ]
              },
              {
                "id": "497b9ccc-2056-47e3-95be-a67ea4441817",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "91212192-00a1-4ba2-adaa-911a675a332e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35bacc88-fc68-40ad-b341-d4931c4d8089",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6db732fb-fd81-4633-9aae-43c6fc949e55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16001631-2183-4fb7-b504-2582704226a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7414e511-0e93-4229-b9b8-e4b816e7cdbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05113faa-36b7-42e3-97ac-646392f747d0",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c4c7ea-b721-4976-8e34-2ca6d658afb3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "efeb4549-53fb-4b23-8695-42f2998245c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bdeb91-c813-427e-85bc-767e83f127e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eaf9cf2e-cd46-4d0a-b222-29674cf2e92b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcd382b6-4a17-4e19-8446-85590f1581a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f18f6a6c-7dc8-4566-b143-53093897c172"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fe21a0a-1fb6-442a-9ee7-e58cafcd6f1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ed611e0-1a32-4d31-b133-f147a81805fb"
                    }
                  }
                ]
              },
              {
                "id": "5224e5a4-c0c2-4c6f-8ac7-190c0213519d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "995ea625-b11b-48bd-ae7b-761c181fad72",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b917ad0c-3489-4b86-a700-8d89e0c22ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8845b427-07a0-401e-ab5d-99ef420847de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28de33df-4395-49aa-99ff-eb04fedea3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "705494a4-98c6-4fe8-ac4a-3d82547d19a4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9307910b-6d43-4fa9-8748-612601d4e3f3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "00718ea1-6033-4712-a925-2432adf0fea9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "459c7efd-390a-4ede-96fe-24614e245eba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "27aa8f96-df06-4491-8852-397e2ee72ffa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88def4c8-99b7-4a43-bbe0-910ac28e3a91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd6509b7-6818-448b-b576-ed25e6619332"
                    }
                  }
                ]
              },
              {
                "id": "428187e0-3f30-4f92-8a9a-366e584f69f3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5923330d-b087-43c6-ae91-751ffa66d8c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bf20e475-f8ea-4c87-b8ac-a18327384571"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02112c8a-ed1e-470b-86f2-a81a4ae96ba2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "519b1e0a-792b-4460-9d68-ddd1e92350f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c269a78-b091-4a05-858c-f95e68fd9f37",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "dd40811d-b95f-44ae-a36e-c5ed27c5956e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57455e64-6f25-4762-88ed-b622a4a2aa05",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc97b5d9-a4cc-4aa7-b4e7-89b1ea7627a2"
            }
          }
        ]
      },
      {
        "id": "67b345f9-e80a-41a3-8cf2-429af076d358",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f74828ec-40f4-41e7-88c3-533ddd97976c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19b9341e-c103-4bb9-8ce9-934b1c3b5413",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0018bb68-847a-4577-b85d-a5447a798c77",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd878c0-134f-4832-8336-969c6e008399",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d4fda971-4374-45d6-bec5-f7fe2460b157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab48db1-9aa5-4bff-831f-980b7ed6f27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7bd4f508-5d10-4ab0-938c-c315956b6544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beeac871-f2f4-42ef-a59a-bc034177abd1",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b626880-73e5-483a-b0ed-fe8ed28483df",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bf1224af-5589-4992-9d6e-f1827bbaff7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b693617-0a44-479a-bc45-6aba20c9b113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3279499-0a45-430b-a0fb-ce02da06e2b3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d62dbea2-b486-44d1-b420-07888afe138f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b051d03c-a0f9-4a8b-b851-b1b8f9f744a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ccd9c31-cff7-4332-bd72-55feb9def495",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02d1c250-c8bb-4372-8714-9e9f81b83814"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "835ca6dd-e375-4a1f-8e59-1005c2519791",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cec26675-ad18-4d88-9162-70201eebe6bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8be69685-fdc4-4d31-89f5-06610f1ed848",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "72747bf0-6ac0-4cf2-873b-e8b505be777d"
            }
          }
        ]
      },
      {
        "id": "f86fd540-c10b-4f11-946b-bbb9646aa5ff",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "37310649-2823-432f-b668-0483c3f5e45a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "729902c3-f40d-433d-8ebd-c8adc3405f45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c2b5f0c-fc4a-473a-99b6-b94e4d7b5e5e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d906cad-864e-495f-b59e-aa506e4822fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3110b435-d6b3-41b4-8355-fc12dd723ea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "752e336a-bef0-40e1-ac6f-509f5812ffc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7eb3036-bae5-45aa-a2b9-1d56545b2039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b164f0-e7f5-43bc-b2c3-8ae5a8b7a25b",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f3b139-b351-463a-99a3-faab96a18442",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d6d8184e-fdb0-41a0-b0c1-fc74903120d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fceca4d5-f2d0-46dd-be42-a6e37621b82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5a7a9fe-1bec-4e21-b270-a2173711910b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "278e72b9-a823-4db5-bdf4-a28637dd22ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ecb66433-e21d-40ed-abd2-5c9e52cbc24e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8029b62f-ef31-4391-996a-7f0bcd05375a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5df5c46-6214-46b4-88ce-75be9c4f6b3c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aff65f2f-00a6-4b85-b0fe-b273dfd67a7d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "08ee5338-376b-40a3-a512-da64753cacb4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fde7c206-48d7-4f8e-98a5-8df7fcc8041a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c00abbe1-68f1-4133-9148-e648c3e2a99e"
            }
          }
        ]
      },
      {
        "id": "d271ac85-e449-4acc-bac4-5817307ed8bb",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "df923230-3d6c-4976-a191-fe2518ff4fae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d81b2120-1a6a-4f7e-a315-b2d6a1da7920",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc00d432-e91b-4d4b-ac25-b01ff4f3c11c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e39c672-6694-40f1-8718-20bc2642703f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0913efdc-2aaa-4a9d-9bd8-d9497bae83a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd930775-f64d-41a4-aaee-1b1eed15e254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "377651fc-d551-4f11-8900-9f86ab439520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7850459-59e7-4bea-8ba4-9edda24b1a77",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1469b492-318f-4945-9d57-771d0da17e7f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "db6a4ef8-269e-47cd-9472-a5af6b5a9599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c72d36-d3c8-40ae-b594-a007dbd0a0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "107b7b0f-5367-4d6d-8ba5-ec495b85e002"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ddf7cd8-6675-4d42-a9b0-54bfab2551e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "422b0164-e22b-4529-bbed-79c9c76d21b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "acf1cb13-7a1a-4c7e-aad0-388be18dc963",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c60a501a-e381-4881-94dd-b26c7130d541"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d17223c3-aaee-4d24-9569-c5ea448a4352",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f14ca0a0-cb84-4dd8-8417-0b0b6fdbd4c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac41f571-a93a-4755-9139-18ad51f3ba2b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68f1362b-499d-4982-b83e-5b14c463a22e"
            }
          }
        ]
      },
      {
        "id": "7cff364b-fe13-4cc3-8be6-3c0a2b498e56",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0bec3cd-9e8b-449e-818f-a209a4fb265e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e58634e-7702-4b33-a075-69f3f9c169e4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3d9e9210-5590-4831-9b94-9914a49ee07f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a378e9d-fc39-47de-abfb-a728f0550753",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b049035-97b8-4288-a32e-e148f301897a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 23
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 575.7824427480915,
      "responseMin": 19,
      "responseMax": 4597,
      "responseSd": 622.7246110589014,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1671669459593,
      "completed": 1671669621133
    },
    "executions": [
      {
        "id": "c37cd0a5-f4f1-4303-ba2a-d73984152aef",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "13ce1db6-06f5-42f5-a0cb-52efa134e41b",
          "httpRequestId": "fccb8cf7-3a39-4199-aed7-498b295f9e1f"
        },
        "item": {
          "id": "c37cd0a5-f4f1-4303-ba2a-d73984152aef",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f1e7f411-07dd-44b9-9b33-41f2d39996f9",
          "status": "OK",
          "code": 200,
          "responseTime": 113,
          "responseSize": 0
        }
      },
      {
        "id": "58f8245a-5521-4e99-a0f6-fa4e60b0be28",
        "cursor": {
          "ref": "c4e31d15-31b1-4e48-a9ae-cfef3b7eae05",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3650453a-2494-4ec1-87fe-351eb185387c"
        },
        "item": {
          "id": "58f8245a-5521-4e99-a0f6-fa4e60b0be28",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f4747a6e-5a42-42d1-8dfc-bd6dd22fc690",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "75e04682-ec9f-4fef-8c90-10386b40fb0e",
        "cursor": {
          "ref": "5ebc72b4-19f8-4c66-bade-0e46668b1c25",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5e72a18a-e6fb-48bf-b985-c099bd06d812"
        },
        "item": {
          "id": "75e04682-ec9f-4fef-8c90-10386b40fb0e",
          "name": "did_json"
        },
        "response": {
          "id": "9c01c8e4-65f0-4815-a156-674cbed042d7",
          "status": "OK",
          "code": 200,
          "responseTime": 802,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893ab6d6-ae4e-4824-a09d-2926a1544649",
        "cursor": {
          "ref": "051efbb9-ac8d-4694-80b2-4e9c08b3295b",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fd7c1436-7528-424d-8b24-10cadcbb6483"
        },
        "item": {
          "id": "893ab6d6-ae4e-4824-a09d-2926a1544649",
          "name": "did:invalid"
        },
        "response": {
          "id": "5f840788-ff8a-49c7-9188-8b6acc56b831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893ab6d6-ae4e-4824-a09d-2926a1544649",
        "cursor": {
          "ref": "051efbb9-ac8d-4694-80b2-4e9c08b3295b",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fd7c1436-7528-424d-8b24-10cadcbb6483"
        },
        "item": {
          "id": "893ab6d6-ae4e-4824-a09d-2926a1544649",
          "name": "did:invalid"
        },
        "response": {
          "id": "5f840788-ff8a-49c7-9188-8b6acc56b831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773b38cf-317c-478b-b41a-3fe6cc61f327",
        "cursor": {
          "ref": "f69993b1-8018-4b95-a59e-b02acb254d6f",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d4594d25-7b89-4876-b3b6-41a1d6ab0716"
        },
        "item": {
          "id": "773b38cf-317c-478b-b41a-3fe6cc61f327",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1bc79e4c-3fcc-43d0-8475-184872f48d9b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 603,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27a0823-513d-4b82-a073-6426376bc190",
        "cursor": {
          "ref": "f2977aab-80d7-487e-972e-a75c5fe6470a",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5c9094de-ad8a-4c18-bf7f-b353d1142eb3"
        },
        "item": {
          "id": "a27a0823-513d-4b82-a073-6426376bc190",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "68b9e01d-80b5-4690-a409-072f2ccdfe4e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 491,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866091f6-527e-42d3-8eb1-8f9873e5d2a1",
        "cursor": {
          "ref": "29a50f00-7a67-4e92-9814-a3d2fb1cd1ca",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d09c546c-c480-4365-90cc-35cf5de673b4"
        },
        "item": {
          "id": "866091f6-527e-42d3-8eb1-8f9873e5d2a1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2d0baf3b-6428-4d6b-ada0-eee0739ad224",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccab27a-3e29-4c43-81a1-ddbfb7ae2a9c",
        "cursor": {
          "ref": "0d62148b-8d7c-4935-aa15-e357fd18aa60",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "97aee574-e568-41a9-8395-1acf99e1d1a8"
        },
        "item": {
          "id": "bccab27a-3e29-4c43-81a1-ddbfb7ae2a9c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "a374e72a-5918-4213-9e4d-dc036a484989",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 504,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccab27a-3e29-4c43-81a1-ddbfb7ae2a9c",
        "cursor": {
          "ref": "0d62148b-8d7c-4935-aa15-e357fd18aa60",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "97aee574-e568-41a9-8395-1acf99e1d1a8"
        },
        "item": {
          "id": "bccab27a-3e29-4c43-81a1-ddbfb7ae2a9c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "a374e72a-5918-4213-9e4d-dc036a484989",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 504,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fda921-5719-4968-99ae-ef181bbafb34",
        "cursor": {
          "ref": "c8916677-55e0-4555-850a-19ed9d1ddd70",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "87e107d3-f04f-49b8-b503-f460e8d4ac80"
        },
        "item": {
          "id": "34fda921-5719-4968-99ae-ef181bbafb34",
          "name": "identifiers"
        },
        "response": {
          "id": "500b9d77-c0f1-4564-8fd7-c615af9b447f",
          "status": "OK",
          "code": 200,
          "responseTime": 766,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33172e53-16a1-428a-b00d-29b1213a7c42",
        "cursor": {
          "ref": "4e6aae3e-43ba-4751-8456-e0b1067b530e",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "50569a8a-835f-4595-bf7a-049568a39e7a"
        },
        "item": {
          "id": "33172e53-16a1-428a-b00d-29b1213a7c42",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "694c6304-e3c7-49fc-89cd-1aee36f83c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33172e53-16a1-428a-b00d-29b1213a7c42",
        "cursor": {
          "ref": "4e6aae3e-43ba-4751-8456-e0b1067b530e",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "50569a8a-835f-4595-bf7a-049568a39e7a"
        },
        "item": {
          "id": "33172e53-16a1-428a-b00d-29b1213a7c42",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "694c6304-e3c7-49fc-89cd-1aee36f83c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8928594-a313-4721-90a4-885b781bbb9f",
        "cursor": {
          "ref": "931b9d8a-b68c-4d85-8655-7f7eda8782a8",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "88e7c335-d52a-4e69-aa35-fae5d0babc38"
        },
        "item": {
          "id": "c8928594-a313-4721-90a4-885b781bbb9f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9a6ec40a-c57f-4a6b-acd8-11ec7e205e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878b028b-eac8-4398-892d-d0d178410ba6",
        "cursor": {
          "ref": "21496d12-ef6e-4baa-a612-1abb056c1475",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7a52bc52-3734-4ba1-be1e-377e3955ba17"
        },
        "item": {
          "id": "878b028b-eac8-4398-892d-d0d178410ba6",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "0ddcef49-bfdd-46ee-84c3-a95ff79e7b28",
          "status": "Created",
          "code": 201,
          "responseTime": 2181,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "134947b4-aa17-4c2c-b1df-64fddb5840b5",
        "cursor": {
          "ref": "a7d64c44-d1ff-4a94-9d7a-e01cfd6d4ea4",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9e81e0ae-1411-49a6-8bd2-468607e90ef8"
        },
        "item": {
          "id": "134947b4-aa17-4c2c-b1df-64fddb5840b5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "406d8e31-4e19-4bdb-acad-72afd690824f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a43666-445d-4c54-b99d-5a914ad8ee85",
        "cursor": {
          "ref": "8c192ccf-ae6e-47fc-ac14-7d5ca919c080",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "872ae4b6-7e9b-4198-a4d0-d8e6a39e7693"
        },
        "item": {
          "id": "68a43666-445d-4c54-b99d-5a914ad8ee85",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9a9fdb34-3e7a-485b-af4e-bd3d9640dde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8b3ec6-dcb9-4bfc-8f3d-4e5f5ba01640",
        "cursor": {
          "ref": "5b04b91d-532c-464f-be5d-601908d9bc40",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "967c69ef-97de-4ec5-913d-31f84ca11401"
        },
        "item": {
          "id": "6a8b3ec6-dcb9-4bfc-8f3d-4e5f5ba01640",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "30973756-b4a0-40ed-9e7a-b55159256fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb02eea-4732-4b3f-b814-fa62f9883620",
        "cursor": {
          "ref": "f879ee60-d770-4fb7-ab2d-7c7ea5f2bb5c",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d63895cd-50f1-45ae-b7af-9109bd524ea2"
        },
        "item": {
          "id": "bcb02eea-4732-4b3f-b814-fa62f9883620",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e61923f4-f7e4-476d-bfce-4cccb40ca9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3c8eec-417b-4130-a8af-fc60504646d6",
        "cursor": {
          "ref": "5ff1fc31-d7e5-4d17-91fa-83617c6f8b96",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "80c96169-09e7-4274-b9a6-ec28c7081374"
        },
        "item": {
          "id": "3d3c8eec-417b-4130-a8af-fc60504646d6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1c9ad003-b847-4e4d-baf9-069da76f16b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053d180a-3b30-4140-a757-64eb7f60410e",
        "cursor": {
          "ref": "385eeece-1d4a-4c35-9f72-24cce7fb96ad",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a54c5bcb-9ab7-471d-98e4-90db4947ab78"
        },
        "item": {
          "id": "053d180a-3b30-4140-a757-64eb7f60410e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "649d7eaf-8ace-49c4-9b9e-ef722affb3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56cb51b-23f7-49c3-8ab2-b69fbbc6d892",
        "cursor": {
          "ref": "5a7cd1f5-2fc0-4d20-a557-da93964e447e",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4192d36c-f414-4ad5-a9d7-fd96c771132e"
        },
        "item": {
          "id": "b56cb51b-23f7-49c3-8ab2-b69fbbc6d892",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "13f427db-13e3-41c9-95e0-b3e8255cdece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d088bf-61bf-4bea-b54a-85efa86f0b17",
        "cursor": {
          "ref": "74b5bbc4-3771-41f3-9b10-5823f39b2111",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4639a5ba-a188-4a0b-b2c8-466f6c5beef5"
        },
        "item": {
          "id": "d4d088bf-61bf-4bea-b54a-85efa86f0b17",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9bd95131-7d6b-482a-97e4-f638f9ac1d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b93780-3e82-4667-94c9-989cdad1ec14",
        "cursor": {
          "ref": "5d850784-3a85-4fd6-8fbe-5fcc5b4c1596",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "674d7852-afc1-4159-a4ff-950fd0a27719"
        },
        "item": {
          "id": "75b93780-3e82-4667-94c9-989cdad1ec14",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5a7af023-a267-44a2-801d-edb05eb55285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4c1341-3f13-4ca6-abed-6caa6ee4d132",
        "cursor": {
          "ref": "7ba2cc34-f245-4ed1-a9a2-d87b77351273",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0e3e0b0e-0022-4363-bc7f-6cd16211eba4"
        },
        "item": {
          "id": "cd4c1341-3f13-4ca6-abed-6caa6ee4d132",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e04de3dc-34d8-41b3-9a14-7c16422d9335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbafab3-adab-4372-bf49-014b451dc226",
        "cursor": {
          "ref": "7dd84ca6-5320-48f0-bf39-60ee01dd1d8a",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ef574567-918a-4502-9034-9afc2a74c898"
        },
        "item": {
          "id": "0fbafab3-adab-4372-bf49-014b451dc226",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "f028c708-9d7f-4d62-adbc-d7c32ca826f5",
          "status": "Created",
          "code": 201,
          "responseTime": 4058,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "84b9072e-127e-4543-b4ab-9e2d3176323e",
        "cursor": {
          "ref": "25f3bb6a-1657-4622-8787-c5d0c2232671",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9ca8baeb-7555-4d9a-87df-49efe6ea1957"
        },
        "item": {
          "id": "84b9072e-127e-4543-b4ab-9e2d3176323e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3aae99bf-2e20-423a-9b3f-671670283418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddbe204-b5e3-4153-b01d-9179980f3752",
        "cursor": {
          "ref": "9716d510-0e0b-4bb7-967e-066756cd9679",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "916c4330-8552-45ab-9cac-e97a208e20d0"
        },
        "item": {
          "id": "4ddbe204-b5e3-4153-b01d-9179980f3752",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e8fb6bcc-2800-4c3e-b7db-c2ba4097917b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbd1697-d346-4db7-87c9-ec5b3eb2d14c",
        "cursor": {
          "ref": "fdebd378-0beb-4462-b304-015a3482e816",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2dfac5d7-a46f-4d10-bf98-40d946a1a7ed"
        },
        "item": {
          "id": "8dbd1697-d346-4db7-87c9-ec5b3eb2d14c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "475e56f4-4a94-4f8d-8a3c-7b3b301deba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae02ca73-0ad0-4974-89b0-31374548dc97",
        "cursor": {
          "ref": "4f558ffa-7901-4530-a83b-4c92550035a8",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ea09cc7d-3742-41cf-9caf-3dcd92088d83"
        },
        "item": {
          "id": "ae02ca73-0ad0-4974-89b0-31374548dc97",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6e763638-dc6a-40ec-a27f-b649d436b1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d89a758-f6b8-47f5-b7b0-d309bd66cf03",
        "cursor": {
          "ref": "7263c963-55ab-494e-8fb6-f0b94ca658af",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "27271ffe-495c-48aa-ba55-64ee5556cbbf"
        },
        "item": {
          "id": "4d89a758-f6b8-47f5-b7b0-d309bd66cf03",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e5bca5c3-1eda-47b3-ad1b-ee4080566ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef785196-fc0b-4af2-b6ab-2b183515c0a5",
        "cursor": {
          "ref": "f379b4ab-c476-4c24-ad3e-aaae9213fd4f",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ab766f7d-1cc6-42b7-a40d-18f0fa50563c"
        },
        "item": {
          "id": "ef785196-fc0b-4af2-b6ab-2b183515c0a5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "20cea923-c688-46bd-99ac-d5ea7975003c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d54495-d03f-40ff-91b5-af1e11803da8",
        "cursor": {
          "ref": "a41871fa-ce0d-4a56-bcd7-a75ebb1dcd69",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9af9ec9d-e548-4d2b-be5c-0c6d7827d8f6"
        },
        "item": {
          "id": "55d54495-d03f-40ff-91b5-af1e11803da8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b798e1dc-2ef5-4e09-92ac-27de3972846d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d4f2de-e045-4a4d-8419-8eedabb5e307",
        "cursor": {
          "ref": "3795d7f0-eb4e-4386-974f-d2e960813f56",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ead931b5-e1e2-4744-9dd2-1b4ed289ebb9"
        },
        "item": {
          "id": "83d4f2de-e045-4a4d-8419-8eedabb5e307",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0e9b7298-bce6-46c2-b08f-9125c01a8bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5c823f-4186-4f68-b39d-11abfdded396",
        "cursor": {
          "ref": "a358c78d-9671-4d63-8003-678b843a89f3",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "93ce4fb4-5e78-4ec4-a8d7-e20833cbdc58"
        },
        "item": {
          "id": "ec5c823f-4186-4f68-b39d-11abfdded396",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9775ef02-1a1e-49e7-9061-9c421688fb6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ed4a29-0e8f-49f6-966c-68a880ae589e",
        "cursor": {
          "ref": "22546c7f-949c-4b17-8831-bcb4cfea3dee",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a4b619e4-ce19-4f53-b2d9-fffa6762bc70"
        },
        "item": {
          "id": "e6ed4a29-0e8f-49f6-966c-68a880ae589e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "22acfca0-7049-4552-b726-c16c14f8d8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0976a4-faef-4ce9-9cd1-b60508824a47",
        "cursor": {
          "ref": "26beadf0-0a5c-46cb-81eb-f02af37defac",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2792c16b-3cc3-40b9-8519-68e1eccefca0"
        },
        "item": {
          "id": "cc0976a4-faef-4ce9-9cd1-b60508824a47",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c15cab26-43fa-4f11-af29-8d06ee49b516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05a66c0-7be0-49b3-b7a8-2835cb7ef1c8",
        "cursor": {
          "ref": "a38b1c86-0c24-4b3c-aaf7-77ee692cd84c",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "112deb03-abb9-47f8-8532-b09676ab725e"
        },
        "item": {
          "id": "a05a66c0-7be0-49b3-b7a8-2835cb7ef1c8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8d668abe-00ed-483e-9289-4a03ec1a9034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06c00be-3f18-4881-96f6-b3ceb68bd47e",
        "cursor": {
          "ref": "c6361fea-99f9-4102-94c9-a4218f7fe840",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b9b97bfd-f424-4b16-91e0-e2a2172a78af"
        },
        "item": {
          "id": "b06c00be-3f18-4881-96f6-b3ceb68bd47e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a47f731a-09b8-4e27-a3d8-5be841b47663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1498713-3faf-44de-9b81-1e82dc405bef",
        "cursor": {
          "ref": "a946b20d-4f84-4c53-9d50-2ed4ce882918",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e74796a5-2eda-474a-ac7f-fa8cbf52225d"
        },
        "item": {
          "id": "c1498713-3faf-44de-9b81-1e82dc405bef",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "84073f9e-dc52-4666-9712-40a6e6f5b62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 893,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c527d597-8966-4ba0-823e-98f6523c1282",
        "cursor": {
          "ref": "5fafcf58-63ce-4a3c-89fe-212f97b56631",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "00a5dc38-d25a-45f9-9b81-2f44f0d061ab"
        },
        "item": {
          "id": "c527d597-8966-4ba0-823e-98f6523c1282",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6737bc0b-b345-4f2c-8013-d63a19377cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c493c57-76b1-4049-abef-2556f3c552d9",
        "cursor": {
          "ref": "3e64442f-329a-48fd-bf30-098bee5ad5aa",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c58bf46a-1cfb-43aa-a56a-5d420f8d523e"
        },
        "item": {
          "id": "1c493c57-76b1-4049-abef-2556f3c552d9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "632a1d35-06fd-442b-9cef-52351db2780d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 955,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349cb0a6-5488-49d0-b4de-80546beb0196",
        "cursor": {
          "ref": "ec027aa2-624e-4dda-bae9-bc3a0a3a1213",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "686a7dde-9995-4ed4-9289-1a3d7c932465"
        },
        "item": {
          "id": "349cb0a6-5488-49d0-b4de-80546beb0196",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6e2a85b8-f446-4938-a8c6-e6ce0508e769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f48df2-e9f8-45d7-bf9d-b753f732f915",
        "cursor": {
          "ref": "2f6e428d-4edd-4234-833f-dbbd8ddcec81",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "433d2123-80e0-4fdd-9151-ae9dc3ddf082"
        },
        "item": {
          "id": "50f48df2-e9f8-45d7-bf9d-b753f732f915",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "26081bb4-0b79-48ef-904a-80e9346de90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6f4b69-c13a-474c-80e0-df10fbf2a9f5",
        "cursor": {
          "ref": "07a213be-fdf2-49d5-97e3-1b10083fbbfe",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "81632ed1-874a-4845-8271-972f9697d3ab"
        },
        "item": {
          "id": "4a6f4b69-c13a-474c-80e0-df10fbf2a9f5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9786d352-bb29-4065-9495-b131407708d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec18f5af-d03a-4939-a0f8-43e999af9722",
        "cursor": {
          "ref": "c19082bd-baf9-46c3-9cb0-fe105710c3e5",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "68c0737b-8a0f-4c5f-b71f-e61be87004e5"
        },
        "item": {
          "id": "ec18f5af-d03a-4939-a0f8-43e999af9722",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4727727e-20b7-43df-88bd-cc1371f82f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c63e9be-fde9-42db-b037-532736578dea",
        "cursor": {
          "ref": "3fc69023-4054-40ba-9875-1b8fd39ee31f",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9f2d04df-6ea6-427c-b1c7-613d03d7d3d6"
        },
        "item": {
          "id": "3c63e9be-fde9-42db-b037-532736578dea",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2ddfc86c-a3dd-48a1-9cc9-d87ec3816808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8837ee5-46a6-4877-a5ba-0b43a993eb7e",
        "cursor": {
          "ref": "55a58b21-d73e-4663-bedb-94f3fb1ee781",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "967bdc38-74a0-4e0b-90a3-d9840ff4ee40"
        },
        "item": {
          "id": "a8837ee5-46a6-4877-a5ba-0b43a993eb7e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "23d492d6-d6d3-4279-bce8-d7aca8b7e84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5b4840-f183-4eee-809c-850f1f063ffe",
        "cursor": {
          "ref": "ec4a32c6-6247-4f4a-b939-b6cbff71fd4b",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "de0df0e1-ee64-4e52-a0d3-8168ee1eb222"
        },
        "item": {
          "id": "0a5b4840-f183-4eee-809c-850f1f063ffe",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c5f6b421-889e-49dc-baca-c602bba640f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a4abd7-b71c-4348-a3f0-e83da074b0d7",
        "cursor": {
          "ref": "0cb63162-d873-405a-9445-334891d84124",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0d699dde-14ff-4ea2-830f-29b8575d6046"
        },
        "item": {
          "id": "10a4abd7-b71c-4348-a3f0-e83da074b0d7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d33e2ef4-daea-42a0-8cef-b7730fbd68cb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 613,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd32aac-13a7-4b0c-93dc-2bbd420a1b79",
        "cursor": {
          "ref": "02660e18-3671-47f2-911a-a995e2fd5176",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6517bec3-8c64-4944-89cc-675a0e5a7804"
        },
        "item": {
          "id": "6bd32aac-13a7-4b0c-93dc-2bbd420a1b79",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0d106f92-343c-4335-9d22-7507a1f43a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca1194f-1b57-4d6e-a5f1-da422251c14b",
        "cursor": {
          "ref": "8bf79f79-2248-4134-87cd-d4c05641bc90",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "397ad373-ff7e-4b84-8e5f-4cd26bf7c21c"
        },
        "item": {
          "id": "6ca1194f-1b57-4d6e-a5f1-da422251c14b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8240edce-0ce8-4507-bb4e-1acfccf1566b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0774f294-dfd5-49f6-9e4d-8189815c8a49",
        "cursor": {
          "ref": "0b95094a-1577-405a-9980-f5f86bcc1c98",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "10a21265-525a-45e2-9aa3-e1c04130c2b5"
        },
        "item": {
          "id": "0774f294-dfd5-49f6-9e4d-8189815c8a49",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "748d694b-5f7b-4694-8a8d-bf85d8a534e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3367a6ac-1367-4e27-8276-9b17d4bc9b88",
        "cursor": {
          "ref": "d3cdd210-88df-46de-8330-25691a0498ed",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9c5e1ad6-2cd6-4f5f-9e01-a05b3a373e9d"
        },
        "item": {
          "id": "3367a6ac-1367-4e27-8276-9b17d4bc9b88",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a972647c-b226-41e6-91a5-38c84bb15e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd139a4-f2f8-4b78-b194-0e066300f69c",
        "cursor": {
          "ref": "cadd73a2-9130-47f7-b6ce-d01b878dcf71",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "66e41b6a-e0be-4c4c-bf06-5e740b1d83ad"
        },
        "item": {
          "id": "2bd139a4-f2f8-4b78-b194-0e066300f69c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4cf0a798-e771-4c28-bb22-d4d00b0796c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6214bfd7-c954-45c7-ada4-4b74bc379f01",
        "cursor": {
          "ref": "186ff9a5-80c8-49e9-a04f-cba63b77b362",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "06ab63d3-7f36-4b76-85c4-7b0389779597"
        },
        "item": {
          "id": "6214bfd7-c954-45c7-ada4-4b74bc379f01",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8d23a00a-d56d-4280-abc9-f2124ed49f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5b21f3-8164-47b4-8417-416f03261a24",
        "cursor": {
          "ref": "d89acc12-9715-4a92-a84c-182de9008bf6",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "729c201a-ed74-4483-8c46-9ffa3e267bef"
        },
        "item": {
          "id": "5f5b21f3-8164-47b4-8417-416f03261a24",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "33a49b6c-c00b-4a56-8687-fa6a100707db",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 606,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c3c40d-4536-4c49-8aba-9db35336dfdb",
        "cursor": {
          "ref": "1aba7b47-1ede-42a2-b68d-dd02877bbe09",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1de142fb-e46f-4ab8-b4f8-85c0dd469e9b"
        },
        "item": {
          "id": "f7c3c40d-4536-4c49-8aba-9db35336dfdb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b872f26e-1e79-4453-8798-4b54901ec07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec21b45a-16b6-48f9-a773-b3c86ca8967c",
        "cursor": {
          "ref": "4cc6aa61-89ca-4872-9a94-9a83f428b810",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "95f20c50-9c7f-4253-8fd4-17d19b865589"
        },
        "item": {
          "id": "ec21b45a-16b6-48f9-a773-b3c86ca8967c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "07401a76-d81f-4940-89b4-845d6eb7896e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd626a7a-351e-49e7-b0bb-4e91782193ec",
        "cursor": {
          "ref": "1b17c522-d302-4721-a99f-c09e4127acb9",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a22fed91-fb4a-4f7a-9c11-f62f9d915610"
        },
        "item": {
          "id": "dd626a7a-351e-49e7-b0bb-4e91782193ec",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d36159d4-f954-43e5-aa83-1ca34e4e959a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e24cf80-8784-4026-998c-b76c55383655",
        "cursor": {
          "ref": "9fd25487-0bef-47a7-a0d1-79b81ca842f1",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "996a70da-01a2-40db-ad1b-a270a3397b13"
        },
        "item": {
          "id": "1e24cf80-8784-4026-998c-b76c55383655",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "166d3cec-94b1-4051-9809-4fb7a718c039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbee7a5a-9669-4475-9191-55e38faa942c",
        "cursor": {
          "ref": "bb3d70be-2b2e-41fe-bdf4-f79b356a6288",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b72dbebc-3dff-4a0a-9b3d-c30b94ab8efa"
        },
        "item": {
          "id": "cbee7a5a-9669-4475-9191-55e38faa942c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2c71b720-45d3-42eb-8475-15b51a4e6593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a414bfbe-dfeb-4188-acd7-fe74fbd0f871",
        "cursor": {
          "ref": "8ac642a7-7e00-468d-85a2-d9f3c457ccf5",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fd9d3d53-5ac9-4f28-9a52-30a1402ddb14"
        },
        "item": {
          "id": "a414bfbe-dfeb-4188-acd7-fe74fbd0f871",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0194c98c-3d7d-44bf-9687-19fd02c714a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6af6cb-3b0e-4bcd-80e6-cf044d123c8a",
        "cursor": {
          "ref": "9521b17f-a05c-4d60-8ce2-bd94d49cf131",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1660f652-5eb5-467c-9915-8d1ec302d710"
        },
        "item": {
          "id": "cc6af6cb-3b0e-4bcd-80e6-cf044d123c8a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a33e61be-a32c-478b-952d-c72d02fe92bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9433b5ad-3e57-446d-a027-6e1f612782a3",
        "cursor": {
          "ref": "4c1e1621-28b0-4c41-bf9f-31faf8b394fd",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "21afa420-e66d-4736-a177-2164b0425f00"
        },
        "item": {
          "id": "9433b5ad-3e57-446d-a027-6e1f612782a3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "04949023-4bf4-405f-847a-e5acfbdc5b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d3f1fc-f357-4323-88f3-39ef846a4817",
        "cursor": {
          "ref": "0c2eafc8-9941-447e-a0fa-906acdf42c26",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "df8c79ef-a9b1-4770-9195-4244bf96021b"
        },
        "item": {
          "id": "88d3f1fc-f357-4323-88f3-39ef846a4817",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "cd54b658-7144-48bb-9e92-809f4793628c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1294c5-37f6-4d5b-84e6-93971edaf40f",
        "cursor": {
          "ref": "30ec588d-a4b3-45db-b6bb-50e69876068c",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "28172986-fbb6-48aa-bb71-692f6a60eb3c"
        },
        "item": {
          "id": "dc1294c5-37f6-4d5b-84e6-93971edaf40f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "755719e8-34f1-4706-9db8-be9113b23395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b64ac8-618a-422c-a505-7b4100773c57",
        "cursor": {
          "ref": "d2c746a6-b5e4-4ec9-a6a8-086a3aab83c1",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c3fcad96-b1af-4044-9905-a687b3a40d30"
        },
        "item": {
          "id": "a4b64ac8-618a-422c-a505-7b4100773c57",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1e23a078-d6fa-4a53-8c32-145e20cdc4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31da1fb9-a14d-486b-8165-4edd2786f7c2",
        "cursor": {
          "ref": "1724385f-3775-402c-a1f7-468104557131",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8806b7c1-6943-4b10-a7bf-aea13ae62fd4"
        },
        "item": {
          "id": "31da1fb9-a14d-486b-8165-4edd2786f7c2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "83e36293-e378-4a86-9450-b8f8e602e1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57fe8af-358e-42e3-9e1b-72b38f35a08b",
        "cursor": {
          "ref": "c0d2c68f-6c11-4ed7-b1f9-63094a7aaa1b",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9be4f543-bf98-4a6c-8a24-3362e1b2c072"
        },
        "item": {
          "id": "c57fe8af-358e-42e3-9e1b-72b38f35a08b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c29304a4-c433-4a26-bb08-71dbc9263dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a19961-f3fc-4239-b233-e00edf925718",
        "cursor": {
          "ref": "e629e543-b22c-426d-8bb1-a2047dd64711",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "51057557-18b2-404d-8f31-452147d9b93e"
        },
        "item": {
          "id": "a1a19961-f3fc-4239-b233-e00edf925718",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1408d8ea-0ebc-4639-a655-37e4c52b32e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1566e463-1c43-4a8a-afc9-a61bf5d0c7a7",
        "cursor": {
          "ref": "1835a911-c783-4880-b275-30d233b2b3bc",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e8066221-94ee-44d1-a948-ab4e0cfb0d0d"
        },
        "item": {
          "id": "1566e463-1c43-4a8a-afc9-a61bf5d0c7a7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4a8fb3a8-2574-4551-9b9d-676bb399cc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3878b7-690d-4462-ac76-da595607c984",
        "cursor": {
          "ref": "4cda19c1-e7dd-45ca-9c89-570fe8e6e84e",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9e0501fa-1040-4f36-9a80-cd84d9752164"
        },
        "item": {
          "id": "9b3878b7-690d-4462-ac76-da595607c984",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0ad32fb7-cf35-4124-8f0b-367174796cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56501ac1-1862-4c19-af08-5f31219dbaa5",
        "cursor": {
          "ref": "b6ee4a7b-5063-4a02-a25f-163bf765d951",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "43a63fa9-c6c6-4c4c-b1a8-4b1b2aacb999"
        },
        "item": {
          "id": "56501ac1-1862-4c19-af08-5f31219dbaa5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bd7541d8-218a-4eaa-9c42-15b0f45c979c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323c54b2-63e5-4cab-97e5-31c19ecbdaf9",
        "cursor": {
          "ref": "939bd123-0674-44f3-a364-d093e6ad4f80",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "74360ad4-72ea-4250-a611-8d14c90b92d0"
        },
        "item": {
          "id": "323c54b2-63e5-4cab-97e5-31c19ecbdaf9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "46ce7b6e-cb2a-4efd-81c2-bd8ed05a0325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65033653-b652-4bde-aacd-a3ddf5807b6b",
        "cursor": {
          "ref": "427f6b4f-e4f9-44b9-aa0a-b3f42bb85918",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b1bbdd78-c6f1-4396-838a-f42abf1cccff"
        },
        "item": {
          "id": "65033653-b652-4bde-aacd-a3ddf5807b6b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9a353d27-f2d4-4bc7-acde-d45700a300ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259d8e48-9686-485d-b181-4e65c6d19826",
        "cursor": {
          "ref": "d34bfc27-d43e-4ba1-85f6-90bb13701d7a",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d8c59764-e77c-406c-b2d4-4e1534f09dcb"
        },
        "item": {
          "id": "259d8e48-9686-485d-b181-4e65c6d19826",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "67d73889-ef81-4481-85a8-56f524a7fb99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50527fc1-bb2a-42ed-b4f0-93d165843cbd",
        "cursor": {
          "ref": "221cd0e6-265b-45ee-8f28-5c47b7b5d9bd",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e1fdb151-0e1e-4ee8-a792-78bba48a0b9e"
        },
        "item": {
          "id": "50527fc1-bb2a-42ed-b4f0-93d165843cbd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "369736ff-89a3-4545-8f6a-a22240cbd6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da4c819-fd54-41c9-8d72-b246fbf01311",
        "cursor": {
          "ref": "54a4cd81-dd55-4e15-bb36-6d45c7d02378",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "19a9a055-500f-42d0-a25a-b06efa190c70"
        },
        "item": {
          "id": "1da4c819-fd54-41c9-8d72-b246fbf01311",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ef8988b7-2ff3-47c8-a5d3-84aceca8d509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8f7b93-50a2-4982-afe8-70d4b2108732",
        "cursor": {
          "ref": "91702744-6add-4b2e-8074-e9387cf22b3e",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2319feeb-c1d5-4c86-aaab-dae58621c4e8"
        },
        "item": {
          "id": "0f8f7b93-50a2-4982-afe8-70d4b2108732",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2202eff1-496f-4a83-b104-038b4807e562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a784c23-3118-4a6a-82eb-e50e77901c9d",
        "cursor": {
          "ref": "1402ec13-4219-4e8e-b806-adfa8e98281c",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3aef1651-f928-4bd1-863f-1ec3c2a58bf2"
        },
        "item": {
          "id": "5a784c23-3118-4a6a-82eb-e50e77901c9d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b61cce56-0b52-4c5d-9f62-d1297f75c909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4fec30-1833-48a0-a33a-e722c74af75c",
        "cursor": {
          "ref": "baa3c5f8-3e6b-4887-af22-961ad5519b2e",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "34c0c28a-38c5-4486-b9cd-7606636db1b3"
        },
        "item": {
          "id": "3c4fec30-1833-48a0-a33a-e722c74af75c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a50663fb-3813-45c7-b649-5245b02d2261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34cfc567-230a-4828-a430-1bc22c42b2f9",
        "cursor": {
          "ref": "10312d26-4b7a-45af-9c4a-df84d90fee29",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3ee01b2c-ef65-4d15-bb72-2980dc58d10f"
        },
        "item": {
          "id": "34cfc567-230a-4828-a430-1bc22c42b2f9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2ae707ba-af06-4f0e-afc2-deb15d066d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba5e190-694e-4134-ac43-9b3802c909f9",
        "cursor": {
          "ref": "278a8516-c2ee-43fe-ab88-7ac1c730c483",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "65042e48-2993-4c28-b689-33bd68a67161"
        },
        "item": {
          "id": "cba5e190-694e-4134-ac43-9b3802c909f9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3d965c25-0b2d-4cd9-b77f-890aecfb2798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268187d5-efca-4bd1-ad6e-9d4bbb6e03e2",
        "cursor": {
          "ref": "4ee06569-5785-495b-ad25-2c17e97043a0",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2dad3ca4-3bd3-4e0a-bddb-8d4547ea6841"
        },
        "item": {
          "id": "268187d5-efca-4bd1-ad6e-9d4bbb6e03e2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4a8da98c-b259-4894-9532-4e9201738847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c275056-509f-44b1-9ff8-94e8771c978a",
        "cursor": {
          "ref": "f73d6d92-28be-417e-80d5-3bcbbfe96fe6",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a15b30b7-18b5-47f0-8bf3-a203075154a0"
        },
        "item": {
          "id": "4c275056-509f-44b1-9ff8-94e8771c978a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b612f94e-135d-4b11-a410-4033d3152379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9d4520-ded1-4059-8edf-63e648018440",
        "cursor": {
          "ref": "6af1b8b2-3e0e-49e8-9735-f14f734bd16d",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "29d27db5-f3b1-449b-af79-c0efc2febb39"
        },
        "item": {
          "id": "7e9d4520-ded1-4059-8edf-63e648018440",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3938060d-20a2-41cf-95bd-bdd7c3a4b015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2da3cc9-a647-41bb-b816-f0b4f83f58a5",
        "cursor": {
          "ref": "0b26a96a-936e-4bc3-9959-b365d61434ce",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1e905909-3589-463d-8c6f-9d945b237a62"
        },
        "item": {
          "id": "b2da3cc9-a647-41bb-b816-f0b4f83f58a5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f20b7b27-23f0-4ae6-bfbc-82696117017a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fd0f80-6be1-4d11-b17c-645fc3df6841",
        "cursor": {
          "ref": "12516fce-47b4-44ed-a3d7-3cc0da16f2e1",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "527d4c18-0958-4913-b798-e4e43dd84465"
        },
        "item": {
          "id": "72fd0f80-6be1-4d11-b17c-645fc3df6841",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a313195f-55c5-4687-9c58-dbde3aec0204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30eab92d-0061-490f-a411-be6db2387fa2",
        "cursor": {
          "ref": "08cdcfc9-37e9-43a2-a979-4f795346c978",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "07a11fdb-4ed5-4d0d-854f-59486d0eca87"
        },
        "item": {
          "id": "30eab92d-0061-490f-a411-be6db2387fa2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "10d5437c-3a79-4f0f-b6e9-afd415033992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02392a06-8efc-4811-9cb5-f254a8dcf996",
        "cursor": {
          "ref": "b31ff11c-2a75-4c6c-94af-0aa654597bb1",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8b3cf6d6-0ef1-4ea2-a321-13d2f420ca5a"
        },
        "item": {
          "id": "02392a06-8efc-4811-9cb5-f254a8dcf996",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "05808d79-1de4-44ae-a0ae-5a5ba1e2620c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6a7e96-d2a7-4408-bf75-9793d533676d",
        "cursor": {
          "ref": "6967ba52-f50f-4067-98d8-37d1103a4def",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ed557e9f-d955-42c0-92a3-e24a4f94200e"
        },
        "item": {
          "id": "fb6a7e96-d2a7-4408-bf75-9793d533676d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5dbccc35-3c8f-4ae9-8f2d-eeed3fcd9323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5711a134-1702-45dc-942d-89fb41406ff3",
        "cursor": {
          "ref": "2481df30-7e22-4fc6-ab74-508c76e77439",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "eeae08f6-735d-4749-80cc-27c611c3fd2a"
        },
        "item": {
          "id": "5711a134-1702-45dc-942d-89fb41406ff3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4a44af32-61df-45a9-bab6-f4d2e675f3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0cadb0-0f8a-4fa8-a139-d16f36d915bb",
        "cursor": {
          "ref": "582735a2-f7af-4a93-a3ad-5c89d7d58a8b",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "affd79f0-0cff-4f5e-a293-ed0befdda39a"
        },
        "item": {
          "id": "8b0cadb0-0f8a-4fa8-a139-d16f36d915bb",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7f87bf66-6462-4bc2-bac2-6fb2443abdae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb43f31-2be8-40c3-88d5-97f77ae1474c",
        "cursor": {
          "ref": "2debe713-535b-4974-96ca-20fc5992d63d",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a08df967-5b4b-4bf1-9ba1-e0a52c8f5df5"
        },
        "item": {
          "id": "0bb43f31-2be8-40c3-88d5-97f77ae1474c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "162248f8-53cb-43f3-a724-eccf2a89c67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35b3eaf-2e6f-47a8-8d0b-8ae90219e966",
        "cursor": {
          "ref": "4ec1a251-7c7b-4393-bbc1-759f310ec495",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "55bc7dae-4412-4b02-8d36-7f7c36b3992f"
        },
        "item": {
          "id": "e35b3eaf-2e6f-47a8-8d0b-8ae90219e966",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e109738b-50eb-432e-bb06-49149c801a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31cdc519-a0dd-4883-aaf9-5926e6dd6acb",
        "cursor": {
          "ref": "0d37d72a-8b1c-48ac-8b72-22f903d4860a",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "11fd6d44-3934-4d3f-b54c-01069cf95a3b"
        },
        "item": {
          "id": "31cdc519-a0dd-4883-aaf9-5926e6dd6acb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f8eda7e8-adb1-4b20-ae56-b75d6ed1f27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a64fd0d-5a55-497e-9209-c22c333197fc",
        "cursor": {
          "ref": "bea80ccd-3552-42c7-878e-558c7ab68bd6",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6d1815ea-cdd8-446a-82e3-7dab871b7724"
        },
        "item": {
          "id": "0a64fd0d-5a55-497e-9209-c22c333197fc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a0a1600e-e911-4947-a3b2-54310f5841c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34e3290-d8dd-4bf9-bc4f-e4b562008b74",
        "cursor": {
          "ref": "8782fbf3-d699-4fef-96a3-11c0506a4436",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1fe09a9f-f415-4871-826d-ba77d4e7f34a"
        },
        "item": {
          "id": "d34e3290-d8dd-4bf9-bc4f-e4b562008b74",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "98ad9495-196a-4620-a470-454990675ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e7f74a-f24f-49ce-8951-50de90e956ee",
        "cursor": {
          "ref": "e4426ac6-9564-44cc-8176-7c3de86669e2",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a8ef0e14-a954-4986-ada6-fafe804c6358"
        },
        "item": {
          "id": "20e7f74a-f24f-49ce-8951-50de90e956ee",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4d74f76a-f09a-4f89-bd52-20926f1923d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b813cd-1167-4d23-a022-3b037a6bbea6",
        "cursor": {
          "ref": "89e75100-f2b1-4377-8151-9e9b69bcf425",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "34332c14-ff11-490b-adf0-0897c77af937"
        },
        "item": {
          "id": "94b813cd-1167-4d23-a022-3b037a6bbea6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fd92b5d8-ad67-4b3d-92e5-2ffc3ac94111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5ee14a-63d7-4b2d-8083-9c049ce8705c",
        "cursor": {
          "ref": "3bd90db3-9b97-4778-87e8-f16d59822df6",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1b40ae06-69ee-4add-9c41-a7d6aae90d0a"
        },
        "item": {
          "id": "8e5ee14a-63d7-4b2d-8083-9c049ce8705c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a3a196ea-ff00-4507-8936-353777feb8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55cb340-5024-4a24-a11b-0782eb0ddabd",
        "cursor": {
          "ref": "2f19cd7a-d535-41d7-ae81-e5569b25682c",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "18ecb67f-f65c-476d-bfb3-032806619e9f"
        },
        "item": {
          "id": "d55cb340-5024-4a24-a11b-0782eb0ddabd",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d0e49369-cb04-4273-8ff3-94c394935242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2849e7f1-79d7-497a-b409-77983e76f652",
        "cursor": {
          "ref": "d76777da-6147-43ff-aaeb-0270c2a4caa1",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2a7aa432-043f-425d-a183-f91890fb441a"
        },
        "item": {
          "id": "2849e7f1-79d7-497a-b409-77983e76f652",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a1786226-55e9-41af-acd0-55d04d1e6540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760c9ccf-5146-448b-93bb-b7e3ed915079",
        "cursor": {
          "ref": "aeafca26-1558-42ea-bbb3-daedb7d78ea1",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0bd822b5-4bd8-4bf7-aade-579031b7996e"
        },
        "item": {
          "id": "760c9ccf-5146-448b-93bb-b7e3ed915079",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "260a43e4-36de-4255-8166-9350d4cf2514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f40021-678d-4583-8699-ac6467bed784",
        "cursor": {
          "ref": "2ae96b15-763f-458d-87a8-ff657df46d0d",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ac380587-0673-4443-b96a-077b5e1664f9"
        },
        "item": {
          "id": "e7f40021-678d-4583-8699-ac6467bed784",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d06d91e6-9c23-451b-94ac-12bf2ef00c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d38f30-e084-47e7-82d7-d9d6a9ab9d0f",
        "cursor": {
          "ref": "3a8bb541-5610-4943-aa3d-66c075fe5f47",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3b59fc8e-7071-4d36-9ecd-e96506625422"
        },
        "item": {
          "id": "86d38f30-e084-47e7-82d7-d9d6a9ab9d0f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "43704f45-8fba-4f10-acf6-b1ccbbf5ad2c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f8d652-c97c-41f9-8433-8a2e06f07ac9",
        "cursor": {
          "ref": "8f614315-ceb3-4e43-aab8-bf00e3303c26",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "120ddc11-ecac-4a9a-b6b5-f812e9d7884e"
        },
        "item": {
          "id": "67f8d652-c97c-41f9-8433-8a2e06f07ac9",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "90f19992-881e-4ea4-b116-c349b53caca6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 531,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63803523-3c17-4cbc-8f71-977f2d1c4d51",
        "cursor": {
          "ref": "ebebb110-7d43-4b47-b1b3-52dc2ccb691f",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "debcec2d-4774-46cc-9d95-c4540cc76be3"
        },
        "item": {
          "id": "63803523-3c17-4cbc-8f71-977f2d1c4d51",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6af834b1-ae97-44b1-b5d4-2332494ae3ec",
          "status": "Created",
          "code": 201,
          "responseTime": 3727,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "3fe37d00-dc9b-4db5-a92f-2ef5fdacd707",
        "cursor": {
          "ref": "c5a34772-957c-4788-94e7-93796411521b",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2babcff6-2542-4726-a1c2-49747b8fd304"
        },
        "item": {
          "id": "3fe37d00-dc9b-4db5-a92f-2ef5fdacd707",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cd06c186-35a6-4d6b-b680-fdc2bf4ebfd3",
          "status": "Created",
          "code": 201,
          "responseTime": 3655,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "c96c3297-8aae-41d6-b3f0-391d527eb314",
        "cursor": {
          "ref": "f5a7722c-ea2b-415d-b86b-e98111fa0f66",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "76ebbfa7-5376-46c4-8418-203dd2cc3e88"
        },
        "item": {
          "id": "c96c3297-8aae-41d6-b3f0-391d527eb314",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fec1efc7-ff08-429e-90ae-8e92ff94a3ef",
          "status": "Created",
          "code": 201,
          "responseTime": 3760,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "72f85d58-cd9f-4fd4-854d-4f682a6d7f83",
        "cursor": {
          "ref": "9c513950-7885-4456-8e12-ed1efc28bb42",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6754b8a0-7583-459b-943a-7297a1d35dbc"
        },
        "item": {
          "id": "72f85d58-cd9f-4fd4-854d-4f682a6d7f83",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "19da1ce6-2f1e-4bea-a41f-d99d48165dbc",
          "status": "Created",
          "code": 201,
          "responseTime": 3775,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "c1eab4a1-7242-45fc-9aca-baab68759c4c",
        "cursor": {
          "ref": "dd5b71b6-ae80-4883-aa34-5000812da70f",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c93e6d62-1223-467a-bca6-abff55dd1973"
        },
        "item": {
          "id": "c1eab4a1-7242-45fc-9aca-baab68759c4c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "763f2218-299a-45b9-b2bf-991c7d03da04",
          "status": "Created",
          "code": 201,
          "responseTime": 4597,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "8b782960-896d-41c2-b286-8e07c04a5bb8",
        "cursor": {
          "ref": "6583aa98-eaf4-48c8-9756-6ad1b78ac983",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c9797279-3c58-4331-ba41-b98ba5ea7e3c"
        },
        "item": {
          "id": "8b782960-896d-41c2-b286-8e07c04a5bb8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b73d54f1-560e-409e-9ff4-529018caff70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b782960-896d-41c2-b286-8e07c04a5bb8",
        "cursor": {
          "ref": "6583aa98-eaf4-48c8-9756-6ad1b78ac983",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c9797279-3c58-4331-ba41-b98ba5ea7e3c"
        },
        "item": {
          "id": "8b782960-896d-41c2-b286-8e07c04a5bb8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b73d54f1-560e-409e-9ff4-529018caff70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a44a97b-6371-4cbb-9dd8-56247b0ffb0e",
        "cursor": {
          "ref": "c496d2c3-7694-440b-8756-0787a85353ef",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e943528c-a78b-442b-8a12-78d23cc87cd4"
        },
        "item": {
          "id": "6a44a97b-6371-4cbb-9dd8-56247b0ffb0e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1015234f-a21f-4cf1-aeec-40d974fadbe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a516b4-52e3-4126-bdc9-15d9ded8df0a",
        "cursor": {
          "ref": "d18a6739-2205-4632-b0f5-6406cde841ab",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "465b6452-b3fa-4bfb-a719-d0b362230cf5"
        },
        "item": {
          "id": "70a516b4-52e3-4126-bdc9-15d9ded8df0a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "dc6dffb1-5221-42b0-9879-3db20327b549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ff296f-78d6-4d1b-8169-c6e419764120",
        "cursor": {
          "ref": "7bd88f33-4b2c-4859-a552-d75ef6eb7057",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "77f7d2bc-08ed-4fce-b6e6-2844f36f99ea"
        },
        "item": {
          "id": "a4ff296f-78d6-4d1b-8169-c6e419764120",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ecf5ce8c-2ea7-4224-a58e-c6e61473fb68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 991,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837231a6-1af7-4505-99d2-b2369551bf00",
        "cursor": {
          "ref": "0cf3605e-2c2b-4d52-83a8-378771520c71",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "787da3a4-2229-47e8-9aef-8ac933683090"
        },
        "item": {
          "id": "837231a6-1af7-4505-99d2-b2369551bf00",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b84c5d69-56d6-4aad-8b14-b65a8ee9f93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b322d2d-3e52-45a1-815e-bc6cac0728b1",
        "cursor": {
          "ref": "4b85051a-0a8a-4404-8e1d-1ff4318ce1b7",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "41943320-12de-4b4b-881b-4065fd167f21"
        },
        "item": {
          "id": "6b322d2d-3e52-45a1-815e-bc6cac0728b1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5ede0ff5-b897-4823-9e5c-40e32ec8d3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31a2353-6c8c-4ffe-8202-d011394ed113",
        "cursor": {
          "ref": "7998f124-6474-4ba8-ae15-6689d191e046",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "900e81b9-e10b-49f2-ad72-0c081d2a0e6c"
        },
        "item": {
          "id": "d31a2353-6c8c-4ffe-8202-d011394ed113",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ca15f491-8155-454c-8027-57f45aebb7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9301b5f-3654-4245-b79b-ed7666903143",
        "cursor": {
          "ref": "a5a6186c-580b-4adf-b891-26b1579454f6",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3a5312e8-c816-4c6f-a1dd-102419611aab"
        },
        "item": {
          "id": "e9301b5f-3654-4245-b79b-ed7666903143",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d5cac51b-3d21-4433-8e77-a8ae95cff2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6991534c-56ea-4157-a0ae-eb0beec870ff",
        "cursor": {
          "ref": "a62f758a-23a5-4bf1-bd5c-87c1d03cf662",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3d691d4f-9589-4d3f-bb0c-f6ffddad53c8"
        },
        "item": {
          "id": "6991534c-56ea-4157-a0ae-eb0beec870ff",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "db310e98-31f6-4de9-8014-771d41b70aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bb464c-e3d1-4b65-bdeb-218f77fb56df",
        "cursor": {
          "ref": "dfd94191-dc8c-49b1-9ddb-e877fcb322b6",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cb6ec35e-87dc-4e91-8857-0455cae746cd"
        },
        "item": {
          "id": "36bb464c-e3d1-4b65-bdeb-218f77fb56df",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9a1eaea6-923c-4c5a-82ae-af84f7ea705c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47cc23d3-fdce-4d8a-b64d-b7f08b123d44",
        "cursor": {
          "ref": "bcf7ca83-0741-41c7-9ed9-2cbc53001e2d",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "06a12fbf-739e-4c1e-8692-260138cec514"
        },
        "item": {
          "id": "47cc23d3-fdce-4d8a-b64d-b7f08b123d44",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "454dcc3f-c828-4858-a518-251d94776254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d1f6d4-aa79-4fb6-8e9a-519681885759",
        "cursor": {
          "ref": "eab8af8a-25b9-4b60-a7ea-0c12b915cafc",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cd721f73-646c-4a3b-a9a8-ac03516317a9"
        },
        "item": {
          "id": "19d1f6d4-aa79-4fb6-8e9a-519681885759",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "96959880-df9a-46a5-bce2-f93356d04c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec631056-1bbc-42a3-9e1e-62ae905fc415",
        "cursor": {
          "ref": "e8c117fc-c133-4ef5-8590-b6292283bbcd",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e1045826-5720-4eb7-b5b4-85664b6499fd"
        },
        "item": {
          "id": "ec631056-1bbc-42a3-9e1e-62ae905fc415",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "37fe5ecb-9667-48b5-b6b3-f045197b60b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df44867b-1182-422a-8bc1-2153e24e8b2a",
        "cursor": {
          "ref": "2b4f82f6-7910-4288-ab16-6f3bf43c1c48",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "de3142f0-993b-4dc5-9cda-8c1e18078fb2"
        },
        "item": {
          "id": "df44867b-1182-422a-8bc1-2153e24e8b2a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ae64cf99-e3d5-49ab-84ed-3ae2173b9cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384f6c5c-a1f9-42d1-b4d1-bf09d55165e7",
        "cursor": {
          "ref": "1f5df629-f2b2-4654-8cff-68e757a96733",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c668af8c-bf42-4c08-b39b-8aab1e456a05"
        },
        "item": {
          "id": "384f6c5c-a1f9-42d1-b4d1-bf09d55165e7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4a68e779-b665-4b4a-a106-545e0bb95a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487005e8-b84b-4481-b040-84a7ab51ea7c",
        "cursor": {
          "ref": "ad5dc765-e81c-44fc-8691-4828bea94cca",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "79d2f001-4356-48ee-ab2c-9e5ef2008e69"
        },
        "item": {
          "id": "487005e8-b84b-4481-b040-84a7ab51ea7c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8a6417f5-7d81-4479-a9a8-5db747642e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01dd7a1-ec83-4cc9-9066-fa10fc0b8986",
        "cursor": {
          "ref": "26013553-9ef8-421f-9475-df7e85f1e975",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fd139236-5c64-4da5-a5f7-e80ff65814b3"
        },
        "item": {
          "id": "d01dd7a1-ec83-4cc9-9066-fa10fc0b8986",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "13ebf0d4-13b5-4e59-a90f-2e558d40b915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d1d244-e547-43e0-a505-4defd4db90d0",
        "cursor": {
          "ref": "faeb60a4-f9c0-4a88-9a3d-59a14bc7488b",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bb5718c6-cd72-4b8e-be65-11e14b3eb478"
        },
        "item": {
          "id": "d8d1d244-e547-43e0-a505-4defd4db90d0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "950832cf-367c-44e4-bec2-a0af20ccdb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c65e31-6a6a-41e7-be84-89a63ed32f7d",
        "cursor": {
          "ref": "7c3e1a3f-e88a-4344-ba4a-fc37f7219ec9",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "089118a9-b93e-47ce-b05f-93ebf6db35e2"
        },
        "item": {
          "id": "b0c65e31-6a6a-41e7-be84-89a63ed32f7d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cb69af68-768d-4736-a699-006f0c022d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa944848-c6e7-48e4-8e87-55881db2623a",
        "cursor": {
          "ref": "e6aab654-165e-49b6-b67a-2836c5bbc580",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1d105d94-92a4-4167-8865-abbcb9f4d675"
        },
        "item": {
          "id": "aa944848-c6e7-48e4-8e87-55881db2623a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e9374e8e-6b9d-44eb-9c92-6c146299c05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35649c95-7aaa-4eb4-b25d-ec8ec1e66ae2",
        "cursor": {
          "ref": "845912b3-bc35-4f1d-98b3-d288d0ca3679",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9dd1d443-37ea-44b1-8a9b-fcedb6be8296"
        },
        "item": {
          "id": "35649c95-7aaa-4eb4-b25d-ec8ec1e66ae2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "04744388-13ea-4d1d-a11c-ff2171579859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456741c8-e980-4b11-9416-e84c1b6240c1",
        "cursor": {
          "ref": "f5d789da-67d1-4db6-8ace-3dbffaf1f7b4",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "06a6a815-8d9b-4ff0-a988-33f6d48eb82e"
        },
        "item": {
          "id": "456741c8-e980-4b11-9416-e84c1b6240c1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "497702f6-3b9f-4080-9750-7c2f0b2a8206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2ebfd0-ec2a-4dc8-8a7e-49760238bd2e",
        "cursor": {
          "ref": "bdea1b82-85a0-40e4-86a7-a76fa3324d59",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "41256df3-bbb5-4c16-9a42-064a383e2f9c"
        },
        "item": {
          "id": "4b2ebfd0-ec2a-4dc8-8a7e-49760238bd2e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5038deeb-c93b-4555-ba8e-bd069d98cdc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b686f1-c7dc-4d5a-a740-4775cbc5ccff",
        "cursor": {
          "ref": "66ae3cde-1a77-4d4f-8511-dc73926d5fad",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9c7e912f-7be9-4cf9-82bb-f92b28887199"
        },
        "item": {
          "id": "e0b686f1-c7dc-4d5a-a740-4775cbc5ccff",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e0aeae34-6d77-4fc1-a8da-3d7a3e3f4a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a909b1-6e8e-475d-8623-f40ab2a8ddbc",
        "cursor": {
          "ref": "33473226-c86d-41fa-9be7-f7036a90312f",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ddeab0c8-871e-47fb-a86e-e40675ef8990"
        },
        "item": {
          "id": "10a909b1-6e8e-475d-8623-f40ab2a8ddbc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "34e535ff-477e-48e8-81d4-9c14fbd99039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2654a7-46d0-455e-8b6d-304b089305ac",
        "cursor": {
          "ref": "173a4f89-5459-452d-961e-9f7bdb1d9371",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f1907948-27b9-4523-8c0a-62fae8eac7dd"
        },
        "item": {
          "id": "5c2654a7-46d0-455e-8b6d-304b089305ac",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ebd71562-0e01-4f17-82c1-55a0bc10e1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e78faa1-0df2-41ec-b4ba-ed4ae11330ca",
        "cursor": {
          "ref": "96818801-1bf1-4849-82c1-ec3a9ea5f789",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "dd5cf602-5a73-4521-92e4-04aebac37952"
        },
        "item": {
          "id": "9e78faa1-0df2-41ec-b4ba-ed4ae11330ca",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "211b24c5-1c2b-4330-a529-87197d8aadbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c857efc-a042-47ce-8349-3455e11731ed",
        "cursor": {
          "ref": "6ff29f52-7a24-444d-82cc-3d486436b410",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "013e0572-c278-463d-ab7d-36fb566639ea"
        },
        "item": {
          "id": "7c857efc-a042-47ce-8349-3455e11731ed",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "715c9bd2-9fe8-459a-8589-de50e362aff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088b3da3-d6af-4979-b177-6d02372c66d7",
        "cursor": {
          "ref": "bbc4bb62-57cc-4d16-8fcf-380f69cbcee1",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "54efba3f-a238-4704-9e00-9fd7e11db038"
        },
        "item": {
          "id": "088b3da3-d6af-4979-b177-6d02372c66d7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8c97e15c-4495-4745-9b39-c1a8d25680f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c38d78a-c542-40b6-991f-d00cf3f7502f",
        "cursor": {
          "ref": "5b1b6b0f-e1b7-43b3-8207-edbc4a77f82e",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "867f9526-8cd6-4005-986a-44ab86ac64f8"
        },
        "item": {
          "id": "1c38d78a-c542-40b6-991f-d00cf3f7502f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4e3e5190-df16-47ed-bede-201eb175e96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601514bc-a741-4e17-b668-b651ab1c0b69",
        "cursor": {
          "ref": "2dd87ac3-13e0-47e8-ac2a-577ac23210bf",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b35e810f-7dd1-47c2-8d2b-d2b3213af22a"
        },
        "item": {
          "id": "601514bc-a741-4e17-b668-b651ab1c0b69",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a5a87c95-1389-4186-9606-585a24198472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3248e4f3-a166-40a2-bb76-ab4b765d7c27",
        "cursor": {
          "ref": "95c63678-bc92-4c35-9a17-a1ac343097d2",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "21012c5f-9035-47aa-87ce-0a79f9bb131e"
        },
        "item": {
          "id": "3248e4f3-a166-40a2-bb76-ab4b765d7c27",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6b7204f0-182c-40a3-a5e7-2ef1a48114b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d154b495-e532-43c3-96f9-5c8aefeefe0e",
        "cursor": {
          "ref": "3140d87e-2054-4eb7-8a03-d2c5be7387aa",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "be90c5d7-8e02-458d-89db-21819197f92a"
        },
        "item": {
          "id": "d154b495-e532-43c3-96f9-5c8aefeefe0e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c96f8adf-1b16-4864-bdee-994b6550e8d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92dc7fc-892a-40d1-b7c6-70e44c5fd162",
        "cursor": {
          "ref": "501194b2-3c15-4ca6-aba5-aa86d08d0770",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ffc56ffb-5287-4459-89f0-cb505056b892"
        },
        "item": {
          "id": "a92dc7fc-892a-40d1-b7c6-70e44c5fd162",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "5eb00cee-a5f9-42be-afb3-9e8080309439",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 527,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2727e817-07cd-4854-aee8-b0a326af757c",
        "cursor": {
          "ref": "e98822ad-f847-4775-b727-043fb4fee6db",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "13e3beee-b64c-4bef-b438-153038be6f46"
        },
        "item": {
          "id": "2727e817-07cd-4854-aee8-b0a326af757c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "eb1534ce-36a6-4f09-a30c-7262c68a7247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2727e817-07cd-4854-aee8-b0a326af757c",
        "cursor": {
          "ref": "e98822ad-f847-4775-b727-043fb4fee6db",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "13e3beee-b64c-4bef-b438-153038be6f46"
        },
        "item": {
          "id": "2727e817-07cd-4854-aee8-b0a326af757c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "eb1534ce-36a6-4f09-a30c-7262c68a7247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2a3672-b26a-4d62-a0da-6b2595ef9eed",
        "cursor": {
          "ref": "afffcc57-a1f5-40f3-bd97-730567cdef5f",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e7e7e694-c39c-43bc-8a1a-d28600b97609"
        },
        "item": {
          "id": "2f2a3672-b26a-4d62-a0da-6b2595ef9eed",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "977bc0aa-154a-428f-b22e-a563f66bb6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc8c521-5d0f-4cb8-9fe6-c916fc4f0688",
        "cursor": {
          "ref": "0a3213b2-f4e6-40d8-b0fb-0d5f309ce5e1",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8d0665e3-81ef-4e6d-94ee-45347b5938b1"
        },
        "item": {
          "id": "5cc8c521-5d0f-4cb8-9fe6-c916fc4f0688",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "53780363-3b3a-4e23-b8dc-3e3fff959c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b54f11-5d19-4b46-8532-6f31fb652a49",
        "cursor": {
          "ref": "293a9f6d-55e1-487c-9536-dd757df0c100",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5d4ab364-fd1a-4688-a27b-3473cdc55e4c"
        },
        "item": {
          "id": "81b54f11-5d19-4b46-8532-6f31fb652a49",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "67d41834-c23a-43cd-8686-cb339ed63d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146396cb-ee4a-4694-8fb4-d98591bd2acf",
        "cursor": {
          "ref": "cbaaf465-c350-470e-b99e-37cbc9795f5a",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b12559b3-6cb8-424b-98eb-bf9d9e3767de"
        },
        "item": {
          "id": "146396cb-ee4a-4694-8fb4-d98591bd2acf",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8bbe1248-5ce3-45ca-877e-0966a730b154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a4f309-ab4e-478f-ab32-d070966b2322",
        "cursor": {
          "ref": "96461b23-0da8-4280-b4d6-1aec9f7446ea",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7c958f57-01b8-4dce-83d0-946a9ac5694e"
        },
        "item": {
          "id": "e2a4f309-ab4e-478f-ab32-d070966b2322",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0f772e9d-c663-4bde-81df-da1e1b563315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db9042b-0715-4561-993f-3fcc174957c3",
        "cursor": {
          "ref": "19c751a2-e7a0-46ab-adff-e3d27d3a3ea7",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "dc3aadb0-81eb-4e57-867f-71c4252d262c"
        },
        "item": {
          "id": "6db9042b-0715-4561-993f-3fcc174957c3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "cfaa1d0c-28af-4bb5-9d84-f5405dabc14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9696047-8116-49ef-967b-0f1ad3e48b25",
        "cursor": {
          "ref": "eca08bce-5b66-4cba-af5b-25440bbc2fdd",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4e018024-10af-4837-a818-be613cf38952"
        },
        "item": {
          "id": "a9696047-8116-49ef-967b-0f1ad3e48b25",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e4f984e4-014d-431a-b27a-1f29d48f6359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830da1df-fd7a-4efa-97f7-d6870699c153",
        "cursor": {
          "ref": "1d11dce7-147e-41cd-ab17-b3ebc5a7f80c",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b77ca8f1-15a6-46b1-aeae-47aea2f755b1"
        },
        "item": {
          "id": "830da1df-fd7a-4efa-97f7-d6870699c153",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "077de87e-b2e2-47ca-946c-07789fb92b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2feb14c-a056-4c20-bb7c-e7c76af8c962",
        "cursor": {
          "ref": "28933e94-2d7d-41e7-a1d0-364442a575d1",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "cac05975-42ec-46a9-94ee-d3d5df51f690"
        },
        "item": {
          "id": "c2feb14c-a056-4c20-bb7c-e7c76af8c962",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2385c2d8-b0b4-4c95-b57b-a2de0879daac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763a5748-5438-4cbe-8a8f-8b37951b6d51",
        "cursor": {
          "ref": "5be21360-518c-4bd5-89c8-9cace4f3624a",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b9e4c88e-8872-4a41-80fb-f82d303b294c"
        },
        "item": {
          "id": "763a5748-5438-4cbe-8a8f-8b37951b6d51",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ed3ec514-4bb6-4c29-b2e9-df0416dcb174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a114624-99ab-469f-ac9b-611bd4a564b2",
        "cursor": {
          "ref": "92e33a34-9c66-4c26-bce7-87921a9afeea",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ae559a94-fb59-42ca-9579-9a6cb9032e2a"
        },
        "item": {
          "id": "4a114624-99ab-469f-ac9b-611bd4a564b2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c065e784-ce67-410e-8de0-a5f185329f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507ccf0f-ff45-4101-9ba8-bef315dd105f",
        "cursor": {
          "ref": "d559c43e-7733-4027-bc99-9176e33108a8",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "fe8dd48b-9f0d-489e-ba4b-acb4b9a10f7a"
        },
        "item": {
          "id": "507ccf0f-ff45-4101-9ba8-bef315dd105f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "97654216-a69f-456e-bf03-c615eeb13b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6244e17-c8ac-4da7-ae07-afc077c03970",
        "cursor": {
          "ref": "97a1cc55-3af0-4ff5-a815-a98fedfebc3d",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d6b0d79a-7a83-4d24-8cb1-357a31e77efb"
        },
        "item": {
          "id": "b6244e17-c8ac-4da7-ae07-afc077c03970",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b8874dd6-73f0-483d-92c2-a2c9c9d3626f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad769e9-e25a-4f5d-b50e-c35b04fe31c3",
        "cursor": {
          "ref": "1d1038c8-10ca-4367-8aeb-435fe20a2cf1",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5f78e582-c1cb-4dbe-a548-8a56a2141860"
        },
        "item": {
          "id": "4ad769e9-e25a-4f5d-b50e-c35b04fe31c3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bb5fd95e-7eff-4d10-ad04-f99f46294def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb9d11c-bdf8-40d5-9187-223a0af77a39",
        "cursor": {
          "ref": "1858ca68-d018-487b-8471-657545548be2",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "df5ae958-59ed-4d49-aa37-cf77d3e6e467"
        },
        "item": {
          "id": "bcb9d11c-bdf8-40d5-9187-223a0af77a39",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "298323c7-db3e-423f-b84c-f5308ae69fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14d4ccc-e703-4170-98aa-4409ff7b8a15",
        "cursor": {
          "ref": "4a85afb4-f2a8-4d84-937c-6d08866a53fd",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7d7c070c-14f7-48e1-a0d8-6cb9af502fb4"
        },
        "item": {
          "id": "a14d4ccc-e703-4170-98aa-4409ff7b8a15",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "89fe24ba-9cb4-4311-bf46-1da3b1b40d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841e36c1-cf79-4d5e-9a25-b112a8926e1a",
        "cursor": {
          "ref": "5b13f662-f1e4-47c1-97b5-98f66988328d",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "41c19b31-d36c-485c-803a-96ea795aad05"
        },
        "item": {
          "id": "841e36c1-cf79-4d5e-9a25-b112a8926e1a",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "9d639161-e671-4ea7-b041-835433ccfcf1",
          "status": "OK",
          "code": 200,
          "responseTime": 3579,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "2d0dde58-c5c2-46ae-9837-e81a9d09bc76",
        "cursor": {
          "ref": "fc913b59-5868-461d-8e38-cdd416009c38",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0cf4e591-6143-4eac-863e-98b68c31609e"
        },
        "item": {
          "id": "2d0dde58-c5c2-46ae-9837-e81a9d09bc76",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2411c255-9732-463a-a06a-178b99192a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed5c20f-ea8d-4021-99f1-d7018f698b58",
        "cursor": {
          "ref": "68c4b7b7-e134-4885-8b5d-b7ec81caa399",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "657d14c9-7ce6-446a-96b4-bd3ee4b6977b"
        },
        "item": {
          "id": "0ed5c20f-ea8d-4021-99f1-d7018f698b58",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fe548efa-4e4c-418c-b306-64085f3ab12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5209239-6d10-4525-b4f0-20cf2dd0ebdb",
        "cursor": {
          "ref": "2d7decae-f250-44b1-a856-107a9b69b269",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4e03495d-e751-4af9-b17e-efc93297ca5f"
        },
        "item": {
          "id": "f5209239-6d10-4525-b4f0-20cf2dd0ebdb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8a70a03e-0302-4c0d-bfe4-ecc073be29ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37444dff-71f3-462e-abce-3f7406760c01",
        "cursor": {
          "ref": "bd81c356-7e9e-4981-858e-7b35926bc4b6",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7e7e8233-dfc7-465e-b98e-487fd68d7d90"
        },
        "item": {
          "id": "37444dff-71f3-462e-abce-3f7406760c01",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "dd27a191-ad38-4ccb-9c2b-aaf0c51dd942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba76cbf-112e-48ee-8c83-ae21a70c96f0",
        "cursor": {
          "ref": "5d0f3065-aa53-45ae-a64d-7e4e818fecd9",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e44fe0a9-4b26-4e89-9283-d8d8511758d3"
        },
        "item": {
          "id": "aba76cbf-112e-48ee-8c83-ae21a70c96f0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7a7b4cdc-c3ea-4ae7-959a-9437f56ca797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4e562f-e879-4774-8794-7516b24a0bcd",
        "cursor": {
          "ref": "08846a7b-391c-47ac-bb3d-2204554a754c",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "28c00dc5-aed5-4c1f-9936-01bf2e587aa1"
        },
        "item": {
          "id": "ed4e562f-e879-4774-8794-7516b24a0bcd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6b18991a-1ca9-4c70-964e-2e6429a2beb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62785676-3fe7-4b0d-94a3-7fe312dbb429",
        "cursor": {
          "ref": "fffb7eb1-4547-4ac7-a674-f808d0b3abeb",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "05510605-c405-4d56-bd0e-4770eb4428dd"
        },
        "item": {
          "id": "62785676-3fe7-4b0d-94a3-7fe312dbb429",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "be652919-25bb-4da2-87cd-364868c6214f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50134f2-e1d1-49b2-9203-fa0a7cab20a0",
        "cursor": {
          "ref": "3a6eee8d-5cca-4090-9657-50088cc59f0b",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4d1154dc-be75-4a19-b586-59eefbcb2670"
        },
        "item": {
          "id": "c50134f2-e1d1-49b2-9203-fa0a7cab20a0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "796345a4-4106-4d60-987f-3bb15b3934dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334ab818-2e70-4a72-8643-a06521fc1fcc",
        "cursor": {
          "ref": "c0a24ec9-1945-4a88-9e23-a4efe78d72f9",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a558326f-4ce6-410c-9df2-f98b5513c55b"
        },
        "item": {
          "id": "334ab818-2e70-4a72-8643-a06521fc1fcc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0794702f-53f2-4375-97e4-6911eb0acfec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b623cab6-efa4-4961-a82d-de90c84d8b4e",
        "cursor": {
          "ref": "8db6d2cf-57e6-4264-b68e-b8d1e8979bb4",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d02c928b-434d-4c1b-9254-fb70bd8c571b"
        },
        "item": {
          "id": "b623cab6-efa4-4961-a82d-de90c84d8b4e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "86d25f86-81ef-4968-8732-3d418324cc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7e38d3-6556-4631-ba27-f45004ec9746",
        "cursor": {
          "ref": "30702cd4-3cca-4616-b1a7-14be72b611a0",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7b501cd5-e6ce-4b1d-8716-6f1298a0e3b3"
        },
        "item": {
          "id": "3e7e38d3-6556-4631-ba27-f45004ec9746",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "511a6842-ac7f-4060-a9bf-c98f24ca9ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bce47d6-b02d-4f41-9c24-da7b68f7d7f4",
        "cursor": {
          "ref": "f18bb821-fb09-43b3-bba9-07e86f565256",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "22592b2d-8bc5-446d-af15-7bc8c31bec50"
        },
        "item": {
          "id": "8bce47d6-b02d-4f41-9c24-da7b68f7d7f4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2839332f-67db-44b9-9663-97658cb8d9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a86043-f396-4003-9772-74c46e18b620",
        "cursor": {
          "ref": "51b390a0-1603-4eaa-a39a-90ce72031d96",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ba8a7b52-2932-4c14-a229-c6c73bb72324"
        },
        "item": {
          "id": "b7a86043-f396-4003-9772-74c46e18b620",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ac43d8bf-4216-4cf2-bd7c-60bf6d1b45ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e51761-5ef8-47a4-be8e-dab901dab7f8",
        "cursor": {
          "ref": "def4dd46-3d93-4afc-827c-6e56066d3911",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5975fa1c-03aa-4d90-824c-b7c2d645e180"
        },
        "item": {
          "id": "58e51761-5ef8-47a4-be8e-dab901dab7f8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e322b5b1-27cd-4967-ad52-c6faaa35f36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c18dcc-5baa-4991-b7e8-9a709a6c045c",
        "cursor": {
          "ref": "380b5d9e-1a2c-426b-b9df-706b0ec1a5b0",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "25ddbaa9-4d72-4e77-b8dc-e92e4c681b04"
        },
        "item": {
          "id": "17c18dcc-5baa-4991-b7e8-9a709a6c045c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "56af3a08-4dea-40c6-a08f-1215a85834cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f383d2e9-a0ac-41b9-b0ee-fb3579a854ec",
        "cursor": {
          "ref": "458299b1-c9ce-4079-831c-58773c32a174",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a9270282-0027-47c3-abd7-b889c0ed52ae"
        },
        "item": {
          "id": "f383d2e9-a0ac-41b9-b0ee-fb3579a854ec",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "dbee2580-d0fc-4072-a325-b9994105b119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d2dce7-b84d-44e5-9f81-0d2cd6490ce6",
        "cursor": {
          "ref": "b325d5ec-acdf-43b9-92d3-fb4d32363927",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b8131cbd-0b72-4f64-888a-260c9c133648"
        },
        "item": {
          "id": "43d2dce7-b84d-44e5-9f81-0d2cd6490ce6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "16b2c126-1462-495f-bf9c-095bcf028b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882541f1-c49b-4776-9721-099b39d9b9ed",
        "cursor": {
          "ref": "f9f3309b-4be7-4708-ab4e-3030f523212b",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d569827c-ecb0-43d7-b37f-371bcb665d2c"
        },
        "item": {
          "id": "882541f1-c49b-4776-9721-099b39d9b9ed",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "52b55ba3-c78c-4b50-b074-5b82db1affd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d442538b-5d8e-43a3-a3e9-cebd9ae5ec3c",
        "cursor": {
          "ref": "eeb53fd1-f128-4bbe-a74e-24917e7bafe2",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b931fe8c-9275-4736-9fc7-bcfbcff11e7e"
        },
        "item": {
          "id": "d442538b-5d8e-43a3-a3e9-cebd9ae5ec3c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6564fa6e-ef8b-4920-bad3-a6d17be15bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a28cf2f-64fc-45d5-a349-39b246dedf4e",
        "cursor": {
          "ref": "75137256-f84c-4dac-b596-ebe66e5027a7",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "cf1c135c-df73-46ec-ad8a-7db7f72a5290"
        },
        "item": {
          "id": "8a28cf2f-64fc-45d5-a349-39b246dedf4e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "42c2ed6c-b041-4a13-a58d-c1bbd5e7bacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190b744e-2baf-4864-8a18-6dec668f25b4",
        "cursor": {
          "ref": "11c5fa7f-1f88-4dae-83b0-044b5a2d8f03",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6e6dcaf3-b76d-4b92-9d0c-e84e4c410878"
        },
        "item": {
          "id": "190b744e-2baf-4864-8a18-6dec668f25b4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c30db0b2-fcb2-4d04-9b3f-fe68bef1d369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f70f7ba-bd4d-442c-8393-ab796acd5988",
        "cursor": {
          "ref": "ce445827-b888-46ca-9385-cf555eb0a86f",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "72c01de2-ae56-4d3a-8a3f-01b17dc845fe"
        },
        "item": {
          "id": "7f70f7ba-bd4d-442c-8393-ab796acd5988",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4aec9598-df42-447c-8ff0-fcef00110054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137a0645-2745-44bd-a29d-c48946017959",
        "cursor": {
          "ref": "af995855-a6e0-46c4-a71f-ccc694f4e41e",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c2bfa5b9-b452-4c1c-ae9c-cd9749229f3b"
        },
        "item": {
          "id": "137a0645-2745-44bd-a29d-c48946017959",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "61356b61-b411-4a8c-8f39-e4d8db0bf5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6885df30-f1e5-4efc-a0ee-dcf7221b5c9b",
        "cursor": {
          "ref": "07493dd9-4968-403e-8d27-834853fe231e",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9a20f8aa-8f3c-4a59-a976-a1cfec223074"
        },
        "item": {
          "id": "6885df30-f1e5-4efc-a0ee-dcf7221b5c9b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5b8c1552-83bd-4d04-8c1f-55af8cbcd55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bbe0a1-4526-4a89-b143-7caf58840881",
        "cursor": {
          "ref": "432629fa-0c22-4adb-83db-16c639282c6e",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "959b61ea-08c1-4703-9e47-1295119ac3df"
        },
        "item": {
          "id": "c2bbe0a1-4526-4a89-b143-7caf58840881",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3f504ac0-3d46-4d31-af9c-c295bb76208a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd266af-e32b-4b81-afad-fb3b06082b54",
        "cursor": {
          "ref": "9a6f8e42-0026-46c6-8c0e-5eed649c3c18",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f41b5bd8-0f04-4907-a697-4fc95283b67f"
        },
        "item": {
          "id": "0bd266af-e32b-4b81-afad-fb3b06082b54",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "949ada98-5643-4c4a-9511-fca5f742e8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73508e2d-6d60-4bc9-89a8-245b864e80a8",
        "cursor": {
          "ref": "d37ed59e-0ce4-4e0e-acdd-dad166828ce1",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "018364f0-8726-49e4-b724-f7c3341e1800"
        },
        "item": {
          "id": "73508e2d-6d60-4bc9-89a8-245b864e80a8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6779fa6b-49db-4e2c-a847-d4c5a2dac1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9f636a-5ecf-4614-aaff-ddb3c5948ef5",
        "cursor": {
          "ref": "2f791f96-ef15-41b5-8128-8ad972a7883b",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "217b1272-bd59-4eb5-8b63-a033c6c2fe38"
        },
        "item": {
          "id": "9a9f636a-5ecf-4614-aaff-ddb3c5948ef5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8f012d41-6b39-4dae-9160-ccf293b063a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5f2420-a600-4fd9-9a62-d53a5bd8610e",
        "cursor": {
          "ref": "0f964cfa-a962-41d5-acb4-7133f6aa46b9",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e7746a5d-97b1-435e-bf13-159695e48dbd"
        },
        "item": {
          "id": "7f5f2420-a600-4fd9-9a62-d53a5bd8610e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2c297af1-e1dc-49f7-9cb3-a85227acc203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db84243b-673c-4f3f-b815-e15ad873dbf1",
        "cursor": {
          "ref": "d5899384-b536-405d-b43e-9d1967f98279",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "724e372e-d093-4669-9e3d-922f5fb131be"
        },
        "item": {
          "id": "db84243b-673c-4f3f-b815-e15ad873dbf1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "48a96a6c-6786-477f-b205-816e5d39445f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da14922a-60ec-4f76-b3c6-6932a24cc368",
        "cursor": {
          "ref": "ed67dbbd-0c15-40fc-962b-1574acd653d6",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9bba0007-ebff-4446-af03-69457255eedb"
        },
        "item": {
          "id": "da14922a-60ec-4f76-b3c6-6932a24cc368",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "80378c8d-e9b9-47dc-a5c5-8520a489b0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6404c32d-8b71-4cb9-a571-473284c1b99a",
        "cursor": {
          "ref": "26bba6ef-cd95-4666-8594-30e79c435b71",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1d93489d-8e4f-4613-8605-ce62bec38d12"
        },
        "item": {
          "id": "6404c32d-8b71-4cb9-a571-473284c1b99a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a711dc20-e0b5-49d3-805f-363d5009baec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dab0d87-0bc8-416e-ba47-634bd25d1854",
        "cursor": {
          "ref": "9f1c74b6-9370-42dd-a545-ccb3368ddb1d",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5fc420f8-82a1-4ff0-974a-8e690df0ba53"
        },
        "item": {
          "id": "9dab0d87-0bc8-416e-ba47-634bd25d1854",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "51746207-423a-465c-a384-6c055b1d4edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b18e61-b67e-40d7-b79a-5faf6e80f732",
        "cursor": {
          "ref": "35ab7ddd-1082-4baf-97fe-32b5e6239283",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0d8f94fc-a609-4083-be0c-981949a4efda"
        },
        "item": {
          "id": "d8b18e61-b67e-40d7-b79a-5faf6e80f732",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a4d5ec0b-95d1-471f-a5a7-9cc63a46bab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca2b013-deb3-417a-998d-dab98d78f23b",
        "cursor": {
          "ref": "5aee82e6-a816-458d-bdce-55d2e5faa7ab",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e79894f5-de3d-4fe8-8e2d-e825c9d3fd7d"
        },
        "item": {
          "id": "2ca2b013-deb3-417a-998d-dab98d78f23b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "51ca7129-3b6b-465f-bcf0-96fb948ac808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a23d707-6937-453a-925f-e91ec4e75a97",
        "cursor": {
          "ref": "e34ba556-a159-4f72-ab70-e40b9c38f576",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fd08396e-5f23-4e59-9ebe-f230d5705856"
        },
        "item": {
          "id": "4a23d707-6937-453a-925f-e91ec4e75a97",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3c8fcb63-9e83-4170-82eb-8561c71fb85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ca9a28-4f9a-4101-a556-62b6615859ef",
        "cursor": {
          "ref": "e69f59f4-1ef7-4b69-9a9d-c8181da82d96",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e6a2f3fe-40c6-4f54-b1c6-d8c990c3e66d"
        },
        "item": {
          "id": "09ca9a28-4f9a-4101-a556-62b6615859ef",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3a176f30-e093-49f3-87c0-9ddb4596be77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f477eee5-ad9a-4eb7-bbda-426eb6cd1482",
        "cursor": {
          "ref": "9fd00504-4a9b-4eee-9c5f-339e57bc7554",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e15ac58d-61b9-4c2c-a507-0c0ae0410350"
        },
        "item": {
          "id": "f477eee5-ad9a-4eb7-bbda-426eb6cd1482",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ae7a6369-44c5-46b4-9e53-b1c57308fd24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3f7e0d-2b35-40d3-bae6-03d809ffad11",
        "cursor": {
          "ref": "04380834-d062-4d8a-8dc9-780678898ac2",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2ef99261-8433-4aa4-9f5b-bd543ed64453"
        },
        "item": {
          "id": "ac3f7e0d-2b35-40d3-bae6-03d809ffad11",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0562b2c1-9559-4841-837b-c48ef52af962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6bc487-d9c5-48b2-9278-afdc6fbbdc16",
        "cursor": {
          "ref": "c7379641-8f65-479f-bf51-aebdfd934a09",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e2251fdd-c0bf-45f8-b6bd-6d7868fd1e78"
        },
        "item": {
          "id": "3f6bc487-d9c5-48b2-9278-afdc6fbbdc16",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "edc71894-42c5-4e15-8ee0-9a617e1baf8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a14bb06-73bb-4d3b-bb34-0fd749d33ef8",
        "cursor": {
          "ref": "0f418989-4303-4202-948e-364a8aec277c",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "920caa52-d949-41ea-b882-cd7e22fc68d8"
        },
        "item": {
          "id": "6a14bb06-73bb-4d3b-bb34-0fd749d33ef8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "35f98331-66a5-4f36-a827-8e225331a432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ec564b-8abd-4532-b8a8-be0d4f48c538",
        "cursor": {
          "ref": "551b5b56-1fb9-421c-8560-0d216c0d001c",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f6b3be80-b82f-4759-b32e-d47d2972a31f"
        },
        "item": {
          "id": "d5ec564b-8abd-4532-b8a8-be0d4f48c538",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "00a23b0f-b1cf-4e24-a3a1-d3db603a611d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de647486-c79b-49ec-8bb9-4ca36adc8259",
        "cursor": {
          "ref": "78894c76-ba82-4179-b714-6ed56886b380",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "616e98a7-ea8c-4101-ad94-e108fa150068"
        },
        "item": {
          "id": "de647486-c79b-49ec-8bb9-4ca36adc8259",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "020fe55a-c541-4811-9f97-717b7fc12a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0043327-4084-40c1-9a32-ccf4ef4192f6",
        "cursor": {
          "ref": "b35c5f79-7cf4-4e14-a255-d969a82cf221",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3cccdd97-67cd-4175-b66f-6b44b00720fd"
        },
        "item": {
          "id": "b0043327-4084-40c1-9a32-ccf4ef4192f6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "70aeb576-da7f-40f9-a9af-60390b33dc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b3c0a1-634d-4c4c-84bc-2bc1a2590686",
        "cursor": {
          "ref": "fb37aba3-7c28-4ac7-8ce0-1c19a890661f",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3e6bf790-c5d0-41a1-a02b-3041330c3359"
        },
        "item": {
          "id": "d1b3c0a1-634d-4c4c-84bc-2bc1a2590686",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9ab6788f-f6d3-435b-93d8-61be31e28af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4516e62e-d2a5-4c62-8f39-51f1c705f28b",
        "cursor": {
          "ref": "d37e5a94-73c2-45e2-a334-f09857765b8d",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4a851ff3-477f-4586-87c8-29f4b099ec4a"
        },
        "item": {
          "id": "4516e62e-d2a5-4c62-8f39-51f1c705f28b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d414ceaa-146f-4cd8-9e44-c81fb1a4fdc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794b8551-d247-4db1-b1c3-74b99503b0fe",
        "cursor": {
          "ref": "42503f3c-7506-41bb-9928-31cf91914446",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7711a7d1-5be8-4ce3-89d8-57f0d7288963"
        },
        "item": {
          "id": "794b8551-d247-4db1-b1c3-74b99503b0fe",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8a117371-103e-4aa0-a405-89774af11ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7163f385-1409-4653-8b20-99f11bd0e982",
        "cursor": {
          "ref": "9f735d24-43db-4bfa-b1b8-3255ff322103",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dad4ebca-ca13-4339-99a1-c2bf4cab48df"
        },
        "item": {
          "id": "7163f385-1409-4653-8b20-99f11bd0e982",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "67fcf36d-5f9e-41c1-8d3a-9662c9358a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa74bc3d-4e3d-4e95-9f66-8711b51bd8b7",
        "cursor": {
          "ref": "02d782ce-29f4-41ed-a552-91385bfdd222",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b88ff132-2174-467d-93c8-e930681ff89f"
        },
        "item": {
          "id": "fa74bc3d-4e3d-4e95-9f66-8711b51bd8b7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "85bb766b-eab3-4ed3-b12c-7963742d9789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21543840-20ab-4bc9-9e52-e0ad1931a6ae",
        "cursor": {
          "ref": "719ea6e4-4fb7-46d2-b40c-8272449a5fad",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2da32547-bb2b-45d0-9f72-1c1ce8d05524"
        },
        "item": {
          "id": "21543840-20ab-4bc9-9e52-e0ad1931a6ae",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1dfb169b-71ab-4ebb-a093-b1211ee8f99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17e133a-eb00-426b-a29f-1235f158efab",
        "cursor": {
          "ref": "83e8d2b0-9390-4944-bd7b-da3afd9c06b7",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "44eeaa74-562e-47dd-a05b-58d729635c98"
        },
        "item": {
          "id": "c17e133a-eb00-426b-a29f-1235f158efab",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "60814b53-367b-4f1f-b774-f453e3429f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95840deb-fb50-4f3a-8850-779babae645d",
        "cursor": {
          "ref": "7daf1ede-74d6-4d02-83b3-d0a26dd2a8c5",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fb1c4594-6f11-4bac-a873-5e83d5b761d7"
        },
        "item": {
          "id": "95840deb-fb50-4f3a-8850-779babae645d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "095f87d0-ac75-49c3-ae04-bf5cff9a549c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccbf275-e8f2-410a-9d44-fc29dabca4e0",
        "cursor": {
          "ref": "af71d6d4-9cee-46ff-8de0-21489d379a92",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f82dc896-4a37-462f-9f5f-dc6545e4e59a"
        },
        "item": {
          "id": "4ccbf275-e8f2-410a-9d44-fc29dabca4e0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cbb1e00a-272b-40d5-bbbe-bdc58d1f2ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703ce962-69c7-4cc0-8ea5-add0a0e619cb",
        "cursor": {
          "ref": "917d2e56-57c4-492c-abb2-5be76b5822b2",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ae1980f5-482c-47ca-b663-8db666c15350"
        },
        "item": {
          "id": "703ce962-69c7-4cc0-8ea5-add0a0e619cb",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6a47d379-75dc-4904-88fd-61296de6e726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfe4ef0-c0fe-4073-a056-b65b007d744b",
        "cursor": {
          "ref": "2b005ef1-5606-4a76-ad06-f73902098655",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b82232e1-17c7-4733-9eca-095a918970be"
        },
        "item": {
          "id": "6bfe4ef0-c0fe-4073-a056-b65b007d744b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f9a2a125-4109-49e2-890a-1c79483b30c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f504ef8c-d239-4880-b083-0e5478224009",
        "cursor": {
          "ref": "edd07b00-6837-4cae-b662-ea27fa85d8b5",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1cdd4641-6943-4412-9d73-0da68bc587bd"
        },
        "item": {
          "id": "f504ef8c-d239-4880-b083-0e5478224009",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0c869773-ac85-410b-82df-d6815a15eb5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6144ca-05df-4765-9bfc-d2eb226eef7f",
        "cursor": {
          "ref": "9aa690c0-19b9-4781-8d1b-8dd19d2dec10",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7d1cda97-aa31-44e7-a396-983e564e939d"
        },
        "item": {
          "id": "5d6144ca-05df-4765-9bfc-d2eb226eef7f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8f93a8ef-0d4b-437b-b2bd-f691a280825f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423ed87f-d806-4081-911c-6003390f53d0",
        "cursor": {
          "ref": "89978808-e48f-4d01-9d80-0daa4cc803ab",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "056f3a71-d652-442d-9793-e528e17902c4"
        },
        "item": {
          "id": "423ed87f-d806-4081-911c-6003390f53d0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "516172c6-4f24-421c-afe9-90144c5bf094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcc2d11-93d0-4902-93a7-bb679b9fe4d0",
        "cursor": {
          "ref": "e23589a0-8eb7-4516-a2f5-e1c1363536f5",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "99a3b6b1-a114-4a32-b67e-b874d6276838"
        },
        "item": {
          "id": "8fcc2d11-93d0-4902-93a7-bb679b9fe4d0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9b30417d-fda4-4939-bf74-91e9419ef283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f11ac8-3494-4d9e-b0e6-269590b2c6d0",
        "cursor": {
          "ref": "1e496ae6-a2ef-41dd-8699-b3948af2ee5c",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8c683ae7-e75b-457e-b000-a67dcfbaa40d"
        },
        "item": {
          "id": "51f11ac8-3494-4d9e-b0e6-269590b2c6d0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "49d8d8cb-3123-4705-9d15-3f11fba8633a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76c9314-cd9b-4424-88af-b5753063d5de",
        "cursor": {
          "ref": "0dbdedc7-0205-423a-a0c6-037f2625b4bb",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "505df545-b2c9-44e3-9db0-9149e124e867"
        },
        "item": {
          "id": "c76c9314-cd9b-4424-88af-b5753063d5de",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e4269852-fc0a-45a9-a5c5-bb09636f2ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503990a7-3cef-4f0f-815e-9709d561f289",
        "cursor": {
          "ref": "48328b18-1909-47e2-9ce4-d7aedbf2da86",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "be7e8d9e-e364-4275-a4f6-f958c9ff5dd5"
        },
        "item": {
          "id": "503990a7-3cef-4f0f-815e-9709d561f289",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "362d9384-2fff-4c68-aed9-4bc0bdc5803b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38583fa9-6559-48f2-b43c-ad097bdc2b2a",
        "cursor": {
          "ref": "ffab9200-a1b4-4c6b-86a1-4104366b6698",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "53693871-7729-4490-969c-3fdb8678c1f3"
        },
        "item": {
          "id": "38583fa9-6559-48f2-b43c-ad097bdc2b2a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d022068c-d8cd-4503-b64c-3630a1d83a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0f5fa9-c1fe-427e-8193-04c6f3e999fb",
        "cursor": {
          "ref": "14fa735b-c2ad-4943-86ef-72dab3861924",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "de037822-bd98-4eee-a01e-8225e2f47ef5"
        },
        "item": {
          "id": "3e0f5fa9-c1fe-427e-8193-04c6f3e999fb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7ede8b23-0b8b-437a-a9ef-ec984c9c7ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf249d7-4d92-4eae-91b7-e6adbc846675",
        "cursor": {
          "ref": "73ecbecb-4d32-476e-ba7a-185a90bb3366",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7a80b181-5a0e-4e3f-9afc-6e9d17b9c1a0"
        },
        "item": {
          "id": "aaf249d7-4d92-4eae-91b7-e6adbc846675",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0c01ff2f-6104-4154-92f3-835fa8ba07d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f1ee15-969e-4923-bb25-778f834c5e78",
        "cursor": {
          "ref": "4d294228-e10b-4b8e-adf9-d66eaf08e688",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1be8841e-2bff-4286-9bcf-9b72e54158c8"
        },
        "item": {
          "id": "57f1ee15-969e-4923-bb25-778f834c5e78",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3bf076df-231d-4e09-a9f5-e4ff2a17cede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bb0a7d-2408-4158-bb04-3eea354de5be",
        "cursor": {
          "ref": "7fcf56e8-935f-43b3-84a9-71d44dd8ba66",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3648e976-082d-4e39-9f66-6c9b5471b897"
        },
        "item": {
          "id": "b0bb0a7d-2408-4158-bb04-3eea354de5be",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9410de48-5ae3-43fa-b2c0-76bceb77acd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd8bc75-1646-4e7c-b771-e6df4f187f35",
        "cursor": {
          "ref": "7b8cafe2-709a-4eee-8507-5bc71849f219",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "21901786-5a8d-4a50-975c-17892bf95d9b"
        },
        "item": {
          "id": "0dd8bc75-1646-4e7c-b771-e6df4f187f35",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5b0e4ca6-d038-4e12-ad84-43aa26b7a6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5157d9c2-1f08-46fc-835c-4106796a8257",
        "cursor": {
          "ref": "8ca844fb-8143-4cb0-afa5-104720bab652",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f4d4027d-2f53-49a0-b0be-ad35f9c3b2c1"
        },
        "item": {
          "id": "5157d9c2-1f08-46fc-835c-4106796a8257",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4dc333dd-887d-4f7e-9d19-a6e1ff31c2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0c2fbb-b466-41f8-941d-d7c088f39558",
        "cursor": {
          "ref": "0794d671-8082-42ef-96d6-3927abac0780",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9c9292c9-5edc-4b2c-8664-59b5b57d8662"
        },
        "item": {
          "id": "8e0c2fbb-b466-41f8-941d-d7c088f39558",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4cb08c18-8e41-4110-85ab-2d914736c81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97bc820-34aa-47c3-b11a-22923c6e3565",
        "cursor": {
          "ref": "3b1fb93b-76e2-49e0-a674-2b9da5f23d15",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f3abf8cc-d2a1-4272-9c5f-c02dddc0d828"
        },
        "item": {
          "id": "b97bc820-34aa-47c3-b11a-22923c6e3565",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e7b9b86e-0581-44ae-9954-3f2f83c9ef74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0543a211-4c83-4f5a-8556-57c22995da0a",
        "cursor": {
          "ref": "99124314-2da5-419e-b762-8171234ad4df",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "98cfa4ac-b984-4e40-a38d-37cfb94240bc"
        },
        "item": {
          "id": "0543a211-4c83-4f5a-8556-57c22995da0a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f1f50bf9-8eed-415e-b87a-ac87f885be7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d828d287-4f08-4a24-80a6-9af245a3a138",
        "cursor": {
          "ref": "15a475df-bec3-4247-8454-da1dfb2246a7",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "757c4cdf-b04f-494c-8f80-c537b2f6451b"
        },
        "item": {
          "id": "d828d287-4f08-4a24-80a6-9af245a3a138",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "dde18832-e8b6-446d-90e5-cc8db9dbb2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c14d459-ce97-4209-9b32-d3245fb7cc7d",
        "cursor": {
          "ref": "0397fcf1-7b20-4033-a82b-bf6ca45dd95d",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "979ef48e-24f7-42cc-983c-dc459a3dcaa1"
        },
        "item": {
          "id": "7c14d459-ce97-4209-9b32-d3245fb7cc7d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9185eca9-82fb-461f-bbdb-4b0fa0d081f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e14c8ad-5a17-4033-8178-e1da1e5e2751",
        "cursor": {
          "ref": "65bb8f05-f726-4451-b73d-016e9686d4dd",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "848b9331-8c01-4267-b729-cc505da5da5c"
        },
        "item": {
          "id": "9e14c8ad-5a17-4033-8178-e1da1e5e2751",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0a74fda1-8ed0-4bb4-96aa-5ac478fbf0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e0febf-f7c0-4d9e-a337-d8eeb287917a",
        "cursor": {
          "ref": "cd52cd1a-b3a2-4654-a015-75c4c458d611",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9df207d2-a0f2-4881-a16b-3790a9efd272"
        },
        "item": {
          "id": "99e0febf-f7c0-4d9e-a337-d8eeb287917a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "378c6da2-43ba-4057-a052-0a5cf4df35a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84dc42f-9696-4a04-ac24-ae23dea15399",
        "cursor": {
          "ref": "bd692bf6-3624-40db-9baa-a55d304c6300",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "34000fd0-247c-49b8-ba40-69a6d22733a5"
        },
        "item": {
          "id": "d84dc42f-9696-4a04-ac24-ae23dea15399",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "794d8834-eeb1-4a05-bc25-6fdec5c1e64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4aedf1-38a6-4e42-b364-b5d9117e96c3",
        "cursor": {
          "ref": "901c3eca-06d4-42b4-9a93-d65a89310358",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "21b7430f-f36a-4727-9796-6c8b3ceaead1"
        },
        "item": {
          "id": "3d4aedf1-38a6-4e42-b364-b5d9117e96c3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7e78e70c-50ec-45e0-a122-0652c2cd82c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0b4361-5527-45ab-b927-d8240450f969",
        "cursor": {
          "ref": "2d79729d-4575-405e-af33-65714adab07c",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1a242230-748a-4b96-aa06-af1c57f2bdc2"
        },
        "item": {
          "id": "5a0b4361-5527-45ab-b927-d8240450f969",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5bd8f72b-fcc3-4e1b-a390-dbec70decd4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e697e1e-67e1-4edf-93de-c8bbaed20bcf",
        "cursor": {
          "ref": "3444e555-c4ba-4d66-a5f0-4bdebbd49c94",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8f635ce1-82cd-4437-9a7c-938d3f0ead9b"
        },
        "item": {
          "id": "1e697e1e-67e1-4edf-93de-c8bbaed20bcf",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9c10f322-b5e7-43df-aee2-40a990fbbd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91212192-00a1-4ba2-adaa-911a675a332e",
        "cursor": {
          "ref": "8a0fce84-62f9-4367-a003-57b7058a912b",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "caf78c91-3ef2-47b7-af9c-aee66a590f0c"
        },
        "item": {
          "id": "91212192-00a1-4ba2-adaa-911a675a332e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9c595b2f-6c30-41b5-8637-ebde16dc2c81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05113faa-36b7-42e3-97ac-646392f747d0",
        "cursor": {
          "ref": "086266f9-c211-44cf-b0c1-63724e84cdbf",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bd7b5231-c34f-472f-8c71-a5721420ba65"
        },
        "item": {
          "id": "05113faa-36b7-42e3-97ac-646392f747d0",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "7bf34653-4211-4f7c-b2a2-d556712b4ebe",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 293,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995ea625-b11b-48bd-ae7b-761c181fad72",
        "cursor": {
          "ref": "a567edd4-1e00-45c8-b0fb-b20445b13574",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "28328768-9471-4974-b12f-f4931a0514d1"
        },
        "item": {
          "id": "995ea625-b11b-48bd-ae7b-761c181fad72",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f30811ba-2e4e-4519-b1b8-e6e7f8328e6d",
          "status": "OK",
          "code": 200,
          "responseTime": 371,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "00718ea1-6033-4712-a925-2432adf0fea9",
        "cursor": {
          "ref": "d24dde39-b671-4da2-a1ac-fb3bfce02ad9",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3d4da22c-b762-4815-9f55-f650a771dbe5"
        },
        "item": {
          "id": "00718ea1-6033-4712-a925-2432adf0fea9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b24258c4-305d-4e3e-b85b-a23e5abd9349",
          "status": "OK",
          "code": 200,
          "responseTime": 3092,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "428187e0-3f30-4f92-8a9a-366e584f69f3",
        "cursor": {
          "ref": "744f3c68-f87c-4781-8db8-f49d86724084",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6526dffe-6e77-4e84-9937-dea8a0574ea8"
        },
        "item": {
          "id": "428187e0-3f30-4f92-8a9a-366e584f69f3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0e5b985a-4d56-45f8-a1f5-25827f52be09",
          "status": "OK",
          "code": 200,
          "responseTime": 3210,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0018bb68-847a-4577-b85d-a5447a798c77",
        "cursor": {
          "ref": "1a7e2bd2-6035-45ca-bf27-98581c35aa52",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b53ea3a5-4a96-4cbf-ad96-d7a5bcfce145"
        },
        "item": {
          "id": "0018bb68-847a-4577-b85d-a5447a798c77",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7f2161f2-b1ca-4b7b-b32b-7cb4999310e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0018bb68-847a-4577-b85d-a5447a798c77",
        "cursor": {
          "ref": "1a7e2bd2-6035-45ca-bf27-98581c35aa52",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b53ea3a5-4a96-4cbf-ad96-d7a5bcfce145"
        },
        "item": {
          "id": "0018bb68-847a-4577-b85d-a5447a798c77",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7f2161f2-b1ca-4b7b-b32b-7cb4999310e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0018bb68-847a-4577-b85d-a5447a798c77",
        "cursor": {
          "ref": "1a7e2bd2-6035-45ca-bf27-98581c35aa52",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b53ea3a5-4a96-4cbf-ad96-d7a5bcfce145"
        },
        "item": {
          "id": "0018bb68-847a-4577-b85d-a5447a798c77",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7f2161f2-b1ca-4b7b-b32b-7cb4999310e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beeac871-f2f4-42ef-a59a-bc034177abd1",
        "cursor": {
          "ref": "80f98ff9-b5a5-461d-97e3-ba53985d1ece",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "17105823-7b13-4e3d-99a0-c4fe0938cad1"
        },
        "item": {
          "id": "beeac871-f2f4-42ef-a59a-bc034177abd1",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "dc227088-19bf-44b7-ab88-cf98517ae6da",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 310,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2b5f0c-fc4a-473a-99b6-b94e4d7b5e5e",
        "cursor": {
          "ref": "d037130e-c1e2-47b7-9840-6bbe0a96b043",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "de4e2a60-84ea-4d68-a3e7-a2826f09ee35"
        },
        "item": {
          "id": "0c2b5f0c-fc4a-473a-99b6-b94e4d7b5e5e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "92ee0ee7-00ef-4965-9f43-52d1cf793e27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2b5f0c-fc4a-473a-99b6-b94e4d7b5e5e",
        "cursor": {
          "ref": "d037130e-c1e2-47b7-9840-6bbe0a96b043",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "de4e2a60-84ea-4d68-a3e7-a2826f09ee35"
        },
        "item": {
          "id": "0c2b5f0c-fc4a-473a-99b6-b94e4d7b5e5e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "92ee0ee7-00ef-4965-9f43-52d1cf793e27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b164f0-e7f5-43bc-b2c3-8ae5a8b7a25b",
        "cursor": {
          "ref": "1a01679a-ec16-4f0e-9e3b-7e5375061b83",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c0209d0c-6936-4d84-96af-a14c88c6b1f3"
        },
        "item": {
          "id": "19b164f0-e7f5-43bc-b2c3-8ae5a8b7a25b",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "2830b13a-ba81-443a-bd1d-b2ac6bdf388e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 516,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc00d432-e91b-4d4b-ac25-b01ff4f3c11c",
        "cursor": {
          "ref": "f493af1f-13da-4358-afb7-3d8d52ce8568",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e50a401c-ad8f-45e9-a66f-93681e76c3ec"
        },
        "item": {
          "id": "fc00d432-e91b-4d4b-ac25-b01ff4f3c11c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3102fd59-0df8-4754-9df3-96c3bce8a568",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc00d432-e91b-4d4b-ac25-b01ff4f3c11c",
        "cursor": {
          "ref": "f493af1f-13da-4358-afb7-3d8d52ce8568",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e50a401c-ad8f-45e9-a66f-93681e76c3ec"
        },
        "item": {
          "id": "fc00d432-e91b-4d4b-ac25-b01ff4f3c11c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3102fd59-0df8-4754-9df3-96c3bce8a568",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7850459-59e7-4bea-8ba4-9edda24b1a77",
        "cursor": {
          "ref": "28154b8c-883b-4000-a4e1-cd18dac766ad",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3e38b2f3-1d99-473d-a041-b2c8b32318ed"
        },
        "item": {
          "id": "c7850459-59e7-4bea-8ba4-9edda24b1a77",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "6677b9a0-f82c-47d3-b49b-af3417b67192",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 516,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}