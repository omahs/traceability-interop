{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "835f7a9a-d5d1-4973-b98a-63c4f802dfc2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1b0c1487-4dfe-4640-b643-91e0598beec0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aaf302d5-10f6-4d83-ae52-7dbaefe35983",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1c4edbda-489b-4293-a93d-1266065525ef"
                }
              }
            ]
          },
          {
            "id": "bdf3a2b2-756d-4f50-8fda-cf7ffb996a93",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "178fc99c-0927-4380-978d-d4e447d846eb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "092745fb-a7b3-4fd2-9cb0-e6ebbf69ee3a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "343104be-808f-4253-9014-fa2ea4a4380d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bff7a45e-71d5-466a-b3d1-bbd18dbf1343",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cf094419-20d7-4f59-89d4-b6523a6cbd75",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a08a13b-93a6-4db5-91f1-fe934444dd37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad7f704c-3c44-483c-bac2-6402d921145e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "45d092bb-7d19-4200-b027-97b8827db728",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c35d852-6b01-4ffa-80a8-9efe693da620"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2580ee13-d774-4e60-a35a-c4f57ca48863",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3cbcaaaf-1e22-4497-9300-22aa710a273e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "401af90f-49fc-4dee-a032-d9bbe02397f2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6993bea4-60e6-447a-a325-b658bd0680b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24907bf9-407d-424d-bfe8-10f930cd2929",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "90918869-e11e-46a1-84b3-555fcf0bafe2"
            }
          }
        ]
      },
      {
        "id": "6cd0ca95-b117-4038-8dd5-f30174f628bb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f4bb3ce4-63f0-402e-85e3-48a54a9b57bf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "abbf4b02-638e-4d9f-b7e4-6969fd54b4dd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c6b3ebc5-ab73-4cd4-8259-ac83bd9baecf",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70da3a2a-ae7b-40bd-80b0-4a64b109701b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "769566cc-3f3b-47e4-82a3-cd6863adc747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65928d7a-c366-4751-8a8d-dbfe8c56bc22",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a2da4a-bf2f-4cfe-b134-10184938d0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d926acf6-0433-470f-89a0-ab7a5a9139f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef1841d-12ce-420d-a2c1-0e343d1331cf",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e6c876-06c8-4ad9-aee4-141c4cb25065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e66a3184-82dc-4c0d-ad96-51ede07b92ef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "00d9f692-024a-487f-ae1b-9c99e928ca19",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8b1119af-ebc8-4ac8-ad94-4bfd51596497",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9168b5ac-912c-4fcf-9405-51643b321a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8622d5b0-5e6c-4fee-8742-7065287311de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bc93d4-9c2a-4468-a47a-656bcd2db2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d34d4a8-3663-4200-8152-1b1c49ef2730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3b315c-2dcb-4bf0-8d45-973253ab6db8",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39dbfff0-dfe3-43fb-b457-c23afce5f674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "509db422-afaa-43b3-929d-81d7bd6d4ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2db0132-fa87-42c7-9c44-288ec1cc66a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "000cfa04-f839-4fcd-b2ca-0dc3832f265e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6d862aad-3e3a-40b5-8865-61bbb8ca8b64",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9ef414c2-cc3f-40f1-abdb-742c9290c148",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "952d0946-bf9f-43f4-a57b-e57ac116c6bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "307ed388-158a-4490-b55d-aee2aff9eb02"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a0e06c8-23d0-46b6-9cce-76834c7c5266",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "fb89f707-9454-4093-8aff-8fc391e5ab73"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b78eceb1-2be0-4074-a8c1-27d03ef9145d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8430e15-3da6-4564-9b4b-b675502a9614"
            }
          }
        ]
      },
      {
        "id": "ea1fc91a-b9cd-4ae7-a3f4-4f659a727581",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "520c4c0b-69de-43b6-9023-1854cdfd3558",
            "name": "Negative Testing",
            "item": [
              {
                "id": "667056ae-d39b-410b-9389-a77e3d5f7fea",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "37a30e29-f001-4a39-af09-61503200a1d6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a8d708-b7e7-43f3-bc10-d1ba6c677fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cceacf8-553b-43c5-98b6-8bc67b385bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab3e1d3-7c67-41e0-9d22-5f513159db97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17f66dda-ceb5-4633-bf62-7c098b4f613a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533ef119-423a-468f-acba-16d86bb0c743",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5dd80cd-ca2c-4d24-ba78-b1bf29676a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc99516-7193-43d5-9d2c-72209e6e6836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "becb38a5-d8c9-4dd3-89c4-885437ba4acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2437777d-a9c3-41df-a4a9-3dc42bcb28e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b31db4e-2750-4d3c-af74-d0421d261dbf",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29948c39-6038-4645-9432-2cb7efd0d429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e269ca75-0936-4049-a3db-519006a916ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a292d773-15cb-4da3-a91a-0def1b9c5450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05c83afd-0fcf-476d-9906-b5eb75abe2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f769ca-647d-4b55-b51f-525e43b34e90",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0484dc4-ca95-4087-b921-534385d2332f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c97e1e-dfb3-473d-8662-e0063b23f193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57785d72-dfb5-4c60-9181-1eaf39a54268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1863a7e3-28d3-49b3-aa1c-36056d401841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0391fd7c-d9a2-48d1-aaa3-928d4f3d9d13",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efce439-7cf8-4b17-b5b0-e2804d9d5d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d80fba31-302a-4d07-beea-681dd6345bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566b6e9f-0e0b-4eae-9b13-2e298367172c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0f54bf2-e230-42a5-889c-c77927da504b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5ae5b3-9106-4dcb-8a39-3f8ea831fc84",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c17542-7b5d-4b3d-a40f-15405b6e67c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4546692-4408-474d-9931-dce343663e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5306292-42f8-40f0-aa1f-32d085974056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b154add-f305-4a76-bd8b-65dc92c54a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9839ae-60d0-413a-88cd-7a4d2d38789c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db8f466-76fd-40e9-9762-a4c6bfc73efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fcd55e5-c177-438a-b2aa-e5c79af886c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddac3d5e-6d61-428d-91fb-17e2bbbb83df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c9615f1-75f2-4d5c-b120-e6b2a3f233ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354628f7-3f5f-4b7e-bc3c-a8671bfbde09",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f2d343-b472-4f35-9630-c336d4de248b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d805ef-2c71-4797-acc5-5f47711f617e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5957a49b-06b1-4108-972d-c786cafd7fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9f4eea4-f4ad-4ca8-99ba-549777bd1d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba54d528-0cd4-4052-a64f-66a1c1ef3afd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de7625a-197d-4325-a1de-d3e115b8af69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed35a2e3-15c1-4a28-939b-bd6880c1b7e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cb0fc3-eaec-4ace-be03-3d4a617cc767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab3a9332-e8a9-42e3-b05a-e9b4ae9cc470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b91353d-99f6-4f84-952d-64381246c4a3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b83937-76de-4d05-9ab7-69486114a970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4e1f37-0d93-4e58-89bd-e7d6a48c2405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d5345e-dcfe-4a65-92f1-6f652878bda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f6e0237-0ef6-46c3-8c54-b4efbae36bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297d5f34-21b5-4b71-b911-9e2a9f87c9d2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9578eeac-6679-4c41-a7a0-d60c412703a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06460f21-d789-4bf2-ad6b-d6cfb29fd68f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135d8ea4-a7ca-40af-a6cc-dd05b29fff3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c9de509-c9cf-4b23-85ac-8531cb010ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9abd411-b72e-4d55-9e9e-faf912efea4a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0190e94b-6ad5-44e1-953d-8ad382e3b2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6059c0d-eca1-45f3-a350-30a4d692b141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7db8398-ff91-49e0-bea3-74f7b7948956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84582eef-438d-42df-8890-aa1fa7859bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8c6c99-ae21-44da-a300-5d9cd2c2149d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9657a39c-d9b4-4513-889b-f1ffbd8f3f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a4f19c-49b9-4946-a36a-8eed261e6af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98448c34-65a8-4b9f-a714-a5e78fbfea82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e8edd83-e144-4190-aea5-6ce3bc489ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd1836a-a443-43a0-9b80-a4693d0df962",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8277303-95e0-49fc-be2b-ca6fe65ee3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5a2ba3-ffcb-4d8a-8006-aa346880f4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55e06c9-b40c-4d57-800d-cb44004d1890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fc266c6-cfda-4d62-8312-d8ab247c4993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9519e4-69f6-4700-b8b7-97d1076da3aa",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3ebc33-8eea-4ca5-b792-6d82b2d1c5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded954cb-dc00-488d-93e2-1142380fdb8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0eb189-4d01-41bd-ba04-2c7fa28a63d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b6e3311-a2de-4edb-97e1-cb10fc794466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160c7f11-4295-4358-8214-100f23d3c5c1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc97fca-9465-4ec6-b5c4-2b0a0d24ef4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573b4b96-5923-4299-91c2-2a7d17c5e6ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774f0c3e-403a-4856-963a-774588aa5e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0b197a6-1f75-4c2b-a67d-fd58cfd72790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d7bb7d-5a3a-4c31-b536-6d25b469ae97",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b8dff3-6e27-4266-aa0e-41a2b13b73b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0a423d-114a-4294-a3f5-0144817da11f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42291ce4-4549-48b6-a849-1fb073f73b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "730b805b-5ff6-4e10-ab74-545418eaf960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950003c0-e77f-4607-9441-a07943bc704d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae69987-888f-40fc-88f2-4289efa25d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d79d42-8751-4dcc-98c0-2f232ecbf2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c17fa4-c65a-4ded-8c68-f56f78318109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "505e282f-9a89-4000-ae5c-deeb7c90e091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1460accd-3705-4905-a4f6-799402aac1e8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7837fd39-c057-4e74-b7be-4250f37954f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a3e3b20-ad72-4860-820d-677c16e0b373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9f009a-0c71-4a6a-8d24-275039422424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9097e831-6bf7-44f0-b96b-874ccbeeae7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4851d44-6d07-4be8-9824-9d7b47f4b7fa",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7625b39c-4815-401b-9cfa-1bafc4eb8c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8db4c42-3bfa-4a42-8f6e-46a70324b40c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f381ed-d42d-447e-8c29-b4afbeb2243a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2955d2-a4be-4bb7-bf1d-090fe2239d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94a5fa1-aef4-46ba-a269-cd01ea03baa9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afcae56-b743-4e75-92ef-7ee5852c5c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ff5dd3-0b46-4bb1-8c41-2ed4c2730da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140bba03-e3c2-4dd5-804b-e6245468109a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a68e0c0-3e7b-471b-96bf-a654cb55aa9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8d3e94-44ff-44ec-9b93-b66bffcf375a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c781a6ac-9f7b-44b5-b8f8-eecff68ffcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6251e6a3-aa07-4598-bd45-d67f9037bca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4b9581-8d71-4558-be60-1bad532f5f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "865e2c6c-f768-4ad2-8357-275be5b55224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a8cdaf-562a-434d-add8-fc96f40826e7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8846be66-8b51-4bce-a0d6-7005e385b232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47fc68de-8eb4-4c41-ae8c-21580b450561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce7cc37-e8aa-433b-a4f3-646ffd2ac0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "62ac9257-4cde-4de5-8378-4eadfcecce0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3b8b64-5c24-432a-beb0-50018bbbd842",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecbcbd4-a771-4102-8f9d-851f3be2569f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99bbf066-0110-4f0d-900d-18304be152c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a00180-9e18-40bf-b6c5-9e2d3059f29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d97d49b-891f-4480-84e4-c4efbb297297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f9caa1-49eb-463f-9386-a524de436c17",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b1b448-c15b-427f-b74a-895c234efe73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7cfcce-2f8e-4067-9600-2c6623fa7cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268069b8-9e67-4edd-88a2-76b82b0a5da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c80255e2-edd2-49b5-9326-42bf6e945ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9ec338-38a4-4670-8ce4-f5d4f9534b14",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6cfef6-0333-4292-8007-73cc9c569f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f8faef9-937d-46a2-884f-7568d29d313b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5264be-dffb-441d-95ec-cae172cc6f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bbd9754-0d7c-4314-acef-a2e236448cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43509c9-7fb2-4c30-a372-71cf86bdbc71",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf95f86-5208-476e-8b02-9b5480189472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ad606e-d0b9-4e69-b2ae-26df290e9936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfad71d-6fe9-43d0-b44d-3127d7904533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd766ec-6557-4bf6-9a5a-b88279015a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7003d6f6-9d90-440c-a9e0-71ef2d2142cd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f688e18-cda6-465b-967e-27f8e0bb6bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68cd8bc3-ed38-4a49-ad7b-fd924b2b9170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2ba759-5f7e-48ab-bdbf-32d869374597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c307e08-ee77-4dcc-a4b8-f01dc155d113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4bb3b7-479b-4dd1-9c18-cf6e5a59e828",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01ede5f-7815-4766-88a6-00034d6749da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7918b104-2a17-475e-b8a4-8d59b76426ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603a3f7b-2f90-4da5-922e-da21a13e0c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f122d9f-3289-492c-b43f-f65045bb9052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439c939f-b122-48ca-a04d-00884747d335",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d801252-7366-4219-970c-6a722680170b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a99d2a-7e4a-4ccf-a8a1-d11dd8df96e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fbac5a-e04e-41e2-97ff-1b2eed56d1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eee3234-8dcb-4ae4-b50d-0a57df458583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62ee89a-e695-43f1-8623-3f6715a36bed",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742490eb-3400-4bb7-b35c-b1700fa188b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0468888-fdcf-4db2-9c36-be677d467568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0cd818e-6e9d-4eb8-9bc5-830ccbf3d765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd2014d-efb7-4030-96e8-27f72bce6f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ae0a87-e24a-4fc0-b628-3c29da0b25f2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2015adc7-6c5a-4f40-abb6-ffad35b8591e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ae940d-003f-4148-a286-45ccf1801880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8670d392-afe8-4f19-9c28-00a9d578ae06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c556af9-548e-4942-8abe-d5ee7c94866a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a9dad7-b6f1-4eea-9966-8b79fc73ab01",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e250fb-059e-485a-b70a-ad8e11447c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1507c67-296e-4e27-9bca-b951cdfd3fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087220a5-48fa-47c4-bb3a-40ed0a15f7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97cdfeb8-19dc-4548-9d6d-2dc395406000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3025c4-6924-408e-83a7-7a682acb2e19",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f105c6-dcfb-47f2-8978-db6c7b0cca95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd65bfc-1649-48f4-a54b-b7a2bdd51be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5e2cbf-ddae-4b1b-b2cd-de85a2382329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88ed4a2b-b9fb-455c-9fd4-eb5d864d6cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbb855f-911a-4219-b520-5a476383543f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13cb3d86-adc1-49bd-b54f-ffcfb5a1cc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6596f00f-41ca-49d3-b411-aa6bbc1f7d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b47d665-c4a2-4e2c-b818-32795a5e5251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0a654259-c548-4270-8a53-b4cda262b6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d5cf7a-632f-42ee-aab7-15db29901851",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1959df00-4136-489d-9536-73af2c441d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb9913ef-cb79-4d5d-b557-a2966441d9d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9886c04a-8da4-42d9-b879-f27e5cfd17f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5280dc4f-9521-4e74-ad95-bf74ee646340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85246c45-a5d3-4a9e-a68d-31e932e66179",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e3f995-0081-40df-9643-92d5b6dc64f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ecbd60e-dc0a-4590-85e4-a21b25aff334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c869de67-5c27-4b52-aa9a-6971be0e40ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a44224d9-7cd6-4434-85ad-412b1571580a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893a0fb3-4fb5-498b-a2d8-4d5629278801",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fb5720-f278-4f3b-b372-0e07b02b9ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3241a8f-171c-4929-bcec-d9ecf1f30cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4733e2c-77ab-483d-8f57-b10bb69787a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "62aaf19d-375c-415c-b0fc-ff91367deac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213e4af5-fb2c-4863-92b7-5e7bb044daf3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6dacf3-7089-451e-a929-bed7c31988cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ed8524-6d9f-4209-842d-4ec20b375bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ed4e1d-2bfe-4610-a844-9b2057701469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4e97aa3-4426-4d5b-b2b3-5c5eeac86b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c57331-7324-44a4-b9ba-ee719f273a9e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c46fc0c-cbc8-453c-82e9-e66b286e9406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db0f0cd-7cfb-46e7-a2e1-0ff1ad005cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff51e73a-84e7-4237-9abf-8ced2ea5023d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "96d4bd35-a3c6-462f-88fd-52f71dda5cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25f7680-df3a-4e9a-a50f-753acfdf9b4d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540acd2f-82db-4eb2-99e6-3099540e3bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d801941b-d51c-4eab-b03e-e623bb938a12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea6f31d-a40c-4ea4-9674-b78cc9943a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b2a657-f810-471b-b3f9-7e3b01ce1440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4c645e-8d24-4e8a-9259-172796582467",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb7f2a1-39d9-45ca-83d3-92d26811a7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6c0ebc-ac39-4930-a764-171d97f4c81e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044dd8e4-5d46-4729-8bad-b32b46d86f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3408df80-a669-410f-a59f-00e291798ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb076d1-87b7-4351-a30e-1f43fa20b693",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e6a274-3ab6-4d70-8f4c-773ee5be2961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358d7ee2-f863-4850-b302-da58f22fd4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ef504d-54d5-4d6a-af97-b4a4ef9a9ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f20f589-54f3-4183-a719-5db94f650388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2472dd98-8ee2-4450-981c-8ae16e7a8d9a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd6190e-4cc5-40ed-b706-cdf969ae0bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a3e51b-e8f6-4ced-8781-f6a4b4e2ba1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5add854c-134c-4fd9-ae1a-f8d4c4be13a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cadcc239-7078-4d4a-b34e-8d5b1a68cd99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d7806a-d2f8-40ef-88ae-dd7264fc2cc9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7553cafc-2b38-47c8-bcd5-a65168c64590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48200ab2-e493-40bf-b7da-d71dd12302ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578074cd-0cbc-48d1-8eff-f26a2cd8a519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "867eac5c-1b7d-4b8f-80fc-a4307227bb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842d3d1d-bceb-4257-ae0a-eca2c7651ad3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad03645-c0d4-4dc8-8c52-d3a77edf2ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c4a95d-df5f-4827-8051-329ecee5229b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df651b9d-11b9-404d-b2e2-c5d6a978c101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f2398f-a4ba-4ff3-89f8-91102212cd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc7fde5-ab75-4514-ae2a-cc4687ee0a9b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89107fb-610e-4353-831d-5826e6153737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a8049e-f3fc-4bce-b94d-87947d9464b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6b764c-4375-48d6-8803-f2eab0939403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b192d82-8c90-493c-aac6-71f24f15366a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2e81a2-b420-4b70-8f4b-66f4b490268f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e75543-8550-43a9-9da8-db3ab042010b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e398a3d0-9486-4573-9bb2-1e25fce1b734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c14bea2-fcc0-4908-a667-999b79fd65e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b152e77-165f-44d8-a893-727881e60052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0164d369-9479-4455-bea8-c4b0aaaad786",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6170bb55-7cbf-46d5-a1a8-8f469a560466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a215091-0a50-40f1-91c3-af27ed4742f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c5d200-9472-41b7-b1e6-5b1d6dd21a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca107c32-7c45-4265-a21c-f6542472de63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54267c6-872d-4eab-92b0-53e1d13cd95a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5476871a-62de-45de-867b-4fad848fda33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f34a8bc-b94e-48dd-b379-b6f988122c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9efa01-d872-4ac7-ae69-4db759ab94cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "961d424b-3f96-4ad9-82b3-9c4c9ddc2c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707d10f3-5a6c-478d-863f-81c58122e118",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45c30ce-2831-4bf9-9b69-18b418da91d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551d9da5-487b-4939-9326-70430419ceab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8135a002-0737-450e-a5c1-7c451636e7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "258449cd-a5f7-4d14-9c2a-8cbd37c27588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485da5c0-73f3-44d5-81b3-b68c45469fc4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83cad36-c969-4b29-bb9e-39aa9f84081c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de26095f-e7d1-4611-82b1-6f1608a607f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4dc1a43-f457-42db-9f10-28e82b9eebd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c4185f-ba3a-4a32-ae4e-6b388f363bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c9491c-41e8-4f93-b9c8-648c99c8b2b4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c134eb-ee24-40a7-961d-221ce431fc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4757b82e-82c0-4d74-9341-449816baa35f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e434e9d-221a-4aa0-a215-ef9de1f8593f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9fd030-8c63-4361-8034-87ef39c0a21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08609af0-bb2d-4e91-83c4-bffc00a64f87",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdc29f7-f5b7-4532-813b-47462174e18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ec8471-4f75-47bb-b6f1-7f8eeedb80ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58be8a9-0880-4d2b-b6fd-0ac7914f6a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52f7b92a-4bf7-4513-8a74-ad96ceaa1f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7820c8-1a0a-428d-8018-b39fe2af8d0f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b932bc6-980d-4fb1-9bbc-2c7d1caaef91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5562633-7926-4efb-a0bc-3d14d0dbe0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adcd8a0c-e431-47e5-bc0e-7f4a03a3c664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be3d3e7e-f534-4f3b-941c-db16984abba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883f8e2d-0f01-44d6-b902-f0b694f6bc9d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28b5a3e-b0f7-49df-a726-66cabe431f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b43c9fce-2585-430f-b957-c202c371edf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae72d20-bdf6-4f3b-9644-93fb0a1ffa98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3e41a9-767f-411e-bd97-9747892a6765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d24e02-bcf3-4c37-898b-a1cd05252590",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb79feef-d3f7-47dc-a336-07d5ff3af8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25cab6dc-4721-4cab-811f-462ea4bbd371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605001fd-f534-44c5-9316-9803520b7024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3364e010-0ff0-4ad3-8caf-0c0de183ba5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052dab9f-630f-4e48-b436-8ea4625c1593",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835bbb5d-5878-4386-8932-2cf5ea683781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f705cc3-c81c-4208-a608-d253bdda70ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4af68f7-3110-427f-bf6b-936239f22fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "858974ea-2c4c-42e1-bd86-866fb07c1eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabf830c-6f7e-4248-b38c-2757bae1d628",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9735ea9-81bc-486f-8b3f-fede82736be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8666eff1-b44c-48a6-81bf-56481b3c2e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434ba22b-9ce7-4ec0-8fbd-9423f0dafc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab5a9b9-1acc-4b17-ad84-5476819be49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c754a0-00f8-40e4-b8c7-e3396e12277a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b387c352-183a-482b-afdd-662fcecc61b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ff976c-be45-4258-b2c8-4dd64f34575c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732194d6-e81c-4f23-8d34-f0bdf524a513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f524ffeb-1766-4ebb-9c71-8cd01e18dfd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535620b5-0a48-496d-87d5-1e47e6133a0e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528b44c9-f77b-41d1-b055-8f26b285e0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f0a24e-769c-419b-bac2-9aef30b6c0c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cafabd1-fc6e-4bdd-a9b3-03b84526df53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "40f05086-e0c7-477a-9439-6d610626aa40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fab047a-d0ff-48b3-86b5-b1f3ad21e72e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d965707-3d5a-44b5-8a29-18c4409c925b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd84c8bc-db55-4c23-bf63-b2e284d59272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8828710c-2d84-4b67-861a-6dfe00d0b46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "54749cb2-9be8-4170-8a87-200898197c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57cc44f-a06f-4d21-a63d-c2da9cd53a61",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef560a3-5ccd-4b06-96bd-d34fb026eeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d16c734e-828c-4a20-be4c-2601cfd085bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4652d8-5c7d-4219-be60-96f63f302d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "74580c9a-145e-42e4-8e80-499e81e4d4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d559c57-4043-4117-ba06-02f2d7698a59",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f50434c-8590-4ae8-98ac-dde2fb0ced77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ff4df3-f8f5-4fd9-8ab4-cbd7ec7854c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fca4878-8199-49f1-8c4a-54d911fed421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "208c5485-f17a-421c-9553-e89639df5eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ce23d8-d8b3-49e7-8d68-820ba0daafd5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57fcc790-5e92-4577-8eaa-41b2a21ed876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d2679c-2bd0-4329-a486-c9bf70dba870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f653477c-0b27-4017-81c1-91efe8d0cd8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da8a7671-8d7c-48f7-bbe9-d9fbf3e9b3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97eeead9-13fd-4d39-84cc-5c1b8d19f4e4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801618bb-c86e-48e3-9c87-c719fb6479b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec246f9-749c-413c-ad3c-bb07dd3d14c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db373435-f8b8-4d35-b615-8a27c5240624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0f468b-91dd-491c-8990-444c6d44bc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7082e9a-4076-414b-a517-99f4e2b6bcdd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c444a80-dff0-4837-aeb9-e41ac330535e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6000a587-3c81-4d3a-a290-161b220e3f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017341c2-3738-422c-9061-3c27769a138a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f4c8369-2c26-4194-a2fd-f415c34f5106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304b5edd-96dc-479d-9600-5e976946c352",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd01986-51e7-4a35-99ae-6d23f1873987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d1d9be9-e6a4-4017-af08-32582779fbb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40d3313-9a54-43c2-82b1-23b1fb6e66fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5724f1ab-0be9-4b34-8942-5b8b9c240791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f19d765-3ba7-4ea5-88e4-8cde0ec44a2f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00524954-6f67-4659-9ca2-7dacee2530c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c633bd7-fbd9-428b-b58a-c09cbdcb8268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a88e91-290a-4454-837e-2c76d0ed144e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "97e5d44f-a239-496d-8369-27eec4f10db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5538155a-df35-40a8-b3d0-427d483f7bc1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d89e2b7-d445-4fd7-a151-30ed933e45e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab9baf3e-6fdf-4edc-a57a-5e19b2fcead1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18b06db-d8e4-48be-807d-295865a7e0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e15331bc-5420-4e9f-ba16-2999269dac63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3826fb25-3b86-4f6c-bdc5-948794bb43e3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85009f93-b87d-4c98-ab6c-00c8f7c90f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe1180c-de93-4ff8-af9e-881640cd4ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d83f04-d320-42cc-979e-81088783e804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c11313b6-c4bb-411d-9b2a-d6c52713e67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa933914-1638-44de-90fb-6bbfd8dea6bf",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262266d8-dc46-4d76-966f-8ab58f264227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5f3817-587c-483b-beca-8dba945f20f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89af5f7d-9529-4dfa-b18a-cdfd3b8bfeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb959dd-e11a-4101-b556-e11fff1e613b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f992efa0-235a-4a1b-9cc7-3064eb1b4879",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01e151e-f267-482d-8c56-0f2e42bf3271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8deb391-4177-4da8-ae8a-5bead8182db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2385da11-768e-4a5b-9536-648ceb8e1b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "63abd1f7-ac51-4d5a-90eb-6ce340b73b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df07c3f7-ef5c-401e-8e01-73b06719d34b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b958158-2577-4eb6-bc83-d8aaa99bc9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c65f6b-d991-4c69-9c51-6d41d6e89a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ff6dfe-e684-4c8c-8cc8-8d7a68d428d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a35dd9-6904-42f5-a46c-77bbc1531b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bf1d7d-e109-4967-bd1f-2feba213aef8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "599823ff-cecf-4060-a3e1-2c8cfe341dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02172ce8-1ad7-4729-a137-a500bae13e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341e0f53-712a-4bc0-b9a5-7869d115caf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cab8e67-62e2-4d9f-b9ff-f33b6ec2ee15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51dfe75a-8d20-452f-abe0-98885cf2ee12",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b248b5-91e3-4684-9c51-418fa76f265b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8544c9ef-4982-4600-a496-75d4d9f046dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f9a321-0e7e-4964-8522-4d7aec04e809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1503bfa-38f8-4ea8-9532-a69fef504908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f06316-d6e3-4f2f-a1df-7e753d6c1f71",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ee770a-d980-4cb4-a943-cab0842d4700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc79823-077e-4415-95a9-14a98b5531df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f77c87-795e-4cb2-9016-864f11efac77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7934059-77df-4369-8826-a1df59e82057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d154e1b6-1200-4a86-82fb-30bd8538ef0e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7047ad2-2892-4e76-ae28-c09d47a39451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be4ce8d0-5860-4f14-830e-2d4ad283373b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b7c34f-360b-413e-97e1-bd76e94f53d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a27599b-c50c-4f22-ae59-c76fb60a903b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64aea03-28e7-4d45-acf8-9da53bca97ab",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c53542f-e295-42d5-8fbc-6d3dd0c24aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d431593-b889-4ea4-adc0-9cba5cf3b20a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e6a63a-0bfb-4fc7-8300-56c77fcf8832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66e92618-15ea-4591-9fd3-c27bb9e5abfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828838ed-cb6f-4a5c-96a9-e5ab4e8acc9f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b3a977-fce7-4a0e-8a4f-6444e7aa5ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6be344a-e611-4c51-9361-c7a41aaf9593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e99a991-4440-49c6-a6a5-68665ea3152f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d97bd13-23f9-48df-ba86-82ba279bbd37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198a1c4d-8953-4f08-9f61-5d7cb8b16e78",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89519206-e5ef-46c9-abac-bbe037100d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02c78d0-11ff-445b-86aa-50bd612bd5a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09dd711a-fef1-4238-8039-7193ce76fdd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a665e86-83a4-4d22-8b82-2f9f9b445362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15da8675-1058-443a-9ebf-451df85b708a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7fcf29-bbfb-4587-8634-d7ba7816991f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d3bf61-8541-487a-b4e5-66c686ea97b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ef8f66-efeb-4ffe-964c-3478ef5fb053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ceec50f-7b9a-4227-9bc5-e80e7898380c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfdfd87-b8af-44e6-8bbb-c00d7cd2dbae",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b134e66-4d07-4889-bcaf-e050d6a2d987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13df04b9-331d-4580-ad55-3c2ef52a97e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c32332-d0a3-4559-9d65-67f7c1303794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52045d3c-f17b-48f9-aa44-439643139723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60942141-5114-4907-9655-0c035a46c101",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ebae36-2627-49d4-9044-f7d476e9b671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e446b736-8a9c-44cc-87fe-42cb1615792c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db52b7e-feea-487b-bae2-51cc0391a055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf4417cf-9b87-412f-b6c1-f90d99517c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabb57b6-3f4a-43f3-999a-44f970cb6a15",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ddd5f23-df5e-4650-8967-74ff4bf46e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8436fb8b-dd2e-4945-b490-e2803f543a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76fbc07-5997-4663-a56b-fa35df05ae2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00774988-6cef-405a-b914-29761ecc4649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c1118f-a28b-438d-bfef-8c27787b6308",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8047c6c2-8876-4497-b1fe-a9c2be52545d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5155239-0cea-4ca0-bb60-724e141a2108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e943e67-5023-4c05-a493-d7023aa63403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e010004-08f3-4396-b028-1a136c9c5202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49ea49f-ef6c-4f7c-bf7a-08693e25dec1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8643862d-b8df-4712-b39e-900714cb3883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d19368-7376-4030-88c2-efc9f6c62dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a78c1b-657a-4e90-9736-b2030809d50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b4f8f9-1723-4052-ab70-bc958d330106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b23c926-4b77-47db-9695-9c33d9b47f70",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac5f752-a05a-48bd-a73a-e76660af95b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5369e55a-c9a4-460d-ba55-66190de7e153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c8bbd9-4e20-416f-98c4-3058b5894abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d84c10fe-e0a7-4acb-9dff-af9316060762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77ce010-d9f3-4b68-a40b-62cdea626bb7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15445f7-0898-413b-b43f-74f759493b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc2fb4d-4bb9-4d89-b7d9-bd2fd47f13c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ccfe19-02bd-4119-ab98-c035462b01e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "54c39cbb-54f7-40c6-9008-a2b63d97247d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247623be-f0be-4803-8c05-6f8457ddcd7e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13afe162-91b5-4387-bf9d-824745407790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0838d3-4757-4f7b-9818-12cf9f299f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39818f0-a7d6-40ef-b222-fa4dbc31ce79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "05fcc221-5c8e-43c2-a446-854dc463a919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bba3d6-4695-4a2a-abaa-c28978019f49",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027ec1c0-9268-4177-a81d-0d0e5885883d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132f2f42-35d5-4552-8053-ceb1609ffa4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed573e0b-c57e-4b29-9e06-1f37ffc957e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4b8290a-fec2-44c9-be3d-8073e722064b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ad8819-0419-469b-b894-f6cdc1169cae",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90085f39-f855-4fad-8aea-a3c3ce913828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7518a974-aa2d-4e51-9e6a-8b918cc96062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f090838a-3706-4e1d-a220-67283e2d722b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c280c406-9018-4e86-a8f6-2cf68c8e74d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "396c88f0-e41b-4a38-b22e-22a2d7a1b55b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63e709be-bf88-4b3f-8d11-f9f57bb4df8c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabdab71-136a-47a0-ad47-543f66b6afc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34ec9b5e-e47c-4de4-93d2-8637b634099f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a00ec5-ee90-4dac-8ed5-a5e31325d7d0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "c3a636d7-760d-4262-b769-77327a2bc879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca79c8a2-da64-4ff1-84a6-7fbb71f6aecc",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefb81ef-19b6-4641-acae-bbf2ed5b0d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33cec129-26fc-4788-bdff-27e87c31b0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7952b85e-3aaf-4853-a276-879080b4c470",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "fcb76e9a-6cfe-475b-b86b-ecf0a3599666"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "783838ca-ee79-4a9d-be49-4dcf7ef71c20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "488554ea-142e-4107-aa72-312c04863c1a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d46de18-b18c-4a78-b7cf-ff324c9ebad6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c04dec2-aa36-44e3-8f92-7803029a5c48"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fdbf0a08-c7e6-4c9f-9ee6-50d12cad81de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ea1372cb-4a39-438a-bc34-07babf83ac27"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "efe75706-e9ba-4b17-bddc-c211987eded6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2eba9b96-b4aa-4f6e-b0d9-ba54ed991fe9"
                }
              }
            ]
          },
          {
            "id": "a490f01c-12a4-4b95-a5b6-c946441b1fd5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a11ec740-3646-43df-bb94-6f3da558f19e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36fcec9b-3265-4515-85aa-f27ed63a9922",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca2aa9a6-3b97-4996-8843-01c51deaffc0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d8bc0f0-32ae-4da8-9719-f7507775e0f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "841e26ed-e321-4295-ac83-0a0f521bef49"
                    }
                  }
                ]
              },
              {
                "id": "cb462529-947e-416f-9249-c21779c0fb99",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fb95b21-07ba-4208-8e80-980b15a52197",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5621540e-7d75-4628-8699-691826dfbeff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d28ee90-f28a-4c65-89d6-fb07a6f86033",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "58bd8520-86ca-4201-b5e9-709e81826ff8"
                    }
                  }
                ]
              },
              {
                "id": "f8174613-04cf-44c2-ae10-c78953a8bc75",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29245a0d-f8da-46cf-811f-8eecd7bcba06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c275fd15-0298-4bcd-b19d-59418be64f21"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfd21026-5032-4e1f-a82e-76a9c06690f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1979901e-7379-4adb-ad06-4c8a4005e2db"
                    }
                  }
                ]
              },
              {
                "id": "98ffe211-b0a6-43d0-ad54-d05b42267118",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "622f07c9-db8e-4cf2-ae29-ea6cdc411692",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e6b2b17-0fb9-453d-b2cb-f7d912175e81"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9e1988f-bc57-4ef3-a523-2817288c2e04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b1233b8d-6dde-47cd-b2db-eaabdc91b403"
                    }
                  }
                ]
              },
              {
                "id": "2bff62a3-c706-4d9a-8e04-1d2eba157447",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a296e73f-6271-4104-9f2d-ca8be98077df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9aa46bf7-6750-41d3-b85a-d7a616719456"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ad0a1ab-79e2-4bbc-b8cb-ed5dac6fdf00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c72ba8ac-f42b-476a-a40e-422936f5eb22"
                    }
                  }
                ]
              },
              {
                "id": "e25c04d5-2494-439d-9ab0-aa12f31a17c2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9951e2c3-a326-4c9f-9022-73da90b6ffa7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d7c3359-9b6d-49fc-9cbf-a4a1f1a527d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "117bd9ec-2ba0-414f-a154-5c8b3b52404d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ab2a5410-7ecf-413a-8ba4-fdeb799e7141"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b2c466e-ee91-4053-ab14-28155edd7b02",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac0f922f-2d43-41c7-826d-a877fae0bf38"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "826cdb0d-2221-443c-89ff-7c825fb46c00",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3dd8247c-75d8-4fc1-8ccd-17f29478c428"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1bf93522-21b7-4068-981c-baddd4e1b5c1",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "be5a6aba-143c-4776-be1f-738ed685a012"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "122e732d-047d-468f-a287-a3f8549679d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e2faf86-4dc6-4ec2-a497-31e6ab699a5b"
            }
          }
        ]
      },
      {
        "id": "9dee9241-c3fd-4b66-ad3a-98f1d1532e86",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "edd90dbc-ba7d-4f77-a311-fd64eede8d14",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ebd562f0-fb2f-42f4-9eb6-2766f8f8ac21",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aa42c5a5-c948-4ec4-aa1b-e556f4932838",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f8632d-2542-47fc-839b-30b859e18723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def34926-cda5-47cc-bda0-8dd66094cb66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cf7df2-4cf0-4c51-a42b-4864f272861d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c089a75-ed3d-447b-ae9e-cd02e87953c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606c6bf9-ea9d-494a-9967-595968bc14c7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e085491b-fe0d-434e-a734-0e59ceef08ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289f2cc2-04b1-4edb-b774-34d94301f31c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb53148-2dd7-43e1-b0c8-d91ff43f5e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e22c5d91-8986-4d5d-9c40-504694e35bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2381e5bb-d9de-45da-b2ef-b3b8e9a0f052",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7da9d8a-690d-4e37-9eee-7d4b3c6d0430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c8ec2c-9eee-4fba-8bcf-108eac254eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f782381-2e51-4027-8498-8474b90b9dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cff29a2-2bfd-4b18-a9a3-d9d1ef8d8fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d29d99-7445-4efd-96d5-22acfb1e1d9c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b55906-cd9e-4287-9a1c-9a39b20794cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32cfd4dd-b97c-43fb-a927-54d9cdf59192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f30912a-847f-4e57-82c7-85c08c49a7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d66e2168-f2c5-425f-b979-5f6d0fbcfca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea70186b-b1cc-4d2d-887d-e99afac5631b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7c97cf-7338-42a7-a7fe-da00575f0bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c16f45-0c35-4fa2-856e-b133951866d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c4bdac-4c06-4aa4-8859-c6ebc78ccbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97677211-ce0b-4853-9bbe-ec54ffbaf4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7affc2b6-47a6-4ec1-8b99-87909b92033e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c327dc-a007-4447-8319-9bcd0ffee746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92765017-2fb9-4f80-a96f-0e15934840f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d79b636-b54c-40bc-a28a-bd0b9c3b54a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6aa749-0ee5-4b82-adbb-fe9d54e71134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e0dbb6-e5e4-4fe3-9b36-8d69126f7e80",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ed8ac7-069d-434a-851f-0f7364f6616d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0272c493-45a3-4bbe-81d1-2f2bfdc8dbd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c68d4f-cf14-4404-b17b-b0a1fcfba450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "52767356-8ed3-4d68-8958-983aae4801db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9236352e-7e91-4ba1-a865-caaec9998143",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7ecaf5-f106-499e-978e-37273bfe3c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20fa9e8d-0446-41b2-8f51-8c8c2c7da1ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bbea0f-bfdb-4bb6-ae8c-229e86b36d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3453aaaf-1cbf-41b4-b446-0ed8bb24a066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d2f83d-8f67-496a-ac0b-c9ee3620faa8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040b4a41-7882-4dad-a49f-bdf6c162060c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae34cab4-6dee-4a32-a4d6-e44358e2dcf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e869528-fd37-420e-a051-f8afb89f502e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44a7918b-2452-4975-bf91-4df5ac63a4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a615e196-0d58-4b81-af84-0db8b1605c25",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5565ee1-beb2-4348-b9af-6bb970af6160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62edf7f7-4828-4b50-aff5-222d53e90516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7153a0a5-6791-4e16-b30d-61d77a90fa36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f39503-a133-43ba-b34e-df72f1c7647d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968f622e-9a63-4bc8-bf19-b3ae3ca064d4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df01ac5e-4afd-4fea-9649-e8937ac17be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51598a1a-2f11-48fc-a6f8-6ff2d26fb12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8423ae06-9ae1-49ae-baf9-7ca617cc8471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3731bb2b-13d1-4bc3-8bf2-f34789f00545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08ecfd6-8655-44e8-811a-ac1807ea04cc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec495ed5-edf1-4ad5-bfeb-31f34e47a037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5407451-e65f-4e71-9e63-c21c5b058e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba9f082-4a17-4a7a-95ec-87aa5920ce79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b208c3-2f8b-4d9c-b17b-0840d870b294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cee7504-8715-4733-b7eb-eea20376b574",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171e582c-f668-4d58-89a4-64d8ae3fa6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c53e170-96e5-40b3-927b-eac56da8296a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2a2f64-e7c1-4b9a-a3dc-2056b353c571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9daf20c5-6748-4be5-9e2e-313fa582dc9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84e0078-451c-408d-8ccc-8f6773d683dc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff55caf-91a7-42f3-a1b2-8f13034445aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082f8efe-38d0-43e4-999c-e1edde126e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4820daf-58ac-48bd-b685-d1dcbf6a73c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca30dc42-3e72-4f2c-be3c-ffe39847f8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839702d5-cb20-4af2-a9d1-95f89cb61ba0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7fbf6e5-585d-4ad5-a318-dc4e0b73518f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7af464-c851-46d8-91ca-26fe3736f31d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7e5554-e7a3-491a-ae14-f66b2dcacbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1b9490-7f3d-4c72-953f-5608b0ae0a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c3ab93-c275-439d-a18c-c777a17c9fb4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8475c601-c40d-4cc9-85c4-60251a6b8c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c5bfedd-88c4-463b-ac41-76e79efd7f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389a551b-ed3b-414b-8c27-38ff2a63c142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce9baa8f-c7dd-48fe-b373-b0bb22288de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e99a1c9-535c-4be8-bfc8-4bb63986bdf7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b9a7a1-6dfc-4606-9f46-f396a8480f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd975e01-0605-442f-9f6c-dee9e9dd4a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba0f3c6-4832-4487-bbe2-9587a9299972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab05324a-20a1-40cc-9b98-3070a2663763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5719b20f-3e5b-4cd1-9bef-656bb1d6aeb2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a70c96-57fe-4a3c-89e4-1b0fde7e24cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b30217b3-6e35-44d4-ae0b-ff02cb4dc02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c74bee6-7bb1-468f-bd11-26277e8708cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "58799645-f041-437a-a992-63693a242789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9260546-6671-4e4a-9738-9823f86e8ec7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b7ed2e-ce28-4cce-aa1d-70d292a55720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14be3943-af82-41af-a6c7-1357ba16f7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788100d0-232e-4f46-9b87-84756a8205a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c326664a-7c7d-4f25-b595-a1a1d86c0a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73674c99-363e-4b3b-9607-95958b80b35f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c6304e-ab16-4e2b-ae12-4fef23163697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c8630f-6b4d-43d9-8aef-aef837cbfbe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a9956c-fad9-498c-b84b-08560c2ac654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eea483fc-aee2-4b47-ba9f-131db3531eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a27fba-ce26-4efd-8287-e5ccd3853ef6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d03afa9-17b3-4ff2-aa43-50c84156368c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc47fd76-1d4f-48fc-adc2-2a2a87553096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6560c25-73be-43b5-9fbe-92277b3f060b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "021af594-bd85-4f7c-a30a-edd76a863326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88a1fcd-ee54-4f79-b66f-38058d97d197",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cce9cc-463c-423e-a17b-7ee8ac0193b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3209d4d-e4f4-4c62-b4a4-629c2763aa82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0296ebc-5bc7-4416-a9e3-fabd37c9e75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3517756d-3ba9-4e67-8fd6-817a08d429de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff3a56f-9cda-49d5-bd91-70a378c2d759",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25316d6-44dd-4dba-b46c-d20fb4ac7281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619b8dc2-8fdf-4feb-9d0e-5045d8334ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ff61b9-59f7-4e9f-8ef3-774af9fbd668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98779dee-a086-45e2-a838-661b4af89fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7c0d3e-bbc4-4e19-baf6-4769ac53befd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efde1bc2-3ef3-4441-ab92-29ed52794690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e358e8f5-a837-4ea3-84f3-5c3fd30840a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d362bcf-8093-4599-aed1-1596cd41374f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fee82000-d35e-467f-b404-6aea9fa7e57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75581f44-61a0-471a-bbd5-d757caae06a6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b29766-2ea9-4074-9d75-2d0d52bb1469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac0eb14-ff87-4cf5-a557-6b69a15cad09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1d227e-af4e-4728-a045-61ce31136b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8750cfbb-e96a-4866-9183-5ec104b9d2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c41e56-43ba-4e09-8d1d-b8af1751f73d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca792088-6aeb-4b2c-a064-b5e9acfae1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2273e58-9710-4356-aa39-d8290a04c54c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba5b22e-e682-4cff-8833-af7f14ea533d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dee2ce94-68a3-43e0-a341-80a88c19561d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdfae11-dfad-4c17-b170-d86a599fc8e9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea86e772-3067-4692-821a-0b6586443827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b75807-2b50-407e-a073-af672c12179d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3d47fe-7ff2-4b76-af77-8df0a13d1841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba00d52c-2d00-46f2-9486-a567c28bd6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc13066-6cbb-458d-9940-9eecaf9bde8d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6a52d3-69a3-4d99-8549-4e2c1ea797ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3df081c-3009-4412-abec-306dcb3e70a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3dcb73f-5d12-418f-86f3-96c35691f5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b17644b3-799f-4a35-8e2c-7b3564e95f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4609a125-0424-4758-bb0a-bb006cae80e0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccad68e-3969-44ce-b8d2-e8a7a9941b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442bd65c-ca53-4aeb-8b8d-e23c6f833baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fca4f1a-5151-4c64-8d9b-b303064674be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fab86f20-dddd-43c7-8d71-df21c198546f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70ae1dd-21a8-4424-a24f-1b9e63a668ed",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604804e8-434a-454d-aa23-a5e84f4b116a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e27868-de9d-4b27-a415-db785ee45b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ce60ea-0ad9-4cf1-8d3d-9b5d9193f6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7088c700-c15f-43b6-b93c-5fbb6414e086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269dadcb-b98c-4d39-b374-d0e384293459",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae68c46-1522-45f6-abbe-e983029dc547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af41bc8-5d61-4c7d-a67d-4b343ca4f80e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d58b96-f517-4ae7-a7bb-096e124c4299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc8a70b-afb1-4766-a9d2-1ce3a10a9af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e207b4f-4606-4a1d-957c-8a1f9d739e9a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e180238-c3fc-42fe-a769-78fe1456a9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80a16628-c004-4d17-a8f6-48d1f81d1515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d37e3e-bc2b-4f26-a9c2-3b77696b4f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "602cb011-17dd-4c26-be85-42fbbb09070b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d21b6427-15d7-4b68-8e3f-a1db9d969a5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a701ab7d-e699-4a74-9862-9765202f515b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0d932e-bd1b-4a25-a7e4-1d740a87abdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af71c477-6340-4c24-ac42-4117f8a5b39b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0e9015-34f1-47cd-9b9c-c74765a0eeb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42c73561-d9c4-476f-9513-52917750abb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1bd1476-d037-4798-bb92-c677ea836a91",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb32327-56cb-4601-82f6-891bbca942cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "b70cd9ca-e8f0-4cb0-bf82-e0207ee71717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc30410-4961-42d8-85f2-c7fb1813500f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f081657-83b2-4684-b00c-db3eb87750e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e78a2bc6-cc84-43e7-b88a-2d34da2aaf88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb205831-53a4-4e32-9767-50a44bdc429c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bf54622-3e96-42e4-a3f8-fac103991ca9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b0a6f6b-d01a-47eb-b01f-4baedd9e2238"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1312d1c-2918-4cae-adec-da706509778b",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "66b46dc5-cd2c-4f00-95d3-62e330d1fcb5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09e4ea92-f239-4519-9aaa-5a7d5c8729cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1aca7445-2793-497b-a551-545d1c022950"
            }
          }
        ]
      },
      {
        "id": "9900bbc9-7678-4cc3-9482-27af9116912c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bd275810-2e52-4c18-94a8-6d33efd8af07",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e01444a0-0d14-4594-9723-c0028325148c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "29f52057-7722-4a90-a36b-9c2295807618",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf3ed9b-9629-434a-b9d3-2c8f7e8ef64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb224e8e-2ce9-4c93-b0dc-7268dd31f70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec6e7d4-d7f1-4ec4-a94c-9e6ded129129",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8d6223-e4ff-44e9-8068-146a2603fbc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83eef4fc-6753-4ee5-8e0e-e3307d3dd6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70067479-ef8f-4f83-a0b2-1b9f70630653",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02b5ba4-a196-4be3-934f-432dec20d83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c632b30-ec22-40d0-b7e4-d617b02e03b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51372493-eedf-4d2e-afcb-dd9f67950a60",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5cb4fa-1ff5-4fed-bec4-66c261f9ba49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63289fa-8096-42b5-834c-1bfce83df7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361db9df-03a3-424c-86cb-2917c207a9d3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a246af-0ce3-4968-8be3-0d26f78b214d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ce2997-ce4f-45cb-8f53-f84354ef3fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9245d16c-d206-49ef-b9dd-be93a9c56eb5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821e753b-0157-46b9-bb77-8e43694683d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d16c2ca-2ce6-4a95-8d24-4d94853d0591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b40f8bf-fafd-44b5-9e6f-254b9398d38b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5b113f-6ca2-45ad-b7be-15df7b21ccb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af97885-3bf9-48d4-9f91-49a9faaf71fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4546ad-8fdf-4318-828c-692bb53b287e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "475c472c-1229-4855-a895-70e81d394490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d9bd9a-c9c4-45c3-b5c7-a595078f9b78",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e346d9-2342-478c-97d1-09665b2b7b59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fa02d3e-1c98-463f-a209-7b8578ebe6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9858492a-ac8e-404f-b5af-05393d346239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5513c6a0-b6f5-4b64-aa89-d4bb5f859094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43682b38-62b2-4b47-821d-1f4a909d04cd",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aae1a4f-fbbf-4ed4-b1b5-654bc56c4f3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3056b933-30f3-431c-a161-972a60c4b2e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "063db721-699a-4234-847d-79f9d9c2af6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c76c7b-acd7-4c88-b43b-53acdf78cc49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88899484-0063-4472-9561-cf8728ef5b2b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f43968-2b7d-413c-a355-4bff113d2539",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f24f4685-dae7-4923-b06b-d4108d021a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d68f5aa-a969-4c0c-8240-b33535bd98d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f4addd-d71f-4349-891d-b441a13cd398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f776e1-5ba4-4e15-b794-a8c8a78f338b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a4f671-8ac7-407f-9d5b-77a7a5b549b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4bd94f2-73f7-4d43-a138-a1ec26e1bdf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "795f8e44-8d55-4ead-9543-db0438489fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4139b0c7-afc1-4ef8-babd-48b0162becf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ad58a8-a656-45b3-a233-657e730de9d6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc38abd-c427-47b9-97a5-97aca575d5c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bba2a70f-0132-4464-b3aa-cfae24165cb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c2ab11-d7e6-44b4-948b-763e3444dabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f8bcb85-d7e9-4fd7-a15e-c8c0055de11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40a8889-0be1-4d3e-9d07-4641dc326428",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aeffe74-b42d-400f-af13-bc38d76f8d3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecaaa8af-5aee-4f27-8da3-7f5f2247d95e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54b0ac4-3842-4bd3-b391-74b7b96dd9a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de5f3dc-09ee-438d-8569-29135e1f5cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ba9221-46ef-43b8-896f-71ac055b42ab",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1598f0cb-cc97-44b3-84b6-c6bb26821081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5f14aea-bf9a-47f6-8326-371efec335c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6c4b87-f74e-47cf-84c2-d8c086116ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53179cb-db6d-4e93-af8b-cdb288c6bb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afced30-4451-4203-8d68-d9412b20b57f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cc3449-bfb8-425b-840f-6e4ffd51a3ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7008ea4-e6b7-45f8-a92c-38ea98d4447c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4184e0-a3ca-4fff-9ecd-7fbc3a99edf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e1916c-4654-42f4-81ad-06e53838ef00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1be69f-4c66-4c8d-85cf-ab4b3c5139a8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef550d15-508f-4b65-b35d-75c6a62203f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af8dd651-282f-408c-9728-11f66548c3e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10246624-236f-47f1-adca-80fc7415046f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9899dc-329e-4ab1-9e55-9cc55995032c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dfd5380-8dcc-41a4-ab99-a5bfe1c1bbd5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd6ad01-2de3-4b9d-81ca-8e8ecb59f793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d13f9d45-7f2a-4718-ba86-2fd69963d1cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a23f68c-f104-4fc2-85ec-0a2737994999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c465f407-f940-4893-832a-ce2afb4d7e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb81ed4-8160-44b7-886c-d4e86310a2ba",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67cc3cbe-ca10-4bc7-97e8-29fd935b8ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21fe209e-d754-4412-92a4-59602cd0a7ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e98459-7372-4dcf-b3a3-2444ddf1a237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39dbd4c6-402a-462f-b2e5-9c8d9923ca5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc99dda9-fa96-49a7-aa7e-f8cb09855644",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b428c00-f07e-4c23-993e-47e9ba71dcfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2b9634-5d31-4dea-9df2-ada228639840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "805c86dc-d6bf-4be1-826b-129736296334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6388963c-011e-4a2a-8975-b73fd4029660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03723d3a-2449-459d-b200-2dccb065a15d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fe806c-0504-475a-8754-5f911cf59fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73035c65-9177-4a7a-857e-a22710bd1092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b516dab-6ef3-4d5c-8c79-f051a8867118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acae8cbe-bc4c-4237-9235-f1d497f390f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8342771-9e3f-4538-965e-3c10234d11ac",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca6d74b-c32f-4511-84de-5c57a1e563ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b23fbe-3fcb-4e52-9c71-9f5bf3330c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04268f3-a04b-498f-a516-bcbcd524d681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7deaa5-77cb-41c8-949c-bfbddc832e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721cf248-eb63-4e8e-a9a8-8438ec109a7b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b163db-895a-4689-99e7-2f65b24252a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c4e264f-2093-4ad1-9a3c-04ba7f7b9fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f291c650-e0db-44aa-812e-21d9d4f0d735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a296ae7-8318-4965-9e74-275e5db16d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092f4206-2b8d-4628-b34f-e5dd3c46ea0c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840cc696-ce88-4f21-9fc4-b3d8b419c263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "967a2359-f036-4a79-bf5b-06611a55b17b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaee08ee-f59b-4e3d-8ffa-087aac8973da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35075b1-f1fd-451d-b7dd-682e3968cae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17fe084c-10f1-4e05-b662-88d7297e08df",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5bcc2ba-2682-47f2-a6ba-c26b7b4f5a78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc2bbf13-f5af-44a4-8912-e4b52e0bb1b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd0857e-adfe-495c-b4cf-8e3b7a40baf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "019035e9-d1c9-4386-9039-1a7e6ed702b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c7fb1e-4204-4184-ae1a-567bbf6cd358",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e0d674-f61d-484d-b708-dc9458d11dff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a6d86f1-a349-47ff-b221-3c768bdb0d6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e05f9c-da32-41b1-aa03-42e92a41d140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e523516-f08b-445e-babb-e274f3136655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2581fee4-9716-4d7c-a178-8f9cc5d33282",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea7f637-0a68-4d90-805a-e360047f76cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b4a3509-a5a7-48c5-bff6-4e2dd4eb1ce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64bd13e-7d7f-41a4-b39c-23ede2f81cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ff6fa9-e40a-4102-99aa-2949949bacf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a35a069-7961-4419-b152-8e5b56f1eb2d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7429dbf8-91b7-4964-8846-0c2ef5780cea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84a55414-d2d9-4271-b593-c72bd80d8c0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba10f0e4-8c5d-4222-ba5d-5e97fe3e0d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "982c73fb-2714-421f-9f19-6e606f018a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7ed3f4-9fe4-4ef3-89df-2322e1ead53f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16e4bcc-46f6-4d42-8fbd-5b51173e2369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7537601-b85e-4dda-b3c7-216431a58432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4040d1c6-f012-474b-9782-6c32c9bfa731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c10f1015-fab0-454b-9aa7-8d22a9af5cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524fbe67-5f96-4027-abde-2fae042bdc21",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b2a39b-64fb-4267-9c45-c1a10ebc287d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46dac5c4-9060-4eca-b764-0c336eb0d012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c75465-95e4-4f93-b2db-862fc588890a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96042a1-d97d-4215-b908-48557701ffe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82a7aff-d9c4-4117-aa9b-0193fcee2771",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c559d5fc-a3ee-433f-8cea-3702a5ee1fc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a22154c3-49a6-40e8-bcf9-8074eb5de4e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8218b08-5b6d-44c7-b4af-c3eb7c750ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c5f30e-a9d3-4390-9cba-cb845b46e980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2615a0a-a7c5-41a1-89a1-43ccf68c30f0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30d0f0a-f27a-45e4-95db-44fc986f0e76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e677e31-8eb3-4f73-96e4-2e7a5addc8c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6aea17-44b6-491a-9c35-552c45cd8850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9346e3d9-0733-4405-8d04-507f37d62f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d19f8c-f390-48f7-9dbf-df7fe57d520f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d57b97b-c515-4c54-adf0-69f3d9671844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d4f6d6f-fdf3-496f-a3ca-c93973e1607f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "535b8a18-7e39-45e5-aa62-6503e5dc2118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8bb14f-a423-4ab0-9896-1f2faac39539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2fe77a-d109-473f-aba2-7b2f457bccbf",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea36c54-2ecb-43a2-8234-b9a87800d6f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff9a9df4-7925-4d27-8807-cca944d927e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "500760b4-c521-4547-a5f0-3081918a3fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21aa12d7-3275-40b1-87ea-f861456738f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040f7eb2-71f1-45cc-a409-b9a3b80f2848",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7312c1a2-734c-4c1e-97fd-e1eba79e17c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9449a32e-65e0-46ae-bd77-91c6162f2f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01593edc-955e-4086-8f61-2f9369743551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52823cb3-1fd3-4c5e-94fb-529ae126ef5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae15ad9-add9-43fe-b6b1-c4baf894b3e1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f60542-34a3-41a7-b040-333cf54f4eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ec9678-21e7-4e38-a245-fd4ece241ba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c5deab-d7c7-4e9e-afc0-348c3f0c8c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4304e532-0446-4d1e-ba5d-dfd969c17d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82321a9-823e-4e0d-9410-4ac845981546",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bb30de-54d8-4501-be23-35ac630a2824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b6a0e5-904c-4ab9-b736-d9f2687d4be7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4304384-b708-4b7d-83fb-cc4217e831cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1efd29a0-64f5-44d4-9ca1-21807fb2ee9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7103a4e-463a-4ac3-bc29-df2254a4177b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9d3d63-ff52-4d31-80dc-70d56bc051bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b38f013-18cb-4bd5-860b-e43d88161a40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7e3d6d-a55b-4b2a-9079-77c22eb5f387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b81fddb2-be9d-4f02-836a-a724f85641a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e789d9a-58c5-4396-9227-d988f75cf55d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd194069-97b2-4d2c-9fd3-3f869ebf4f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c31f7d6d-faf4-460f-9aa6-71650561824d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7638490-cd9d-4ca9-b31f-30af503e9a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ce62bf-adad-4fb4-8394-e5349cfef97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e837eae-2979-4963-8e94-eba06b63da70",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948f0790-df2e-438d-98d1-608caa3a9288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b2592b-1de1-4783-b680-181bdbaccc2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d330f63a-cc74-4dad-b00a-a91a8b41cfb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ff2ec6-7f8f-45c7-9258-ff613dc218ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1eda293-64f5-4ead-ab61-3cdb6941924d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4e66bc-9f5f-4945-b55a-57532cf06938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc94e0e5-721e-437e-a18f-2628d8b3ec17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1574e9e4-de21-442e-b219-2e074d8635de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd427fc-4eef-46f4-bac6-057cd49aa508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e5a3ac-1f78-473e-8d77-c85468f92bc1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa502363-daeb-4a52-b5a9-a4d123f9a1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59460a8a-7023-4618-a970-2eed73748c17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06936615-e72a-4313-82c8-dd2789c81575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f08bcd-023c-4b70-8020-b6c068c65c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d205b7a-93e6-44a6-8acc-35a13a73fd6c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc929586-8994-4c4c-84b7-a87017b7507f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c4eb77-30af-4ba2-916c-fbb417356b30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0024c5-9f8c-40b3-8540-b2de8e9f860e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f57023e-9bb3-4f0f-bfed-a8901f81bbcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d118da7a-14fa-44ac-8cde-bf7e51a1a41f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2411b2b9-6735-4ebd-a035-30e0fa65bc0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18c6a3f-ab8a-4589-843d-df50fcb898b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a90c5a4-3951-4a87-b18a-0315bef85ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feda2bc6-2b2b-4a48-b1cd-2cb72516ff47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a929f4d0-7b7b-4365-9431-039d1dc0df70",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0cbf322-bee1-4e6f-af83-8a3f3b623e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a5163a2-8167-4fbf-8fa4-c5f460f96a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd58303-59e1-4c26-b476-68db391caccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b11c1d0-aa44-49bc-b949-e115bf50060f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9065b592-7f73-439a-aabf-7d16ec7548e8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3469d4bc-623d-4f7f-8264-ec41a71c8316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a93136c-4796-4fce-b8a7-084bacbab3de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7f7751-5500-4ebe-9e7b-b1b503998db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea023dfd-8687-449d-acec-c0a0e13d2265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4133f47a-ede2-4bb0-b10a-928130ec8dc3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62480849-2b60-42c5-98fd-8928bd15010b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6539cff8-8e26-4142-a3bf-dc999775a389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c4980a-afa5-4122-b0a6-b156162fe022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758bedd8-2330-4f93-86d8-eb39619a57da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee81404-9d01-4bb6-80cd-4498d546abb7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53dcbff0-62d7-456e-ba38-feb5c2bb263d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb25d737-72e6-4789-93f9-abb6e2f93d13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230eaa8a-2550-4208-85c9-8670ea399ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b63a8ee-ee97-453e-b771-c2116c3357a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1400d22-5bdf-4c8a-92d9-03e04573848b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7f41fb-ff04-4276-ab65-4face794a5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d775a8-fb28-44de-a073-31738fb37b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6b9c36-f451-43a1-9c65-ed0d20e64832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1b3b53-b714-40f1-ac63-300f6a48d1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e131fe48-330e-4156-973a-ab9150f897d2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e60993-ce7e-4ce5-a154-dbe0d7c98e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a388ebbc-3eaf-4cfc-add0-8b8c4603bcf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a5d5e3-3101-4483-a710-5d467757a4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a004cfa8-8495-4cc4-994f-16d065e02556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5335660f-3937-460c-8ad0-e53d82e40c6b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ef9c30-5710-4771-b74e-2a8733e7714d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "467f85af-b5d0-4281-855d-463d4ab268ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d954e24-c273-4c63-bdf6-69b2b0d37f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e00b823-fc10-4d8a-b800-5fa48eb0464a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2619ae-ba87-4edb-9c42-3837850a5075",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0edd094-c771-45e3-b7c5-7e387dd92e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83eaff82-91f0-4869-a903-c9d25f24485d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bfd0a9-06e3-4cec-8e71-1eaa58a2a14e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5faf5a-d427-4351-bd35-6fa2d6b4c25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10899ae5-b230-4575-a03e-d55302453b1c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a83c59-5645-444c-9926-907f43c0d8d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ed3d20-d523-4b8c-9f82-5ba580509935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd77a618-ac5d-4ab7-97fb-43534cac8cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d1fb62-7659-40d2-9ddf-00dafb05c081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e12fed4-b9a8-45cd-b638-a543f45a4585",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e714fd-2418-4470-bdc9-8cc037758932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105d8b4e-d516-4201-ade3-569984d89f56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6891593d-afbc-4d64-92d3-175e999a2676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb35e7c-b23c-4652-ac44-1fb8baed81e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76dcb504-c8f2-4e0a-8b41-651f5ed58d21",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe65e4be-af67-4b17-aa1b-d3f90ae0ed8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb501247-429a-4afc-86e9-96d690197400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb0fc61-72b4-4cd6-beab-a9b9deae581e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959ee66b-0120-4755-82c6-e979c015a82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ae5922-9be4-4560-ae07-b882692c03e8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1cba91-e221-410d-9e94-cb84820fb2fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ada833f-d8d7-45c2-9218-306fba8e2d0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e87ebf-d425-47a2-8c91-21bf635ee4f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f83b4c-1b7a-491b-9c5a-16155fbd0a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fb7a1a-1423-4f15-a827-173d11e2bf84",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c90ad1-5578-4f30-ad9b-7b38d6caedd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc61bd77-a670-42e1-9b6c-c3d397d7e93a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b301db-648a-43be-ab04-bbb710485e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79623a26-bf16-430a-899e-2143b944e935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a2f38b-4c3b-46a0-83ac-4641977c821a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d0392d-16e6-4ab4-915d-6cd0ffaabbc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d6a4a2d-3f79-4333-82ba-12de7e9164dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6950ed-d95a-4237-9bf0-dece288f74e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb0f5db-a035-461b-95f1-b6dc5b0cecfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38919b6b-585c-4d44-ae3a-1d7e643c136d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a5f3c3-c62f-42ef-9c52-50c5f6a672af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d500d45-7562-4c7c-af54-0f8a0e5ac5d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ad9aae-9be4-4603-b803-7b06aaea25e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4d1e60-14f3-41bb-b93d-7b7d7325d2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcaf44b7-de96-4a37-86a7-1c8c753c133a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17aef72a-9148-4202-b040-0040863a3051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db7ec368-f9a5-463c-bfc0-c26a888fba0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3ca962-2cd2-4997-bc15-da13c3b03452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b41833c8-2627-4dfb-981d-8ef3a63a928e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbb1dcb-6f63-4cfd-b43f-5fd09540d094",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96aa20d0-e6d1-4c9c-a851-9f5e5515972f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb1eaa0-6d61-4223-b81e-3edcebf7a1c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5528c5-ad53-4479-8f85-15dec1cdc3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223f5cb9-9d54-4461-9cce-daf857c6d1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0573e2ed-de45-4ab0-8435-18da14011f5a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960f2aab-79e9-4f1d-8a5f-1cccca4e505b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648ceba4-c810-4b5d-b064-b98957d1d73e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0907d3cb-8c7b-480c-a6f2-60587dee37d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb4cc6c-b9c2-47c5-9408-a418393a4dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36c8dcc-8554-453d-80f3-727d4442ee61",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12ffd44-9754-44ea-802f-834674814c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4a21c2-3ed1-4acb-b98d-262042b4bb76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0a54fa-0f41-4533-b9f1-7c7a90f9de8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f27263-924b-48f4-84fe-bdc8288179fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7fac73-31e6-4e1f-af74-320abbfc38b1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67db69b9-0cc7-4b8e-9a45-7002910a0a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35628613-832a-412a-8cd0-e8fee8c0f37c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48622ac-d519-45eb-bd5a-466538769a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21a32ce-d4d2-4fbb-bab6-3558353e543e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e76348-1915-448b-9698-07c7cfba137c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae231e3-496b-41b4-8f31-f1cb12e29807",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db7cc7e5-1f22-4191-9d65-b4a722a9e433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3059775b-8033-472d-b651-229f0fc39291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc1eacd-e527-4cb9-9b56-961bfe9e9adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921799cd-3de0-46a5-8fb7-f5ab24f18bec",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cce332-b864-4a89-84d3-e5120b14381a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b37dfa78-67d8-48ee-89cf-a84e6d7533f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce12eef9-a0f2-4b15-b8c0-44278480d18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33a83b95-d7a6-469f-a4bb-38bb8d2d2bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e16bfb-c1f1-4989-ba3d-8b7bb44be4f2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7023b2cb-6f07-41a6-9b0d-0671d862c404",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f41da3c3-6ad4-4ab6-a027-b8dd99a5cae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4363ef4e-906a-452d-99fd-f8025ab5f7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7b47ec-419b-42c4-b846-956ddb645f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89520960-b8cc-4fd6-a76b-2f18242fe9d4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee463c4-4858-4ad2-8cbe-9908675e0895",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfa97297-d594-4c3d-96e7-6b6f4e9e9234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "575e1b77-b43a-45b2-8d21-ddd4671dbf4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2bae7a-82e6-46aa-a010-9930040b3f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fe4c7e-edff-4f14-b7a1-fa9fe3864f41",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f489ce-38c3-473d-bd8c-155805888fe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6af602ef-e9f6-40a6-b0a6-95c5cef40c55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0210a126-c8f9-4fa0-a3b5-62a9dac9cc5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56de93e8-aff7-4105-a6ea-5af889e4c4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95caebbe-6f8d-493a-8d89-88368ea03297",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad4af78-9575-44e5-a51e-c2711615347b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8b77597-4764-464c-a84c-c9243cdb630f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46cb16b0-2b5f-44c1-ab5f-11428c97bd0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b759f921-7f99-428e-81a9-d436840f4b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47fe604-3d40-4152-8dff-3eb489e6e1d1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f097531-c18e-44be-ae67-0786382a3390",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc1204c4-fca3-44ff-b6a2-98eae83d8ca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12a80af-c95b-44db-bdc8-32d54bdce6d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f46943-3696-4a6d-b9e7-5f9e5a8708ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269d14e3-668e-425a-918d-15b9266653d2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3def113-2c66-4071-93b8-1a94dee3cc55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d613db4a-f923-4093-8c5c-ca79c3315284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b8be9b-95ea-40b2-b50e-992c7028e38c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7f7292-d558-43ec-bd01-d95222ca392f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9b4f8b-d18f-4e1a-ab3c-f1b6e8db833b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af82b8bc-4247-4760-9504-e15157f45ca1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12a34905-9df9-45d6-a3e0-296c9e6a39a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89db747d-2280-403c-81f1-e9095f8b8991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cea7135-f953-4927-8e31-318dd1562588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd589e7-c373-4aff-8775-fec0ac3a1131",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58adfb96-b6d8-4e40-83b5-54efaa7ea6cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fb65dcd-2167-4e3a-a350-022cfc837457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "670acf03-70e5-4fd3-a257-c3e3d382199d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ac2e3e-9ed5-4e00-87a9-0124ca28ab1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69e26d4-e59b-4888-b707-422a18630354",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831ac1b4-1a7a-47b4-8a13-e1f3c44c6b51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "849fc199-6a5a-47d3-9a54-ae7539a7b300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f494359c-949b-4f56-8b90-d571489dd95d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ec0baf-dee9-4a03-9ab2-cce4cb54a09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7306575-f9a8-4adb-882f-b015f7e824f1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4611212e-8264-469f-a7af-512e4ebf59ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52c71f37-f222-49b5-b1df-14b85dc59946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56856d02-452f-4e30-8eda-279626cc62fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee6fa12-5c8b-429a-a8fd-8330970101e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffa6409-139d-4d6f-a9c1-f98bf2accf1a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc57849b-50db-41a1-a581-8ccbe6407ef2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c7ba9a5-b35c-4823-900e-0abf7467704c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "900ef0e4-a422-4d29-ba92-d8c66338ce00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dcdf40a-acfc-4fa2-a8d0-ae476097212b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7f5ba2-82d6-4bf5-81b8-312908f541c1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86caddb4-60ca-4cc9-9075-2f381552ae13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "208b6070-542e-4664-8e25-aef456cca87c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc3e6b7-45df-4d82-86b0-bae8734e57d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec329376-fa09-4b24-b674-32891f0626a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d7ed35-f360-4faa-b99c-a65963849627",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16267ff7-deab-499b-9a82-bf79aa80c144",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab9bcd8d-2e2b-45ca-884e-3af6227a1f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86910253-4818-4a03-be06-4e4f3cba20fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b936b5a0-e6b5-4636-a614-8f23d6b6d353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85037e1-d7b0-40bf-b08f-f2eaad0fca29",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133c7447-93f9-40e5-99d8-b7f7b152b75d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92d961c5-4731-4df7-a7f2-e6814e5d27be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac369b3c-897d-4216-b6e9-b2c000b6e6b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa3e139-29f7-49bf-b826-1d875b3680cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2c4554-12d1-423e-bee2-407cbed6dcf8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7252e759-daf1-40a7-b297-80dbb3ecc685",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "059368e9-245a-4d3a-bff6-c4a33e578c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d78b09-e450-49d4-88fb-7084cd22e1f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d091a4-d573-419b-a34d-3f11ea3acd62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225ed49a-b0b5-463e-8831-530d7fb88e0a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5a24ee-72d4-4956-ac09-f1b2b74a4582",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b4df1a8-651d-4a28-9218-ffde7fef9a36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f094cb-0a0d-4027-bab6-f8286fc17f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2170eab9-f6f6-4b65-b5ba-44d190e044da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722eea08-e86e-45d1-8c29-f5ab8a2332f3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d2000c-5dad-42a1-893c-632c9b93cdb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92afde06-9ec4-4121-b254-3a997e4a8b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc0b2fe-4a71-456a-b09a-3d04d2ed1459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea37100-9474-472c-8b5f-f6b70d26a0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8614b5-784c-4a39-a682-9bb5b3eda2af",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4dabb53-3009-4212-9f0c-d29254efc82d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d528802f-bc61-4404-ac9f-4a24c482c1cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e3cf41-8f1c-49d2-996d-3805397e6e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ad82ac-52ee-40ad-baee-8dac3c35a95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617ddb99-5c27-4e3c-8e30-a6259798486d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253e4a7e-2030-402c-9bd5-328eb6fd34af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b88b3e7a-0535-4132-a9c8-92f1d29f27ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72a77fe-df98-4da2-ba34-aea5d0e88cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc8b6a6-f672-49ff-a2be-969b03f41337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7524f96e-0e1c-461e-b617-0b0f8073b77a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75a8da4-a7f6-4830-8e1d-acb27c7d599d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07941894-e0b3-4c09-b6a3-4c92af5bbc97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92063f11-6d8c-4359-94d9-6253f038e485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56fa9cf-a474-4de0-9fe1-61e04791e9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e1cc20-e459-42ac-8443-4d013dc9e6b1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79edcdea-f827-4c27-a12d-50b99c1428d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f132f68a-32df-49dd-82ba-71f074cdf331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26adaa9a-c529-49f0-8222-304b42adc128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a305864f-30b1-41d9-aa0e-cb075ed326cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b7aa2f-66e4-4f9c-887b-3c404809b819",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1046bfb-2f3e-4139-a085-61d922751d71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6f424d7-1307-4f56-9dfc-a7d7f1a795d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "604ce566-6b45-4f35-b5c9-0bb3d0992dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4936e157-5179-4591-81e4-489efa831bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcd4fd8-69bd-403a-976e-d44ac5e27d6c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b44cd2-17be-4126-a65b-147709f7fd4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e97bcdc-68e4-4fb4-a017-077581a1a626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86de0c4-2b3a-4f9e-a817-568e95066399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527e98a4-fe74-45f0-bc55-c07d781366da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9bd4a3-f523-45a4-9598-3e05cdbfbbb7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbf481f-49a1-49c8-8fc3-3c3ef05b392a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7208aa3e-6af0-4bba-9c0d-c175818ef52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39ffbca-48de-4220-86a6-b5be15f9263d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2624ed8c-1e7a-46d4-aa7f-c854333089a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9b0a04-f43d-41be-9395-9c626640aae3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb738cb9-a0fe-4527-a1be-3c15bb49fe8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0619da0-3110-4405-98f2-0f2ccdcad454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e642a7-23b6-4939-831f-cee177deccd4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a5e738-343b-4b0f-9184-c7b09f3b32b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a681df88-25b4-4874-ad01-954c879593c4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf12639e-b59a-4987-9c99-afb4f329b81f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "049d90d3-b4c8-41d5-a07a-e00eb2f4fd6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa36d13-5f4c-4b9f-97ee-67eb962bbe96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02968af0-c837-4a53-add0-ae3337873d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a62d1d-aa10-48f4-bc56-33f46f508537",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9796c8e-f827-4114-be77-3aebd3b2411f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "712e3b0e-1d5b-4b8c-b5aa-4437fb039de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "202dfbbf-b74a-492a-8bd0-af8ad15f6060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09706724-bfbe-4c5f-b22c-5ee5a4d720e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837f042a-74f2-471f-886c-07449df3b5df",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a01691e-8e75-4725-ae79-c7b8d317a249",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25163c38-3b71-4512-89e9-9486a596699b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c62a93-3276-4c09-951b-225a4ee6a0cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b96ed8-baf8-456e-90bc-b012b7fac76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090f45fc-42dd-430e-a7dc-4faa34c5cc5a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babb6d36-babc-4f4f-a5ba-93999ee99fa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7650754-2d18-44c8-aaa2-51defd4b3a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fe2165-514b-4366-a6ef-f42557670f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf1fce73-52cf-49ea-94d6-e57e6e574471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d1bd66-5fa2-4f88-8b7e-d005c5cb0e10",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2dea8e-5a65-48fe-b056-24ef800d4e4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83c44284-912f-487e-9ff9-d2d4319a117a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b565beeb-68fa-4386-afee-d39d39096eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65cd2cff-998c-4e86-8b0f-cf82f8120130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b27457b-60f7-4fc6-a391-26fd68402409",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84dabd3-971b-46f5-b7c6-8aa87f0d70ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d9bf2b6-0897-450b-96be-cd31b9ca0606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f64c246-be73-4ff5-9348-151c04bff621",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ada5c0b-b171-4998-9f6b-cc8b98bc53f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c2749a-d099-47be-8af3-1b6a220ed514",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0c872b-82b4-477a-b47c-390779bee45f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcd3d384-cdd7-4731-a961-4ec38d431d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c3ff5c-31df-4bd7-bbbd-45e1c27e7edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d43f09-2d52-4104-96b4-e3edc579bbdc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b773d77-c839-4898-9fcb-44d4540e80d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3973ba0-9dd3-459c-8e08-b42684fc8cb7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6d2a65b-c02b-4580-b796-5bb84db09852",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "029fb1b3-6b48-4783-8a57-08aafe7983fb"
                    }
                  }
                ]
              },
              {
                "id": "e182df17-799b-4553-a24a-3394dc96f3ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "726a6e6f-0866-49e0-bddc-e5091995011e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1bbb5d-3996-43df-8523-7a9b124e2c09",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "82db2ead-4c60-44d4-93ac-3cf65d1c36dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a233190c-3dbe-4f06-844a-bd9d0bd372cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a272986f-0ade-4613-a511-7efea36d4de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2523de-998b-4173-9f58-f42a583ec814",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682b29b4-40fb-4e9e-a7b4-3edb9781b50b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "de49b642-3ecd-4853-a38b-9493e5e72de8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b699493d-682f-4a29-8752-e0f137b8fd07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34f7fcec-1c74-4f87-b03a-e00576ad356b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e60b90e-ccf2-4aae-bfbc-d3e4cf03f876",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e983b4e-106b-47cf-8a1b-1b019f1b049d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "199d0079-04da-43e1-84d1-0b05947c4a2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6dc1dee-3633-4448-a47c-37fe4491b77e"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "d6824efa-ad38-46e6-a461-53a4e9e25310",
            "name": "Positive Testing",
            "item": [
              {
                "id": "45729787-1180-406e-a7b2-f9f18c923f02",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0091bfa9-3f80-486a-8c81-89cc22d3c48c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4cd1dd53-4997-4653-b76d-a647ae007f74"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f45b3ce-e315-4388-b22f-fa3f7ffb3d5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a17bc28f-fb67-4a3f-bd7d-1287e516cbd1"
                    }
                  }
                ]
              },
              {
                "id": "4953c2c7-bff8-4f88-afa4-c495b905b573",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21a69f84-1d15-4c58-987e-4f9f9eb084c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63caa0ad-65f5-4c8a-8903-4d3146f8b5b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "164f4308-5b8a-4e18-b7b0-7e2ffdfc0b20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "682e3431-1093-4b30-9e91-60de66f0113c"
                    }
                  }
                ]
              },
              {
                "id": "6cdf9568-b59f-41a1-954f-d2f591ed9f1e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b6ef897-eae1-4ef9-bfb9-f1c5f9b4c856",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0bba80c0-f5c8-4a8b-98b4-6d744252de3c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56c133f7-20f6-49ce-967c-20be8bb12dda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0d9c9d5-695b-4615-9982-ad7bd8434801"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90fd473a-f2ba-4815-83a9-5a07767edb87",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "849d8821-42b0-4497-b406-0a9e09ee692f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3cae49ec-52e1-4740-949f-7f4bc1b84b20",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d5771ed3-522f-46ba-9966-1b2cfb6b7639"
            }
          }
        ]
      },
      {
        "id": "6f407a06-a447-4081-85a2-8f03c0bb5c40",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4f144b81-0206-43e4-8ef9-cd4dda5423d3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8ab36e21-73a6-428d-9987-a71d0e87628a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8f74bb2b-5736-4ec1-99e7-343f3e92bc97",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407403a9-589a-486c-9e1d-9a7d0fd2c9e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "43a22998-670a-41f4-9854-718f219be810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e886bc7d-14cd-4f0b-ae68-ff65ced00215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df268583-77ff-447a-88de-b6a060b97ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c4c0b9-f9c0-47e1-a00a-0a47d63f4d15",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8093acb0-d1d0-43f4-b08b-4e5c1fd243f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "21cb1668-bf23-4443-a68b-1ae69ba853ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beec33f5-8dba-4d84-99a1-6b8096c65124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63928c19-885d-4923-a599-3584517ec33b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79d7dab3-3ce5-4277-a886-a239885c5a85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3aa998c-cf1f-4ad0-a360-ac40957c5b89"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca75850a-1b45-4f73-bfc1-c2f5aa97f4ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e57ee39-4a60-4e64-af60-0cf675d32e57"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4f01eb0-84f9-4629-9e4b-543c03f59019",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c38b1494-a5b5-45b2-8703-c499d381cb78"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de09c736-106e-430f-b816-5a9a60ed4253",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0a48138-56e4-4c45-9148-7b74dac76618"
            }
          }
        ]
      },
      {
        "id": "6bf96ad6-04e0-484c-8820-4166cc7b2adb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "88e4b3b7-367b-4512-a33a-8d8884bbf3ff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d72b4dd-3f2f-4864-9c91-3210791857c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9506a877-cee1-4948-8a1d-154ab725b81d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457471ab-7810-45b6-a44c-fde95f74b20e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5293cedd-12e0-4ec2-b822-0bf0e470280e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf56a54-f4f8-4a90-8024-0ec91dc67601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a886e73-133c-481e-b518-9d16b320b7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2895cbe6-ed36-4437-9e0e-87368063dbc4",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e416b223-baff-42ee-924e-a07a2fa284da",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "46f4aeb5-5171-4eee-9102-21483185fc2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44affe8-379e-4327-ad3b-7fa0a223b1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b89dcf55-2c38-4115-8c59-c3d326e8347b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e33a7fb-5b0e-4a8f-9589-52a9e1ae7912",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84e804c7-597c-4eec-865c-fa66abaf8e92"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26009a7a-484d-4612-bbb7-008da5b035f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9cd02295-bddc-45c3-85d7-4c55e6df7dde"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ac334c1-a6c4-47c7-b505-1be912e12ff1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "60416592-f728-4bfc-8f5e-d4720f3a902c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34899fc9-54ff-4552-b33c-cb59e94ad907",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78cd750c-22d1-4d5f-9898-ab2850019f43"
            }
          }
        ]
      },
      {
        "id": "43cd5394-0e22-4972-8e57-7edb84a5f2e5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c87fd993-67bf-41cd-9f1f-b8d7de8ce4e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c436c8bc-a9c4-4893-9de6-dc4f4f95c9d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ab9d2347-e24d-4748-94a1-23bcffe42bd3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038de9fb-c9d5-4bdd-8ae7-6b793a5d0f6b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "38fab089-ec59-4adf-80d6-15496853703e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0b8409-358d-4235-9e61-e5edf77f2259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f1afd27-4ad9-4de5-bdb4-b62b844c70e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff10e4e1-aec5-449e-9eb7-5688cc9faa91",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778f6304-5b04-412b-a366-d7402293f280",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1943881d-d91d-4f06-8fdc-e4e39a95c640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e63df8-7390-42f7-9546-25d24d6e962e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b7ee5f2-5c02-4e7e-b990-d8de7a4d73ef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50795e30-1de2-4501-a741-078015009bf9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "085ca4d4-6ad6-46dc-a2f2-110d24526dc6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71561d44-7b13-4685-a666-d6c46bdb8c58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc912879-1336-4bda-a75b-85b91e7811a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3837938-7137-4b89-a194-e6a281329190",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cf4bdfb7-1cc3-47ac-93ee-069c359109a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1af6969-e7b7-41d5-a447-c8df53a553c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5534acad-871b-47ec-b796-cdae7cd0a1c6"
            }
          }
        ]
      },
      {
        "id": "077e6ff8-0e39-469f-8f4d-9ca614c942ef",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d83be1fa-4dcf-4209-a8d3-3293b3d777fc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c2434fe-cc88-42b1-a650-aa6cc4dd2abb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6bd5df66-9500-4fd1-98a1-0ab389550008",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de8448d6-1b29-45c7-b422-645db31ea844",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6988380-52bb-4003-97dd-f211f558f3e1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 505,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 497.5038461538459,
      "responseMin": 6,
      "responseMax": 6729,
      "responseSd": 602.8947701144541,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1668473282221,
      "completed": 1668473422957
    },
    "executions": [
      {
        "id": "1b0c1487-4dfe-4640-b643-91e0598beec0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "80937570-22bb-4f35-bb5b-3233a7b260e8",
          "httpRequestId": "2d82c525-6d40-474e-b965-21c41840793d"
        },
        "item": {
          "id": "1b0c1487-4dfe-4640-b643-91e0598beec0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "76c76862-97c2-4f7d-9f51-3fceeb92f1b0",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "bdf3a2b2-756d-4f50-8fda-cf7ffb996a93",
        "cursor": {
          "ref": "f7a9fa65-c505-4be1-b898-4605672cf470",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e87a29fa-7865-4f02-ab0f-853288976cef"
        },
        "item": {
          "id": "bdf3a2b2-756d-4f50-8fda-cf7ffb996a93",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6d25b141-72bb-4397-b7cc-83e9d549cb43",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "cf094419-20d7-4f59-89d4-b6523a6cbd75",
        "cursor": {
          "ref": "0236e1db-38ad-46b2-b3ef-482c81edd0ae",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "70933a24-e4ed-4a05-bb41-f7dc53cbeaa2"
        },
        "item": {
          "id": "cf094419-20d7-4f59-89d4-b6523a6cbd75",
          "name": "did_json"
        },
        "response": {
          "id": "1cdbcca4-bee7-4d5e-bb7d-21c21381f9bf",
          "status": "OK",
          "code": 200,
          "responseTime": 1050,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b3ebc5-ab73-4cd4-8259-ac83bd9baecf",
        "cursor": {
          "ref": "618080ab-4742-463b-b2c0-e6a1145062c6",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "abe46039-9d6b-44cd-ac10-31a36c52606d"
        },
        "item": {
          "id": "c6b3ebc5-ab73-4cd4-8259-ac83bd9baecf",
          "name": "did:invalid"
        },
        "response": {
          "id": "ca3d0011-1893-4d82-a60e-84101d49f9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 934,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b3ebc5-ab73-4cd4-8259-ac83bd9baecf",
        "cursor": {
          "ref": "618080ab-4742-463b-b2c0-e6a1145062c6",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "abe46039-9d6b-44cd-ac10-31a36c52606d"
        },
        "item": {
          "id": "c6b3ebc5-ab73-4cd4-8259-ac83bd9baecf",
          "name": "did:invalid"
        },
        "response": {
          "id": "ca3d0011-1893-4d82-a60e-84101d49f9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 934,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65928d7a-c366-4751-8a8d-dbfe8c56bc22",
        "cursor": {
          "ref": "c642668a-79e0-4d8c-a411-91811cfdf798",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e4a35ff2-3ced-431b-83f7-1247d4524f32"
        },
        "item": {
          "id": "65928d7a-c366-4751-8a8d-dbfe8c56bc22",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "66341a5f-7502-4e94-844f-8d55cbf4d9a9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 922,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef1841d-12ce-420d-a2c1-0e343d1331cf",
        "cursor": {
          "ref": "4f9dac13-6d9d-4fea-b8a2-de06c6fbefed",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4a5872c9-29ff-451f-80ac-04314e5273db"
        },
        "item": {
          "id": "3ef1841d-12ce-420d-a2c1-0e343d1331cf",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "55dfa448-f879-4187-aeda-d8f13f85321a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1091,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1119af-ebc8-4ac8-ad94-4bfd51596497",
        "cursor": {
          "ref": "c6b0ae1c-2cb4-4b84-bdf3-194c19ca6b0a",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "74cfb535-3f79-4319-bc6b-e654687e0a2d"
        },
        "item": {
          "id": "8b1119af-ebc8-4ac8-ad94-4bfd51596497",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ed921c6e-3e3b-444e-a91b-898416786414",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3b315c-2dcb-4bf0-8d45-973253ab6db8",
        "cursor": {
          "ref": "e3c937d0-056a-4ca1-b812-9b7f908064ee",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f9ab24d6-e7be-4676-8681-2c3cd4c8dde4"
        },
        "item": {
          "id": "bd3b315c-2dcb-4bf0-8d45-973253ab6db8",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b64be488-85b6-4323-a91c-cb4b14d2fc5b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1170,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3b315c-2dcb-4bf0-8d45-973253ab6db8",
        "cursor": {
          "ref": "e3c937d0-056a-4ca1-b812-9b7f908064ee",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f9ab24d6-e7be-4676-8681-2c3cd4c8dde4"
        },
        "item": {
          "id": "bd3b315c-2dcb-4bf0-8d45-973253ab6db8",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b64be488-85b6-4323-a91c-cb4b14d2fc5b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1170,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef414c2-cc3f-40f1-abdb-742c9290c148",
        "cursor": {
          "ref": "51ff0747-82f6-425a-af8f-bdedf750b408",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f5c00df3-a6fa-46d7-80f6-e21c4f2e7a93"
        },
        "item": {
          "id": "9ef414c2-cc3f-40f1-abdb-742c9290c148",
          "name": "identifiers"
        },
        "response": {
          "id": "1967db28-17f7-43d7-872b-4cbdeca07569",
          "status": "OK",
          "code": 200,
          "responseTime": 2315,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a30e29-f001-4a39-af09-61503200a1d6",
        "cursor": {
          "ref": "f728a717-302a-4ba2-9906-daa10f6dd253",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6f4e8830-edb6-4853-ac05-7a705cc7ce9a"
        },
        "item": {
          "id": "37a30e29-f001-4a39-af09-61503200a1d6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4d7c7e61-595b-492d-9adc-a3520ff3214d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1193,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a30e29-f001-4a39-af09-61503200a1d6",
        "cursor": {
          "ref": "f728a717-302a-4ba2-9906-daa10f6dd253",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6f4e8830-edb6-4853-ac05-7a705cc7ce9a"
        },
        "item": {
          "id": "37a30e29-f001-4a39-af09-61503200a1d6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4d7c7e61-595b-492d-9adc-a3520ff3214d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1193,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533ef119-423a-468f-acba-16d86bb0c743",
        "cursor": {
          "ref": "4fc601cc-c393-47dc-ada7-4a1d7036b02a",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "81b0d82c-afa9-4120-be01-6d8a3eff551f"
        },
        "item": {
          "id": "533ef119-423a-468f-acba-16d86bb0c743",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0b24e90c-ac0a-4f96-a8e9-8d5a9b016c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 902,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b31db4e-2750-4d3c-af74-d0421d261dbf",
        "cursor": {
          "ref": "495d48de-c25b-4b23-a591-c6087578ace9",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ab23caea-a862-4d1d-8b5b-61cfab0037aa"
        },
        "item": {
          "id": "2b31db4e-2750-4d3c-af74-d0421d261dbf",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "88a56674-704a-40f3-90df-fb537b1de626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f769ca-647d-4b55-b51f-525e43b34e90",
        "cursor": {
          "ref": "97309135-b32f-42b1-b041-b76d2f2b7d82",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0c3115d1-0a71-4fc3-80fa-8952566472a7"
        },
        "item": {
          "id": "24f769ca-647d-4b55-b51f-525e43b34e90",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b48f26fe-257f-43f4-96f6-9b343a17975a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0391fd7c-d9a2-48d1-aaa3-928d4f3d9d13",
        "cursor": {
          "ref": "2da846e3-89c4-47a6-8e7c-d4b8e46e8899",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b1f99ad4-da5b-48c1-8c6a-6108e1912e0c"
        },
        "item": {
          "id": "0391fd7c-d9a2-48d1-aaa3-928d4f3d9d13",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "67063566-2c3e-4ec7-949a-d5cea5bb60dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5ae5b3-9106-4dcb-8a39-3f8ea831fc84",
        "cursor": {
          "ref": "7ceed75e-50b5-40f1-8ab0-b5464a2a224c",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c2efc017-7fd9-4e76-8b5c-ee476bd4ac9b"
        },
        "item": {
          "id": "8d5ae5b3-9106-4dcb-8a39-3f8ea831fc84",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "49851cd6-8ed8-4389-9d2c-e907ce8b6b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9839ae-60d0-413a-88cd-7a4d2d38789c",
        "cursor": {
          "ref": "d9b2f912-548d-4a6c-a82f-8657ebb64d31",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "856a6b56-6ece-4838-864c-18866f1cd902"
        },
        "item": {
          "id": "6c9839ae-60d0-413a-88cd-7a4d2d38789c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1324f7f4-bf3e-494f-b7c4-bd97cbda13f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354628f7-3f5f-4b7e-bc3c-a8671bfbde09",
        "cursor": {
          "ref": "38accb36-b70f-4056-b6c3-6e16ad19f8cc",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fcf057d8-67f0-4a22-be8d-1bd5a908e91f"
        },
        "item": {
          "id": "354628f7-3f5f-4b7e-bc3c-a8671bfbde09",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8c98aefb-e607-422c-ae0d-3485fd24ba21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba54d528-0cd4-4052-a64f-66a1c1ef3afd",
        "cursor": {
          "ref": "d89b44a1-ed55-4759-a900-e48f99c735c0",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "efc48394-9449-4014-b9d3-d84c69dbe6f3"
        },
        "item": {
          "id": "ba54d528-0cd4-4052-a64f-66a1c1ef3afd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7995b262-dff5-4673-83ff-d99d7e28bd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b91353d-99f6-4f84-952d-64381246c4a3",
        "cursor": {
          "ref": "764818c5-2af1-4974-96cd-9d8c4112105d",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d88f1f23-e08c-494e-9c67-8f3457a1254e"
        },
        "item": {
          "id": "7b91353d-99f6-4f84-952d-64381246c4a3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a475372f-9ae6-42df-8bda-a18f5c137b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297d5f34-21b5-4b71-b911-9e2a9f87c9d2",
        "cursor": {
          "ref": "09cfa5fa-7842-4e97-a1dd-b8c0cf83054a",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a4749546-cd4d-400e-a768-68c07907231f"
        },
        "item": {
          "id": "297d5f34-21b5-4b71-b911-9e2a9f87c9d2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a0ab77b8-cb2b-4bb0-80fc-b77a5d6c21e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9abd411-b72e-4d55-9e9e-faf912efea4a",
        "cursor": {
          "ref": "580620ec-56ad-43e9-ad6e-b979ea38f9b3",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0e36ee9d-70aa-4e3c-8f5d-842809252461"
        },
        "item": {
          "id": "f9abd411-b72e-4d55-9e9e-faf912efea4a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "10df2415-dd9d-48dd-8a9e-cfccdd687700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8c6c99-ae21-44da-a300-5d9cd2c2149d",
        "cursor": {
          "ref": "8844afa4-88e0-43bf-8166-cab52533a20b",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0e9eb7be-6bfd-4e5b-b44f-8c37eb86730e"
        },
        "item": {
          "id": "cb8c6c99-ae21-44da-a300-5d9cd2c2149d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0d2d6fd4-3c2d-43e0-a7ad-c176637d48fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd1836a-a443-43a0-9b80-a4693d0df962",
        "cursor": {
          "ref": "55633399-de9f-4090-b892-ddbcdfd574a8",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "83229680-8bcd-4398-8a22-66e5eb1b30b7"
        },
        "item": {
          "id": "4fd1836a-a443-43a0-9b80-a4693d0df962",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "69d069b4-a0b5-4a63-8de3-a239ccceef5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9519e4-69f6-4700-b8b7-97d1076da3aa",
        "cursor": {
          "ref": "7c1eb0c0-57e7-4714-9563-7c698fbceeff",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a75a2fd3-085c-463a-bcbf-ea59a0225b91"
        },
        "item": {
          "id": "be9519e4-69f6-4700-b8b7-97d1076da3aa",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "43892d14-a231-445f-9dda-fb2d60fede6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160c7f11-4295-4358-8214-100f23d3c5c1",
        "cursor": {
          "ref": "ad255ef6-073e-4c39-bd25-215076b478cf",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "929e4bdb-7257-46ea-931d-b18d450fcb9b"
        },
        "item": {
          "id": "160c7f11-4295-4358-8214-100f23d3c5c1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "286ab63a-a46f-4c2e-9fb4-2ca547ed869e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d7bb7d-5a3a-4c31-b536-6d25b469ae97",
        "cursor": {
          "ref": "3b8cda8c-d8de-440f-928b-96c5808e3a83",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e41de341-3e67-4cf6-b383-c5d7a83dd96a"
        },
        "item": {
          "id": "56d7bb7d-5a3a-4c31-b536-6d25b469ae97",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "997637f2-898c-4187-970c-8a477bc69cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950003c0-e77f-4607-9441-a07943bc704d",
        "cursor": {
          "ref": "03d0f188-87df-4263-978c-777433bf5613",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "62007e67-b456-47b9-85c7-60774f337b2f"
        },
        "item": {
          "id": "950003c0-e77f-4607-9441-a07943bc704d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3ab357cd-8f61-459c-9476-73a76adeff44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1460accd-3705-4905-a4f6-799402aac1e8",
        "cursor": {
          "ref": "e0d983c6-32af-4fa7-ab92-cee21dae7953",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "90e5dc56-150f-489b-ae57-d65fec3df411"
        },
        "item": {
          "id": "1460accd-3705-4905-a4f6-799402aac1e8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "cec8ed24-56a6-4d13-af60-55588192b1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4851d44-6d07-4be8-9824-9d7b47f4b7fa",
        "cursor": {
          "ref": "579d3dd5-2615-44f4-9c01-4ca282242cdb",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "668cc906-c8c4-4395-a1a2-885f329d05a4"
        },
        "item": {
          "id": "d4851d44-6d07-4be8-9824-9d7b47f4b7fa",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6545a29c-1581-4b6c-9b2a-49b8ad6bf90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94a5fa1-aef4-46ba-a269-cd01ea03baa9",
        "cursor": {
          "ref": "6a94b2d3-5e2c-47df-a056-91bb12b96f9c",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4c96f7e8-c1d2-427f-86ba-092e50b4116a"
        },
        "item": {
          "id": "c94a5fa1-aef4-46ba-a269-cd01ea03baa9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "367b0697-9b71-4ddb-a9d6-ff90b2d80d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8d3e94-44ff-44ec-9b93-b66bffcf375a",
        "cursor": {
          "ref": "2c3b564d-8f1a-4dc2-857d-68de5392ea3f",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b92694db-d7eb-4160-afe7-3566090150c9"
        },
        "item": {
          "id": "be8d3e94-44ff-44ec-9b93-b66bffcf375a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1cc6cd3e-046f-4cc3-9101-c56cf0b04bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a8cdaf-562a-434d-add8-fc96f40826e7",
        "cursor": {
          "ref": "2c9e646a-e7d9-4850-a85e-7522c30dea4e",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ee81fd48-0bee-4999-8da9-6d580a5e5310"
        },
        "item": {
          "id": "70a8cdaf-562a-434d-add8-fc96f40826e7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "eb91d548-5ca0-4ff5-99d8-e77b17666e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3b8b64-5c24-432a-beb0-50018bbbd842",
        "cursor": {
          "ref": "57ef0762-c1ae-483a-8e81-c4381dade14c",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d7a5b4d3-f958-44ea-b905-070af1efdcc5"
        },
        "item": {
          "id": "ed3b8b64-5c24-432a-beb0-50018bbbd842",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ac66163b-8869-4191-8879-e6743ec1b075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f9caa1-49eb-463f-9386-a524de436c17",
        "cursor": {
          "ref": "7dde607c-9f5c-42fb-b7f8-19d7d048e395",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "935acac6-4198-4f20-a820-94268af08da4"
        },
        "item": {
          "id": "17f9caa1-49eb-463f-9386-a524de436c17",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "95e76ceb-5b6b-4563-949c-955b9437edb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9ec338-38a4-4670-8ce4-f5d4f9534b14",
        "cursor": {
          "ref": "17112aab-1a16-459b-aee5-b5613ca041b1",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9afa1df4-2a23-4c3a-8ef2-22f3b80ba85f"
        },
        "item": {
          "id": "db9ec338-38a4-4670-8ce4-f5d4f9534b14",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "da666805-c4c8-4693-912d-32f2b9d8567a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43509c9-7fb2-4c30-a372-71cf86bdbc71",
        "cursor": {
          "ref": "addb5061-5384-4461-a0dc-807a1a622525",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "51884db0-2226-44c0-899e-2e17654ad546"
        },
        "item": {
          "id": "f43509c9-7fb2-4c30-a372-71cf86bdbc71",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b4a171b5-7997-46db-b56c-2cf24a389ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7003d6f6-9d90-440c-a9e0-71ef2d2142cd",
        "cursor": {
          "ref": "3a19e3b9-8ec6-42c4-8e2e-307634d19186",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2d27a302-a2da-4b3a-9e8a-45f300de5160"
        },
        "item": {
          "id": "7003d6f6-9d90-440c-a9e0-71ef2d2142cd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "eb1706a2-f4d9-47f9-be8f-6bd64e9dc6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4bb3b7-479b-4dd1-9c18-cf6e5a59e828",
        "cursor": {
          "ref": "ddf1213a-e8ee-4842-8d51-b09579a3e9f2",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b4fcc734-bf93-491c-a805-b1f281787557"
        },
        "item": {
          "id": "6c4bb3b7-479b-4dd1-9c18-cf6e5a59e828",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "57062172-9ffb-4617-b1cc-21c56ab5d46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439c939f-b122-48ca-a04d-00884747d335",
        "cursor": {
          "ref": "a0d02c07-a2c0-4021-a7aa-1034a4beef14",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7a3f26bf-051e-49f4-b377-3c8cb8516cc9"
        },
        "item": {
          "id": "439c939f-b122-48ca-a04d-00884747d335",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "af8adf04-ca7e-476d-a684-9e9fccc21f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62ee89a-e695-43f1-8623-3f6715a36bed",
        "cursor": {
          "ref": "53e6f9f5-f723-4d09-a3aa-001c38706fa2",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "52bacf44-b33e-4a32-acca-1f234f61a953"
        },
        "item": {
          "id": "b62ee89a-e695-43f1-8623-3f6715a36bed",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "69f9c3f6-1b4c-431b-8214-25f125b112fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ae0a87-e24a-4fc0-b628-3c29da0b25f2",
        "cursor": {
          "ref": "7bdd4720-4511-47ed-99a7-710ec0b0ab23",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0623a2dd-cde2-43a1-9270-aa275e22a572"
        },
        "item": {
          "id": "d1ae0a87-e24a-4fc0-b628-3c29da0b25f2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "416dc6e6-61d9-4c3a-b4a5-30a4a4e46ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a9dad7-b6f1-4eea-9966-8b79fc73ab01",
        "cursor": {
          "ref": "4ec3f827-0151-4e90-b284-34956a8dde3c",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "01f3e471-0f9e-4565-b659-3bbe7cb89686"
        },
        "item": {
          "id": "36a9dad7-b6f1-4eea-9966-8b79fc73ab01",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "63c222a2-00ff-413a-a265-99aeee13d54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3025c4-6924-408e-83a7-7a682acb2e19",
        "cursor": {
          "ref": "cad2ebca-6c44-4f19-b17b-827f5833e7cb",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "db07d013-bb92-4524-b983-cd884d04734e"
        },
        "item": {
          "id": "4b3025c4-6924-408e-83a7-7a682acb2e19",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "102dd4af-f97e-4142-a04d-2d46847bd8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbb855f-911a-4219-b520-5a476383543f",
        "cursor": {
          "ref": "db5bb860-79f3-422d-9abc-6cb85bfc2b9e",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "799c4bcf-963a-4bea-a59b-073d7a98c414"
        },
        "item": {
          "id": "cbbb855f-911a-4219-b520-5a476383543f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fc71014f-fcd7-47e6-9e9f-9d26d5e2aab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d5cf7a-632f-42ee-aab7-15db29901851",
        "cursor": {
          "ref": "7eec68bb-7e84-4393-b34f-ca6762538047",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2dd67e65-d13e-413b-be5b-81e246a98148"
        },
        "item": {
          "id": "d7d5cf7a-632f-42ee-aab7-15db29901851",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f3d2b8f5-17e9-40f0-835e-609044150638",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 538,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85246c45-a5d3-4a9e-a68d-31e932e66179",
        "cursor": {
          "ref": "96c7cb75-d3dc-48ec-84bf-196e3e78551f",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b0a9003c-f67e-47a5-abc9-60faff198a2a"
        },
        "item": {
          "id": "85246c45-a5d3-4a9e-a68d-31e932e66179",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "39ae133e-2379-4eb3-960e-dee96d219954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893a0fb3-4fb5-498b-a2d8-4d5629278801",
        "cursor": {
          "ref": "2a9b638e-3c8d-40e6-9497-9bdbcba54e32",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "070866f7-8146-4a29-8860-150d103f1355"
        },
        "item": {
          "id": "893a0fb3-4fb5-498b-a2d8-4d5629278801",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2ff6f18c-647c-4d29-b68a-76f886c60e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213e4af5-fb2c-4863-92b7-5e7bb044daf3",
        "cursor": {
          "ref": "ee1b7ef6-5348-4ef9-a2d7-1f2f6bd3d39e",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "98c3577c-4028-4386-b1f2-352521ef0b04"
        },
        "item": {
          "id": "213e4af5-fb2c-4863-92b7-5e7bb044daf3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "58e938a0-d291-4b4d-b15f-0ba26bb4093f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c57331-7324-44a4-b9ba-ee719f273a9e",
        "cursor": {
          "ref": "a85e43d9-4a5d-470b-970d-dc48b97fb85c",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6c9698a4-d794-43bc-8362-f69ce2f21c2a"
        },
        "item": {
          "id": "72c57331-7324-44a4-b9ba-ee719f273a9e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b862baf5-b44a-4502-944b-b6d34d869015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25f7680-df3a-4e9a-a50f-753acfdf9b4d",
        "cursor": {
          "ref": "2d678b4f-3bd9-45a6-a245-e1ca0a45ea22",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e17d9894-7114-4d2d-95dd-0dce1b8ce901"
        },
        "item": {
          "id": "b25f7680-df3a-4e9a-a50f-753acfdf9b4d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ae21184d-28c3-41ee-8002-38ff53dde1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4c645e-8d24-4e8a-9259-172796582467",
        "cursor": {
          "ref": "859e7432-cb8d-4138-9a8e-9e451e572987",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2f29c94d-d4f0-4c61-be6b-2869776f1809"
        },
        "item": {
          "id": "2c4c645e-8d24-4e8a-9259-172796582467",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f1399873-453c-42e1-8310-a6e61e171850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb076d1-87b7-4351-a30e-1f43fa20b693",
        "cursor": {
          "ref": "cce6d8e9-dc9e-47cc-8912-ab10babcda68",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "34fe3a97-51ca-4d3c-aa04-7dfde8fb7276"
        },
        "item": {
          "id": "9bb076d1-87b7-4351-a30e-1f43fa20b693",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2e2ab297-fe34-41e6-ac91-00281a7ad603",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 519,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2472dd98-8ee2-4450-981c-8ae16e7a8d9a",
        "cursor": {
          "ref": "22adbd6f-00bb-4139-856f-df88a45b20a0",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3f38407c-8d39-43d9-9f4d-503b71230c4b"
        },
        "item": {
          "id": "2472dd98-8ee2-4450-981c-8ae16e7a8d9a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a0012b2b-8fa2-4e9d-96b8-97e87347bade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d7806a-d2f8-40ef-88ae-dd7264fc2cc9",
        "cursor": {
          "ref": "5fa699ee-37d6-4280-a128-dcab6127081c",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d1b944bb-251c-4023-ab34-c08d8754036b"
        },
        "item": {
          "id": "d0d7806a-d2f8-40ef-88ae-dd7264fc2cc9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2ce0d8e3-bc74-4748-b8fd-3ed479c27cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842d3d1d-bceb-4257-ae0a-eca2c7651ad3",
        "cursor": {
          "ref": "5d680aa5-5521-445f-beaf-39d48e530baa",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "73528efe-aa60-441b-8e39-685b56bb8b94"
        },
        "item": {
          "id": "842d3d1d-bceb-4257-ae0a-eca2c7651ad3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "dc24f013-c04b-444a-b467-e181ebe0f245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc7fde5-ab75-4514-ae2a-cc4687ee0a9b",
        "cursor": {
          "ref": "38933f39-9ce2-4eec-9bb1-8a8c978cdace",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "eb7e609e-f221-41ac-b9c2-d87db9a098aa"
        },
        "item": {
          "id": "ffc7fde5-ab75-4514-ae2a-cc4687ee0a9b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9b58013e-953b-4006-a5ea-5487e9887e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2e81a2-b420-4b70-8f4b-66f4b490268f",
        "cursor": {
          "ref": "604a9799-a077-4529-8902-b741d421a2db",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8d23ab1c-74f0-4f8c-a538-be07d44a044a"
        },
        "item": {
          "id": "9f2e81a2-b420-4b70-8f4b-66f4b490268f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7686d753-9fad-48c8-b046-68220cda25f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0164d369-9479-4455-bea8-c4b0aaaad786",
        "cursor": {
          "ref": "00e0f26d-299a-4cd0-b66d-dab4ad5cf553",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "89c3926f-031c-4e8e-9acd-b3503e895ac7"
        },
        "item": {
          "id": "0164d369-9479-4455-bea8-c4b0aaaad786",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "48ad411a-b775-4dbf-acd5-ab8e7db7b503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54267c6-872d-4eab-92b0-53e1d13cd95a",
        "cursor": {
          "ref": "37c5c926-b9c0-497e-b217-416768ee8ebd",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b66d528d-2aa9-41d0-b1a5-f7e17a825035"
        },
        "item": {
          "id": "e54267c6-872d-4eab-92b0-53e1d13cd95a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b222b09c-af4b-434a-b4d0-d50139d1c2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707d10f3-5a6c-478d-863f-81c58122e118",
        "cursor": {
          "ref": "f7e8c8e5-625c-4773-8116-c9105b609e57",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "efb7c6cb-bab1-46c0-bf5a-5a0d9d9608a9"
        },
        "item": {
          "id": "707d10f3-5a6c-478d-863f-81c58122e118",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7737374b-bec4-41a4-8455-ed140fcddce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485da5c0-73f3-44d5-81b3-b68c45469fc4",
        "cursor": {
          "ref": "b71415f1-1aaa-4131-bb28-5ab0c17b2017",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "116d1bc1-b912-4682-94e4-0bcc6f511bec"
        },
        "item": {
          "id": "485da5c0-73f3-44d5-81b3-b68c45469fc4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "00948847-9cf0-4b47-af54-01cfef490a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c9491c-41e8-4f93-b9c8-648c99c8b2b4",
        "cursor": {
          "ref": "91db93ae-1b31-40aa-bfb7-069fa39a2802",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "70478a85-23f5-4ebc-b97c-01bfb7902598"
        },
        "item": {
          "id": "c9c9491c-41e8-4f93-b9c8-648c99c8b2b4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f47597d7-df7f-4f7a-8efe-32261bf2e2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08609af0-bb2d-4e91-83c4-bffc00a64f87",
        "cursor": {
          "ref": "fce427bf-c584-4c04-aa22-9bae8f9c1f0f",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d0f5ae64-b549-4a7f-ae86-f84e8daadb03"
        },
        "item": {
          "id": "08609af0-bb2d-4e91-83c4-bffc00a64f87",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9e2fb452-9cc4-4c3a-9c6f-03a39e7d5849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7820c8-1a0a-428d-8018-b39fe2af8d0f",
        "cursor": {
          "ref": "a35a0b9b-5bbc-4dfc-9c04-7ddaa6457de2",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7f9143fc-75b7-4e19-87e9-4810b2706da5"
        },
        "item": {
          "id": "4f7820c8-1a0a-428d-8018-b39fe2af8d0f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "caeb2962-1810-4f08-a019-dc48e3e7592e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883f8e2d-0f01-44d6-b902-f0b694f6bc9d",
        "cursor": {
          "ref": "b1ce5f1e-b6bf-4e03-9ac2-6b24dd430549",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "623545fb-f5d9-4eca-b2ce-c019a4d75b05"
        },
        "item": {
          "id": "883f8e2d-0f01-44d6-b902-f0b694f6bc9d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "58da354e-ac21-41db-9748-f3ffd25f3b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d24e02-bcf3-4c37-898b-a1cd05252590",
        "cursor": {
          "ref": "dc5b361d-842a-42f0-a140-cb7b664b219d",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4d4fdf15-970d-4d32-a663-9fe7c46011cb"
        },
        "item": {
          "id": "c1d24e02-bcf3-4c37-898b-a1cd05252590",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a64c777d-aa7f-4dea-8b3c-6a6d03b06c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052dab9f-630f-4e48-b436-8ea4625c1593",
        "cursor": {
          "ref": "fe55921a-cffa-4ecb-8b9d-20f931537ef6",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4199d376-fc46-468f-9e87-118e6e085f45"
        },
        "item": {
          "id": "052dab9f-630f-4e48-b436-8ea4625c1593",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2777bc07-23e7-4ac9-a5fe-aabb537cb2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabf830c-6f7e-4248-b38c-2757bae1d628",
        "cursor": {
          "ref": "1a0344b6-956b-4672-b856-2c0489d834a5",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ef5c4ab2-8bb3-4bf9-aca1-1b79998bd394"
        },
        "item": {
          "id": "eabf830c-6f7e-4248-b38c-2757bae1d628",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "37e1c6dc-aff8-48ab-9d4c-647293fa29a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c754a0-00f8-40e4-b8c7-e3396e12277a",
        "cursor": {
          "ref": "50a0e33d-4dbb-409c-8363-dc2c3b6add1e",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6c2e5775-e91e-4da4-b263-c397381b516b"
        },
        "item": {
          "id": "93c754a0-00f8-40e4-b8c7-e3396e12277a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "20f19e62-5b12-4495-aab1-61e9138761f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535620b5-0a48-496d-87d5-1e47e6133a0e",
        "cursor": {
          "ref": "d16b0208-06d6-4ac6-960f-f8ce78bb0c4d",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "562fc138-f423-40be-943c-ad593063eda2"
        },
        "item": {
          "id": "535620b5-0a48-496d-87d5-1e47e6133a0e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c7b45711-d19a-4fe3-a6e3-a02d6cb00636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fab047a-d0ff-48b3-86b5-b1f3ad21e72e",
        "cursor": {
          "ref": "d635083c-93f4-46f9-b2a3-a95e7a5e6a1f",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0bce547c-2bd5-4b5f-bbbf-5f5f6aa61e8a"
        },
        "item": {
          "id": "6fab047a-d0ff-48b3-86b5-b1f3ad21e72e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8391330f-c198-42e6-98ab-714399051f03",
          "status": "Created",
          "code": 201,
          "responseTime": 2013,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "d57cc44f-a06f-4d21-a63d-c2da9cd53a61",
        "cursor": {
          "ref": "1dbde334-ff74-4823-afa0-bd7770a8dc60",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ed1a7837-142d-45cc-a416-95e76d72eefa"
        },
        "item": {
          "id": "d57cc44f-a06f-4d21-a63d-c2da9cd53a61",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5947909f-47c4-4b9c-b22e-0ab87fafd705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d559c57-4043-4117-ba06-02f2d7698a59",
        "cursor": {
          "ref": "06fc45b3-816f-47b7-870f-29b061aeea37",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8b2a0a96-b655-4faf-9cb0-7b20744826ea"
        },
        "item": {
          "id": "1d559c57-4043-4117-ba06-02f2d7698a59",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "15685b5c-9b5e-4d24-a9a3-e4ec621b8d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ce23d8-d8b3-49e7-8d68-820ba0daafd5",
        "cursor": {
          "ref": "5e789319-80b6-44d7-8a41-a8e35365cc08",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3df0d20b-e9a9-4dae-aa54-a71d1e28df68"
        },
        "item": {
          "id": "b2ce23d8-d8b3-49e7-8d68-820ba0daafd5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0a2d1a66-1ffe-46ba-9172-07730883acbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97eeead9-13fd-4d39-84cc-5c1b8d19f4e4",
        "cursor": {
          "ref": "d87a35d4-db0b-428f-ae4f-64702df613da",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2cc76d8a-0f61-40a9-b03d-a9a74168e717"
        },
        "item": {
          "id": "97eeead9-13fd-4d39-84cc-5c1b8d19f4e4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "41b5e946-b3cd-4fdf-b9d1-b864100695d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7082e9a-4076-414b-a517-99f4e2b6bcdd",
        "cursor": {
          "ref": "cf2d0444-7a5f-490e-876b-064df8f97980",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9527df74-4c14-4312-9769-eab2fb2ccb8f"
        },
        "item": {
          "id": "e7082e9a-4076-414b-a517-99f4e2b6bcdd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "00107414-a0eb-45f0-b24a-c3d7026bf838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304b5edd-96dc-479d-9600-5e976946c352",
        "cursor": {
          "ref": "3310dea9-cec1-473e-951a-fc521500af0a",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a313e6bd-1a46-44b6-b4c7-0a3a36fc8ea0"
        },
        "item": {
          "id": "304b5edd-96dc-479d-9600-5e976946c352",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "cd8a2eaf-0946-4ee2-9f0a-3ec8fff84306",
          "status": "Created",
          "code": 201,
          "responseTime": 1917,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "3f19d765-3ba7-4ea5-88e4-8cde0ec44a2f",
        "cursor": {
          "ref": "be2527ee-96fa-4911-adb6-016159c1d2f5",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "00f97ec5-4e5f-4bc6-8477-062ebcf67226"
        },
        "item": {
          "id": "3f19d765-3ba7-4ea5-88e4-8cde0ec44a2f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b184faad-de4d-49de-8d59-44a627ae01a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5538155a-df35-40a8-b3d0-427d483f7bc1",
        "cursor": {
          "ref": "1b5bcf99-530e-4571-be2e-a772b6fdbb0e",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "314811b3-3830-4c00-b191-0cebf54a4398"
        },
        "item": {
          "id": "5538155a-df35-40a8-b3d0-427d483f7bc1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "da24d778-69d4-4e20-8929-8dda5f29508a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3826fb25-3b86-4f6c-bdc5-948794bb43e3",
        "cursor": {
          "ref": "5d64d844-2257-406a-87d8-c57a651d3a75",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fcc7427f-240e-4455-a433-7dd8f4119d58"
        },
        "item": {
          "id": "3826fb25-3b86-4f6c-bdc5-948794bb43e3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d0b5b433-6607-4903-a520-7d072c9e749a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa933914-1638-44de-90fb-6bbfd8dea6bf",
        "cursor": {
          "ref": "8f301b5d-a19c-4ffb-bf58-0783690e4e19",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8a849a13-a0b5-45fb-b6bd-dc6c4d288edb"
        },
        "item": {
          "id": "aa933914-1638-44de-90fb-6bbfd8dea6bf",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "48b53bd5-6d46-4e5e-88e9-df2754602382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f992efa0-235a-4a1b-9cc7-3064eb1b4879",
        "cursor": {
          "ref": "6b41f8f6-da3f-40a2-bd49-9eb98f286a7d",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3e0b6e90-ce23-4429-8d40-9ff4857b97a3"
        },
        "item": {
          "id": "f992efa0-235a-4a1b-9cc7-3064eb1b4879",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b0f61e3f-5655-4467-bccd-3a2d18b90973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df07c3f7-ef5c-401e-8e01-73b06719d34b",
        "cursor": {
          "ref": "3c99ec94-3646-40c7-a5d2-73fddbe759a3",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a292cc06-3d7d-4c0a-afb6-662c68247f79"
        },
        "item": {
          "id": "df07c3f7-ef5c-401e-8e01-73b06719d34b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2982742f-c7c2-475a-a240-ddd5daa0904c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bf1d7d-e109-4967-bd1f-2feba213aef8",
        "cursor": {
          "ref": "fefb9d39-4fbc-4c6a-b60e-e84c0751b5e9",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5ff2acd0-69d4-4c86-bfd8-3bf3ed4fd753"
        },
        "item": {
          "id": "84bf1d7d-e109-4967-bd1f-2feba213aef8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d997f620-ac05-45f6-a1aa-f63b144dc95c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51dfe75a-8d20-452f-abe0-98885cf2ee12",
        "cursor": {
          "ref": "9dbeda37-d32d-41b7-b169-2ec12f7e9963",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "18e2c539-0808-4689-9f22-af22d9826393"
        },
        "item": {
          "id": "51dfe75a-8d20-452f-abe0-98885cf2ee12",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "658990d5-cf8e-4c7d-9d0c-e2cf154b3f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f06316-d6e3-4f2f-a1df-7e753d6c1f71",
        "cursor": {
          "ref": "55d0174a-b6d0-4ab0-932c-778335731cec",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fc6bda19-6c1c-4854-ad06-c8efac897574"
        },
        "item": {
          "id": "49f06316-d6e3-4f2f-a1df-7e753d6c1f71",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5ae6c7e2-c01f-4377-a3ad-3b3fcad21ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d154e1b6-1200-4a86-82fb-30bd8538ef0e",
        "cursor": {
          "ref": "4e24d167-05ca-4323-bc69-002bed4045cf",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8954e5c9-6c15-47f0-b7dc-16f63af2840a"
        },
        "item": {
          "id": "d154e1b6-1200-4a86-82fb-30bd8538ef0e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "db7bed97-8ef8-4924-9744-166573b8ff85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64aea03-28e7-4d45-acf8-9da53bca97ab",
        "cursor": {
          "ref": "89bc10ac-e535-4f70-9e47-534afd7249c7",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "97634b7e-e051-49a3-94ec-ee321b4c1201"
        },
        "item": {
          "id": "e64aea03-28e7-4d45-acf8-9da53bca97ab",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9482cd6c-2e3b-4b4d-8c5b-b6929caa0ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828838ed-cb6f-4a5c-96a9-e5ab4e8acc9f",
        "cursor": {
          "ref": "aa0f7cb6-13df-4695-b3be-7e63524bb16b",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1639c194-b187-4997-8abc-c2605d663bec"
        },
        "item": {
          "id": "828838ed-cb6f-4a5c-96a9-e5ab4e8acc9f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "17975fc5-3910-4a4f-bbba-0efddb6e70ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198a1c4d-8953-4f08-9f61-5d7cb8b16e78",
        "cursor": {
          "ref": "d6e9edc9-2408-4aab-b2a0-9df5a0a29761",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "afefd72d-e3c0-44ee-a8d1-28140ed9a060"
        },
        "item": {
          "id": "198a1c4d-8953-4f08-9f61-5d7cb8b16e78",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "29aae1b6-de42-43eb-927b-dcfff3a4a13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15da8675-1058-443a-9ebf-451df85b708a",
        "cursor": {
          "ref": "c5c6b34b-f799-4353-8390-95a57ca75b4f",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "599aa439-ea71-4548-9151-f8273e3fe46d"
        },
        "item": {
          "id": "15da8675-1058-443a-9ebf-451df85b708a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f036054d-c787-4070-af84-0ab20b2d9d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfdfd87-b8af-44e6-8bbb-c00d7cd2dbae",
        "cursor": {
          "ref": "8f19d4bb-4e21-426f-b735-dbc096813e14",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "52e7fe4e-a736-4140-b3f3-55503812115c"
        },
        "item": {
          "id": "7dfdfd87-b8af-44e6-8bbb-c00d7cd2dbae",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6f2d28d0-72fe-40db-9e02-d3c32c4c4d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60942141-5114-4907-9655-0c035a46c101",
        "cursor": {
          "ref": "7f4cdb7e-502b-48a3-9a0c-602ea3076011",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5aa83d4b-c493-47c8-8d30-260b7760ceb4"
        },
        "item": {
          "id": "60942141-5114-4907-9655-0c035a46c101",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "194c9721-987a-44fe-acb1-331d066638fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabb57b6-3f4a-43f3-999a-44f970cb6a15",
        "cursor": {
          "ref": "c90e11e7-acf1-46bc-a45f-e917abc919d8",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d3c8ad5c-7c99-4f15-a1d2-01a3255470e8"
        },
        "item": {
          "id": "fabb57b6-3f4a-43f3-999a-44f970cb6a15",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e2b57603-af87-4a4b-a9a3-43939fad2676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c1118f-a28b-438d-bfef-8c27787b6308",
        "cursor": {
          "ref": "338c321f-a392-4de5-93c5-6bab8c1824ca",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "433520f0-640f-48ba-aa89-2194ee51ae1a"
        },
        "item": {
          "id": "06c1118f-a28b-438d-bfef-8c27787b6308",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1361135c-b2b7-4207-b669-ec252273f520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49ea49f-ef6c-4f7c-bf7a-08693e25dec1",
        "cursor": {
          "ref": "5d7db226-2017-4546-853a-72774045c680",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ecb43b33-633d-4209-8f5f-bda0ea32a642"
        },
        "item": {
          "id": "c49ea49f-ef6c-4f7c-bf7a-08693e25dec1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8b9f1889-f2ee-4426-ba21-9878d7c87a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b23c926-4b77-47db-9695-9c33d9b47f70",
        "cursor": {
          "ref": "3c3ea31e-364b-47b5-a620-9d93cb6fe4a6",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c2c057c0-498a-4c3e-825e-53e8c8540589"
        },
        "item": {
          "id": "7b23c926-4b77-47db-9695-9c33d9b47f70",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "aed64a16-2255-47c3-8c8c-b7fa83dcf511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77ce010-d9f3-4b68-a40b-62cdea626bb7",
        "cursor": {
          "ref": "fd982147-9be5-4011-8dbd-e2395a5d7585",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "52016974-1d07-47da-a8ec-a2ca74951d04"
        },
        "item": {
          "id": "c77ce010-d9f3-4b68-a40b-62cdea626bb7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4a10acc5-c850-4797-92d4-bdac5ce94d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247623be-f0be-4803-8c05-6f8457ddcd7e",
        "cursor": {
          "ref": "0bcd1304-2a47-4a8f-8a27-238fe076be24",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7be217c0-f7db-4dce-b7b5-5d7335017e7a"
        },
        "item": {
          "id": "247623be-f0be-4803-8c05-6f8457ddcd7e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7d492342-4a58-4464-b441-8abc36d27269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bba3d6-4695-4a2a-abaa-c28978019f49",
        "cursor": {
          "ref": "7d44d2a2-4c2f-4872-81b4-e8fdc5434635",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "629857e9-5073-498e-a4ab-b0df1d66714c"
        },
        "item": {
          "id": "c2bba3d6-4695-4a2a-abaa-c28978019f49",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "be3f5556-cddb-4abf-8226-1d6068d96403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ad8819-0419-469b-b894-f6cdc1169cae",
        "cursor": {
          "ref": "e0b3a3ff-d000-4aa9-ace7-c6e6ad2b1c10",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "858dcc6b-bb26-41fb-b06a-a51fc209bfff"
        },
        "item": {
          "id": "28ad8819-0419-469b-b894-f6cdc1169cae",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c8c6407b-8ac0-4dae-8ff0-b8188caa21a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1053,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e709be-bf88-4b3f-8d11-f9f57bb4df8c",
        "cursor": {
          "ref": "020a24c4-d64a-465c-98e8-f58c0879785d",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "becd39b5-1504-4c5d-afed-27a7df3a7f4d"
        },
        "item": {
          "id": "63e709be-bf88-4b3f-8d11-f9f57bb4df8c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "651a075b-15ba-4b77-bc2c-50b977e08f89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca79c8a2-da64-4ff1-84a6-7fbb71f6aecc",
        "cursor": {
          "ref": "db8f1632-a311-426a-a25b-bb6f5ba1a07c",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "008736a5-af86-4181-9a4f-09ff33a3eda2"
        },
        "item": {
          "id": "ca79c8a2-da64-4ff1-84a6-7fbb71f6aecc",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "36ba59aa-fdd0-402c-b9d3-2dd35319ea5b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1494,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11ec740-3646-43df-bb94-6f3da558f19e",
        "cursor": {
          "ref": "7cb5eb18-7610-4929-bd78-547927b6a520",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2205f78e-2f74-42bd-b9b6-da0cf6e50767"
        },
        "item": {
          "id": "a11ec740-3646-43df-bb94-6f3da558f19e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1f2eefa6-e098-4a02-bb49-814ed5066dd8",
          "status": "Created",
          "code": 201,
          "responseTime": 6729,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb462529-947e-416f-9249-c21779c0fb99",
        "cursor": {
          "ref": "7edd1c2e-d29f-4577-ae8d-dda773273c22",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "13b34d4c-bfc8-4297-a558-dea3e62dfa76"
        },
        "item": {
          "id": "cb462529-947e-416f-9249-c21779c0fb99",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "b0e98767-a05a-4cdd-85f9-fef306917db9",
          "status": "Created",
          "code": 201,
          "responseTime": 2292,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8174613-04cf-44c2-ae10-c78953a8bc75",
        "cursor": {
          "ref": "1588f3bc-7aa5-432c-ae11-bc6859ce4f9a",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9985a6c8-7cbd-4eb0-a618-ef84c9534b10"
        },
        "item": {
          "id": "f8174613-04cf-44c2-ae10-c78953a8bc75",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1c9decf2-fbdb-4e32-86c8-d5c72ed97c69",
          "status": "Created",
          "code": 201,
          "responseTime": 1932,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ffe211-b0a6-43d0-ad54-d05b42267118",
        "cursor": {
          "ref": "e340b0b9-f05e-4000-be57-4597210418cb",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "51691683-2373-4003-9a21-670813c8d313"
        },
        "item": {
          "id": "98ffe211-b0a6-43d0-ad54-d05b42267118",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b25b3575-1ab0-428c-bdef-1db7bf97c603",
          "status": "Created",
          "code": 201,
          "responseTime": 2208,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bff62a3-c706-4d9a-8e04-1d2eba157447",
        "cursor": {
          "ref": "be44cdff-b64c-4e88-86b4-55ec0c4e4d15",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c828b520-89dd-48f8-a1a1-b2d4c12f37a9"
        },
        "item": {
          "id": "2bff62a3-c706-4d9a-8e04-1d2eba157447",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d0d84c9a-eee8-4b51-97a8-1b4895ad9abb",
          "status": "Created",
          "code": 201,
          "responseTime": 5296,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25c04d5-2494-439d-9ab0-aa12f31a17c2",
        "cursor": {
          "ref": "49f45343-f07e-4060-8b23-0f26cbc55bf4",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dc543f72-89c4-477d-b40b-80798c08b23c"
        },
        "item": {
          "id": "e25c04d5-2494-439d-9ab0-aa12f31a17c2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d586b7f7-1e90-4c20-b5ee-9d2f20b4f372",
          "status": "Created",
          "code": 201,
          "responseTime": 2747,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa42c5a5-c948-4ec4-aa1b-e556f4932838",
        "cursor": {
          "ref": "b1ea5856-ec8c-4355-8252-b66073c2c031",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "61e1fe15-52aa-44e3-b034-6ff9687fba68"
        },
        "item": {
          "id": "aa42c5a5-c948-4ec4-aa1b-e556f4932838",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ccce0019-b952-431e-8b79-cf559f5f1269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa42c5a5-c948-4ec4-aa1b-e556f4932838",
        "cursor": {
          "ref": "b1ea5856-ec8c-4355-8252-b66073c2c031",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "61e1fe15-52aa-44e3-b034-6ff9687fba68"
        },
        "item": {
          "id": "aa42c5a5-c948-4ec4-aa1b-e556f4932838",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ccce0019-b952-431e-8b79-cf559f5f1269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606c6bf9-ea9d-494a-9967-595968bc14c7",
        "cursor": {
          "ref": "d2d0653e-f566-4162-a7d8-d746e42d3350",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9a8c8902-6409-402d-85f5-dac5c5de15c3"
        },
        "item": {
          "id": "606c6bf9-ea9d-494a-9967-595968bc14c7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "54263db6-cd0b-40e6-84a4-31d87aeeedcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2381e5bb-d9de-45da-b2ef-b3b8e9a0f052",
        "cursor": {
          "ref": "623f428f-5402-4f69-9618-c552b85aa482",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "41806a0e-984a-4639-be7f-16aec80c38b5"
        },
        "item": {
          "id": "2381e5bb-d9de-45da-b2ef-b3b8e9a0f052",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7d4df6e5-818c-4916-b69b-781bbb9dc07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d29d99-7445-4efd-96d5-22acfb1e1d9c",
        "cursor": {
          "ref": "602974e8-258e-4820-904f-c410af694549",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2407aa7f-daac-4394-abfe-1c85b6e6e950"
        },
        "item": {
          "id": "a3d29d99-7445-4efd-96d5-22acfb1e1d9c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1a070724-7892-41a0-8c75-91dcb419ed31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea70186b-b1cc-4d2d-887d-e99afac5631b",
        "cursor": {
          "ref": "ca5e725e-8da6-4c26-8593-f8ef257afab4",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cceaf4cb-eca6-4c6b-adec-1016f73cb3a8"
        },
        "item": {
          "id": "ea70186b-b1cc-4d2d-887d-e99afac5631b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "63f1ec34-2354-4539-b74b-f0129b699317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7affc2b6-47a6-4ec1-8b99-87909b92033e",
        "cursor": {
          "ref": "49cfad4d-6d90-4362-913c-a3bb5ebab2d6",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f8215ab4-6fff-4cbd-8d49-fa2c78e3b9c9"
        },
        "item": {
          "id": "7affc2b6-47a6-4ec1-8b99-87909b92033e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c7de47b4-51e2-4b20-86ab-c0a27c424c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e0dbb6-e5e4-4fe3-9b36-8d69126f7e80",
        "cursor": {
          "ref": "c90be99d-4b46-40b0-934a-7879f78cbbd6",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4ed47e0b-8564-4536-8dda-d0a10fff6cd8"
        },
        "item": {
          "id": "f0e0dbb6-e5e4-4fe3-9b36-8d69126f7e80",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "84e4d74b-4cbe-43b2-9460-e8ced06d2cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9236352e-7e91-4ba1-a865-caaec9998143",
        "cursor": {
          "ref": "fdcc13eb-0e50-4294-84a5-047ae145daf9",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8bf207ba-9b28-4a3a-80ce-25e7515095a7"
        },
        "item": {
          "id": "9236352e-7e91-4ba1-a865-caaec9998143",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "16141612-4aa4-483a-af0a-25cb9e27e54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d2f83d-8f67-496a-ac0b-c9ee3620faa8",
        "cursor": {
          "ref": "4d3226ce-a758-49a4-bfeb-6038c75de826",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "62e50cf1-b230-4bac-af51-2533117371ae"
        },
        "item": {
          "id": "12d2f83d-8f67-496a-ac0b-c9ee3620faa8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4b3729f1-aad4-454c-943c-98b88ead1b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a615e196-0d58-4b81-af84-0db8b1605c25",
        "cursor": {
          "ref": "61fc9cb7-e107-431f-a700-edd053da6f17",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "253cf7be-0094-48bf-a1c3-fb862ea33715"
        },
        "item": {
          "id": "a615e196-0d58-4b81-af84-0db8b1605c25",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d9f4b6cc-0bb0-494a-90cc-f54e3874b4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968f622e-9a63-4bc8-bf19-b3ae3ca064d4",
        "cursor": {
          "ref": "56802624-d1d7-4261-b42f-2be99d9e3666",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a14dd3b1-559d-4d23-a06e-991f174216f9"
        },
        "item": {
          "id": "968f622e-9a63-4bc8-bf19-b3ae3ca064d4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6de19cb0-06a4-4d18-ae04-53d2aee8c527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08ecfd6-8655-44e8-811a-ac1807ea04cc",
        "cursor": {
          "ref": "e7b85582-d04f-4e93-8b76-83e7b0f93c42",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2f88e8dc-9ccd-4987-a651-c62739b248ff"
        },
        "item": {
          "id": "b08ecfd6-8655-44e8-811a-ac1807ea04cc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "70dc5689-35ff-487f-9c17-10d4461b52a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cee7504-8715-4733-b7eb-eea20376b574",
        "cursor": {
          "ref": "cdd11e6f-533d-443a-9f21-48a1b98d1f4e",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e7370edb-aa02-48d9-b225-f543133fc148"
        },
        "item": {
          "id": "5cee7504-8715-4733-b7eb-eea20376b574",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3b3f43e7-0952-45bc-a7a8-08185f85a0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84e0078-451c-408d-8ccc-8f6773d683dc",
        "cursor": {
          "ref": "0137f64f-7bb6-4693-a663-528d308933c5",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "040f678d-7db8-44c3-b8ca-97935c12dbd7"
        },
        "item": {
          "id": "a84e0078-451c-408d-8ccc-8f6773d683dc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fb5e08d6-c4da-4d00-90cd-1479fb79fb96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839702d5-cb20-4af2-a9d1-95f89cb61ba0",
        "cursor": {
          "ref": "2af0d62b-4316-4f9c-9946-fc7652a6c7fe",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "45237413-81ad-4057-92fd-52f8634fc0d4"
        },
        "item": {
          "id": "839702d5-cb20-4af2-a9d1-95f89cb61ba0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "98db1e6f-5231-4891-bde5-c61c84b5e62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c3ab93-c275-439d-a18c-c777a17c9fb4",
        "cursor": {
          "ref": "9d15c543-edad-4a90-8ec5-1d95cee92482",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d4996e15-4fab-49ff-a86a-4543ecacbaa8"
        },
        "item": {
          "id": "89c3ab93-c275-439d-a18c-c777a17c9fb4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "538d6f35-2141-4052-b9c2-b2931982857c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e99a1c9-535c-4be8-bfc8-4bb63986bdf7",
        "cursor": {
          "ref": "abe6f4e9-d630-4265-88a1-b931fce3128f",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "10ec3034-72a9-46c7-b869-9c35dbd874e6"
        },
        "item": {
          "id": "4e99a1c9-535c-4be8-bfc8-4bb63986bdf7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "20faaf69-a49b-4800-9c4b-07e90a60c94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5719b20f-3e5b-4cd1-9bef-656bb1d6aeb2",
        "cursor": {
          "ref": "6e6b060e-9d54-46df-ad20-4de73cd89827",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9f72e04c-6784-4c8c-a032-476e21717892"
        },
        "item": {
          "id": "5719b20f-3e5b-4cd1-9bef-656bb1d6aeb2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "68c5e1df-d1ab-46cd-a58a-58bde05f584d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9260546-6671-4e4a-9738-9823f86e8ec7",
        "cursor": {
          "ref": "73044c92-46f7-4582-8f31-096cf097ab60",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "827c4396-8f2d-475e-959c-18f734fe45ce"
        },
        "item": {
          "id": "e9260546-6671-4e4a-9738-9823f86e8ec7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "57d6c3b4-7557-4c7f-b947-7ab553234624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73674c99-363e-4b3b-9607-95958b80b35f",
        "cursor": {
          "ref": "05d9f223-34aa-4378-99a6-3caccaf9d069",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "02feaf30-ba7e-4e01-a936-f6c9928ffef4"
        },
        "item": {
          "id": "73674c99-363e-4b3b-9607-95958b80b35f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "09f6e064-63af-4c61-84bc-626e96d41adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a27fba-ce26-4efd-8287-e5ccd3853ef6",
        "cursor": {
          "ref": "8a106295-ee23-4224-86a1-92e059d8dee7",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "81f32949-fa96-44fb-8c9a-4eab615c8b8a"
        },
        "item": {
          "id": "96a27fba-ce26-4efd-8287-e5ccd3853ef6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d9a00517-70c2-47c8-a11f-748318d34671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88a1fcd-ee54-4f79-b66f-38058d97d197",
        "cursor": {
          "ref": "326056bd-60a3-4866-9078-101da07dd5dc",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f6c42f1d-576a-4dc6-9298-83a171da43af"
        },
        "item": {
          "id": "c88a1fcd-ee54-4f79-b66f-38058d97d197",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ecbfc519-82b1-49ad-9b04-dd61d7dd1d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff3a56f-9cda-49d5-bd91-70a378c2d759",
        "cursor": {
          "ref": "de392267-fc08-4330-ac8d-b6cf63b43319",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "691b53ca-7e01-4b39-b630-f8fd5d3bc88b"
        },
        "item": {
          "id": "2ff3a56f-9cda-49d5-bd91-70a378c2d759",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2d144a70-b43d-4e4e-afaf-9919fcc8ffcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7c0d3e-bbc4-4e19-baf6-4769ac53befd",
        "cursor": {
          "ref": "abb64504-a816-43e7-ac16-794fadb3554a",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "facd71ec-4bc3-4054-89c1-658e16bc07fb"
        },
        "item": {
          "id": "eb7c0d3e-bbc4-4e19-baf6-4769ac53befd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e10b2fa9-7560-47a9-8aec-d82c05531df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75581f44-61a0-471a-bbd5-d757caae06a6",
        "cursor": {
          "ref": "e5774b5a-e28e-4362-aecf-0c008339a98c",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f69d330a-0110-4046-af3a-fd030edcd82d"
        },
        "item": {
          "id": "75581f44-61a0-471a-bbd5-d757caae06a6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e3da8642-fd3d-47c5-b741-d9055f1b4a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c41e56-43ba-4e09-8d1d-b8af1751f73d",
        "cursor": {
          "ref": "146ef71f-1898-4cfd-ae19-5285230b5585",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "970c8252-d8c2-439f-95aa-d2d194fff4bd"
        },
        "item": {
          "id": "f9c41e56-43ba-4e09-8d1d-b8af1751f73d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "12ba1c57-f370-49f5-9a9a-035261d43cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdfae11-dfad-4c17-b170-d86a599fc8e9",
        "cursor": {
          "ref": "22c7dbe9-103a-4dd1-ac2c-22179458e8ba",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "58417768-da99-435d-93c3-e73b033580c6"
        },
        "item": {
          "id": "9bdfae11-dfad-4c17-b170-d86a599fc8e9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a3f81bbf-ce8e-4b83-b949-e8c55e2d920f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc13066-6cbb-458d-9940-9eecaf9bde8d",
        "cursor": {
          "ref": "400e98f1-373d-497a-bb9b-060e577d28cd",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0b1f3d29-0683-4767-a73d-1c2a21e6a22c"
        },
        "item": {
          "id": "cdc13066-6cbb-458d-9940-9eecaf9bde8d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ac0758ff-6543-4225-bbb0-e65e6b441980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4609a125-0424-4758-bb0a-bb006cae80e0",
        "cursor": {
          "ref": "83bab1a6-7e46-4d01-aba0-95524a67a71e",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "da31b306-2a7e-4f5c-8eeb-231980e2addb"
        },
        "item": {
          "id": "4609a125-0424-4758-bb0a-bb006cae80e0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4135aa58-0b19-4740-b22c-6c40d1027032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70ae1dd-21a8-4424-a24f-1b9e63a668ed",
        "cursor": {
          "ref": "f3d70050-b95b-4ae8-9871-b78e9fa9c49a",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c827d400-4763-4f4a-867a-4d213278f084"
        },
        "item": {
          "id": "d70ae1dd-21a8-4424-a24f-1b9e63a668ed",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f0d37e43-cc51-4586-9a1c-35d22c3976fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269dadcb-b98c-4d39-b374-d0e384293459",
        "cursor": {
          "ref": "bd4ce41c-6ee4-4442-984a-bf205bf47aae",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "cc256042-a450-4e7a-b5ef-fff4c383f8dd"
        },
        "item": {
          "id": "269dadcb-b98c-4d39-b374-d0e384293459",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "34874d69-20fc-4922-a21e-2bc35cd99edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e207b4f-4606-4a1d-957c-8a1f9d739e9a",
        "cursor": {
          "ref": "96a4de5e-d809-4033-8550-b2d058b8a4b1",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0a6a0e17-fff8-41d2-8075-d65c99c56df9"
        },
        "item": {
          "id": "3e207b4f-4606-4a1d-957c-8a1f9d739e9a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7d0e7033-a242-4b20-afa1-8c57ebe2948a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a701ab7d-e699-4a74-9862-9765202f515b",
        "cursor": {
          "ref": "89227d1b-8fb9-4621-afdd-2ba4a9a399ba",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5c00f140-bf3f-4532-9e8d-10b625624a57"
        },
        "item": {
          "id": "a701ab7d-e699-4a74-9862-9765202f515b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8781a117-3c27-4893-bcf9-aea8b2e7ea16",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1bd1476-d037-4798-bb92-c677ea836a91",
        "cursor": {
          "ref": "d3c4ca8e-2c4d-473d-a673-ef73daf1e29a",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "be816937-09de-45c3-9e5a-664f4c049f0e"
        },
        "item": {
          "id": "d1bd1476-d037-4798-bb92-c677ea836a91",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "fa7601e1-48a2-4ebb-a15e-e47d193db741",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 452,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f52057-7722-4a90-a36b-9c2295807618",
        "cursor": {
          "ref": "5e0a70c6-b1ed-40f9-bd71-1506dd4e6b72",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f2d875be-f348-4ff2-8089-a9442279bb1e"
        },
        "item": {
          "id": "29f52057-7722-4a90-a36b-9c2295807618",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0dc71287-3bae-48e8-91bb-1f5b6398ec74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f52057-7722-4a90-a36b-9c2295807618",
        "cursor": {
          "ref": "5e0a70c6-b1ed-40f9-bd71-1506dd4e6b72",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f2d875be-f348-4ff2-8089-a9442279bb1e"
        },
        "item": {
          "id": "29f52057-7722-4a90-a36b-9c2295807618",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0dc71287-3bae-48e8-91bb-1f5b6398ec74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec6e7d4-d7f1-4ec4-a94c-9e6ded129129",
        "cursor": {
          "ref": "b25725be-d589-440f-bee2-6f767eab2822",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3594ad42-c27c-4b7b-9d50-8aad269eadce"
        },
        "item": {
          "id": "5ec6e7d4-d7f1-4ec4-a94c-9e6ded129129",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2517724a-ac90-4a8e-8437-fc3c88a7d842",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 269,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "70067479-ef8f-4f83-a0b2-1b9f70630653",
        "cursor": {
          "ref": "eade1b7d-52f5-4580-a857-6ec1fd7dcc96",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f71360e3-311a-4644-9468-64c15ca2f004"
        },
        "item": {
          "id": "70067479-ef8f-4f83-a0b2-1b9f70630653",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5669634d-2c8f-4fd3-a43d-c3087a1d8a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51372493-eedf-4d2e-afcb-dd9f67950a60",
        "cursor": {
          "ref": "14c0f24c-28af-4854-a822-5aaf12c70c7b",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d9af41e2-6b00-4cff-852f-ae65b14bfb4e"
        },
        "item": {
          "id": "51372493-eedf-4d2e-afcb-dd9f67950a60",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c24d4502-0225-4f25-a6e5-3e722806c8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361db9df-03a3-424c-86cb-2917c207a9d3",
        "cursor": {
          "ref": "9e3b1ad0-87bd-4165-9183-0164c6a8de4a",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "66b18bb6-a144-4ef4-ae50-ad918a10e47e"
        },
        "item": {
          "id": "361db9df-03a3-424c-86cb-2917c207a9d3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "10b08b30-d6c0-473a-b38e-dc1faf12eebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9245d16c-d206-49ef-b9dd-be93a9c56eb5",
        "cursor": {
          "ref": "81f31322-6671-4f9a-82de-8ed9b4f2f3ff",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "440156ae-9dad-494b-9a4b-180d5eef4bb5"
        },
        "item": {
          "id": "9245d16c-d206-49ef-b9dd-be93a9c56eb5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c74e9a75-713b-4dda-97b1-f351e6a226c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b40f8bf-fafd-44b5-9e6f-254b9398d38b",
        "cursor": {
          "ref": "be437950-1d3c-4758-93fd-4bb9f4e9da35",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "44811fc5-db24-487e-aaa7-ae4d8dfb2fc4"
        },
        "item": {
          "id": "8b40f8bf-fafd-44b5-9e6f-254b9398d38b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4bbead82-32e9-4b5e-b7e4-68c948159019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d9bd9a-c9c4-45c3-b5c7-a595078f9b78",
        "cursor": {
          "ref": "c78ca8ef-e1a0-4def-a6b0-afb1b7a02e45",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "57a96b69-9046-4083-83b9-ff1a04e356b4"
        },
        "item": {
          "id": "c2d9bd9a-c9c4-45c3-b5c7-a595078f9b78",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "08b304d4-b12e-4d34-9ef6-68f225e0f8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43682b38-62b2-4b47-821d-1f4a909d04cd",
        "cursor": {
          "ref": "64b777d4-3116-4c1a-a117-2641af8415bd",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "869315ba-b8e9-49ee-9f53-6e5599b874be"
        },
        "item": {
          "id": "43682b38-62b2-4b47-821d-1f4a909d04cd",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c41e7d33-a2ee-4cd6-b864-70e2a314b044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88899484-0063-4472-9561-cf8728ef5b2b",
        "cursor": {
          "ref": "51465b3b-baa8-46e2-8ec4-895e987f0847",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1ad5a0f1-b550-4a9d-808b-1f09eaae5257"
        },
        "item": {
          "id": "88899484-0063-4472-9561-cf8728ef5b2b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "dd127bc7-a817-4231-ad16-c2fc1eafac2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f776e1-5ba4-4e15-b794-a8c8a78f338b",
        "cursor": {
          "ref": "3335be0a-aa1c-48cb-9b37-85f1cbd34275",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a09e6959-a0a9-48e5-89cf-291de69e1dfe"
        },
        "item": {
          "id": "05f776e1-5ba4-4e15-b794-a8c8a78f338b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "21a892ca-bc51-442c-a69f-69b17735e187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ad58a8-a656-45b3-a233-657e730de9d6",
        "cursor": {
          "ref": "94cb4b3c-0484-494b-9efd-ca13ded33e41",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6d972012-0085-4551-a9bf-e44e91724ce5"
        },
        "item": {
          "id": "55ad58a8-a656-45b3-a233-657e730de9d6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "24083ed5-c583-41ab-bd30-6eb75ed4f638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40a8889-0be1-4d3e-9d07-4641dc326428",
        "cursor": {
          "ref": "ff6e104d-ec35-427b-ae22-5a415f863bf0",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "decb63de-49d4-4304-a172-a56c9044c50e"
        },
        "item": {
          "id": "c40a8889-0be1-4d3e-9d07-4641dc326428",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6a101adf-4ba4-4cb0-8859-ca8a76cdd19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ba9221-46ef-43b8-896f-71ac055b42ab",
        "cursor": {
          "ref": "20d8b336-37f8-499f-905d-e533e4df853c",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "15c5cc53-0a70-4821-b7d4-27908308ada5"
        },
        "item": {
          "id": "90ba9221-46ef-43b8-896f-71ac055b42ab",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e2ebdc12-9efd-4029-a9fe-2f125594b309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afced30-4451-4203-8d68-d9412b20b57f",
        "cursor": {
          "ref": "12e73443-293f-4191-ad16-4fdedc099d32",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "129af9bb-d5ed-46fa-b98e-2616205f2c66"
        },
        "item": {
          "id": "2afced30-4451-4203-8d68-d9412b20b57f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "214ea39e-0c38-4813-9fdc-4de019c8039e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1be69f-4c66-4c8d-85cf-ab4b3c5139a8",
        "cursor": {
          "ref": "3d631b9c-6735-4a67-921a-1532ad4f3f98",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4c0a918d-0ace-4d23-a725-cf785a0ee7a9"
        },
        "item": {
          "id": "fe1be69f-4c66-4c8d-85cf-ab4b3c5139a8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d77eab3c-a9bc-4e16-a718-aaf1c681a167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dfd5380-8dcc-41a4-ab99-a5bfe1c1bbd5",
        "cursor": {
          "ref": "086aa0f2-e23f-4e37-9842-794bb0471779",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e919c05b-e60d-4315-884a-5a7b1a35504c"
        },
        "item": {
          "id": "6dfd5380-8dcc-41a4-ab99-a5bfe1c1bbd5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7e133b52-8c74-49ac-985b-e093ae1d277a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb81ed4-8160-44b7-886c-d4e86310a2ba",
        "cursor": {
          "ref": "0d529957-71c4-497c-8e05-fbf9194c5cb7",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0eef5a79-bf8c-4ef1-8f9d-59247c1da9db"
        },
        "item": {
          "id": "9eb81ed4-8160-44b7-886c-d4e86310a2ba",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a55951ff-e70d-4767-9c97-df1062a8177b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc99dda9-fa96-49a7-aa7e-f8cb09855644",
        "cursor": {
          "ref": "fd334379-7788-4567-8cb5-5644d76aef32",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "40c936d7-28a9-4c96-b072-ecb772a6b3bc"
        },
        "item": {
          "id": "dc99dda9-fa96-49a7-aa7e-f8cb09855644",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6531b5d7-4874-41fd-a849-e4e032905be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03723d3a-2449-459d-b200-2dccb065a15d",
        "cursor": {
          "ref": "3028ea93-b4ce-4683-81e3-7a06ec2a2160",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c48e7b6a-5667-41a0-97ea-920c6d040804"
        },
        "item": {
          "id": "03723d3a-2449-459d-b200-2dccb065a15d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e67c6480-3fcb-4360-96eb-583e4e444b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8342771-9e3f-4538-965e-3c10234d11ac",
        "cursor": {
          "ref": "4d687c90-8c19-4fbd-b211-1dcea79bbf42",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "bfa0acf7-9ac8-4291-89ff-f7583390ea9a"
        },
        "item": {
          "id": "e8342771-9e3f-4538-965e-3c10234d11ac",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "13fa55db-5e62-42d0-a666-b6236bbc02c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721cf248-eb63-4e8e-a9a8-8438ec109a7b",
        "cursor": {
          "ref": "6d721a93-c447-4c9b-93f2-e81c0a9b302a",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1e10630d-91e4-407e-9836-2d8c30ce53e3"
        },
        "item": {
          "id": "721cf248-eb63-4e8e-a9a8-8438ec109a7b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "16270307-ed7c-4250-a3f2-42b49aedef57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092f4206-2b8d-4628-b34f-e5dd3c46ea0c",
        "cursor": {
          "ref": "32986231-9a99-4b60-86d1-e49dd8784f72",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6bcd8f7e-b773-485d-a90c-10f4f4104e9c"
        },
        "item": {
          "id": "092f4206-2b8d-4628-b34f-e5dd3c46ea0c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1e76cabe-016c-4d4d-a59b-07e289522e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fe084c-10f1-4e05-b662-88d7297e08df",
        "cursor": {
          "ref": "776fade5-44ec-44f2-aa38-7f8aba0109c6",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "76ab534b-b33e-4bf5-af84-4bca73c2d299"
        },
        "item": {
          "id": "17fe084c-10f1-4e05-b662-88d7297e08df",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "714430ba-5a38-4057-a73e-267f6660a861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c7fb1e-4204-4184-ae1a-567bbf6cd358",
        "cursor": {
          "ref": "77f4bbf6-b402-4fb1-bca0-9ddee6a977b2",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1ba2fae9-39df-453f-9134-063270bd68f7"
        },
        "item": {
          "id": "08c7fb1e-4204-4184-ae1a-567bbf6cd358",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4aca929a-b442-4ba2-8892-dda5f02ffe8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2581fee4-9716-4d7c-a178-8f9cc5d33282",
        "cursor": {
          "ref": "1f21f426-c426-4fb9-bb5c-d44096617f7e",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "dbfcc0f6-5be9-4377-aa97-776bae7b65be"
        },
        "item": {
          "id": "2581fee4-9716-4d7c-a178-8f9cc5d33282",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bbc9b504-0c1c-4d9c-b67c-e96d1a49bbd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a35a069-7961-4419-b152-8e5b56f1eb2d",
        "cursor": {
          "ref": "f81260ba-3722-40b8-9cbc-d4c5b9721595",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4b2956ef-2480-4b7b-804a-e493826811b6"
        },
        "item": {
          "id": "0a35a069-7961-4419-b152-8e5b56f1eb2d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ef713dc4-760d-457a-b439-f052b1e318a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7ed3f4-9fe4-4ef3-89df-2322e1ead53f",
        "cursor": {
          "ref": "f1782810-8499-4ede-b263-c704e808b78c",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "420a695d-ec8e-440c-ae67-75241754cc90"
        },
        "item": {
          "id": "0f7ed3f4-9fe4-4ef3-89df-2322e1ead53f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ed618926-2231-4e0e-9b94-e90478447d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524fbe67-5f96-4027-abde-2fae042bdc21",
        "cursor": {
          "ref": "8eda2cb9-e3fb-4c30-9fc9-d01639e11c02",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f4d501f8-d176-4da8-a3a2-f10663ff46ef"
        },
        "item": {
          "id": "524fbe67-5f96-4027-abde-2fae042bdc21",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8a1b4fb9-a301-4c09-b568-b13ca332e6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82a7aff-d9c4-4117-aa9b-0193fcee2771",
        "cursor": {
          "ref": "7f25c1de-4952-4d31-bf95-cf2d64d2c468",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "fc35cc0e-e825-4880-aaf0-b15aff1b54bb"
        },
        "item": {
          "id": "b82a7aff-d9c4-4117-aa9b-0193fcee2771",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "34cf1939-d471-4a12-9443-dedb1ce15aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2615a0a-a7c5-41a1-89a1-43ccf68c30f0",
        "cursor": {
          "ref": "dd91cbbd-d759-4672-909e-3403bb817ab6",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "201eef90-a496-43c8-b7c5-817a4b74652f"
        },
        "item": {
          "id": "b2615a0a-a7c5-41a1-89a1-43ccf68c30f0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7ebd6dcf-8465-43b0-97a1-86a33fc05a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d19f8c-f390-48f7-9dbf-df7fe57d520f",
        "cursor": {
          "ref": "3d8f7aa8-0716-42b0-bfff-181c6b694ebc",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4077ea37-8059-4a3b-abbb-4a87371491f0"
        },
        "item": {
          "id": "c7d19f8c-f390-48f7-9dbf-df7fe57d520f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "16b61f60-a691-41cc-8e5e-6603586a6adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2fe77a-d109-473f-aba2-7b2f457bccbf",
        "cursor": {
          "ref": "d219dfe9-94b1-46c8-83e8-88a18826be10",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1bd24c25-85f0-4aca-ac3e-076ddcf024d0"
        },
        "item": {
          "id": "ef2fe77a-d109-473f-aba2-7b2f457bccbf",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "20be833b-eb1b-4ed4-9b14-42fbbbe01a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040f7eb2-71f1-45cc-a409-b9a3b80f2848",
        "cursor": {
          "ref": "0522ba0a-d0cf-413e-ad81-9a8c31edd681",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e3b60872-a0f2-4844-8030-0c362830f45c"
        },
        "item": {
          "id": "040f7eb2-71f1-45cc-a409-b9a3b80f2848",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6d458aef-c78c-4de9-88cf-dbd2f168e084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae15ad9-add9-43fe-b6b1-c4baf894b3e1",
        "cursor": {
          "ref": "6b06b12f-b6e8-420d-9ba5-59cfb6730ee8",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d559bb82-80cb-4657-a514-2228b592f38a"
        },
        "item": {
          "id": "6ae15ad9-add9-43fe-b6b1-c4baf894b3e1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b7faa4bf-06bd-4e50-9d9d-c893fff418e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82321a9-823e-4e0d-9410-4ac845981546",
        "cursor": {
          "ref": "aa35188b-7d7b-4eb3-8aa6-f59064904bf8",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "405448be-310f-4f41-be60-fab6fc000ee2"
        },
        "item": {
          "id": "b82321a9-823e-4e0d-9410-4ac845981546",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0da039fc-a2e8-4388-8c20-15cee0fd4f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7103a4e-463a-4ac3-bc29-df2254a4177b",
        "cursor": {
          "ref": "a06bd035-51f5-4c26-aec4-19389b474aea",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "77fb0e62-bd1b-46dc-bdce-0a98f4a72993"
        },
        "item": {
          "id": "b7103a4e-463a-4ac3-bc29-df2254a4177b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "946a10e0-0e6f-479d-8269-3086007ba96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e789d9a-58c5-4396-9227-d988f75cf55d",
        "cursor": {
          "ref": "9ac9f328-c007-4c39-939d-e1fd872e7ad2",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1d8d6819-6707-4b42-b986-7ad72c90e766"
        },
        "item": {
          "id": "9e789d9a-58c5-4396-9227-d988f75cf55d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d8728b1f-05d5-44cc-8f64-bfd5d5a8d3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e837eae-2979-4963-8e94-eba06b63da70",
        "cursor": {
          "ref": "8ee5381d-82dd-44ef-b4ec-d565660b56d8",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c5e4a68f-989c-4058-bf70-4ffda5a9d48e"
        },
        "item": {
          "id": "6e837eae-2979-4963-8e94-eba06b63da70",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f132039e-5fec-43c2-b85f-75a0d7defb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1eda293-64f5-4ead-ab61-3cdb6941924d",
        "cursor": {
          "ref": "4ac2663c-bca3-4d9a-a017-638b7af655e1",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "51a526f8-09c4-4dcd-b2d7-25131a0fdaec"
        },
        "item": {
          "id": "e1eda293-64f5-4ead-ab61-3cdb6941924d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "224af1b5-d992-4034-bce4-2648e22a9b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e5a3ac-1f78-473e-8d77-c85468f92bc1",
        "cursor": {
          "ref": "1faa84fa-cb3f-4e45-a7ec-901c3afc0499",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c1a0bab4-0e7f-45bd-a880-5f54e819927d"
        },
        "item": {
          "id": "46e5a3ac-1f78-473e-8d77-c85468f92bc1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b319e34b-f6b6-471a-bb8a-b996d190216f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d205b7a-93e6-44a6-8acc-35a13a73fd6c",
        "cursor": {
          "ref": "133ebb1a-30d1-4b77-96ae-9cb74c2f8638",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d00c9b41-da63-4a46-ae97-d9f1c009abbf"
        },
        "item": {
          "id": "9d205b7a-93e6-44a6-8acc-35a13a73fd6c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "93b0c478-2089-48c0-9a07-1125eaae8d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d118da7a-14fa-44ac-8cde-bf7e51a1a41f",
        "cursor": {
          "ref": "4c8d9cb4-fb0e-4a03-87bc-46b715f085d4",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9f7d6d8f-fd24-433b-a52b-060dfd803ca1"
        },
        "item": {
          "id": "d118da7a-14fa-44ac-8cde-bf7e51a1a41f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2d0b94be-fe5c-4204-92f1-05334d41f3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a929f4d0-7b7b-4365-9431-039d1dc0df70",
        "cursor": {
          "ref": "be18df2e-3755-4025-932e-bc1e58225e11",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2c588750-09a6-427e-b50a-3e631e1aa475"
        },
        "item": {
          "id": "a929f4d0-7b7b-4365-9431-039d1dc0df70",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ecd465d4-f876-4867-bf51-a602be086020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9065b592-7f73-439a-aabf-7d16ec7548e8",
        "cursor": {
          "ref": "088cb43a-7fa2-42ec-b734-034b12aa9114",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8b42b138-59b7-4462-8c0d-e520dc42d0e0"
        },
        "item": {
          "id": "9065b592-7f73-439a-aabf-7d16ec7548e8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f82524a2-c438-4e27-86c0-3a06f1b57da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4133f47a-ede2-4bb0-b10a-928130ec8dc3",
        "cursor": {
          "ref": "29724d40-0186-493f-8db0-2c06661c6b84",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c4e2ec36-0e3d-4a85-b819-072627a1058c"
        },
        "item": {
          "id": "4133f47a-ede2-4bb0-b10a-928130ec8dc3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3b6c8f39-6eb3-4346-a7a8-adca3a7a7440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee81404-9d01-4bb6-80cd-4498d546abb7",
        "cursor": {
          "ref": "64166ffe-c06c-41bf-bc57-ae1b0e0c0bf5",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "952959c6-fdb3-41ec-a79f-1cc082c42121"
        },
        "item": {
          "id": "9ee81404-9d01-4bb6-80cd-4498d546abb7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0bf650ce-d7f9-44da-b1b3-bd21cc952230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1400d22-5bdf-4c8a-92d9-03e04573848b",
        "cursor": {
          "ref": "e4b7716f-28eb-48dc-857c-1da5d8764e6e",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7dfe877f-2e59-4e45-b155-7668fbba3c9e"
        },
        "item": {
          "id": "c1400d22-5bdf-4c8a-92d9-03e04573848b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8a53a3b2-cf06-4af0-bbd7-a1ca1372657a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e131fe48-330e-4156-973a-ab9150f897d2",
        "cursor": {
          "ref": "e1639164-cba0-4ac1-97b4-43c0b6af3991",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "903d885d-75c0-442d-aa7f-87bf57577d47"
        },
        "item": {
          "id": "e131fe48-330e-4156-973a-ab9150f897d2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "485efd02-80a5-4bc8-b5f7-d8d2e080825d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5335660f-3937-460c-8ad0-e53d82e40c6b",
        "cursor": {
          "ref": "29c76b09-15d6-44ab-999e-f31e273bc021",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "92899362-766a-498b-81dd-1ec523a29701"
        },
        "item": {
          "id": "5335660f-3937-460c-8ad0-e53d82e40c6b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4681fd03-776e-44f9-8a45-1055c7a94e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2619ae-ba87-4edb-9c42-3837850a5075",
        "cursor": {
          "ref": "ab901e6b-794b-4ee4-884e-91a815dc080b",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ffccfdc7-8b77-4f0b-9d23-6ae02a77a7b1"
        },
        "item": {
          "id": "4b2619ae-ba87-4edb-9c42-3837850a5075",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d425a596-64bd-4b44-8f24-5970936f1e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10899ae5-b230-4575-a03e-d55302453b1c",
        "cursor": {
          "ref": "255cbd37-7362-4e04-b7a7-c6ab3b2102e2",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6bda4061-2f79-4964-8b80-000324f382a6"
        },
        "item": {
          "id": "10899ae5-b230-4575-a03e-d55302453b1c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "cc1b342d-8279-44c4-80e9-9f9c55f2adb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e12fed4-b9a8-45cd-b638-a543f45a4585",
        "cursor": {
          "ref": "54ea09aa-ec56-41fa-8fb0-9d6e5ce248fe",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e1328739-9f57-42c9-8480-6230f24e57cf"
        },
        "item": {
          "id": "3e12fed4-b9a8-45cd-b638-a543f45a4585",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f60368d7-3681-45de-951e-bb21c2bcb6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76dcb504-c8f2-4e0a-8b41-651f5ed58d21",
        "cursor": {
          "ref": "8655324d-b297-47a7-a737-02c235644ee8",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "64087c69-68ce-44af-ab37-7a3c47c5918f"
        },
        "item": {
          "id": "76dcb504-c8f2-4e0a-8b41-651f5ed58d21",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "06557e95-f16c-429e-8a84-b28e6935a111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ae5922-9be4-4560-ae07-b882692c03e8",
        "cursor": {
          "ref": "706974e3-d6a8-4e41-8fec-332997a71463",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f3835745-2b04-4339-acb1-fa9eeb4ee459"
        },
        "item": {
          "id": "12ae5922-9be4-4560-ae07-b882692c03e8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d9d9dc38-84f7-4e15-9233-4a9ff385739a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fb7a1a-1423-4f15-a827-173d11e2bf84",
        "cursor": {
          "ref": "df02a2a8-138e-47fc-b34e-4c972499dec5",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "37423167-5a77-495f-993c-33253dfb92c1"
        },
        "item": {
          "id": "58fb7a1a-1423-4f15-a827-173d11e2bf84",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bbc08eb8-814e-41a7-8793-50f576e6a50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a2f38b-4c3b-46a0-83ac-4641977c821a",
        "cursor": {
          "ref": "867b5bba-7ac0-4268-a09f-ad619ff356e3",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8c7e2767-4a41-410f-bebb-4175ac298c94"
        },
        "item": {
          "id": "23a2f38b-4c3b-46a0-83ac-4641977c821a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ed9ec4ad-666f-4b1c-9e9a-16951de012a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38919b6b-585c-4d44-ae3a-1d7e643c136d",
        "cursor": {
          "ref": "09a45fc9-28c9-454d-9eb4-1089e48655e5",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f0d8869a-7658-4d79-a823-04b95f2b9d47"
        },
        "item": {
          "id": "38919b6b-585c-4d44-ae3a-1d7e643c136d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3ecc16e5-3fad-4047-9346-cbbfd3494f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcaf44b7-de96-4a37-86a7-1c8c753c133a",
        "cursor": {
          "ref": "816dc903-641b-4cd4-94bf-ac1c65206f7a",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "eed974e6-9d51-4cb4-880a-fbd75d318960"
        },
        "item": {
          "id": "dcaf44b7-de96-4a37-86a7-1c8c753c133a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "22acde76-d883-4887-83ec-d96ab676adbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbb1dcb-6f63-4cfd-b43f-5fd09540d094",
        "cursor": {
          "ref": "2f303300-e142-48cd-8849-c0ede8eb5e0a",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "48fc3ac6-619d-458e-9692-cc2ee0892c1a"
        },
        "item": {
          "id": "2bbb1dcb-6f63-4cfd-b43f-5fd09540d094",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9f361ae1-a784-4be2-8205-c25cf381f610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0573e2ed-de45-4ab0-8435-18da14011f5a",
        "cursor": {
          "ref": "bf047be4-bc3b-4217-8e52-0cd8598898d6",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "13d72d62-ebd1-4df0-9155-df89d28763b4"
        },
        "item": {
          "id": "0573e2ed-de45-4ab0-8435-18da14011f5a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1ae9b5da-e9f4-4c8a-98ac-c2f806ae0c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36c8dcc-8554-453d-80f3-727d4442ee61",
        "cursor": {
          "ref": "da2acdc9-174f-44df-beb0-851745c19686",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0e164b95-03d7-43ed-8cfe-54eef1f97bb9"
        },
        "item": {
          "id": "d36c8dcc-8554-453d-80f3-727d4442ee61",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c9a2e5af-c723-46eb-9e48-425840656210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7fac73-31e6-4e1f-af74-320abbfc38b1",
        "cursor": {
          "ref": "b17d3b67-4ec3-445f-84e3-7219edd05189",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b65702b4-2216-4504-94dc-02300ae433d2"
        },
        "item": {
          "id": "9e7fac73-31e6-4e1f-af74-320abbfc38b1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ad2224ed-cd49-4ca1-a152-96c7ad81d8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e76348-1915-448b-9698-07c7cfba137c",
        "cursor": {
          "ref": "e30bd358-b83b-48d8-ad1e-7b55f8e2636a",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9da4f8b6-5d1d-43a5-8b9e-5b72f5475fc5"
        },
        "item": {
          "id": "70e76348-1915-448b-9698-07c7cfba137c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fad64da0-80bf-40d4-83bf-082897a1f796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921799cd-3de0-46a5-8fb7-f5ab24f18bec",
        "cursor": {
          "ref": "a242f523-1a47-40bc-b3f2-f178e56a65c3",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "31797bc7-cb19-4ccc-b18a-264e2f4dd606"
        },
        "item": {
          "id": "921799cd-3de0-46a5-8fb7-f5ab24f18bec",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "704fa915-7beb-4ba8-b251-8a5b7443edb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e16bfb-c1f1-4989-ba3d-8b7bb44be4f2",
        "cursor": {
          "ref": "c129fab2-4551-4463-9b1e-6d8187b30134",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3a81af8d-cf86-4406-8f24-e4b96f9bf3cd"
        },
        "item": {
          "id": "c7e16bfb-c1f1-4989-ba3d-8b7bb44be4f2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ba44aa86-c671-4570-9c7b-96baea878139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89520960-b8cc-4fd6-a76b-2f18242fe9d4",
        "cursor": {
          "ref": "e087865d-4bbd-4b91-ba71-0ae08f29b825",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "93be3642-1f98-4d9b-9eca-2bc8f9db433c"
        },
        "item": {
          "id": "89520960-b8cc-4fd6-a76b-2f18242fe9d4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "149f6c1c-243d-4921-b2b6-a0294abfc7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fe4c7e-edff-4f14-b7a1-fa9fe3864f41",
        "cursor": {
          "ref": "1703c3fe-699a-48dc-ab71-4d380f0b9818",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "321ab7d0-4801-4170-83ea-2884ec648f29"
        },
        "item": {
          "id": "26fe4c7e-edff-4f14-b7a1-fa9fe3864f41",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "607cf61a-6706-42c5-a612-d6af581f0486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95caebbe-6f8d-493a-8d89-88368ea03297",
        "cursor": {
          "ref": "9920b23b-22e4-4a80-a3b5-3de71cc73425",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2a83871e-aec9-4bc1-b45e-ad08a5ba4f04"
        },
        "item": {
          "id": "95caebbe-6f8d-493a-8d89-88368ea03297",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b205ebe6-8478-488d-a99e-ffa0a10bbd81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47fe604-3d40-4152-8dff-3eb489e6e1d1",
        "cursor": {
          "ref": "f08c48fc-a7e1-425e-b8ce-b76af7358f78",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "06ac760d-7378-4e25-baf8-b66bca61f1f7"
        },
        "item": {
          "id": "f47fe604-3d40-4152-8dff-3eb489e6e1d1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0f06df04-2a4f-47e2-9279-a7d0f9b8c852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269d14e3-668e-425a-918d-15b9266653d2",
        "cursor": {
          "ref": "79461df5-8191-4450-afc0-fcbc1479496c",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5c7daadb-ac49-49b0-bf4a-d215983f0a60"
        },
        "item": {
          "id": "269d14e3-668e-425a-918d-15b9266653d2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a11caf93-59d5-40e3-be9a-a0841b84234f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9b4f8b-d18f-4e1a-ab3c-f1b6e8db833b",
        "cursor": {
          "ref": "29026d2f-1688-4794-91e3-27d0fe4fbd35",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9f5d0600-9a4f-4892-97ed-6d80ee3ccd54"
        },
        "item": {
          "id": "fc9b4f8b-d18f-4e1a-ab3c-f1b6e8db833b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "745c922f-4d1d-4d11-93ca-623112112f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd589e7-c373-4aff-8775-fec0ac3a1131",
        "cursor": {
          "ref": "7d29ca44-131e-4257-a09c-84fda7e498b8",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9fd2602c-6ddb-451a-a463-d19df41ae496"
        },
        "item": {
          "id": "2bd589e7-c373-4aff-8775-fec0ac3a1131",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a0ba3c43-a98c-4f80-9dc6-839633cfab99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69e26d4-e59b-4888-b707-422a18630354",
        "cursor": {
          "ref": "59b75ac6-8cc8-4777-83e1-0b1d468a33a2",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "343b7bdd-d01f-4e18-9900-c9ca2f2455ee"
        },
        "item": {
          "id": "e69e26d4-e59b-4888-b707-422a18630354",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e2851526-5e9a-473a-ba55-b64bd157bdae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7306575-f9a8-4adb-882f-b015f7e824f1",
        "cursor": {
          "ref": "43110cbf-1f26-4bfd-8a83-587e208f4a33",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "913aefbb-4f43-4117-ad81-b122bc212b85"
        },
        "item": {
          "id": "b7306575-f9a8-4adb-882f-b015f7e824f1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e02f8f5c-41ef-42c4-88d2-f77af648e7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffa6409-139d-4d6f-a9c1-f98bf2accf1a",
        "cursor": {
          "ref": "55656b98-84f9-4733-871e-45f88ed1d174",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "19e8450b-53e9-4c05-af93-f771a2694198"
        },
        "item": {
          "id": "8ffa6409-139d-4d6f-a9c1-f98bf2accf1a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "049d9fe2-efdb-46d6-83dd-a6a2a1dc4c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7f5ba2-82d6-4bf5-81b8-312908f541c1",
        "cursor": {
          "ref": "14dadc28-d88a-4520-aee0-f9e7a027aa22",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f724ec50-85b0-4b3e-bee1-9768d5565108"
        },
        "item": {
          "id": "db7f5ba2-82d6-4bf5-81b8-312908f541c1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "965cde3d-08cb-4728-a388-7867b8a2ec35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d7ed35-f360-4faa-b99c-a65963849627",
        "cursor": {
          "ref": "627e5815-9762-4af1-92c1-6356219b2883",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f8fa582f-bc1b-4f80-b4ce-ef1e12336182"
        },
        "item": {
          "id": "78d7ed35-f360-4faa-b99c-a65963849627",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9f43fd09-d345-4a0e-a63c-d309147bf7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85037e1-d7b0-40bf-b08f-f2eaad0fca29",
        "cursor": {
          "ref": "725954da-4f24-4969-852e-694863437b3f",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e1d0b175-3b82-4db8-af9c-8125698a8219"
        },
        "item": {
          "id": "d85037e1-d7b0-40bf-b08f-f2eaad0fca29",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "776ee669-7079-4cb0-a068-d986f5452ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2c4554-12d1-423e-bee2-407cbed6dcf8",
        "cursor": {
          "ref": "00410d19-3565-4350-8bb2-904da9ffdcd8",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "44fafec7-a5b4-4b74-9035-74865d5f938f"
        },
        "item": {
          "id": "6d2c4554-12d1-423e-bee2-407cbed6dcf8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "fcc77d50-882b-4d37-a2c6-fa72cb7313f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225ed49a-b0b5-463e-8831-530d7fb88e0a",
        "cursor": {
          "ref": "c4f01d07-6339-4e4b-8ea1-1ef2bda878e5",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "cb08dc94-77c6-498d-8737-9fda47c3372f"
        },
        "item": {
          "id": "225ed49a-b0b5-463e-8831-530d7fb88e0a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4a46429a-29f3-43c4-9fb3-585eae8d7be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722eea08-e86e-45d1-8c29-f5ab8a2332f3",
        "cursor": {
          "ref": "57baa941-70d5-431a-8997-b543d5117e43",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b30e3670-ee8e-4afa-8dcb-cd84ea8c13c6"
        },
        "item": {
          "id": "722eea08-e86e-45d1-8c29-f5ab8a2332f3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b87d2433-3d13-4c4b-99a1-bc78c7b8839f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8614b5-784c-4a39-a682-9bb5b3eda2af",
        "cursor": {
          "ref": "f904cbf9-62b2-4c95-9cf0-6adb82f52117",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4a738666-faf6-47f6-b47c-347d8c76958c"
        },
        "item": {
          "id": "fe8614b5-784c-4a39-a682-9bb5b3eda2af",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "af489262-4112-4f9a-bfd6-d6f3d060aa46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617ddb99-5c27-4e3c-8e30-a6259798486d",
        "cursor": {
          "ref": "5e5d9388-1a2a-49a0-b79c-90900bc00300",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fdc1e6a9-8c28-48f1-8898-5eb0f4715ae6"
        },
        "item": {
          "id": "617ddb99-5c27-4e3c-8e30-a6259798486d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d44c1475-ce92-4dfd-a1a8-2be71291f66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7524f96e-0e1c-461e-b617-0b0f8073b77a",
        "cursor": {
          "ref": "7bf8aef8-7396-4b42-a9b4-7d324c268438",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b65da048-ba37-4551-bc8b-139ae35a491a"
        },
        "item": {
          "id": "7524f96e-0e1c-461e-b617-0b0f8073b77a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ecb2cd5b-74d3-4b4b-a5a0-122266f73abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e1cc20-e459-42ac-8443-4d013dc9e6b1",
        "cursor": {
          "ref": "b14c2471-17d8-4759-9265-2ed32c76093a",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4190c751-bd7e-40a3-8798-ed67c44e2038"
        },
        "item": {
          "id": "17e1cc20-e459-42ac-8443-4d013dc9e6b1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "40e9f183-6a05-4004-8439-3dc17f27069b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b7aa2f-66e4-4f9c-887b-3c404809b819",
        "cursor": {
          "ref": "b4b3777a-dc92-4202-8d60-f8ec6ff34e4e",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "004cb418-fcf5-4297-8728-9a0c6a776000"
        },
        "item": {
          "id": "a1b7aa2f-66e4-4f9c-887b-3c404809b819",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7eb20577-4858-4475-9aa3-385a1f9a93a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcd4fd8-69bd-403a-976e-d44ac5e27d6c",
        "cursor": {
          "ref": "11cfbbe1-11a9-40ac-a71d-ae48376cc98d",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "92e3d0d8-4a0e-4a76-8d96-b006dfb5dcf2"
        },
        "item": {
          "id": "5fcd4fd8-69bd-403a-976e-d44ac5e27d6c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "76d69839-91a6-4e5c-be28-b7c8cd6aa306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9bd4a3-f523-45a4-9598-3e05cdbfbbb7",
        "cursor": {
          "ref": "342e8e5f-ee1d-4134-893e-acd96f09076f",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e0a2fc32-4f64-4fb2-9c30-3a0444b8faa0"
        },
        "item": {
          "id": "6f9bd4a3-f523-45a4-9598-3e05cdbfbbb7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d3ea7c18-f872-4174-ab78-772b87f567e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9b0a04-f43d-41be-9395-9c626640aae3",
        "cursor": {
          "ref": "cc6449e7-107c-4d1b-b0e3-269454b990cd",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "44e6673d-2d42-4f91-9304-e3986c9e7bdd"
        },
        "item": {
          "id": "fc9b0a04-f43d-41be-9395-9c626640aae3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8b19f11b-c07a-4814-9e88-13cb3d4b12a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a681df88-25b4-4874-ad01-954c879593c4",
        "cursor": {
          "ref": "f2296615-54cb-41c3-af3d-7bd351b3edde",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "302a5267-6411-467d-831e-fc157e9b5539"
        },
        "item": {
          "id": "a681df88-25b4-4874-ad01-954c879593c4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7816351e-5ba5-443c-8b41-442e5ab70671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a62d1d-aa10-48f4-bc56-33f46f508537",
        "cursor": {
          "ref": "2a92bcb1-ebd9-4a31-863a-95dcb0e51182",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a024939d-e841-43e7-82bd-5baea84b965e"
        },
        "item": {
          "id": "95a62d1d-aa10-48f4-bc56-33f46f508537",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4a87d0fc-ecad-468e-9542-f34d6c8adc9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837f042a-74f2-471f-886c-07449df3b5df",
        "cursor": {
          "ref": "2602602a-6e68-4676-b786-dbf550546e9a",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b341e8ca-10e6-4033-920f-a2d980a0c676"
        },
        "item": {
          "id": "837f042a-74f2-471f-886c-07449df3b5df",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "152057f3-efb9-4bec-b5e4-a118366a5cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090f45fc-42dd-430e-a7dc-4faa34c5cc5a",
        "cursor": {
          "ref": "1be39369-bc5b-488d-bd7d-4af3e91569ce",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c0467cb7-db8a-4f6f-af9e-9ca061f03ae2"
        },
        "item": {
          "id": "090f45fc-42dd-430e-a7dc-4faa34c5cc5a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6fa87dc1-6abe-48e6-b372-759bbca75386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d1bd66-5fa2-4f88-8b7e-d005c5cb0e10",
        "cursor": {
          "ref": "71c0338d-977a-4813-ac36-3290ab32f06b",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3e7477d7-dbdc-4932-8b35-459bfc1c4d52"
        },
        "item": {
          "id": "00d1bd66-5fa2-4f88-8b7e-d005c5cb0e10",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "caf3acaf-bfbb-4df7-b282-216d1ce822ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b27457b-60f7-4fc6-a391-26fd68402409",
        "cursor": {
          "ref": "ee69fc5c-076b-4486-8ab1-228c887224dd",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0c4b0f43-da0f-4f53-9a5e-539f80cb00dc"
        },
        "item": {
          "id": "4b27457b-60f7-4fc6-a391-26fd68402409",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6c47445c-9bf4-4616-9a84-ef37618c5a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c2749a-d099-47be-8af3-1b6a220ed514",
        "cursor": {
          "ref": "c89f4a99-5e48-4c37-ad56-001f0e7c0ca3",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bcca69fb-b42c-4b3c-8a12-3a1e0b1732a2"
        },
        "item": {
          "id": "67c2749a-d099-47be-8af3-1b6a220ed514",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4ec8a75d-1ee5-4dad-9b70-ef50062d0896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726a6e6f-0866-49e0-bddc-e5091995011e",
        "cursor": {
          "ref": "322202f5-91bd-4428-ba87-6ea4c38a9130",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f6e7876d-9c7d-4141-8efc-8e63c207970d"
        },
        "item": {
          "id": "726a6e6f-0866-49e0-bddc-e5091995011e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c5aa1d9b-727f-4f08-b824-43016edb353e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2523de-998b-4173-9f58-f42a583ec814",
        "cursor": {
          "ref": "6090cbab-0005-4487-b60e-c10a95cffee7",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "69912303-62a2-4f8e-bbc6-dc7ba4218327"
        },
        "item": {
          "id": "7b2523de-998b-4173-9f58-f42a583ec814",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "bcda0d5c-f0b9-4ef1-ba3d-7c369efd1b6f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 463,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45729787-1180-406e-a7b2-f9f18c923f02",
        "cursor": {
          "ref": "75135261-d3ff-48bd-b168-735369d24ae2",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "74c8f835-07b8-411b-be81-cebaa13db8e7"
        },
        "item": {
          "id": "45729787-1180-406e-a7b2-f9f18c923f02",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c0d12c2b-ea31-458a-8fa1-582122bd8c7b",
          "status": "OK",
          "code": 200,
          "responseTime": 520,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4953c2c7-bff8-4f88-afa4-c495b905b573",
        "cursor": {
          "ref": "ac961a82-8b98-4b71-947a-5c3b913a5f4b",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "28a40545-945e-4f56-aa04-eebd47d73c02"
        },
        "item": {
          "id": "4953c2c7-bff8-4f88-afa4-c495b905b573",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "c5802793-fa01-4fbd-b6e4-a55688d66bde",
          "status": "OK",
          "code": 200,
          "responseTime": 707,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdf9568-b59f-41a1-954f-d2f591ed9f1e",
        "cursor": {
          "ref": "5a13a2a7-6152-4142-91a5-a596e6617a03",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a1aa7a94-fe85-4005-a20c-97fdc3745190"
        },
        "item": {
          "id": "6cdf9568-b59f-41a1-954f-d2f591ed9f1e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0e5cfb03-ca88-42c1-be2c-a7f409ad7f99",
          "status": "OK",
          "code": 200,
          "responseTime": 575,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f74bb2b-5736-4ec1-99e7-343f3e92bc97",
        "cursor": {
          "ref": "1814957f-7e93-450c-bbb5-8d22e95aae0e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9ebeb603-b4c1-4545-bc52-2fa9b203c5ed"
        },
        "item": {
          "id": "8f74bb2b-5736-4ec1-99e7-343f3e92bc97",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1b6bbbe6-3ebf-479c-9528-0a43f6339ef7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f74bb2b-5736-4ec1-99e7-343f3e92bc97",
        "cursor": {
          "ref": "1814957f-7e93-450c-bbb5-8d22e95aae0e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9ebeb603-b4c1-4545-bc52-2fa9b203c5ed"
        },
        "item": {
          "id": "8f74bb2b-5736-4ec1-99e7-343f3e92bc97",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1b6bbbe6-3ebf-479c-9528-0a43f6339ef7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f74bb2b-5736-4ec1-99e7-343f3e92bc97",
        "cursor": {
          "ref": "1814957f-7e93-450c-bbb5-8d22e95aae0e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9ebeb603-b4c1-4545-bc52-2fa9b203c5ed"
        },
        "item": {
          "id": "8f74bb2b-5736-4ec1-99e7-343f3e92bc97",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1b6bbbe6-3ebf-479c-9528-0a43f6339ef7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c4c0b9-f9c0-47e1-a00a-0a47d63f4d15",
        "cursor": {
          "ref": "436892da-70a6-4e0b-8c3e-819580a7eb67",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5cd64ba1-4aac-4d29-957f-0e645b1b99b4"
        },
        "item": {
          "id": "46c4c0b9-f9c0-47e1-a00a-0a47d63f4d15",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "e142a1f3-11d8-40a0-bee4-14fe6ad9d280",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 358,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9506a877-cee1-4948-8a1d-154ab725b81d",
        "cursor": {
          "ref": "f3dd374f-1e91-4967-84df-f1d4feab6951",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0fd878bf-5536-4855-bf96-065652a89748"
        },
        "item": {
          "id": "9506a877-cee1-4948-8a1d-154ab725b81d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8da98c62-6f66-4e05-bc8a-386945f5ec8d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9506a877-cee1-4948-8a1d-154ab725b81d",
        "cursor": {
          "ref": "f3dd374f-1e91-4967-84df-f1d4feab6951",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0fd878bf-5536-4855-bf96-065652a89748"
        },
        "item": {
          "id": "9506a877-cee1-4948-8a1d-154ab725b81d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8da98c62-6f66-4e05-bc8a-386945f5ec8d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2895cbe6-ed36-4437-9e0e-87368063dbc4",
        "cursor": {
          "ref": "527e311a-98ec-44dc-b31b-cd701661507c",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "229e40a4-fa8c-42a9-bc66-53f363bdbb97"
        },
        "item": {
          "id": "2895cbe6-ed36-4437-9e0e-87368063dbc4",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "95fdfd6a-b7a4-4920-ad42-384ec4ac565f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 952,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9d2347-e24d-4748-94a1-23bcffe42bd3",
        "cursor": {
          "ref": "2362eade-80e9-4c3b-9588-d3104406542e",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "234f2f49-c14c-48dd-864e-41dcc8bec654"
        },
        "item": {
          "id": "ab9d2347-e24d-4748-94a1-23bcffe42bd3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ad67aa26-2eb9-46d1-b5b8-15b02aacbb9f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9d2347-e24d-4748-94a1-23bcffe42bd3",
        "cursor": {
          "ref": "2362eade-80e9-4c3b-9588-d3104406542e",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "234f2f49-c14c-48dd-864e-41dcc8bec654"
        },
        "item": {
          "id": "ab9d2347-e24d-4748-94a1-23bcffe42bd3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ad67aa26-2eb9-46d1-b5b8-15b02aacbb9f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff10e4e1-aec5-449e-9eb7-5688cc9faa91",
        "cursor": {
          "ref": "88c40ff4-5393-42d0-98b8-697e2f510fc4",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "992a5316-7fdd-482e-99a4-504d48342879"
        },
        "item": {
          "id": "ff10e4e1-aec5-449e-9eb7-5688cc9faa91",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "0b629527-365e-460f-9563-8ed66c27a7ee",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 501,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}