{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "37926ee4-50b0-48b0-8b6a-cc95ea350d63",
        "name": "Clear Cache",
        "item": [
          {
            "id": "60daf3fa-7baf-4ff4-b216-22cde32b5ba4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bd84d23d-98cf-4a49-b351-0088040efe08",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c9945cc8-eabc-4ac7-923a-338b44060ac5"
                }
              }
            ]
          },
          {
            "id": "3a74ab5c-afdb-4a18-b4c6-b522189a4b81",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bbdd95d4-fb1d-4770-af74-b1477cbfe671",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "25232018-283d-4605-bd94-1cf507f38c01"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "643fa57f-50b2-4b6a-8d1c-47f878170b9f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6a12dea0-2fdb-400a-8364-15a6e8f56234",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3cef4397-bdd1-4c49-9d2c-62c211877fbe",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fed1ee13-9f40-4239-8b5c-89df43768980",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35fbaae6-217b-471e-96e6-602382178cf1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "99e1202e-5371-47b4-a069-cacf9357701a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7eae2496-1377-4413-baea-e5932fa111c7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0c0d2673-df13-4922-aac5-6459becbfbdf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c041c288-3d90-4448-b27e-d69bee3dea71"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50b23199-517e-4eae-896c-e00f136d2f55",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "555434da-beba-4906-bbc6-5f267eb17f2e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83c7fe88-524d-4990-8717-9c18650d36e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c602e5a3-2db2-4e69-a13e-2d87cd1b7a51"
            }
          }
        ]
      },
      {
        "id": "90a52510-a1f1-4294-ae80-729de6ceedfd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c40f2fe4-8920-48a2-9214-ba5c3ce5a845",
            "name": "Negative Testing",
            "item": [
              {
                "id": "44eafa5a-61f1-4058-94df-93c22fe2b576",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "05547127-5d57-46a4-94ee-dd98a6316506",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63adf1e6-9769-406b-ac12-27e7bd280aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59064ba0-f35c-4f68-98cc-1894b56450ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58316abd-3469-434c-ac45-81b63d25f672",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfba7e0-960d-4fdb-b044-d083b6ecd77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8bdc49e-8af5-479d-a3f0-716afdeb62c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246effca-abdb-40d1-8a5f-327f14f2ca24",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650df4f7-20c7-4414-9463-4116da187c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2bad6c8-dd85-4d0b-b8cd-0b386cc7b832"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0b56389d-bc2b-479c-9d19-534be1d25c9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bd3fa6ce-ce99-44a5-b3ee-3be4a48f4442",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68e5f02-b111-4fa8-a9d5-793bffb810c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3c08197-60a4-46a7-bfad-ed574b7f8ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20b123a-19b8-46af-bcfb-9d1632ee9fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb38631-c2a9-49cc-92a2-1cddf5f4e239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4032b4a4-3741-4f81-9ae4-4905f6996d9a",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7770c9-ece6-4030-8d7f-70b303e680e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6d25b8c-1d3c-42c7-bacb-a4ecfa2c99ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df584fe1-3a67-43f9-95b2-b561265c1842",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "3a6161e8-7d48-4c7b-9520-5c08616c7904"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f7b93333-5372-49b9-957d-9ca4b61e814e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "81c42378-e922-42b7-bbc8-85f117c66e79",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39ffe0ff-a01e-434b-b83b-216b16262be7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "58e7107c-21ec-48a9-9d6e-23458c7a1248"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e07db67-5d7a-423b-a2f1-faebaa9dea82",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "608db05a-3807-4d03-9215-cdb77439e1e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76408ccb-3465-48af-87a0-3f0ea9012c96",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1c270044-ccbd-4d1a-93e4-7aef588ec51f"
            }
          }
        ]
      },
      {
        "id": "a6304b0c-2d3c-431c-a612-c54e3343bf3b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7cbed43b-3e86-4c4d-bec6-a60ef6827bc7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bfa4b70d-d349-4c4b-8091-8a57ffc2dc13",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b292ddb7-fb9d-4988-8eb1-b3083129374a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b16396-2fc0-4c84-b5cb-5f2e1d217bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c79c3a-d241-4b57-bcb5-e7df3c46c234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16b32d3-60a7-4ac7-b3f3-7a48eabf282f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc7acca3-5b76-41a1-b691-42d0572bd17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19809bb7-58c6-4989-8fba-8e276e4e3cfc",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eaf38d2-5621-4d1b-ac85-defec3d81100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac9b9a1-7453-432e-86c9-ab089eb5bfeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053915e9-babc-4ca7-9451-3c417834e6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1070b62d-3334-4fb4-8557-3bb45be39872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a002fb1-156a-4e08-9907-2ea438c1b82b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08760136-b5ae-4a8a-a493-3718f3856802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01702988-7435-4b25-9144-1837c6f30384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c009d8e-3119-4690-8bfd-27dbb83b6148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c9bceff-e7b9-4e9e-8e6d-534884111a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20535214-3776-4e14-9b2f-2d49dea2e47f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "976d0b5d-0664-47a9-bcb6-b3872d6c25c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8f6b22-8625-46b5-a9cd-725a7caac338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d967caa-90f8-4a72-b3a7-a46d2cadf09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0721c132-b573-45d8-9b0a-65d2052d5659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585a23d0-48a4-48f5-a73c-ce8a18985998",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ecb855-2aef-47e9-821b-68fd20d80ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac3750a4-7a52-4fb5-8edd-5186ee5bc09f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bf2d07-5dda-4ee1-97c7-677fd6217c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c01e4387-07ac-4d1e-8c0a-e1ba97bfc02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ca1d6e-30d1-4609-8ca4-075fc749a086",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e719e9-edce-4a94-9462-8c1d1ac95545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e9f937-7f08-4739-8c83-af373c39962f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f39210a-4016-4cd8-bd25-d99658cea66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e44a39e2-c27a-4428-811a-b831519e622b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6e6fdc-6c6c-470f-9ce7-d85e81398a4b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e027a3-410e-406f-aea0-4e041d296a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e9521b-5cdb-4fcc-82e1-31b5f11a0227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d0f871-3be9-41e4-878a-51e97894fba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb8d8e21-f3a1-40d0-9cb4-680357a43551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1321b02a-2f9b-42ee-ab0f-a8838f4199b3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3207f7fe-bcb7-4145-a2d9-ce5730531f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b75f401-6674-440a-a9aa-70f5b0c7bfb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de01141c-150b-48a7-9dea-12820f919d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39f0b435-46a1-43a0-b195-394863eba022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be31d80f-96df-4f67-93be-ae66f2f31bd4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c16630-ff80-45a0-ba65-a7b2b8d17823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "941fbad1-2ff4-4c43-8268-9820a0a52826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9932a1d-6366-4dbb-b9af-73a5aa4a1f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48fe1288-734f-49bc-8718-790dd1a6b327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b0163d-ccf7-43ce-bd0d-db68b86d2532",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910ddd81-e0dd-40f0-b85b-00edf5c4ff30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab8b62a8-b84d-4030-9988-91b7f2fedf76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be635a60-45a4-4c1e-8010-1cccdca157e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cffa6223-d880-4f59-8bf5-ea740c4ab8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19048a9-1817-40b5-b8f1-e0163bca8a4f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19746e93-ca63-48ce-9c33-2586baa648e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c6dad3f-734e-46b3-ba92-bcb714a859ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c137879-07f1-4772-b12d-be991a962877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83fa4acf-ad67-4314-885a-3fe9c618eb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36610829-43f3-4adc-9585-92e4177ef0ad",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93020ae-fbe3-4171-9bde-c557ade9a1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd749ee-1006-40c1-8df3-25adf01ddf07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99098ef-792e-4086-a972-cf227ad4ac1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d253ab4-c4e7-41ff-a146-fe0b11e024fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46348363-c5d3-4fb5-8842-cd547f943964",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d9f471-f30b-453a-806b-e9ad4a2ee3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a8f0da-dcfd-4d82-80bf-91d70d52a7a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06e5581-4440-4487-a952-caba3dc72372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6277dd43-2273-4442-910f-b56227dd8a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2170eb0-76f1-463b-a6f1-b59833244409",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e46abe3-45e2-4bdd-9ab7-e369f75c1053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c061da-50e0-420a-a6f5-b232793a8708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd706aca-1917-477c-b006-8a2bd47981aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95d8264d-603c-4712-b9f2-0365f33a7156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1171acbe-5a79-4dc1-b04c-5d5a6d199962",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f1fbd1-01dd-4553-b7c6-75e96c8b7641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb96ddc-eb13-44d5-8b78-3425c31a2149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78edde8a-78a5-46c4-9347-fbd9c9dc76fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "872c11b5-b2a9-4b03-a80f-d3853a195bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79786289-6cda-4c4b-860d-6a90bc5e9208",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3278e49e-e50a-4f36-aca1-fce096c4f3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2472822-50a4-4921-bc7b-bfc190a4702e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e96203-d0db-4dbf-b9a2-acee0b4d19d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "271b8743-eb9f-4cf4-be35-ebd4eb757992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d73fd6f-b297-487b-af99-af7cb446b03a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebeb0282-dc09-4d32-9373-dd52a4468a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2b2be5-6dae-4476-941b-0db2dd24a84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3daf2134-d5a0-4bdf-a9aa-fd3550860e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6920bdf4-ce0c-4293-a1f2-7ca13b0dd464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3217614f-6d9d-4621-8905-b236bdcc860a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f5639d-9139-411e-95ed-6325b6f95fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33cac934-57c7-4bd0-bda5-362848fcf167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91ab454-e812-4b5f-b5eb-9821e012ec8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c033063-5c8c-45d3-9560-59eea028f594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54f8a6d-60f8-4994-8312-4a2b8552bfd8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14492497-df5f-4f47-adb2-1ce6ff537149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "375e0b8a-ad6d-45c2-99f1-9f53ca9e17e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1876ce-07d4-4012-8d40-2f25e74a34ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f62586-206d-43d8-abae-b7c87dfd4ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e82f220-e210-4947-a279-63638d678a65",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a533b3e3-4c29-4e0b-9239-843c1cf3606e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079ed320-7acb-40c8-8955-0a0092befc75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc1f4dd-0612-46b5-bbb1-4dd237746fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d449155a-7197-484f-8150-b0cef5e2b18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e0c31e-9024-4ef1-a916-44c2c4567097",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793bea38-798c-4e5e-8205-aed6bce0f26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a16538c-cef4-4235-af36-1ba9927595a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e662200-3cca-4f42-9856-041554d873f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a21a83c-c6bf-4e5a-b974-febd40b09309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b541d4-8e81-4fea-a689-4ebe5872c32e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3431ccca-7b7c-4ee1-b882-323fd5899f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16656402-5ce2-42f8-8f2c-bc22eda70f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba0cad0-d546-4ace-9d34-fb52f30e7a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9ba503-bbe0-4884-b3c0-958c8fb5c996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebf9c32-6b3a-463c-b0e6-287ea465672f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcf6fd1-d41a-4d49-b37f-1effd177fbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b8229c-365f-4025-861e-3e9a8cb105ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3863d4e0-1adf-4251-be5c-5adb260e82ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "247d0778-53ba-49a3-bbb2-1c71c83f7e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e11912-b71b-4a8b-97e2-ffe29fa5c3ee",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc682ec-5849-47d1-b325-af1ea1dc1291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ef67c9-a0ba-43b4-89fe-82053d002ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fcef5b-ad1d-4913-9372-25b448a08848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c82c223-75d9-4068-9c56-f4f86f999357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1fd54c-898c-43c2-9a57-766adfad6d2e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54c56c2-a05c-4afe-8551-6b6aa7211ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b085eb5-fdec-4edf-9cb0-79e968c86944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae11ef9-c306-4f27-a10e-5731f2533fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f73f4c02-4305-48fb-a560-1d1123103347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a40d0a-8a8e-4819-ac9e-29eaaa215af3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4f4aa9-8e62-4dab-ad1f-dccef87cd18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d778aeb6-0ecb-4497-a66c-a5942851b4d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7ed159-a686-4d33-aad7-f871ea1a95cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2419f560-f9b5-4cf5-9e9c-acef6de45d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a87f573-ea5b-418c-abd5-df6541c0f9b6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbac5d5-739e-4dad-833c-db97537a0328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d341d5cb-26e6-4e4e-b815-5075301da603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2720018a-5f44-4593-b385-23f6142ecd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "99680ad4-1c42-4bbf-a16f-2729fb3b80dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d61a6a1-c100-4887-85f5-7211552bba4b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3598e108-404e-48ea-bd6b-730432a2eda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced7a46d-116b-4985-b480-55375071a05b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432c677b-7d3b-49c1-95f4-878cb3ecd23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ceef276-a9e5-47b4-a478-a7e9d26e7da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0bbc716-36e2-4cae-a21a-b74d5b5bb7d1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cf2567-1183-4937-9962-a9605b0e39f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ab8701-5f79-4a2c-8141-5ee5232dcfbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0c66c5-0022-496f-b319-c3eb59e77749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b5cac71-2672-460a-ad87-6a0875959e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c229132-da32-4b85-8399-16ce7318192f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f74c65a-b4a8-475e-9eb4-e239830d1ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5da714-7f00-4d19-9f9b-3e30f858ceb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957bcd9b-4e38-4b0a-b3cf-91491ec02432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "445ec39e-692c-413d-951a-8674b49a6d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5c6e61-bfdd-40d6-b091-dcfcf5f4a884",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a6fe5d-efea-4b15-b955-5eca7293834c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b304a0f-495e-4574-893b-83c99361c2fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5344305f-4ed3-4f09-b3c3-39f7edadc83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f324f68-9951-4c82-be76-02de46b8139f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605b585f-ad40-4190-a892-70ad30e53d0d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd20aefa-2765-497b-8a55-254f5aa56117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df85c2e2-fa5e-40ff-9ff6-1e18abb52bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdcf277e-3954-45bc-bdd4-2c66e94ef2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a94ae6f-db6a-4b37-a69d-c0248246f224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d148ba-1f1a-4423-897f-dfd84ce87bcb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbc5c9f-38a9-4ea1-a6e0-fb2910836b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dad0ddc8-3911-4897-8779-479b1ffb53be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e14bd2-736c-4e31-8daa-3974d1f46af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee31448a-32f7-430d-abcd-fce6e582e678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544555f8-6753-4bed-8b08-39c30453115b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f90295-d1e6-4ee3-88fd-0f5725e4a734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adfc496e-5aa8-4ac6-9c3b-d60e2ca49184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a657118-e4de-4b79-80a5-de08b1b7bb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bcdc209-0c12-4c8a-adfc-d35cb4cf41f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c52d3c-5766-4a45-8a12-e087fa082194",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3b2ec3-f7fd-43c1-b824-d3422b74e9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade865a2-9996-482a-a22c-3466df214296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32cd5437-0690-4d15-bf0c-104c2a2cca0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "43fbc055-535f-47e7-852f-23d40826d1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35d15fc-8cff-4baf-84fd-891a2c33f7ec",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b420f4b2-99fb-4540-a0fa-a38279d680fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a942c049-baa1-4d94-887c-d2b6a4b3b7d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5e86e2-052c-40c6-aa9b-52803b9be24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f74b1d3f-eb15-44fd-b618-faf3c8ae9b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688780f6-af12-4493-bcb6-6a5e5ab226f2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e0b278-306f-4711-9954-76e3c1030537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e62689-0828-4309-8e99-30393510354b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2a2062-5282-4719-a2cf-7b61ecda46bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a70f4bbd-8edf-487b-97f8-00b53d2c186a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3293d3-e02c-44a1-b418-64afe6d139ed",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b237526-0d33-42b9-bd2a-5b5b4f2ee817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aefdce5b-593a-4a24-9155-62b99d00727b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec18c56-b700-4389-a91b-dbef92b07d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b0e970-7f3d-44d3-a72e-e49b23c69110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b96df19-09eb-469e-aa31-8ec1eb5bf104",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb15902-71f2-4fd3-8a6c-3560acc17222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba792b07-da1c-451a-8776-e4c3620f796b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97182092-c07a-4688-9a0f-c904256bdced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0632cfad-6571-4f2c-aa84-ddb8f63240e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82830701-016d-49f1-ae15-0becf5701f76",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64575626-462f-462a-900d-f694aff5978d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667127cd-b29b-4fe9-b188-02570a68d096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ed6ce2-abdc-433e-8525-7b724407b751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "283fef6f-eb78-4836-8a25-dd51b5cac128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb2ecc1-0f30-4693-ad6e-64527a8eb529",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99391bc5-598f-40a6-b05f-4e0fc15be572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2136b268-75cc-48c3-893b-f74aca77ab1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b68e8da-7bee-49db-afbf-cd2cfc9d7e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d1b6cf9-e31d-48f6-a46d-6365856fc8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cab289-02e3-4ec7-a362-0bd5a8b0ac2c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf1849d-8760-41ca-b73c-c232eb301bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a364d7e-115b-4dbc-bf23-79be00472bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2a6a20-ac79-45c5-8761-2316a4766b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "00d0d33d-a25d-43ec-9569-3ec32622ac06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f296198-a1b4-4e5a-949d-e907553d110e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d567be13-26e6-4ce6-8c36-6a65d783c0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc82a211-9e48-48a7-99be-5b5abf5f0a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be245ce9-4e58-4dca-a074-d30d429fbd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c89ec219-c209-42af-ad68-27b5ea306ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40eb81bb-fee7-4dee-88d4-507809c579a8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa305cb1-591d-48ff-a804-581bd3859464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4092be8-2c44-4eed-bbce-390335ab9dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cea6b22-7673-48d5-83ea-b1c34340ed19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5605f43-c154-49a5-8960-e2825fce38f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fdf6e07-9183-4e2c-97b7-e12c059e9f24",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889c62a3-a704-444b-815a-104d5946649c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5925660c-cb75-475a-9953-5ea4a76c8d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238eaf63-3472-4c27-abae-3eb48215bb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ade2cdc-9134-4d91-9536-64d8a73daa55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed751c88-7cb1-4fd3-8ced-c3b5a06c46e6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce7d620-07b6-43aa-b346-c6796e180d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391f4dcc-8f97-4226-aaa9-951b4c51b2d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb845d0-8d0d-4465-ac36-2ed7c703fd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3047c9-9605-4d6c-b3aa-37f763e9ea0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e14947-5705-4857-af96-c9b623cdbe79",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa30001f-bc60-4f0f-8cb0-2e3ad4a3b104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f7a8fb-0f32-4b37-bf2c-c692cee1cf91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d857fc7e-3379-4c8a-9930-7001952d59c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34611586-d48a-48cf-b7a5-9aa320bad289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc40515d-dc56-4959-9707-d8df7e34b291",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32c1dc6-0cdc-438a-8916-f3db89df85dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67b622d-c177-46f4-a809-b1986c1d74f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91220f9c-4809-4014-acdf-c57544d6b197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d729a3-4b06-43bc-8ac7-d411eefc9692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca8c5c6-13aa-4ae9-9212-c383503fc2a4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d0f0fc-d97d-41ef-bdeb-02ded262850d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa1ac30-e6b6-4cce-9871-c1eeeb0c8828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3c4bd7-1c39-419e-8a56-706f76894c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d0693f8-49e2-456e-9432-0cc96dde50c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc926389-dd10-4c14-a19d-6aa22a0be278",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ef4e0b-259a-4f71-be24-e909cbecbf58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89d64f9-b951-4074-ac35-8f8889479590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840cc9d6-fff2-4ee5-aae0-d3765a796bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd4c3391-077e-4980-a726-7f551ab457d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921b73e3-6f30-42ae-9724-69d760a4d012",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7d80ce-a3f9-45c6-aa9d-c38470830a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af99b7c4-8564-4af4-8c62-ff2b87bd3390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4cc1c4-32e2-403b-a42e-1df9e3ceede4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "086831aa-fac7-417b-af04-f9bc537eb668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acc3758-f059-40a8-8bc0-a9e7a1cd7d0f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a011a5d-a6a2-4258-83f6-c3b079c95133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6562db6-6973-452b-9604-2665644fe268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74246284-68a3-482e-888a-2e8ed4971c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7be2cf5-0f16-4990-a88c-e89f3365749c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e5c98f-8879-4edf-bc6f-5d531012ac4c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2617e3-0eee-4a78-8458-1234efb25f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e5dbf3-d3ce-4a48-bb17-3720c3d3aefc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de106667-ad04-4239-a2b1-b46ab4b74f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a8f9165-ce23-448b-a5f3-ddf31da09409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87244f5c-ee1a-410d-a174-bb24f63a9a5c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b393b0-801b-4e55-8d2c-d4be88183128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7363f1ae-d6d3-4a91-8990-46ed4bc405bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127530db-83ab-4a17-9a54-2981f855ac07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38eca53c-dd33-4a59-828a-f6a406eb2cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26eb1c62-52da-4ee9-be41-5fa00563f416",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7528ab11-b721-4e9b-a747-f8cba1896c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e10136c-c7dc-479a-a5a0-4306e2bc205b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af01e7d3-99b9-462e-836c-9eacd8b9de3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4381ad74-7876-4a8d-b578-44dcadbd0069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b35e38b-59b0-43b5-8722-619f3d37390d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb50fcb-c21a-4ebe-a62e-e1e0f44056be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281acbe6-fa42-40bd-b733-119288da3e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f61eb4-3411-472e-99c8-26b419015599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8574920a-9e7e-4b23-ab88-1875168fbb06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e610ee87-b983-4b32-b06b-cde911531e7f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aac557b-397d-4e66-840f-2a699c3fb2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95fd9996-9439-4443-a1fe-576cf1274c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ed36c5-4fc9-4727-a97e-57bce117e869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c6acd07-3cc5-4088-87e5-f4d1f80078af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5ab67f-bd87-4ba9-a68e-e58c0ff3dbf6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339965fa-cda2-40f6-9743-e64b7e2151c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8723faac-3f71-4434-980e-06ebbc3fa3c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3788efa-4b9d-4a2a-8d77-278c3aef82fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b124a5c0-6f31-4307-a375-dae6c1c4b28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78e4f01-d0e1-45ce-bf36-06aeba8b636b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7a1c97-7d55-4de1-93c7-c9dfd3fbcb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d3726b-ad00-42ee-9441-ec5d257262bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad120d82-bccc-4776-a17d-1a2036fe17b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c954f12f-5fb3-40ca-b507-af28b3c35127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1647d9-ff51-4c9d-86a6-22f5d5122b5c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a322b9b-6591-44eb-b02c-cd86fff89a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e620cf-41e2-4be4-842d-6863d85e2ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af294be-92fb-48a2-a07e-1521f398bc39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8be6f4a3-fdd3-4268-a128-8a92534e953a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0e2f3f-7fb9-4312-ae98-76f163dc720a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60205b2-51ba-49d3-8b95-314624b2d5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8e65c1-73b5-47da-a298-f5410dc1ce29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c23bd01-f395-4439-adeb-466922ce804a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fee47f9d-d3b8-4d28-b658-78252e13c928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84a696d-b7a5-4eea-9705-ded385f05a57",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6498b3-fd0c-4f62-b9ba-75bd78c9c1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e16545fb-95fd-4a0a-a53f-60d2ce0b5375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e7ed97-ca8d-4c4a-a872-dfa26cd08dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc4b9a9b-1057-469d-8b85-1428731a0324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e306679-94bb-4337-8475-157ed6a7b915",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb17f793-6f94-4e90-83a9-5bb29ffd4f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5c5aed-58eb-44dd-bc85-f41406a0d820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdc0a13-87ce-42df-a46d-e6512742ded6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b17c1091-7b61-45ad-b2ce-200f950615a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aedee37a-7605-4a7c-af3c-9c086a19d86f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9f367b-4020-4889-9834-f0905e76000a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c38392a-3bf0-47f5-838e-626424360e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76be5990-09bd-4a7e-a560-3e08989819fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70bd7312-0d97-44cd-a953-8f76b54ea42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10844eae-1d19-4f32-b634-040c9b523e4b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af9da85-10ad-4a45-b4bf-ae047cafc60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b83817a2-38af-40d0-9933-e68e0c119dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ea2056-c514-4828-beed-59ee2b2b3447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "359eff20-3a67-4589-a0e2-15d0fd4a41b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557d2b33-3b17-4f48-a6d1-c72cbff87723",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b27b55-f10d-45f9-af5a-025b227cf409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad26bf61-bc5f-4477-af44-006b6ef1504b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c392c932-80cc-4adc-a014-cde7e6061f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "557dc405-7b25-4d84-bd0b-00a3a125cc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ce538c-a7ca-4974-a39b-cd00af349655",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176ee8ae-2d58-44d9-b541-91930a9dec3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf4baba-53fb-4048-ab83-56c6608b80a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b602c60-881d-4f87-97ef-66df7d3243b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8c65d83-3584-481c-8d81-5c5345b1a5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc1e825-a398-450c-9c3a-46d9fe075288",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05596cf-5d38-438a-ae9d-8cead8f70d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79fadc6a-39a6-44d9-bcaf-3155b377fcce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa4c6fe-a278-4f90-a079-e265a061af90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d77741b-e9eb-46cc-ba1a-b3147d76ac95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bbc90a-c52d-4154-8940-66b5af5b24ce",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ec0bd7-b0a6-449a-97dd-ef9cde915744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c889d656-7ac5-4879-8dd0-93f7af7ad6e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16b9b28-f89c-428d-a816-16e9d0b37e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "96de6fd0-34d4-4dfc-8f21-522f60b4098b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0c6840-4e22-4211-8696-129327f40df2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e86eec-adf6-4a0d-9033-7e00a7565944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abeb1927-7239-478b-a4c3-ab21cb8917a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e921a6b0-f891-47eb-8a44-94150dc09540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63899db5-2c3b-419d-bc8f-487c96ed06bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6705c4ee-09cc-4a6f-b55d-de163b088748",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4c98e2-1d88-4b43-84cd-8f0644793b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bded955c-902a-4af4-8be0-7f4b43256ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c0863a-cdb6-4e89-b1d7-b4b5b0fbac1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d958716f-a8ba-49ce-b364-73801673b88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1326dd2-7c0c-48c1-9456-1e7056f8e38b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d84c34-f048-43f2-a23c-19568412deb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ab92fd-6912-454a-b6df-afea3430a359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a790ac-9f0e-4252-8c3d-adf84b09c033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd01aa4-acde-4119-bbf0-18281e5d3c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5751d716-cb9f-485d-9cdb-8e9d68d6c3fb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9481669e-eab1-4200-9f21-921915c6553e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b4dbc5e-8f46-4976-8cbd-2ba3b17a9b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596cf931-bec6-4533-8581-c0de0a0c8a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d07716e-2574-4a48-916b-8fffc03027d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f203cf-adf9-4c40-a115-b3d0bc12fbc0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c9725e-bb93-4469-afe9-65ce0a610e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab43236c-672a-4da6-b1ed-1efc36cf8d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2190b6a3-a993-4664-92cf-ed7d811ee0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c0c1a5-b3cf-495a-b165-db6bcfe15772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55176f99-4d66-46d7-871f-3f7e66ea126a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e45583a-b428-44d2-89b9-cdf90a93be6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73b79d2-b1f6-40ee-a479-8f73e48e94ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf7feab-057c-4e1d-a4fc-6882b96786b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca87ff1-55d5-4afd-9898-eae49f8b7f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf51c4c-8c82-4b13-80ac-026665de6857",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cb32bc-eee4-4882-84e6-0c86c70791de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "564998a9-987a-4414-b4d1-4d3f95a2149f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd5f398-e487-4401-a4e6-547af48772cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc63e92-8a0a-4cc3-af49-56aef33e833b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931081a1-b763-469c-90cd-9b91d7370bd3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c1bb04-28db-4cea-822e-69bd50433d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eca176a-85f5-4508-851a-72a652420dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d85ce6-21d6-46da-8722-32120e4f70ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48c2c444-4d5e-4f17-bab3-881b7e9e4198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647cafe3-c897-44ea-937e-e923b6bba2bd",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7473464f-d4cf-4a0f-a6ad-2f8ae0a566cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369570a8-8d83-41b0-a240-e70741665d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1735bc31-632a-4d88-a3e2-3a5768335bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e3a52c6-cdf2-42d0-a8be-fe3dd6b19834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298f42b1-98a8-4047-bab1-1236d248b244",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654fb5e2-980c-4993-b01d-f76e7131a146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955b37a5-ab93-44cc-b56b-4bd80411d368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00903197-b8a4-4998-9133-79007f980dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5b4bb7-279e-4271-a1a8-eb37c833ceaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef5d87d-258c-4947-a061-a83b99aa5be4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c9eeee-4e0d-4483-8ca3-856253d94af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dacbc787-f40d-4707-b9d9-72f433a63afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96849bdd-883d-43ed-9bf7-dc8683b67b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c072179-466c-4a82-b73a-aa511c6c89f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1dc886-0ae3-44e5-876f-6f88653a1ca1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b5dddc-bca5-4779-bbfa-aa848a4c5abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c244fc4-024a-4452-a1ed-fb6eb02cc8f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e850e46-acc0-4e97-9453-cf9173febfc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5a2c52-b56c-4ac2-bef5-272114ab3ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f5f567-96fe-4630-a603-d2e3c08454a2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb911648-0b8b-4a53-9a60-fdfbe494cadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9389b517-d502-487d-be1e-3a95bc5a9498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a29aa2-cbee-435b-814c-34c3e83460c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f17e9466-1b85-489d-8ba0-19026a739ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04db7d88-3d8c-44a5-91e3-961b86118daf",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7054392-3d56-48ab-b35a-41e5de83bc22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b4afd4-a814-4259-9a29-4e4738866464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6383d0a3-7957-4ea7-af28-4e270f7bba03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f161845-cc54-4319-ac57-af4ecf5970cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a3be5e-62c6-4e25-abf2-4a489adfe375",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634c5ced-4090-4ccd-ab1a-05be32a21997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc476a2-0681-40e2-bb9c-24e2b758df08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc91fc4-acef-4d13-bc03-9b70f8bcbdc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f818b74-2d61-4c26-91c3-1a42a08ed709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5918ea-f86d-4121-a63e-fd1a276dd050",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d031aef-9c56-404b-abc4-913746f9a316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "440ac73c-bee7-475f-a5a8-00700c860e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ff51d4-ec3c-4726-8a2b-771b918ce224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c0da7ca0-0328-4adb-93c1-347bcfb77735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827f1fdb-da94-462b-89dc-d3a1b23c93d1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db610d9f-34ce-4ba9-8e08-03caa538e7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "740c588a-42e2-45fc-9543-b75ec536096c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbe18ed-bbd4-42f9-b2a0-377f9dd08b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa20abba-e37d-46f3-8b19-51d5b8705648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48c551d-b7bb-409a-b9e3-1a5bf4ff71eb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd3ae23-cab6-464c-b53b-63bf2c4877b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "479574f8-74d9-4bad-bf3c-f909d3822ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584af6d5-5275-4924-bf04-45feaa91a25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9229d474-8a1e-46ff-b359-5cfaa402c4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db703f98-97ec-4274-9bdd-16f8d33978bd",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1c3829-7558-489a-82cd-1cf5ac495401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee910163-2ed4-489a-877e-060407338e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1909896a-6cbe-4fbd-8de8-0b32b8891aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7267e7-2e12-4fce-8cfb-3ba08de833bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe6697d-6af7-4e69-81cb-fea56a8d0369",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39697489-1801-44d9-a807-19845c8ae4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dcc51a7-460b-4fec-b408-df41a2e365ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b39bbcd-bb6b-4f68-902c-b7d44d6304a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "98f79d36-eb96-4a48-8681-d9d7cf1498f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91bddfb-91a2-49cd-99d6-2f97cec1164f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f366ce4b-1361-4829-8d58-47825e743ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3643a8ff-4dcf-4ceb-afca-f04a2261be1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2699a9-bae6-44d6-ad03-d9e3bf66c410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c199ecb-f652-4e09-afec-78b94d9cde2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ac1c17-b2d8-4fc2-ac6f-8b064b1ac0b0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186f452e-b066-424a-a50a-4a31d4fd9975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cae3a18-50c4-4031-a21b-99d3129407b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc02f43-55b9-4a6c-a427-5fc32629058e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e872928d-80ff-4f16-806a-548f646ad46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35c4f69-47b6-433f-b987-58f7c4f9ff9d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e5a5da-07e4-4c2a-ba8b-33513a23c03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f887c8f9-1e80-4b66-8abf-fbeb17602f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617bce81-a9b3-447b-a004-6fa8418afa0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf9d2a6-ae77-473e-aed3-c13857704a94"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0049b555-46d3-46cc-b75f-89ce695a8476",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36cef345-22bd-492d-8ad8-690140d5afb5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc25a884-5c0e-47f1-85cd-f469c318e8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f772f75-c04c-41d0-bb9c-6dae4f2fd516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c41f834-06ba-4049-b0cf-c0afa6814159",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "917fae38-6d83-4884-8e62-665e321bbcdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6c641f-3721-45f0-9ecb-bc75af4f2487",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd27dcb-58a6-4b60-a460-4244de1e6914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "644f5ca6-7a40-4d7b-a6b9-0f40441ebc8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4c9c85-557d-4b90-9d62-1872aea60f82",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "36c588f7-c486-4081-be63-a05dd1dce2c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f205608-8d66-47db-8336-8fb0e32dc990",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "956d9572-2960-4191-99e6-4214f2fa0a14"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be4a95d8-b1b1-4c9c-b45a-72cb09d32db7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32139d40-7542-4a7f-b4df-c3d1914c4c58"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "008d4b5f-aee5-4a7c-9a44-87d3e8246c16",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2d4d684b-33ae-4761-925a-eea3337ebaf9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d5d3c059-db38-412d-ae55-ebcd36527a5f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "139279b9-870e-474c-808a-aa43c28fa07b"
                }
              }
            ]
          },
          {
            "id": "55a657c5-45cf-4caf-adea-b0e83ad1d9e2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3f70aa5f-86ac-4b2d-9e51-2074d18f195b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "895b6559-ba4a-48b4-990b-b8b19d6323d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52d55db8-99eb-4706-b24b-db9e677da406"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e1a7169-d1a1-414e-9a26-6c2b6cab8c1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a32e2294-f9ba-4fa5-9750-e7e90ff5255b"
                    }
                  }
                ]
              },
              {
                "id": "acc9b193-b61c-493e-a86e-b3a93ec92dfe",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8289330-2593-4e6e-be85-250ac78ad1e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e9d5037-2e30-4537-a5bf-ed4e6b7cfd78"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e2f0fe0-2a7d-4660-a2bf-1748a3f391af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2c9f711f-01bf-4a21-b7ad-e129054300f3"
                    }
                  }
                ]
              },
              {
                "id": "d66f4b6d-3c9f-4649-aac5-9cc1f6083a2b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fe73312-4661-4518-8ba6-f8c0c0a9e02a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e75f95e3-7cf3-4852-85ab-7dd894ce4980"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3615d9de-eb34-4df9-943c-71419bac5093",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7af34eb8-012d-430c-b60b-8eec7e856d2d"
                    }
                  }
                ]
              },
              {
                "id": "34744174-9c44-49e0-ac76-49d318b9ac2e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c68dfc18-2958-4d3f-bfb8-077d3079d1ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26d3789e-657f-4e11-9849-f35919e12f42"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de0c1d1a-c289-4d33-a2d7-4e1a5a44eadb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b327134f-0895-4fd1-bae2-b9a3554dc807"
                    }
                  }
                ]
              },
              {
                "id": "c1071eba-6fc7-402c-af1c-160f0b8eaf02",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9af339f-2490-494a-a6a8-d651b006cad2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "59e083ca-a999-4020-b98d-fd2daac79c1a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d161bd42-d647-4864-a4d7-c7fbc1209791",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "04f892df-b676-44c0-bbf5-2b6052b99ca8"
                    }
                  }
                ]
              },
              {
                "id": "2fc8baa8-c668-4aac-b0ba-ce69eb1fc9a2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bfe0bea-d0d8-4d20-a299-31bd9b8b0928",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15c3ef57-b903-46c3-b723-75ea7a5aaf06"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50611884-be07-4574-a902-54f83755773e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9aba49db-ac05-4222-8c4f-0dcb341d6172"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5ebc1aff-0230-4cdf-8505-f45d7c7f693a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3964e5f0-e33c-41f4-8764-1385106d21b3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "920a1620-540c-47ba-8e09-7bca49adeedf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a101c2f0-6b1f-4dc8-8ff1-dddac4f4f3c7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef9eadd4-cf06-47c8-9859-93de5e12146a",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e46a13d3-b5df-48a8-8b08-ab722b5e6345"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1580a10b-1a71-4094-b2ac-7031e6b06219",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "473f3016-94bb-4cf8-b181-b006ba241061"
            }
          }
        ]
      },
      {
        "id": "4d3e11db-d6e5-428f-885f-caed1d23f6ff",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c6d61302-0511-41d8-a369-6589380718b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d03a8c8-4b9e-49e6-9e1a-e452de96db93",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ab74e39e-fbc8-49c3-99c7-d1cb9b9dd682",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2484928a-cb48-4edc-9158-dfb6be18fd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde992fa-9ab8-4c97-9994-c9765e547d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15264383-37be-4502-902a-df2be578bee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "14ad97f3-2f83-4749-adf6-dfac56ced9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3728f99-b326-4f86-a682-c787fc96aed7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ae74df-bd23-4816-8e99-538126f22874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b9a016-9a8f-4659-8a67-f0e1b937c732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8faa2558-ef40-4118-b791-5627a4232207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "84dc44aa-3870-49da-8b39-e2f2bda972ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43d3f15-6182-4dad-850f-71146cf93aef",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22e39e9-3479-44f5-9f3c-7dc00c22d873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1be432f-f8e9-4b29-8ea0-1c948325abc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cac5a09-fd30-4e15-ac3d-484c1bbf22bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be4ba2a6-269b-47dc-b92f-dc86fd1e0c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6af06b-9a79-4a91-9f98-479cb5034925",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e52ecbc-a31a-46c4-8f24-c80d0249c8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46bd5269-2752-40d8-bc72-54edffe317a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc14c07-4cb5-4e49-aae4-ad032bb79074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4611949b-a816-4cd1-9b9a-044f073b7281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3826b5-51f5-4010-a208-e4d458cc75de",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6df97f-82e6-4006-b465-993e22b5dc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa7cd2ed-4625-4f3c-9543-9b36f8d154c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51017892-f60d-44fc-b632-34d89750cbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f37407d-807d-455a-99f3-8e18dd1f7b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afce315b-56a8-4ac3-a57e-7081347678e6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6364731-d25b-4c4f-9d64-9aa08a5d3040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b8dded-10d7-45bc-b06c-073452cf79a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36920e4c-9793-4289-8229-1e4e7a885a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f1b661a-4895-4e8f-9c84-f406a874620e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee8bbb5-0596-4527-9260-9b3bcc7d9c1a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf00a1bf-4802-483a-9715-e06285aebb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de6b430-d288-4178-93b2-7d085968ac49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7c0e39-367e-4e95-9ae3-9ab9098fa136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9944afbc-9616-45b5-a857-702c0200f42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a71b5b-16fa-49b4-9473-30972d6d19fa",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5e92a1-c7ce-4c3b-9806-32f5139d09d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d24e81-c1c9-45de-84dd-49321a03438b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8fd814-7f2f-4551-9b78-1129fdc8c4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e313ffd-eefd-4eed-9da8-dbf84ac386ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd6fbf2-9117-4d88-9231-5a1252789c55",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1afca52-dcef-49ef-b23a-386e9dd702b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6311876-5c56-4a5c-aa84-ffdc98aa23c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbceb81-3dce-44a1-b118-44a2579403d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a441f577-5ddb-4392-80ec-186deae7cf9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839acf8d-8587-4ff8-83d7-41dcdbaa0022",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "959b9e16-d676-4f5f-89be-e0d30b4d79b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd092525-9d2c-48b2-9629-bc5319f35248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993a5b0b-8013-4fc5-8190-87b6d39f04b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb8e9ca-cfdf-49bb-ad08-b47a52fe3aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b9aea6-b515-403d-9f5c-e7a1836cd88e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921c9ee3-6990-4183-a4cf-b06c32826576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc74a079-704f-4e55-a4f6-fa8783f25e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fd7e49-4e0a-4c8a-a24a-f64b66f42b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "44cb6201-eefd-46c6-959a-d3c257d346b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe161ab-c773-43c9-b189-187ee1084401",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d70c6d-9327-47f8-ae10-63bd4ac6898b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3258a8b4-b81c-4557-898c-a152ddc49510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c159902b-a685-488a-8f8c-9f8f1ffaef42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa99f41-b3af-4666-8296-fc4be82f81fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e74083-2c7a-4663-9ea6-843160d82611",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e672cc-d5e6-429a-8c3d-1f1e86b822cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ea2afb-547b-4e3f-9394-50d93c61ad7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86720fa1-efce-4212-aa11-9ea72e6d5d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f3edd8a-d009-4ae9-b43e-fc5b6205c80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb2e08c-5aee-4092-8e16-0c8653320c01",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d45ac4-b373-4a0c-a944-e8358911b600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf6d71b-3d16-43c9-8521-050da4db6dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ad6419-becf-44e8-8b2c-67953ee25593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f56d729-3565-4ce5-af67-a767c5965cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3824994-d9db-4016-96d7-2b23fdf8fae7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7180b824-a45d-41b4-abd9-e4f84c1c8d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f526af-6f1c-4268-aed8-3a2cc607c48c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baea7919-6305-4f0d-a74c-965d08dffed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd766fa9-91f9-4eb8-9509-1ca68f845dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9666320-210c-4e83-b3b7-2938db3dc486",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4194402b-9ffb-4087-b2f4-7ac2c80e397d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f80f43-3d16-42d2-b9e4-f744f6b3953a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6db854-24c4-4bb5-bc6c-68b4317e15f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "565c44af-700c-424c-bd98-c3661b62307a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4caf61-ab83-48a4-b1c3-6d22fa0717dd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6131ee93-7a4e-4967-bef4-9f334f367b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdcff77a-5a31-42c1-839b-2498510b4493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4825b125-fa6e-4981-b473-83592ffc9703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5e5158-1372-41d5-ba19-a76454c5d3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868f9742-bb7f-4822-83fe-a5f0d9787324",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca60459c-6772-4c0a-83d0-3395d5cb475d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0836a377-3c8f-4f07-a035-dd9dde770e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc279c4-1947-46ef-b135-75bc98d4a375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "48482c35-e403-400c-8f56-81f7e14b9e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e7a854-c6be-4991-b0a2-960de9efc953",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991f4b17-cb0b-43a6-ab62-040a90e9d0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c76f43-421e-4eb9-879e-965fb3a0c933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1db30fe-88c6-4b5a-b9e1-5595e8d75701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3c4156-bb62-40c6-af03-e1f8f79bea10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ce4f67-aa5e-4bad-9f25-e76cacd36fd2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0813f988-5c9a-4df8-9f40-4a51a73dd25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1276dee-5c34-4578-8bb3-ef3ff8bfa5ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18b6a94-2753-4e39-a147-ff8f3e4a6002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fdda785-475f-4c91-8d2b-d72b286428c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778b7b56-7251-4b6a-a683-b30aaa8da069",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fc0552-9e45-4623-9b3e-29749d623e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3b7fcd-3e12-4066-acfe-2ff4c7ed7bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32791c65-e654-48a1-bd2e-16213cdf431d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8845bc2-0c43-4921-9861-17b067c023f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa23867-c1d2-4b39-af31-46e3e31922f6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25971ba0-0aec-40cf-9d36-65dda0da5d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd151459-7e56-40e6-9af0-21cba10a4e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4ccabf-3612-48da-86c3-083da389fbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d683ec0-383b-4e5e-94e2-f416eac90be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418a1f33-e31c-4128-89a3-ee1b0bd92492",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650cee1f-0e9e-4e63-82db-65ae25755671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d6034e-9214-4134-8922-a2ca4bc6d8db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358b8d24-472c-4c06-ba69-589240b2f102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "171cfd3e-fa87-4f19-8391-10f396ca0fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444d10c6-39e4-41df-b74f-00c3a9a3940a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42ffe48-ca15-4462-9b4d-a0804e8a0bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa3fd75-9b39-4262-8319-16c1997ad0e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdcb5741-9439-42b7-8078-a2b499cadc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c5b660b-f819-4d62-850b-e6defc418525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717cb199-59e4-4c74-96b3-5d6040c9b635",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116e7e53-312c-4041-8362-e8509720cad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22084079-37f6-41af-84c4-ed1e21fb3fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259ca287-dea8-4f1b-9467-adc89a901345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "403ebb0d-d095-442d-9d2d-bbe35f6661a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6225164c-2848-48eb-aa91-37fd4c6b5e4c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f128927a-af74-4882-b598-95e2e40767be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0067acf8-e666-489b-af88-9eb9b7a35132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59d663b-f8e7-4bfe-a58d-9eb3d3a59d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd5c58f-5614-4f4d-9915-4b1d9cab367e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c03dfcb-e4fb-4c21-aa0e-60ad28298286",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d72e639-4a17-44e8-9667-c005d245a70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0cd8b5-fee2-4838-a40a-385930d9e1b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d970175f-dea9-4e17-9fa1-d5c630d50377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87302e06-5a25-4bcf-a8f7-667d2547a4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51663e63-4cc2-4a42-9e15-54916d4d253d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3938b21d-94b9-467e-b0c8-76e111e59e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd13a755-8d6b-4d9f-a385-de2bc6036cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44804da9-8e5a-430d-917e-e6f8ea3e2fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "111315b4-c277-4e91-ad72-fc8fccdcb9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ff0a38-7df0-44ef-a2a8-da82a89cc2d1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b345e53-6457-4e39-89e8-6b5f34e55036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c8eb35-d92b-4f64-a3f9-376c177d56c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326d0ade-e028-4435-8107-d516364b3da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45ed128f-1f92-42ae-ab0a-40ccf8742818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9949c9-d77b-48fb-affd-558bda6cc62e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b43cc9-149f-4de1-a80a-9e6dfa8f8fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621b8962-280c-4bf0-8957-3858c671adbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d09d0e-3d3b-4bdd-8aea-e0b8dfda0677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a1aea5-43c9-4144-8908-01b90f6b073b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f035de67-dfb7-4e15-964d-56c16f440a7a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef34387-6ccf-4cc3-b7cd-3761c7667820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5505a6db-8cd3-43c4-8aa1-e0482951af81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4588684-71e6-4dec-b56f-469c35785f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b31b3e8c-37c0-4a05-8c6b-92faaeedb827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79154bf-caa3-4662-88e2-cb0c075758a6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5d110c-5e93-4dba-873a-90f4748c7f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62633413-ef7c-4815-a33d-91bfd7616cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d35fc2-94e8-4bee-b564-cf8ce8616261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97d3b555-87ae-4304-9874-e73c2211d8d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "80c6489c-380e-4636-a24b-918506680ad0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8157a8b0-fd1a-4dbe-ba7b-4d6249c29074",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16b1903-2bb5-4e1a-a504-cdde87411bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14bb5cc-8287-4d65-afad-205098d2b41c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4ee222-3569-433e-8c90-14addef0ebe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee665ffd-90bf-408d-be70-b424db07fb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5954965-827a-4d39-9b88-fb16d8136449",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be59ad46-432c-4d26-a2f6-4e4d46e3978b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "ad029f02-cdd7-41dc-b0f1-7e55454da295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f11f3df-1e87-4fa4-a65e-d4bac4bdd0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bd54fcf-0929-407a-846a-c3830c7896a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2adf1cd4-cea9-43a9-ae44-3a5964c76d0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f28173b4-88b4-4ded-9360-e783976318ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d9ceaee-f42a-4c5a-9e75-9f7762ed4248",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8892defc-d594-4771-a2f4-f974073cf8dc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c7602c5c-d4a3-4318-8f10-1c6ed05e3618",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f1486a5d-6b11-4921-b6a6-b4e101ad9474"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91e5995d-1afe-47b7-9676-11ff1a407dd8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05b23500-c3f4-46e8-9437-5ba1235f8ac8"
            }
          }
        ]
      },
      {
        "id": "f8925658-77f8-4f43-8d96-c022fb9c13d1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9f6ff455-88e3-4314-8755-7e8554cd4909",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7547389a-9f05-4940-b0ea-ddc6168980ba",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f97eb021-04a7-4367-8931-f89f8a9dd943",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "550529b0-1abe-4a4f-90a7-3b38d250d153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffabee18-aad9-4b80-80c9-9778098c3a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4101f2da-a5a8-4a29-858e-729e61b779a6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaea9e14-5cc4-4a44-b487-f41c47e6887e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9786a8d-3a9d-4c83-8e17-8954d9ecd562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d88395-6199-4293-80fd-4bc5d8bd5cee",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f52f210-d142-45b3-b4e0-ff51d8d8fb88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4629f09d-2963-4fc2-b496-a8e0814c8275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b969f252-332d-4ee6-b31f-003ecea28c6c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09e6a3d-e352-4e92-ba88-94fa188d72f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06c0a3c-facd-4911-96a1-fd13d4a3d5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad6ce6d-5aa8-400d-ae4f-4338ea5cdd2b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e21535-ad82-486c-a0ca-e1a872c21dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "981ab2ab-268a-4445-b9f8-7de35080287a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46be74e9-ba21-4ba8-ad83-c3fc8a307405",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8804a7cb-633a-4f4a-adb0-a0e89fd41699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "819aaf9f-7a6d-4ea2-a4f5-0cdf35a4f0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e50824-5928-4aba-b5fc-3ece8a7a7fee",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43633dbe-4724-47c5-846a-fa3ff1a85891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67b804e-b33a-4eff-ba88-cfb5f542a080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4707d63d-d83d-4daf-ace2-577f72ac4b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661d2f5e-15fc-488b-a2b6-70508d93c860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcafb458-2f91-41fc-adc7-e38e21db4145",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556bdd40-8c37-4b38-9727-f463b3f13407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72630dd3-cd19-4715-aed9-3b75af623eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "def8b1b3-9f63-4d8a-b88f-8f1b27825464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "093a44f6-59bd-4efa-965b-c7ac21081e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064e35cf-9ad3-4fae-981e-f39c584f3aaa",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016cf4a4-4b90-440b-80bc-f12d26139cad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03a7b517-909f-4df6-8396-dde3c746fb75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1a79d6-662c-4c33-b589-87a7198597cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29723e45-d6dc-4617-a950-0904a01368aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa692b5b-6c3d-4157-b2ee-ca7787be08c6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a211bf-0f77-48d2-bcb7-67bea441e6c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0086d001-fd29-4a39-ad39-e4b026ed1008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb037b2c-df4f-40b2-9d13-118727f568c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761af837-d485-4e73-b994-f2c88e618f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8d5f7e-ad13-4089-aa57-25cbf9e86cc1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4753f635-450a-4419-b8e4-bf5192083f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de92ff67-3b77-4c25-8bbd-00c4a48cafea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91dbb731-fb12-4ddf-bcb5-090a07857393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb89c65-7070-406a-9fc3-6dc4a8756e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c490c1d-5a37-4194-a34f-ec48ce196f5c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe622a4d-5e4e-49e7-85f8-89813c7102a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ffe631-b2ac-4fdd-8786-13e5795af1d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77830721-d4ae-40da-889d-0f318e4b41c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f06de49-dc4b-49d0-bb9c-285086e44df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c974a86e-7e96-4b89-9007-cc43a36e56f4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d4af5d-f7a8-4ce3-b278-a7fa6f0dc924",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a4696ff-1923-4cba-86ae-7372e876b403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1e0df3-1150-4f70-b053-f23a54ffe7dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6fecc8-5eed-4428-9e05-d5d2af0840ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6c5c6c-51e2-4399-88bb-5794e9e5764a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3acabb68-4259-42c4-8620-3eb6b55395b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f77dc7c9-c572-4e33-9b5e-409fadbeb3e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34051b1b-fe31-4d6a-8846-7dead70bfc08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9fb81d3-0ec4-4145-80f5-9f48aa13d1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ac1cca-f676-41cb-a785-e95a98428d86",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2cf7686-f72a-4bad-a9c8-7a9cd14e961b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d450567f-e395-4ca5-995e-9c9221221653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3cffa0-be57-4561-8277-5e4a8b09d49a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd830db-e592-4cb4-ab8f-f3580e841eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1e6b44-c6fb-43ba-9f3d-a33e5fc34a05",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dccd7f-cbdd-4c3f-bd3b-94b71cc7b89a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8e431c9-84c7-46b1-a873-59f4a9db24e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1cb24b-323b-4dd4-bca9-792f78b1fd73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e31f5ab-155d-4433-838a-145997b12c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4267a50d-819c-43cc-a43a-441316af3aeb",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fdc918f-ecd1-436d-b2e1-2e954804e009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403bb122-68dd-479e-849c-018f6cb500a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6293e58f-4497-4f5a-a805-575049e7f7cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e3d3f7-3ea7-4414-90ba-9bf892768623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7425f6-adbb-46ec-81c9-4770a28005d9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993a2386-6096-45d1-ac6c-a9ca67f84dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c168ac16-44de-4d2a-89b0-7985c93dd346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce8fe5b-29bf-4e59-8659-39ff07fc2aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8150b328-2aa8-4ae3-8092-2e01912b22c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e60e0d-3681-4362-a5e3-91e66a4b521c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78308765-1116-4314-9e70-405c82480f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78533188-5c92-40f5-8d17-276229d630c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98bbf9c-dd66-4117-b890-e74e0e306eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c4bccd8-b728-4925-b01f-98892293169f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb2f39a-5426-4388-a723-f4b56961c0a9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd9251f-7001-4860-8fc2-3419a14a8f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76347a1e-2878-4355-943f-e5bd66a381f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e6fa09-2844-479f-a139-14ba2e6cd612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8cf3e4-8981-4a13-9e85-9d5093365cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456a2b2b-0649-4b9c-812e-0a842ee23c71",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834e37c4-0fa7-4284-a0a7-517d43a528de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58dc6b12-eb07-4dd4-b738-f8cc6f96160f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff507152-6fc2-4336-b5e0-aa5177e410c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf666eb-127d-4757-b3bd-83a1f2248175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c8ec7d-f586-432b-8686-2319038460d4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd73423-e66b-4ccf-852d-adc8599a2d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0670ae89-0cb8-4b04-bfd2-49426f2171cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b4a524-c150-4f32-bdf8-336fd530ffc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb8e1df-0a17-42fa-923d-d01f5eb735dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0885015-bf1f-49f3-ba23-4e40579a4c42",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d4d07b-e85e-42f2-9365-a1fc9ba25ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3bafa3-f31b-4ceb-bb4a-1ca487d9d56e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa72f5a-916e-4e6c-b3bb-dd6ca1f2972a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "314b2f1a-39aa-4ec0-96d0-b5f46dc540f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a9eb33-aa7e-47d0-a28f-3123b304ecaa",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c88566-bf7c-440f-9504-3594282bbbfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eeec8fd-99ed-4886-84e3-070f973f45ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b621079-4fc9-4f03-9094-81c69e7596d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d59118c-ad90-4ebc-812f-0d90e6b7a2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bd7d92-74f6-4f39-921f-4ef3c08a78ef",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066672a7-94e4-44c7-bb2a-ed14d5de854b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b925fc7-dccc-4249-8252-75c8036f4194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ede937-7023-4e1c-bd03-53761e176830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd28755-25e1-4bb8-8b5e-87d0fde1c45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e69101f-76e4-48ca-898c-fb1c37e42da9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c719cd-c477-451c-88c1-977a8253e484",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c660ad46-ac08-46a5-8e1a-2b9468f3832e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62918cfa-5299-4c3a-8492-643f44b57c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d8a881-b331-46ca-a2a0-571d3f604705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8371d1-e4a8-429e-8288-6871adbc32f5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8875cb3d-cd16-41e0-b503-afddc8bb3bd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f49559a-2f9d-4910-9aa1-8939fdf23d97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88df7bfb-302b-487f-b4da-f86fe27ab50c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880997c9-6792-4160-a2d2-9f1d23345e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d207389-163e-4709-8449-99b2f5e6302a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1731f0be-4ee7-40e5-8af5-2766c06e7bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72192396-2722-4dce-8333-1c7d488c3fca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5797f5-118d-4ef0-bc30-4ce258d8a7ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ced1277-f54e-4361-a6cb-ade0b95a8c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035f604c-bf83-4b3d-8978-68953c199b49",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35e6be2-d8a4-49a8-851c-896fe3150167",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b87ba739-b564-4688-9896-5e7ecdad954b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e26e20-8fc4-4613-97d9-6eef93395601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5cb9bd-68f6-48c5-b22c-2d2bf49da8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5159309-aa13-48df-b05c-d7aa952444da",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45447f2-dd64-4023-9fd6-adff04ea6cdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01260c72-2f11-4468-ad27-5835f2246a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "923ce613-ba98-4a83-b34f-9aa1cd9595d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc53b76-33f2-44dc-9e4d-1cfd0009a187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe513f1-c259-48d4-918e-4060c4bb6c87",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66efb1a-643c-4ce4-a3aa-d0cbdf88a29d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce31bdc6-cd10-4565-9601-96e4bfb253ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f40b76-8be8-487e-9f6e-4852992a6248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d34678d-ac69-40bd-bd04-e3202d70ab71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18afcb6f-c9e9-4bbb-8a6f-8d4ae7feb6e7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f47e0b8-99ef-4a32-8f51-2d622a09e139",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8ef4958-ae8c-40b2-a941-6b83bd94779e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e771447-8308-4154-b6fc-47166c191bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d736f4-3f88-4862-a1c3-a06254ac00c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de175d6-fe9e-40cb-85f5-a10a42492f0a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8588d664-87e5-49fc-84b7-84428c4ab337",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9af3723f-0e46-4158-a7cb-734257f0a52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04173264-ae5b-4a52-acce-6906300c005c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299fbab9-87fa-4baf-9586-ef762573dde7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645490b0-0fe9-4497-bb6f-e3d448aa8339",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8998d918-2145-4b12-a499-d75faced6243",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e36a9482-8597-434e-b35c-caa0f0c78f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c5ed47-f75e-4625-8407-01f2f815e4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1edacd-806b-49a3-b328-6b495a5318d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72c5a4a-ccb2-479b-9523-41427a20f6c2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd88005-c00b-4b99-a980-acdf084017cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2faeba4f-9b81-4300-a357-ab7217f19197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d926cb-60e4-4e26-8729-6afc0bbcf681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa51e66-7d56-4898-8b36-689358f8a330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d2c437-7e15-4a5d-9a29-f084e03f4bef",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85536af-7d45-4963-8c10-ae49840d7c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c966cb8-4295-42e6-8dd4-f18589da2ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eed9166-3e37-4ea9-aee2-f7a276b4606c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b806310f-35b7-42c5-ac5a-22f882efc295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac51ace-f5c5-4709-a4bf-82c33baf536c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583fddef-1bf7-4f37-8f81-2a888339840d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14737d55-9756-45bf-91b2-69c28b876ef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24db9cae-68be-4df2-97b8-d62786f887e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "482785a8-2943-418c-a76c-f2851a198b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c635fa74-b677-4123-b81a-e7721341e26d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2089c81-cf73-416d-848e-7ea43d701516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "734bb9a1-99e4-45b4-b66f-3c42f5cae953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e083f13-bc9e-42cc-8c78-2e8a3983c06e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a668e6ee-51e8-4f95-815a-5d929e1efb53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bb2e5c-605c-4de1-9f1e-7ca8c7c91cbc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38623945-133f-4817-9d24-8bf5419e129f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa062e6a-f501-49f1-bcd1-8fc419dd820c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9da8ea4-f571-4b2f-9d60-be171f85f552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829f91ca-79dd-4a80-adb1-b4c769dfa57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c838dfe8-c2da-4387-a475-eb44e42f1220",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81692539-f386-43d9-9227-4da69e4bed42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df0b47a-637f-45c8-8ad6-05ec1ca59ed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c00ab6-9ddd-48f0-9bd8-704a81794a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ac71ee-c9ab-4dbd-998d-4b74c404616a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6b1b5b-ded7-4f90-b158-ad266ab61204",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf43813-b6d2-4be1-8791-16c0495e132f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d22e1fb-8e20-4032-9ba0-ec784663a923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e1096f-c335-40da-8e08-099cdb23a19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "717b8373-1418-47aa-9658-be6b6d648770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88d3d57-3315-475f-8fdb-742770b14a97",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ae5f8f-68c9-4810-8342-735489de7fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e9c92e-5af7-4e24-a7c9-19a9e2c0789b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "792768d6-5090-4a2d-8f6c-267015695dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ea7d98-0b23-4681-93b9-393d61b93036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10834c6-c269-43dc-80ce-0ab49396b2e2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c58293-54cb-416a-a9fa-10433a6e5bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37075167-23d7-4a40-b31e-40dac1fe3bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b161616f-0c95-4e45-b95d-1b858d08e84f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96eedaea-69cf-4cd4-9324-6b89b0280d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e085322a-2863-4bc1-a7ab-ddaebb9c846e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9581ec17-e8b6-40fe-ad29-b253bc795dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67fd0900-2d3a-4e88-ab65-14470e5d1382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc38f5ec-85dd-4cae-a84a-35a2df44c0d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da0c4ca7-ae48-4465-bc9c-61aa48e465b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212c0954-7824-47c4-93d7-94fed5c863a9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8229b9cb-e516-4d7a-bcc4-0d4c1861f316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a386e9c-8f06-49d9-a8be-67602940a744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d136c926-ab25-4c4e-af50-d74b9e2b9871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344f9e08-9871-4a16-9d56-86f51f919708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49daac53-aac7-479e-815c-e8398444b64a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2be0c4-80ff-4dfa-a004-217f1b1746aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797fffb7-9a4d-4469-8363-2c09d2ad911b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d54618-e137-4983-ba2f-d1eb381a2fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88efe83a-fd13-4d0b-bcc2-21294f3f6ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5668d8a1-7f4c-410f-a1c7-0f1317f9adde",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ba23e2-feb0-4c1b-beee-4fef1afc8c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4d4896-ec27-41b3-839f-b4daa435db9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0c7902-0478-45ef-a287-b3f0181b207c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6edbd7-1819-476c-ba78-3532cceb9014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64697b45-be13-412e-905b-fcd61a0684c9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc60590b-9d4d-426d-969d-7186cf1bdf63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19915a55-f4c3-4785-84b6-bb86bf55113a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd10c15c-ad3e-423f-bbe1-550e7f1d0699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc8ad9b9-48f3-424e-8a4e-54e82e8206fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627c0187-bfeb-4db0-92ab-23d6302d180e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9032abf-dd36-4deb-9757-5ebcd19d1d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a5434e-6f35-4354-b436-1442c35ab4f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60204972-c95d-478d-8d0b-a86c2ab4dcb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7149d41b-55cb-4f5a-b933-363cfae682ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65cd409-eb9c-477c-bf26-a647a8bf42e0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6293f87-2457-4e5d-b1b1-0114d770b78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8761e4a-3987-45d7-b8b9-0f8008dd3952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e04da40-700e-415e-88d3-fd3aa40079e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "678c5e3d-103e-4bf5-8f2c-da065edc60dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bc2a9a-6441-4cba-92e8-bf87d8ce709e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2107bb-c273-477e-96ee-c5f704c7d822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0abf7336-1aa1-49a5-84f5-90b48e99bbc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c7f40c-1004-4748-9db9-b586b19680e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee459f99-e9d6-4926-9369-d93665eb56f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4eaf3d-cfbf-4345-8ae9-d8ca05bc1af8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9c8279-a046-4826-a187-d12022a518cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e60e694-6d14-46ac-94d4-7d401a3da09b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c8d5fc-2dee-4a15-8f98-31b732c3ab93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff539d6-22f6-4fe8-a863-27ab5c19b570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a770c4d-3f97-4f54-aba3-fc60872abcb5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9454534-7b0e-4973-bd64-0318e292bd5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ccc554-7c43-40b6-b142-cd8d748c616b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6694690-24b4-40c2-9cf2-16aaadf4fc5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1343a3e3-1a42-4b3c-8f3b-6e581fa3782d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a188300e-8cfd-483f-a2ee-139e2eb22350",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a4fea9-4c5f-4943-b461-7526bfa7ed4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b64825-5660-4f55-956d-e4a04f0886d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef7d761-2783-404d-a77f-d86767b39286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc08bf6-8262-4b9c-99f6-e90cc4c5d106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0da265-e22b-4f2c-ace1-420d511099eb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d8e4d3-b4d4-46ec-8dc2-ce589080b354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72acf6cf-8628-4fae-b63f-0a9ecbf3d3d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82aa2ee7-3737-4b32-8c51-486df5c04412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b527dbc3-0346-4d1f-ba71-57a17cfd7e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7fd994-0fab-4fe6-9b37-60e0da6d0db2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8502e9-074d-4159-8cc1-5462ba4ef6f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6363670-a1af-4f78-9fe7-7f7b140cfd80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40848d61-73c0-418f-9014-217396184f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "743e72a0-757d-4ea1-8742-ae04509ca862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d73c4cc-0d51-454d-a77d-4392a8bdce51",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60213549-35ef-4b6f-bf16-b656b6e99760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e146da2-6a1f-4d53-87a6-86205af29d99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0cc491-ef93-4ba1-a182-eac8377b55f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e775a2-70ae-4548-a17d-23f10ed9e023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bfd939-41cd-4afb-b901-6e996933dda3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d9aaa2-949a-43be-8da4-d894617a5a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b79a10d1-df9d-4235-be81-e47b7b9d448f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17999192-d44c-4005-88ad-bd99eecb42d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0a6df1-3caf-461a-82b5-d53522b9b03f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5a9a58-f8d9-4818-a496-b375ab1c2ea2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef87f9d-3fb4-4b7e-b313-5902097f3ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "982b257a-8173-48de-adfb-c046f77033b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8f78fc-cce5-43f5-be78-135ee95a76d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f97394-a584-4e98-b031-3568c060af39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccbca01-63df-495f-b6fb-370ce2de3985",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc063286-8a60-4f1a-8432-4ea8077ddfdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4e036b-6215-43ac-922b-34abd0bdb75e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "768a862d-2adb-4a8c-8a57-b2771b98c1be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a60058b6-dfe2-403b-b2c5-bfd1345604f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d42cae8-2a3a-43df-bcea-428a8871293f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431230c4-c299-4bbf-8b78-157081451331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ba0553-a064-4e43-b30d-72ff3f204186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c47e809-f8e0-4e47-8199-8bd9cfe32c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93dc371-bac3-49c2-a795-0593826fcdbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48816bd-d298-46fb-97e2-b8233a28138e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44a83dd-f51b-48e8-9f9a-3d7cfc1942fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f32467-fc1f-4632-8902-d546e5b80cb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd95588-98a3-4fe5-92af-5a1462b5174e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d020bd-ad4d-45bd-9140-e83f85b08780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e4c24a-09cd-466f-aa33-a726eeb4a081",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9c47d6-954b-476a-be93-4223154dce96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "728f88da-1dab-43a6-a7cb-c7e8fd4af9ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79aae977-e54f-441d-a1bc-243b0278723f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a569d0c0-564c-4665-ac7d-5f46c096c1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a162d8fb-37dd-4dcc-8fae-4ac64c2aff61",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e537dad-70cb-4c85-a907-ac6615e86ebb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6e9be2d-dd85-41d4-913e-fb480fca6d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "012b8ba7-2da5-407e-8c15-7b89df6b1eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468d41a7-15c5-4a1f-bebc-fc5925108060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ae4e92-cefb-46c9-b9ae-8902b5ae1448",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ff42ce-e082-4cdc-b9ee-30919ced2936",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cece127-65c7-40be-ab3e-14baf8c23adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70674a2c-d751-46a2-920f-51dd8b8856b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c531e1a5-b97f-44b7-bc70-b6faf68856ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6779fb7d-0d82-4866-8530-f4024dd22566",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d9db8c-e73b-4845-af73-acf104cbfccf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fedfa3b3-f0aa-4b1b-918d-032c90f097c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d258eea4-bf2f-47b1-a777-5565c8a277b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b8b2484-b930-432b-9067-f01ada7f1331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aee5dab-740e-4601-841f-635ddcb61959",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c59cd9b-fb3a-4c6e-ad2b-6147a6bd2c07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eebe1b8-6d07-4606-a7fe-57a899afdc54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa0fdfc-dacb-4239-805b-fe2073df171b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d780a99a-cb32-41d3-9c3e-04d942049574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33adeba8-ada2-4a5c-80be-08d20730db24",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881b6f92-4403-47d9-8153-4c7c7f410778",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b271d17-da1e-48bd-95c0-2c00f21603e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1e7716-dafa-4957-9bb2-3dc9e871e7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f136cdd5-0092-4fa9-93d8-38320004af3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50b2878-ea96-4cdb-9cae-47dbb0c4055c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd22c43-db84-44aa-a6bd-cf37f4d47b30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c9c7ce4-c3bf-4f63-b709-85b2b2d220eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02c09ca-0b3e-4796-9fa9-083d8833b484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b02a4516-4fb7-4836-a49b-335b229168eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a8f3ad-d5a8-4c98-ae4b-7a9a8175b1c5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051a6faf-8387-4a6b-981a-333d930712b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a1f0016-137d-40fc-ab77-56be48d962ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de4adb3-da97-4aef-a1c5-54ef8d2a65c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2960c675-16ef-4f93-a113-a72a84f36212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceaac598-2ad0-495b-a305-26f323c8658b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de83ead-ec5b-47c8-8a8c-4c10e4e934bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "944fe41f-5c41-4205-a056-b64f04f9befb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3911d29b-41f1-4f28-bce1-fd124897e7ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4311bc72-2bc1-4442-b639-2d88e2926bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3076da-1ec3-4e65-96d9-582f2132062c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d8e68e-c15e-4c62-8690-92efd3ae2651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21716463-5152-422d-95d9-2d43db2ca871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fef9fde-b030-4f2f-9cf2-26d2db6cd416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d0a9d6-63f7-4078-be2a-5183d468dc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c051d0-182e-4edf-83e6-035a241de459",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0245b6c9-7614-49e5-8b0c-9ea760acb0e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebdb6281-b8c8-485b-9f56-a24197818cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d243fe4-4387-4966-8273-a6097afd37b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b93807-4079-46c2-92a3-d60bf396b3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0405bbe3-2b92-4745-ab22-20a34800f9aa",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a7d74a-431c-457f-bac2-351f645de4ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d01ad141-aa2c-4e41-badd-af031413b663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11127130-c28f-4d96-b03d-b2e60539d59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65840727-ddde-4684-a7a7-d87ae877c71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0377b9dc-6f23-4c52-b583-a3118d054e2c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2957ae7-2f2d-4063-989a-545c207a643a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afb90740-d2a1-48a6-9490-42227f3fb55f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bc6818-830a-4144-9639-cad7e6c87db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72717d61-bf41-438c-8f83-3c6f7f07f4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b803138-a0a0-4b1e-ad3b-2408ae6ed995",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c95ed5c-f369-43db-b6db-cb38dc46e352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10b9a019-3a22-48d0-944e-9286f0dfe289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf31cda-e470-4f4e-9db6-475aaf208d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2de623-b08e-42e3-8cd3-78826defffb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a89509d-1ceb-4008-9aad-f740b503ce13",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d08045-4e0e-4d07-acc4-7e0ec8a1fdff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "516711c7-54a3-45e5-8ac7-9a4d7a286774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c7b059-7434-496a-9ca9-d075aa8027a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6815dea-b07a-43c9-90af-8ef10382a2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9ec415-18ae-4a0d-9871-e7237886629c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ef49fb-df36-4c92-8e4b-b69fec055d58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c4e6ff2-b26a-4348-99c0-c6af9737483b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecdb503-6041-488c-8285-830f068dd58b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8bb130-f21a-4c26-bc1b-21cd3bb59513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba7d864-9f8d-46af-8a85-b0446f5c21bb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71136d5-e168-46a7-bc00-581930dcb3f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c38dbf9-3d9b-421c-9605-3d46a904a6ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdf3b71-c9fe-46f7-98b4-a6e84d0600f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2794ee1-c302-45f8-93f8-ac0d8f67a066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80e3b34-94ec-4731-9a72-3963111a76d0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159523f6-c593-4b00-88df-0325e9cd1b6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85aabb50-6f65-417c-bd83-e407d3bb2fd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bcf5a2-48f2-4292-a527-ec7f9bbcc6c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278b8432-ad15-45e5-bfb0-2ba7bec2b3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c401961e-319a-462f-a813-5498840cf4a0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684726ee-c88a-4847-9b07-a201e7e24367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee9686f8-6726-42b3-8117-b321fb17561e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e43ddc3-ecca-46fc-aab7-c291e25f1cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4732ea82-b3af-4d34-8fe9-4badebf53cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512ee963-c36f-4e70-a039-e1e50a0c7fa5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b28203-7cd3-4a83-bcf6-61e0f5404ebe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df60f0d7-9c05-4338-a44e-edb37780df34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e13721-9463-4373-ba25-794aa3ac8c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e77ca8-ac31-4a6f-842d-5ee098097398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e4f211-726b-4216-b283-9fc133381282",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda444dc-31c2-4698-aea5-cff1e6ab636a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b44f62cf-4e89-45aa-af17-09f18070a2df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc9145f-7a42-4203-b401-200c71851f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e45528-45f5-4bd1-b156-3ee78f8cc2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80618d3-0e28-4161-bcc4-81469849154b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5fa4f4-ed6d-400e-80a7-5dc435d76582",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c340887b-f805-4f98-a214-d89173196342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4258c162-7153-406f-86c1-2cbb838320bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe0a7570-29b2-4bbb-b892-c288743cdaa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3475a832-d01b-4ff2-bb0c-967d14a8d7ee",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0305dd8-c93b-47a5-a5d1-7075947f17f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b1e1308-6a2b-4342-a948-81c7594bb117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1ee2cf-672d-4628-b12d-9e0ede571bbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563ce8a8-3e3a-45c4-95da-8d44ca5fb1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d8bbc3-d210-4d70-b280-98541c7bdd0b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cb62c0-8351-496d-9d8b-644817c4c2bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7f555e1-d3ba-491f-8585-4638183acf96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f529bc42-8a96-478e-bd80-f213a865b585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580d8c5a-f309-458a-8a51-32961020f2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a80f1f6-509b-4986-bea5-3663966d97e8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196be78a-1698-42fc-b2f6-49867bae5cfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf80faba-44e5-436b-bfc1-43b880234747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fe0340-1568-44a6-8566-c805e39217e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c7be72-771e-49aa-8ac1-48c3fc3fb62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c885015-0a43-4fda-adb5-3342c8b58362",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b74e5fe-25a7-4ba6-a251-ce4dd175cd59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "497650cd-9b14-458d-9a08-6048724d8794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc6ed0c-697f-46f3-a938-9eb6ea7cb44a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df4733e-d4af-42c1-bd31-da917fd6e8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15685d0d-a36d-48ff-bcb6-6063b2c8478f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25354f3-c7b7-45f7-bb31-b4d3308aecd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7062493d-75af-4d60-8d60-c428b437af70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23319d07-04c0-4d8e-b715-134d35143b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e98316-73a1-4180-8a05-78830af53933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12bf9410-f955-468c-b419-bc47dc791794",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbf5db3-21f5-497f-a69d-e1bc0e62fc02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53ada055-9839-4918-8fd8-efe1cbbfad13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d30af1-3dd5-447a-9750-a9d500976411",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e816824b-9a1a-481e-9466-7c545fad206c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e687875-9090-41b4-bb5f-affe5b5c8fa9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e6273d-df7e-45ba-a1e0-0c80e5553f1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c493a8e0-f51c-4305-b9e8-12bd89f2981a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78b9486-90c8-4450-bf30-a637f28c9d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e4610f-19e1-45b1-bd19-a6f2b673a591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fca7a2-045a-4024-934d-b0b6287aa103",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c3baf8-49f0-4e14-9856-ed16513d7b1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d1e7e93-813c-47f7-9e69-c016b9ae3286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb087b41-6394-4657-9865-ade6402e5c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c586864-c9e3-4dd5-a5e2-8e0ec3c0a7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f637f9-8263-4ae6-b7cb-fa46685c21b0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17ced1f-de6e-42af-b865-d3f52ee901c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86c599cf-ee53-4a3d-9a50-76ce1e9618ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67fe6f95-956c-41d7-8861-358234e773f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb2cf47-74f4-49cf-9d1a-8c6e95734e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac61f4f4-ccb1-4456-95eb-a90ac3fc3fa9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5383906-527c-4a46-a6bc-ed808fd538f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2744479d-14f7-4f30-aa44-8b0e2212b223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c23bc0-9b69-4ae6-b0e5-1d30f6042594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c6bf7a8-3410-45b7-a45b-cca72c1f96cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a55968-1bca-4ff2-9eb5-8d16f68e476c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3faa0b3a-b7bc-44f4-8568-90bd00e797c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caa7d84d-1dbc-4c46-9cc4-7a85b40f4e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89621a2c-8986-4671-a626-413024350fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddbd26eb-8dc7-479e-b3c7-4f90f396bfa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2957d292-5e43-4eff-a42f-eb10621f464b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6768e0-b8b5-441d-b4d6-349e3cd10002",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adc7ba4e-744d-4a05-9bb9-ad4eb7a74454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "369999ea-8515-481b-8226-0b57bfde6167",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1f264b-9e7c-4407-92de-ed278ded4155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8966efa-c4a6-4108-87b4-917cf14ab557",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d2aaee-d6a1-41d3-be22-90f898322a1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1f8a100-96e7-4c02-a787-e4343ea25901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5dae57a-783d-4fec-915b-da7f700386ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c246e77-b01f-491c-91d1-832f7ea4d578"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b43af204-ac42-4e08-86c9-81edb80eea78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da6ec146-355d-4b6f-8e20-c24988f3364b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc0a70eb-467b-4d2c-bcea-e74d7a130ab5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f4fcd58-36c4-443a-8c66-7d3abe0936c7"
                    }
                  }
                ]
              },
              {
                "id": "74448d47-fb2b-4f8f-b3f0-d4a5bdc390fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2bc1091f-8431-49df-a184-978cb82bebbf",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e844e3-1ee0-44b6-8231-71d6a8e28ae8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ca406c7e-5f13-403a-bdc4-0327cb2a47e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e072ba23-5a3d-433c-9585-340be53562d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76ebe685-70a2-41ee-87e4-07189fa181ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f86e408-8091-4500-a7bc-eae728d1712a",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a75284e-dcc1-438b-86fb-4680cbe48aa7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "41957173-950f-4c1b-a008-b0e675294398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadef02d-eb0a-48cb-bf46-09e948b208a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e46ca60-15c4-4896-aa2b-e17a60f7c3de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "462c83f7-538a-466f-8e82-3e0a602f2101",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a3a6f30-2bfc-459e-86e9-3b97b500b318"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b75d9b88-c125-4f1d-ad01-f0b46a20929e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db74a642-ca49-4280-b0c6-b8ad94bb456f"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "45f7c528-e7fa-4356-92d1-23aa5c25e72b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "10028116-0669-4d04-9522-3fc093ed5d9d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96a9847d-2c4c-44c4-8a37-97b81d349e1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92ab0ae2-b5f8-4c43-b04a-f9bcf005a01b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20bceb56-3ffb-477e-8e22-303aa66b1465",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de5504b2-0e99-47d9-8bcf-14723dc33bcf"
                    }
                  }
                ]
              },
              {
                "id": "714071af-ea9e-45f7-874b-50c6e2f8aee7",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac4fb49b-796b-442a-be29-63136552e8f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a22b2bf7-b35f-4470-8379-7defbd701d64"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a5abcb4-24bc-426b-b923-e0ee00ee45ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2641afa2-60ce-4c04-95cc-8ed044642b6a"
                    }
                  }
                ]
              },
              {
                "id": "3dd684ed-3381-46ae-b049-b65ad3e93e97",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66cd786c-b570-4965-b988-58627dd5d655",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "080a58c6-e926-4189-81ea-7bc2cff60813"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4e5504e-8bc5-419e-8831-698782c12524",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e141e4e2-1d15-4045-b09b-bfc7340efce3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77123539-d76d-4963-9603-ca30a386c5e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c59b4e77-3d49-4a71-830a-eabe8df82f7b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1ac76d4-5252-4572-a59b-6e08619e5958",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f9b6c3f-dd3f-44a8-a084-97e2c95bfc1a"
            }
          }
        ]
      },
      {
        "id": "dfa20a55-c0f6-476a-844e-d4d43ca15b73",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "38aa13e8-c33a-4fb1-a910-5573f46dd2f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3bb62d98-c636-479d-a171-9ff63389fab0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "972f2b08-b7fd-4642-a64e-278f71e71c4a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c65c29-818f-45a2-9b10-d9517ae42c67",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c5730b47-8ff2-44ea-a565-38425a015c25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc67da63-e676-4516-bb39-c0c062eb0b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a03dab39-0002-4736-9297-0efbecdb851c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91e78bc-00af-4f61-b659-eed3a78e43a2",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab95416-1aee-4131-a6ae-3e63ecfccf79",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6813f8eb-5275-4816-bbdb-fc746faa2935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd8b651-6e75-420e-a41d-2f0e7735a941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e7b8e21-1c52-41da-87eb-93a58c391dff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b815fb10-eabe-4f46-b24c-c42b7f6bb212",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21abca7e-716b-4466-9d9d-15fce7a6a470"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1040f1c8-885d-4814-b6c3-8ed1e413c24b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f0da325-50a3-40df-9df5-dfd0620069e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "100dd8d8-13db-4070-bbfb-2f99edee8e77",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0a28de95-c44e-4082-9deb-5fe9ff451bc6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "beadd65d-cfc1-4b3b-9cf5-a21a461e4806",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "615be0dc-0587-4e52-a7cc-3d9b2582a554"
            }
          }
        ]
      },
      {
        "id": "ad5c0d11-3e85-40d6-b7b7-ecb806d09332",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8ab82a60-73a5-4550-95eb-e0c54dc06eb5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7fb56e13-6e5d-4c04-9c5d-3ffc4dda50bd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ce7bbf1-f7ec-4f29-b519-1ababc97aea3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c2c22e-06a2-4a99-94d7-c7d30e04eaa6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2aa4256b-be28-47a2-b78f-1c33659890fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d482403-c105-4e56-a54a-a2bca9f91f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "723c0478-8373-4377-9cb5-b6055dea21fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72f9aa8-1cab-4314-816a-2d6cb56140f0",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fef0db1-c9d7-457a-82a9-666e33337fce",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d7fe6f49-75c2-498d-aaad-44011a7284ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d2175a-e6b1-4299-a440-a6abfcba05ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00928513-cdbb-4925-9f80-b6b86b047cbc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "daf3c5c6-99eb-4d34-af58-30dab9f1a972",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04f73ae4-8f9b-4d78-8341-daf99184338c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff36f5f0-6ff6-49fe-8189-0d7250b7a297",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "249d4c32-cb81-4f16-bacb-da622af4dff2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2a037e7-df0e-4ff5-963f-561c4ddd0413",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b61b2a9f-6742-4301-b35e-2fa276eb1590"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dcfe0f03-8357-4aa0-8d0a-92e2808d7e79",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "07b2804f-a0c8-439b-8498-e244cc0b3cdf"
            }
          }
        ]
      },
      {
        "id": "430c439e-48c5-4d75-afb6-addd3e483721",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2f4db377-cd67-4c05-be98-a10ae54d5b0b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "46b1e327-4a70-40ef-a489-ad2a92c15783",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "267b20bc-87bb-41cf-9d8b-6cd04e5838bb",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7df3910-c4e8-40f3-9a98-81e44d53e930",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b7fdfef7-68da-4ff9-b7aa-7f74a35e06fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0a0b8b-3d20-4ede-8f13-15fe15c6b706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "206f57f6-c19e-4252-9152-0e8f5f7da3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e64305-b486-4cba-9786-a34ca8050659",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6e02a6-d740-4ff3-aff2-3697a266e688",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4bfc1f4b-f77f-4e97-87b4-137803190a01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca9f93a-2652-46dc-944f-ef11f96228e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68a7687a-f444-4b2f-8e35-d4dbdb34d4f7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1cdf0345-9403-49a7-b38a-57d0b92ade0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f36512a6-6b3f-4da5-a06c-33bbd6d558b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "27032b98-5a4d-4fb3-9ace-4b7eefb446db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74539dd0-51ef-482b-a38a-9fcff2d82492"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d60c10bd-3ace-4cbf-8bd3-5c16da1fd89e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d7e65657-3bf6-4672-b8c3-73452bb137ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c015994-0a47-4afa-b503-b39fc98e3344",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4b5b911-a791-467f-938c-8248e8b2d88c"
            }
          }
        ]
      },
      {
        "id": "da02d315-84fc-4c8b-9016-06295b2b1bab",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4374790f-bbda-4329-af53-1c2b37ba2a61",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f22d56e9-8331-4c80-aa9f-e3a28791a2bc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1fa7f968-05ff-47d8-b205-c9fe765926b9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e9d4f7d-8584-4b70-b2eb-a1e4a505c226",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7deae8f7-53b2-423c-83fd-07797fee0ece",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 505,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 676.9653846153844,
      "responseMin": 6,
      "responseMax": 9777,
      "responseSd": 871.8775114404675,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1668026388141,
      "completed": 1668026578262
    },
    "executions": [
      {
        "id": "60daf3fa-7baf-4ff4-b216-22cde32b5ba4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d5056089-a45c-4901-b733-b6a618b7f0b9",
          "httpRequestId": "2f12c631-9bd2-4a83-aded-25adf633f806"
        },
        "item": {
          "id": "60daf3fa-7baf-4ff4-b216-22cde32b5ba4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "79dc0990-787b-471b-8e5c-65f340b849d7",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "3a74ab5c-afdb-4a18-b4c6-b522189a4b81",
        "cursor": {
          "ref": "91017da9-3253-4d2a-befb-f4bd3d00c242",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "044175ec-7e03-43b3-a9bc-e4e5738a936c"
        },
        "item": {
          "id": "3a74ab5c-afdb-4a18-b4c6-b522189a4b81",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b4ef6e51-def1-4267-8f76-e5d29d05ea67",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "3cef4397-bdd1-4c49-9d2c-62c211877fbe",
        "cursor": {
          "ref": "75b18116-6140-48c7-855a-1dfa6bfd3c78",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3af6431d-5d65-481c-8137-e7898c60039b"
        },
        "item": {
          "id": "3cef4397-bdd1-4c49-9d2c-62c211877fbe",
          "name": "did_json"
        },
        "response": {
          "id": "35783823-aeae-41d6-9a52-ef128d1be54f",
          "status": "OK",
          "code": 200,
          "responseTime": 1031,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05547127-5d57-46a4-94ee-dd98a6316506",
        "cursor": {
          "ref": "45e366d3-386e-4f25-8a22-bae54f09f04f",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f2b35dcf-a849-4423-aefb-00c199b569d3"
        },
        "item": {
          "id": "05547127-5d57-46a4-94ee-dd98a6316506",
          "name": "did:invalid"
        },
        "response": {
          "id": "9849de7f-d704-4455-8c9e-0d5ef6bc416c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1343,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05547127-5d57-46a4-94ee-dd98a6316506",
        "cursor": {
          "ref": "45e366d3-386e-4f25-8a22-bae54f09f04f",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f2b35dcf-a849-4423-aefb-00c199b569d3"
        },
        "item": {
          "id": "05547127-5d57-46a4-94ee-dd98a6316506",
          "name": "did:invalid"
        },
        "response": {
          "id": "9849de7f-d704-4455-8c9e-0d5ef6bc416c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1343,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58316abd-3469-434c-ac45-81b63d25f672",
        "cursor": {
          "ref": "d90bfe32-ac7c-4397-b6de-500da740fe12",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fa2c27dd-f2e1-4f63-b159-45c3351b3fb4"
        },
        "item": {
          "id": "58316abd-3469-434c-ac45-81b63d25f672",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9f6806bb-5b94-4ede-be6f-e1f5d500d803",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1207,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246effca-abdb-40d1-8a5f-327f14f2ca24",
        "cursor": {
          "ref": "a4e9dd59-2a93-4bae-ad45-5cc3c9e8fbe4",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b91fd1ad-e3a9-48ee-ab5e-3b2bbe8240ef"
        },
        "item": {
          "id": "246effca-abdb-40d1-8a5f-327f14f2ca24",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b2faf387-d1f7-4fe3-a7b4-28c77d2e72d2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1283,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3fa6ce-ce99-44a5-b3ee-3be4a48f4442",
        "cursor": {
          "ref": "86924e33-e5ef-4f02-a4d2-2f65caea664d",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "00e84e21-40b3-4819-83e6-de0106c741a4"
        },
        "item": {
          "id": "bd3fa6ce-ce99-44a5-b3ee-3be4a48f4442",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "34dc3df0-f530-4722-952d-bd6b61e055ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4032b4a4-3741-4f81-9ae4-4905f6996d9a",
        "cursor": {
          "ref": "3d4f6c5b-3882-44dc-a80c-8412aed87f45",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b51fbf27-9aab-416e-b0f9-c1348bca72b4"
        },
        "item": {
          "id": "4032b4a4-3741-4f81-9ae4-4905f6996d9a",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "dd1a5e8a-1772-47c8-acd6-38d86e0fff5b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1093,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4032b4a4-3741-4f81-9ae4-4905f6996d9a",
        "cursor": {
          "ref": "3d4f6c5b-3882-44dc-a80c-8412aed87f45",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b51fbf27-9aab-416e-b0f9-c1348bca72b4"
        },
        "item": {
          "id": "4032b4a4-3741-4f81-9ae4-4905f6996d9a",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "dd1a5e8a-1772-47c8-acd6-38d86e0fff5b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1093,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c42378-e922-42b7-bbc8-85f117c66e79",
        "cursor": {
          "ref": "581c5bfc-552a-46bc-b78b-3f6a63e6075b",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a791fa4c-edd6-4f7a-bf9d-219cb0d4a559"
        },
        "item": {
          "id": "81c42378-e922-42b7-bbc8-85f117c66e79",
          "name": "identifiers"
        },
        "response": {
          "id": "bc3bb897-2256-419e-9674-7ac41d3b3f91",
          "status": "OK",
          "code": 200,
          "responseTime": 911,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b292ddb7-fb9d-4988-8eb1-b3083129374a",
        "cursor": {
          "ref": "c00d8257-4dd2-4108-8c62-e47c82074a1a",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a54b2e1c-b1c8-4d9d-896d-96b9bace9f8b"
        },
        "item": {
          "id": "b292ddb7-fb9d-4988-8eb1-b3083129374a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3b9f38b3-cef8-4f47-be6e-322802198320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b292ddb7-fb9d-4988-8eb1-b3083129374a",
        "cursor": {
          "ref": "c00d8257-4dd2-4108-8c62-e47c82074a1a",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a54b2e1c-b1c8-4d9d-896d-96b9bace9f8b"
        },
        "item": {
          "id": "b292ddb7-fb9d-4988-8eb1-b3083129374a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3b9f38b3-cef8-4f47-be6e-322802198320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19809bb7-58c6-4989-8fba-8e276e4e3cfc",
        "cursor": {
          "ref": "c3f68a77-df46-4524-818a-136bfdca5e9c",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a22a7931-02fe-4b0b-a0e5-0beb595705f6"
        },
        "item": {
          "id": "19809bb7-58c6-4989-8fba-8e276e4e3cfc",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "38c5cda2-1e37-40d8-8d64-d2543f94c9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a002fb1-156a-4e08-9907-2ea438c1b82b",
        "cursor": {
          "ref": "e65deee2-b8c9-4d87-a37c-3d73b651cdde",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ca6fdd0d-5979-458d-9707-eacb82491e90"
        },
        "item": {
          "id": "3a002fb1-156a-4e08-9907-2ea438c1b82b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "14d5aab1-62d4-4d76-8b20-05df129e6552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20535214-3776-4e14-9b2f-2d49dea2e47f",
        "cursor": {
          "ref": "101ace5c-c444-41ed-ab31-90b8770f818e",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6f2ad5cc-d8d8-477c-b200-fe19e97616d4"
        },
        "item": {
          "id": "20535214-3776-4e14-9b2f-2d49dea2e47f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1e43bced-ec59-44d7-8d4b-c6b95afc6693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585a23d0-48a4-48f5-a73c-ce8a18985998",
        "cursor": {
          "ref": "9292015c-64b0-4ed8-aa44-787822fb9051",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c4ef8961-f5ad-49bc-8469-0303f530709c"
        },
        "item": {
          "id": "585a23d0-48a4-48f5-a73c-ce8a18985998",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8f37684b-3b5d-49d9-b425-27ed56ea0c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ca1d6e-30d1-4609-8ca4-075fc749a086",
        "cursor": {
          "ref": "5e3db0dc-2a79-45d6-94d2-64fb2e01158f",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "64932d29-6397-4252-9282-7b1f0f404a82"
        },
        "item": {
          "id": "f0ca1d6e-30d1-4609-8ca4-075fc749a086",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "526f0652-46db-4f81-a499-d4c41bcefbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6e6fdc-6c6c-470f-9ce7-d85e81398a4b",
        "cursor": {
          "ref": "dccb099b-ea55-4f13-92de-9cf8a6154de8",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "338633f4-2dd8-4e13-a3b8-47cba657321d"
        },
        "item": {
          "id": "8d6e6fdc-6c6c-470f-9ce7-d85e81398a4b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "559ea154-767e-47ab-91da-f3f1da52dce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1321b02a-2f9b-42ee-ab0f-a8838f4199b3",
        "cursor": {
          "ref": "cd86364b-e2bb-481e-bcbc-401e4d06ebfa",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5dc1a230-7bf1-4376-885e-908bd8895918"
        },
        "item": {
          "id": "1321b02a-2f9b-42ee-ab0f-a8838f4199b3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d6e7c580-e8ff-47a8-b3d3-a8eb4f5eccf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be31d80f-96df-4f67-93be-ae66f2f31bd4",
        "cursor": {
          "ref": "94a14d51-91d5-47c1-91b9-f0717440d7cf",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7b1bbf79-fcfb-433f-9763-8a38dd6d13b9"
        },
        "item": {
          "id": "be31d80f-96df-4f67-93be-ae66f2f31bd4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "33269994-6f3b-4999-9848-6e6c9f69d057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b0163d-ccf7-43ce-bd0d-db68b86d2532",
        "cursor": {
          "ref": "44cca604-aa6b-4da5-9444-f776487291fb",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5657d4d6-486c-4dcc-a781-25c5b8de9ea2"
        },
        "item": {
          "id": "e9b0163d-ccf7-43ce-bd0d-db68b86d2532",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fec84083-7d34-4eda-b4d3-ef2c8f77c775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19048a9-1817-40b5-b8f1-e0163bca8a4f",
        "cursor": {
          "ref": "54a931dd-fb55-421b-8d27-ce1816f32c2e",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "92582ca4-10f6-4f15-bc26-0db2a5c7eddd"
        },
        "item": {
          "id": "e19048a9-1817-40b5-b8f1-e0163bca8a4f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "097939bf-bc9f-44b5-9622-e6f42fcd2929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36610829-43f3-4adc-9585-92e4177ef0ad",
        "cursor": {
          "ref": "d8fae286-c307-4ddb-a8cf-222b03fa42a8",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "43a0aeb7-ecdf-4ca6-b533-f4e55da363fd"
        },
        "item": {
          "id": "36610829-43f3-4adc-9585-92e4177ef0ad",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2280b79a-65d1-4a7c-adda-37183f941fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1086,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46348363-c5d3-4fb5-8842-cd547f943964",
        "cursor": {
          "ref": "41c51364-f04e-4aca-9606-7bbee1af87bf",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "90ecf99f-d270-4433-9c18-0b574bfe6d68"
        },
        "item": {
          "id": "46348363-c5d3-4fb5-8842-cd547f943964",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "814173a7-3f76-405d-8397-f60c26dbdb72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2170eb0-76f1-463b-a6f1-b59833244409",
        "cursor": {
          "ref": "3a165fce-2f17-46bf-81a8-220b379196e0",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5143acfb-a235-470b-93c7-cb82a2dbe8a9"
        },
        "item": {
          "id": "d2170eb0-76f1-463b-a6f1-b59833244409",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c7d7cb0c-fdd1-4faa-a396-df8f3ae03ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 934,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1171acbe-5a79-4dc1-b04c-5d5a6d199962",
        "cursor": {
          "ref": "c07a3f0b-6d66-43d5-9c5d-069dfd634826",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1a4e730c-b168-44ed-967e-939dd1ce1837"
        },
        "item": {
          "id": "1171acbe-5a79-4dc1-b04c-5d5a6d199962",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "439b50c8-16b1-484b-b228-3e15c19c5ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1143,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79786289-6cda-4c4b-860d-6a90bc5e9208",
        "cursor": {
          "ref": "57ef1d1c-2c9f-45ab-a24c-c64f7fe33f32",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2991bc04-1abe-4bb1-ba2e-1d954ce05d31"
        },
        "item": {
          "id": "79786289-6cda-4c4b-860d-6a90bc5e9208",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "83e70e43-5762-4537-bb56-2698247dd4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1036,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d73fd6f-b297-487b-af99-af7cb446b03a",
        "cursor": {
          "ref": "dfaa051b-f1f4-4b40-93dc-5935a9b564fb",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4458a458-af9d-435e-b877-02d5342a131f"
        },
        "item": {
          "id": "2d73fd6f-b297-487b-af99-af7cb446b03a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c5a9c708-fc6f-4240-bae4-d3a06904a756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 981,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3217614f-6d9d-4621-8905-b236bdcc860a",
        "cursor": {
          "ref": "ec60d031-ccb6-4d7f-a6b1-4daf7ed9b12f",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a5dd9a28-4eaa-4bcc-a478-d407e97cc94e"
        },
        "item": {
          "id": "3217614f-6d9d-4621-8905-b236bdcc860a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cc06b662-a51d-43fd-8bff-5979960d9db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54f8a6d-60f8-4994-8312-4a2b8552bfd8",
        "cursor": {
          "ref": "437e76ec-80de-4405-9cf5-678d7a16928b",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d3373b36-9166-40a4-93a7-20544104dd7f"
        },
        "item": {
          "id": "b54f8a6d-60f8-4994-8312-4a2b8552bfd8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9cc2a06b-dd5d-4d11-892c-68257ca28ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e82f220-e210-4947-a279-63638d678a65",
        "cursor": {
          "ref": "a70a216d-3153-4e2c-825a-c26ed4560335",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3a2a0b3b-3b7b-4269-badb-89103c145846"
        },
        "item": {
          "id": "2e82f220-e210-4947-a279-63638d678a65",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9089deda-c9f9-438b-8aed-3b0d56eea749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e0c31e-9024-4ef1-a916-44c2c4567097",
        "cursor": {
          "ref": "86ff12e0-fb8c-4ea6-a4c9-950a3425f5db",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "35723b24-19c9-443e-abd4-6d2c711efd78"
        },
        "item": {
          "id": "c7e0c31e-9024-4ef1-a916-44c2c4567097",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "61df5c69-dacb-4040-a46e-f319c54b16cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b541d4-8e81-4fea-a689-4ebe5872c32e",
        "cursor": {
          "ref": "3a71fa39-4b5e-44d2-9ca3-d9172ba02061",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "18d5d32f-2576-478d-85ae-24022dca067c"
        },
        "item": {
          "id": "e3b541d4-8e81-4fea-a689-4ebe5872c32e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a717a2ba-163e-4279-9150-d8c4235e697d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebf9c32-6b3a-463c-b0e6-287ea465672f",
        "cursor": {
          "ref": "c22eb1bc-9ca2-4309-9a7e-63c88d98c4a8",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a10a28c9-462a-40fb-ba0f-a3336052e7c7"
        },
        "item": {
          "id": "8ebf9c32-6b3a-463c-b0e6-287ea465672f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8c372122-89e8-4a93-b008-0ddaf442fba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e11912-b71b-4a8b-97e2-ffe29fa5c3ee",
        "cursor": {
          "ref": "0ea2a510-fbaf-46d9-ab19-9bb732125678",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "dd7f5d4a-fa69-4caf-aed1-618bd0d3870e"
        },
        "item": {
          "id": "43e11912-b71b-4a8b-97e2-ffe29fa5c3ee",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c8321aaf-27ff-4e89-8f60-1daa631cccc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1fd54c-898c-43c2-9a57-766adfad6d2e",
        "cursor": {
          "ref": "e049e170-2d26-4fc2-93a8-56b5d0e35a21",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6683c089-ccfc-4108-8123-895a8c5bc3a7"
        },
        "item": {
          "id": "8c1fd54c-898c-43c2-9a57-766adfad6d2e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a3f2a46b-cdca-4142-9713-1645ca4b45c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a40d0a-8a8e-4819-ac9e-29eaaa215af3",
        "cursor": {
          "ref": "e0de149c-0229-4002-92fd-113649b34367",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "954ed778-fd16-48ca-8eb2-a268b4c3f6d2"
        },
        "item": {
          "id": "72a40d0a-8a8e-4819-ac9e-29eaaa215af3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5dd2dde4-5225-4830-844e-e407740bdbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a87f573-ea5b-418c-abd5-df6541c0f9b6",
        "cursor": {
          "ref": "30bf0a23-b9eb-43a5-b574-01fb5bb4c5df",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ce8991bd-4d8d-427a-9036-765ccb0e6311"
        },
        "item": {
          "id": "0a87f573-ea5b-418c-abd5-df6541c0f9b6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "bfd6b073-8abc-4d8d-803c-e50ac36d4df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d61a6a1-c100-4887-85f5-7211552bba4b",
        "cursor": {
          "ref": "2c1dea6e-5b7e-42b8-8e0e-8bf211601ece",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3bf61772-8cae-40c2-a79f-9a86b4cab7c6"
        },
        "item": {
          "id": "4d61a6a1-c100-4887-85f5-7211552bba4b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a0f16b83-e37c-4b07-a589-068db9017cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bbc716-36e2-4cae-a21a-b74d5b5bb7d1",
        "cursor": {
          "ref": "929f6787-c894-49cc-9f3b-4302735619dc",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b872c4e9-8a1d-4389-b9af-4638ed425ac5"
        },
        "item": {
          "id": "e0bbc716-36e2-4cae-a21a-b74d5b5bb7d1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "472be52b-4f2f-440a-8ad8-f2ed62ac23fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c229132-da32-4b85-8399-16ce7318192f",
        "cursor": {
          "ref": "a90de4bc-2c79-45ff-beed-a66140ef5e3a",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "67f6d231-22ad-43f2-957b-a00a6f1d37ba"
        },
        "item": {
          "id": "7c229132-da32-4b85-8399-16ce7318192f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "478bf90c-1d9e-4fb8-b5d9-d06f56ba824d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5c6e61-bfdd-40d6-b091-dcfcf5f4a884",
        "cursor": {
          "ref": "0568d95f-71de-4692-b7da-6c7a54d9dfc0",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f199177a-b701-4966-8026-adec9ba465da"
        },
        "item": {
          "id": "da5c6e61-bfdd-40d6-b091-dcfcf5f4a884",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "20f9471b-b0b1-4b15-a15f-2f36c79547e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605b585f-ad40-4190-a892-70ad30e53d0d",
        "cursor": {
          "ref": "b599def1-ba52-41a2-93ed-9650b93314d3",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d32abb8e-01a9-44e5-afaf-cd9faaec4791"
        },
        "item": {
          "id": "605b585f-ad40-4190-a892-70ad30e53d0d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "01b63f50-cae7-43a5-a844-015fa64aaf95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d148ba-1f1a-4423-897f-dfd84ce87bcb",
        "cursor": {
          "ref": "44c94fec-bd75-402a-8dda-714212d5c181",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "33f5c275-1e15-4b35-92ec-256bfbbda094"
        },
        "item": {
          "id": "c1d148ba-1f1a-4423-897f-dfd84ce87bcb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a8f8d3d6-55d8-4d1e-a022-68cbe44fedf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544555f8-6753-4bed-8b08-39c30453115b",
        "cursor": {
          "ref": "1b693e8f-2974-4b75-9b31-0355c22c4fda",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9dd445bd-93d6-4f21-b93e-b9bd175e832b"
        },
        "item": {
          "id": "544555f8-6753-4bed-8b08-39c30453115b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7047b4ee-60ea-42c1-a1a6-41c7dd09fd2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c52d3c-5766-4a45-8a12-e087fa082194",
        "cursor": {
          "ref": "a1dba2ba-67b2-460d-9a67-9712d85799cd",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3cde4010-3e9b-4a47-8743-e5b96992ecae"
        },
        "item": {
          "id": "94c52d3c-5766-4a45-8a12-e087fa082194",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1f5e8f68-3f3e-4706-afa5-3a1450cff99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35d15fc-8cff-4baf-84fd-891a2c33f7ec",
        "cursor": {
          "ref": "f691f71d-471d-4648-97db-55ec5dc94bb5",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "27c2c8ee-e08d-4108-9ce4-734ba3640a13"
        },
        "item": {
          "id": "d35d15fc-8cff-4baf-84fd-891a2c33f7ec",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a924fe7e-2076-4523-8469-19346e5e3097",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 566,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688780f6-af12-4493-bcb6-6a5e5ab226f2",
        "cursor": {
          "ref": "a8923cb1-3b08-4429-8be6-78a9c5cd2f60",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4a3cc74e-ffce-41e5-b418-9319a04f797d"
        },
        "item": {
          "id": "688780f6-af12-4493-bcb6-6a5e5ab226f2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6a208a11-18ed-4b96-86b7-0163b2d2bc1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3293d3-e02c-44a1-b418-64afe6d139ed",
        "cursor": {
          "ref": "7aadbc05-dad5-4291-a3f8-04f56b15d117",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a012d303-84c9-431e-893a-63fedf2e031a"
        },
        "item": {
          "id": "6d3293d3-e02c-44a1-b418-64afe6d139ed",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "adc37729-5046-4674-9b51-0649911897ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b96df19-09eb-469e-aa31-8ec1eb5bf104",
        "cursor": {
          "ref": "2aa5c270-af95-4d69-8aca-dd0c18f570f0",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "61c525dc-69b5-4bc9-a34e-0e96187fc158"
        },
        "item": {
          "id": "4b96df19-09eb-469e-aa31-8ec1eb5bf104",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8b9ed8a1-df09-4a21-a6f6-8658c7180a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82830701-016d-49f1-ae15-0becf5701f76",
        "cursor": {
          "ref": "c53d2943-b536-4f71-afa3-5321a262306d",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e9645951-8e34-4644-b44e-39a3db2c6eec"
        },
        "item": {
          "id": "82830701-016d-49f1-ae15-0becf5701f76",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c9140759-8406-4999-a3b8-fcecd4a64913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb2ecc1-0f30-4693-ad6e-64527a8eb529",
        "cursor": {
          "ref": "9d5d40e4-a121-463d-8c94-cdbdefd6943b",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a837b5e0-a88e-4492-8777-1dcca3414993"
        },
        "item": {
          "id": "1bb2ecc1-0f30-4693-ad6e-64527a8eb529",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "09b19578-4247-4084-8969-fe33ecbbbd0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cab289-02e3-4ec7-a362-0bd5a8b0ac2c",
        "cursor": {
          "ref": "d148003c-6844-4dca-b766-373b0e5ed937",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8bbad754-f4cc-4861-9785-a70c81b6413f"
        },
        "item": {
          "id": "80cab289-02e3-4ec7-a362-0bd5a8b0ac2c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "613b8c6a-81e2-46f6-a2b9-98d3942da6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f296198-a1b4-4e5a-949d-e907553d110e",
        "cursor": {
          "ref": "a60bd0f3-6f0f-482d-bd6b-9cfd97cfaaca",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6ee6619f-5918-4061-bf3d-fd8ec136db88"
        },
        "item": {
          "id": "8f296198-a1b4-4e5a-949d-e907553d110e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "54b21fe3-536f-462b-8571-0f8c0ce0c46e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 709,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40eb81bb-fee7-4dee-88d4-507809c579a8",
        "cursor": {
          "ref": "5038cc5b-48e3-458d-839c-0993ef14620b",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c090ab4b-b5db-4ee2-beaa-23a2c335d40c"
        },
        "item": {
          "id": "40eb81bb-fee7-4dee-88d4-507809c579a8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "af035c0b-8c7d-451a-b213-1a4b96b9dbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdf6e07-9183-4e2c-97b7-e12c059e9f24",
        "cursor": {
          "ref": "7df44da1-6049-4c46-a110-5aef3a761d1f",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7ec69366-8b15-429d-843f-738fa00458a7"
        },
        "item": {
          "id": "1fdf6e07-9183-4e2c-97b7-e12c059e9f24",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fe5e9b2c-0201-4115-b979-3ccc0f5925c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1302,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed751c88-7cb1-4fd3-8ced-c3b5a06c46e6",
        "cursor": {
          "ref": "41e92113-cad6-46c8-90ed-34153f597be7",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7c12997a-f2f7-4a27-a435-fed7a6f57774"
        },
        "item": {
          "id": "ed751c88-7cb1-4fd3-8ced-c3b5a06c46e6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "785712a1-ba8c-4d66-8f97-666a574319b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 914,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e14947-5705-4857-af96-c9b623cdbe79",
        "cursor": {
          "ref": "29896f8f-2ad2-4353-9407-3c6e3b3bec84",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a237bbb8-7a9f-434f-8998-70eccd57eba5"
        },
        "item": {
          "id": "15e14947-5705-4857-af96-c9b623cdbe79",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "780c769b-398a-4801-9d4a-a291852265fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1062,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc40515d-dc56-4959-9707-d8df7e34b291",
        "cursor": {
          "ref": "fbaf7758-583f-401e-aaf7-012bc33d9f55",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "aa7f761b-7340-4343-957b-e61849b1fc0f"
        },
        "item": {
          "id": "bc40515d-dc56-4959-9707-d8df7e34b291",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "af116974-1119-4d02-aef2-e2342f6e497b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1187,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca8c5c6-13aa-4ae9-9212-c383503fc2a4",
        "cursor": {
          "ref": "6bd1f186-4ee6-48f7-9d5c-7bdb16e781df",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2ca1f60a-34bc-4a92-8fdd-b8df9dd9e810"
        },
        "item": {
          "id": "5ca8c5c6-13aa-4ae9-9212-c383503fc2a4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "60c87784-56ff-40c2-99ba-174380356baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 896,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc926389-dd10-4c14-a19d-6aa22a0be278",
        "cursor": {
          "ref": "d53b8b9c-6e19-4bdc-aad2-99a28a0f7a3b",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f865bed4-34a3-4b98-b8a7-a82ee35529c8"
        },
        "item": {
          "id": "fc926389-dd10-4c14-a19d-6aa22a0be278",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a849d905-b84f-424f-a477-b70a6c602b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921b73e3-6f30-42ae-9724-69d760a4d012",
        "cursor": {
          "ref": "8cd650c3-2b45-4e67-8dd5-ef90ea6b5415",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "bf3d3c49-9691-4318-9fb5-b714b78fc24b"
        },
        "item": {
          "id": "921b73e3-6f30-42ae-9724-69d760a4d012",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "332d909a-6d08-41e9-9245-d475cf609e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acc3758-f059-40a8-8bc0-a9e7a1cd7d0f",
        "cursor": {
          "ref": "cc744902-afb8-4500-9cdd-3c2544ea6aa0",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ffd5201a-9259-4a56-a137-6d30e40abcc2"
        },
        "item": {
          "id": "7acc3758-f059-40a8-8bc0-a9e7a1cd7d0f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8cdfa7a0-da94-4b51-8278-fcc832d5aaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e5c98f-8879-4edf-bc6f-5d531012ac4c",
        "cursor": {
          "ref": "5b5443c5-cf49-482b-8403-ea46160e577e",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "688e5cbe-9bf3-4136-b407-c67decfc0b46"
        },
        "item": {
          "id": "f1e5c98f-8879-4edf-bc6f-5d531012ac4c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "12eeacf8-6199-4083-8013-b6365ec5e35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87244f5c-ee1a-410d-a174-bb24f63a9a5c",
        "cursor": {
          "ref": "1b84aeef-168c-4829-9178-669a6af5521f",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a20e6579-ef4e-4754-a145-38862a5bdfb0"
        },
        "item": {
          "id": "87244f5c-ee1a-410d-a174-bb24f63a9a5c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a34df44a-ca54-454b-9a7a-6da36c1feccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26eb1c62-52da-4ee9-be41-5fa00563f416",
        "cursor": {
          "ref": "47edeba6-b013-487d-816a-b2394660b0e3",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7cfbe522-7b8b-4164-9b15-b5ec5e60ea86"
        },
        "item": {
          "id": "26eb1c62-52da-4ee9-be41-5fa00563f416",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9d2a0281-32ff-429b-a44a-2480c062d08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b35e38b-59b0-43b5-8722-619f3d37390d",
        "cursor": {
          "ref": "87d590cf-00d7-491f-a24d-7318a2eaf720",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5c7d3b18-004a-4ee0-a250-330bdcd79e47"
        },
        "item": {
          "id": "8b35e38b-59b0-43b5-8722-619f3d37390d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0eda9cc6-251c-454c-af06-638f9d32497e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e610ee87-b983-4b32-b06b-cde911531e7f",
        "cursor": {
          "ref": "a2bd5f68-b509-4d7d-aa56-cd6e86331da4",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d4daa3df-ded7-4d1c-ac03-1508a5225447"
        },
        "item": {
          "id": "e610ee87-b983-4b32-b06b-cde911531e7f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "18380865-7802-49e0-9a08-4f91d64b2e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5ab67f-bd87-4ba9-a68e-e58c0ff3dbf6",
        "cursor": {
          "ref": "9106ea12-244c-4d64-a6ce-892387844886",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "dd4996dc-f638-4439-9ef1-84c8a27eb369"
        },
        "item": {
          "id": "9a5ab67f-bd87-4ba9-a68e-e58c0ff3dbf6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b99de759-8d6c-4f14-8820-ab49b1213349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78e4f01-d0e1-45ce-bf36-06aeba8b636b",
        "cursor": {
          "ref": "87e51bb4-7985-4e31-b599-e3abeda335ee",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "43378d3c-406c-42f1-bdbe-ec2732bb0a6f"
        },
        "item": {
          "id": "d78e4f01-d0e1-45ce-bf36-06aeba8b636b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0e9399ac-0af6-4cba-8be0-8ea37e672044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1647d9-ff51-4c9d-86a6-22f5d5122b5c",
        "cursor": {
          "ref": "c8bd381a-5b85-4b02-a701-5970b3e9b7bf",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4b129303-e679-4894-b415-02fe6f617c56"
        },
        "item": {
          "id": "4b1647d9-ff51-4c9d-86a6-22f5d5122b5c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c42dd655-5e22-47a5-871c-fdf6f4d028e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0e2f3f-7fb9-4312-ae98-76f163dc720a",
        "cursor": {
          "ref": "ca2a32e4-3eef-40cd-8450-6dab31e33061",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "580c8701-304f-4647-aff9-72e41f80987f"
        },
        "item": {
          "id": "fc0e2f3f-7fb9-4312-ae98-76f163dc720a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "338359cf-1bc3-4189-870b-d03abf600bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84a696d-b7a5-4eea-9705-ded385f05a57",
        "cursor": {
          "ref": "8edd55e5-eb8a-457b-84ae-58ca01d629f7",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9badc01a-e9a7-42ff-94a0-9e3683ec9e8f"
        },
        "item": {
          "id": "e84a696d-b7a5-4eea-9705-ded385f05a57",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fad44e59-d9cb-4dbe-9d1c-f42d4e4defe5",
          "status": "Created",
          "code": 201,
          "responseTime": 2262,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "7e306679-94bb-4337-8475-157ed6a7b915",
        "cursor": {
          "ref": "1bc179d6-f646-40a2-acd4-c3ee852cbf03",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "697e866b-bc83-4d7a-acdb-0b342e83cb23"
        },
        "item": {
          "id": "7e306679-94bb-4337-8475-157ed6a7b915",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ea9aa1c3-f803-4a13-a811-211330037786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedee37a-7605-4a7c-af3c-9c086a19d86f",
        "cursor": {
          "ref": "75491761-802e-45f3-951c-7d7e9fce36b0",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6edb3926-f3c1-430f-bb1d-cf52a83f4494"
        },
        "item": {
          "id": "aedee37a-7605-4a7c-af3c-9c086a19d86f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "96b731b3-b24f-46b0-b9f5-3f602784e034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10844eae-1d19-4f32-b634-040c9b523e4b",
        "cursor": {
          "ref": "1fefb52b-d858-4909-8d80-b2d9795dfd24",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "83232c0a-3717-4ee7-8b94-6ff6ce1bb436"
        },
        "item": {
          "id": "10844eae-1d19-4f32-b634-040c9b523e4b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5191086b-fd20-4c54-be9f-16b00efade6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557d2b33-3b17-4f48-a6d1-c72cbff87723",
        "cursor": {
          "ref": "cc5b3c7d-2940-4a36-8ee0-9c044e5ef3e5",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "275eaaeb-a507-4b7f-96bb-1daf43cc62ca"
        },
        "item": {
          "id": "557d2b33-3b17-4f48-a6d1-c72cbff87723",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c12aeb99-8c7e-4afa-80c0-3f492e8ed8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ce538c-a7ca-4974-a39b-cd00af349655",
        "cursor": {
          "ref": "773236cf-3f6d-4281-b66a-a09b364af1b1",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "06e5fa0b-208d-47a3-b268-ee0a80cf2e38"
        },
        "item": {
          "id": "b7ce538c-a7ca-4974-a39b-cd00af349655",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1cca3e2f-c0cf-460d-9559-066a0369a4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc1e825-a398-450c-9c3a-46d9fe075288",
        "cursor": {
          "ref": "ebf8d933-458d-4eb5-a82d-4098d0d1d803",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9144f583-205d-49c8-ad1a-1c8347e49513"
        },
        "item": {
          "id": "6dc1e825-a398-450c-9c3a-46d9fe075288",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9d83c868-7ae6-4c6c-8aa4-938a0350e79f",
          "status": "Created",
          "code": 201,
          "responseTime": 2499,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "57bbc90a-c52d-4154-8940-66b5af5b24ce",
        "cursor": {
          "ref": "fb6d112e-0e2f-4f25-8c32-cc4f69619847",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "24dc6bf8-afc1-4142-8c7a-7c5b811a5f77"
        },
        "item": {
          "id": "57bbc90a-c52d-4154-8940-66b5af5b24ce",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "89a7a736-5019-465b-9883-e4294663c045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0c6840-4e22-4211-8696-129327f40df2",
        "cursor": {
          "ref": "438ca049-c5d1-4c58-8630-af812fe67562",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1920da48-1092-4b80-9ef6-137045880d48"
        },
        "item": {
          "id": "bc0c6840-4e22-4211-8696-129327f40df2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "74f7e605-7e77-4dd1-80cf-fd51aa8f9da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6705c4ee-09cc-4a6f-b55d-de163b088748",
        "cursor": {
          "ref": "6e2ef006-58b9-42ce-9d01-2a80a1f28a56",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6db62da6-073e-4f19-9f2b-c762911d0b1a"
        },
        "item": {
          "id": "6705c4ee-09cc-4a6f-b55d-de163b088748",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1ed0de5e-5959-49c2-8c56-0665b134d492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1326dd2-7c0c-48c1-9456-1e7056f8e38b",
        "cursor": {
          "ref": "1ac4abed-e32b-4e18-91df-d93faa4b1e79",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "db921260-174a-4d77-ad4f-1700ee0dae7c"
        },
        "item": {
          "id": "f1326dd2-7c0c-48c1-9456-1e7056f8e38b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9ecc0dfa-4814-49f4-bb98-afd155103058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5751d716-cb9f-485d-9cdb-8e9d68d6c3fb",
        "cursor": {
          "ref": "8fbdd2ee-67a3-4842-bd8b-8059a022d76a",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "41e6a28c-a348-408d-abd4-9304f7870cfc"
        },
        "item": {
          "id": "5751d716-cb9f-485d-9cdb-8e9d68d6c3fb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5199d5cb-14a1-43ef-ba9e-f2985b5205e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f203cf-adf9-4c40-a115-b3d0bc12fbc0",
        "cursor": {
          "ref": "a969f66a-aec7-4921-a3b7-d57cf1f35cd1",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fa5cf9c7-4ff8-4c95-849d-b2d2bf30bfe4"
        },
        "item": {
          "id": "a9f203cf-adf9-4c40-a115-b3d0bc12fbc0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5854d80a-3c1b-48d9-9c78-57158327e1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55176f99-4d66-46d7-871f-3f7e66ea126a",
        "cursor": {
          "ref": "185a1141-ab21-43b2-b6b4-5971f603cf08",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4b602a14-5f1b-4a75-a12c-4a3054e12e83"
        },
        "item": {
          "id": "55176f99-4d66-46d7-871f-3f7e66ea126a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "efce5fe9-c8d4-46fb-b04e-d7d7b00d4c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf51c4c-8c82-4b13-80ac-026665de6857",
        "cursor": {
          "ref": "56f5ec8c-85fc-489f-8a64-482a3c5612a3",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ad90839b-72d0-4cb2-9ccd-7d0045b19154"
        },
        "item": {
          "id": "abf51c4c-8c82-4b13-80ac-026665de6857",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "653c6bad-a3cc-4f84-90be-b2da6a5cd7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931081a1-b763-469c-90cd-9b91d7370bd3",
        "cursor": {
          "ref": "26bec9b6-dcd5-4de3-ae35-fe8e17cfa569",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "cd4a2380-42b0-468a-8185-5adcde14b4ef"
        },
        "item": {
          "id": "931081a1-b763-469c-90cd-9b91d7370bd3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "acb76822-8b7c-4e34-9e75-a6c4e48ad3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647cafe3-c897-44ea-937e-e923b6bba2bd",
        "cursor": {
          "ref": "5e71b608-3c1c-4986-aaf7-28960c4781ef",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "90621061-4af4-4929-92cb-f133e5903fb3"
        },
        "item": {
          "id": "647cafe3-c897-44ea-937e-e923b6bba2bd",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7327c874-cf26-4248-8bf8-20ee62227640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298f42b1-98a8-4047-bab1-1236d248b244",
        "cursor": {
          "ref": "9057651b-5695-4b7c-8038-43ca37abad39",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0551a9c3-64b1-4c7e-87a6-b5714472d9fd"
        },
        "item": {
          "id": "298f42b1-98a8-4047-bab1-1236d248b244",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8246953c-1f1a-4124-96cc-0eace3e9034c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef5d87d-258c-4947-a061-a83b99aa5be4",
        "cursor": {
          "ref": "5b99c7c5-6a3e-46fd-97f9-a36d9750e7be",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "707ca2e0-4599-49ba-98ce-9446a09a9c4c"
        },
        "item": {
          "id": "aef5d87d-258c-4947-a061-a83b99aa5be4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "39165e8b-c030-4736-bfb2-d4b122c06464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1dc886-0ae3-44e5-876f-6f88653a1ca1",
        "cursor": {
          "ref": "e92bf6fe-0147-4113-8b65-e403fe604ff1",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "39e52a2b-65f6-407f-9623-6de0f7866a61"
        },
        "item": {
          "id": "0b1dc886-0ae3-44e5-876f-6f88653a1ca1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "24bc2bb8-dbba-48aa-a4d1-2a31a9e09ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f5f567-96fe-4630-a603-d2e3c08454a2",
        "cursor": {
          "ref": "f4458fbf-8ae6-492d-86e5-a20c0db6db76",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b3cc62f0-aba1-4089-9918-ebb2037c04b3"
        },
        "item": {
          "id": "63f5f567-96fe-4630-a603-d2e3c08454a2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "57253765-bad9-4d9d-9c9e-8ba9f8c29df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04db7d88-3d8c-44a5-91e3-961b86118daf",
        "cursor": {
          "ref": "e0f2cfab-1d12-4167-8291-b7f65a6e920f",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "78074a05-8222-4163-9b10-620ea49e4816"
        },
        "item": {
          "id": "04db7d88-3d8c-44a5-91e3-961b86118daf",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3d08f1c8-7e14-41a7-b657-4834ca24aec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a3be5e-62c6-4e25-abf2-4a489adfe375",
        "cursor": {
          "ref": "5a8d1d10-7e60-4f6d-a440-8b7c982a557f",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "080a08f2-90ee-418f-9088-f223f7639a73"
        },
        "item": {
          "id": "20a3be5e-62c6-4e25-abf2-4a489adfe375",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "88e48e77-a891-4c12-ba23-fbdbb64a9885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5918ea-f86d-4121-a63e-fd1a276dd050",
        "cursor": {
          "ref": "243606e5-42a6-45b8-92f2-86ec27cc8c2e",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "526773b5-c6f5-4bdd-8a8f-5eb6b5967722"
        },
        "item": {
          "id": "ea5918ea-f86d-4121-a63e-fd1a276dd050",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d7c97a48-53a1-40dc-9d79-8812b8559e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827f1fdb-da94-462b-89dc-d3a1b23c93d1",
        "cursor": {
          "ref": "703321fb-4156-4070-8bf6-7200661a1c8e",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a4ef139a-c658-445f-9f26-d0b35f9aebb7"
        },
        "item": {
          "id": "827f1fdb-da94-462b-89dc-d3a1b23c93d1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a3b5ae5b-2ef6-4e1b-a5d5-3a5b827bd17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48c551d-b7bb-409a-b9e3-1a5bf4ff71eb",
        "cursor": {
          "ref": "9f39e707-bdbb-4da9-8a55-c4bb99676883",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c261346a-6da4-4d87-a8dd-1e36bc4b1e32"
        },
        "item": {
          "id": "f48c551d-b7bb-409a-b9e3-1a5bf4ff71eb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0eb3536f-700b-4f17-82e6-7f48ee171104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db703f98-97ec-4274-9bdd-16f8d33978bd",
        "cursor": {
          "ref": "7fa94732-e26a-4aae-bc85-e10d780f5402",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "593fa2df-9c0f-49ed-bf27-8547b6e00660"
        },
        "item": {
          "id": "db703f98-97ec-4274-9bdd-16f8d33978bd",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9bcb7910-edca-4e97-91c5-dbd37fd7ee6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe6697d-6af7-4e69-81cb-fea56a8d0369",
        "cursor": {
          "ref": "9b011b0d-0b6a-4ddd-ab24-22f92ffa2fb7",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f8734e00-569b-4be1-b9bf-22b62da7096f"
        },
        "item": {
          "id": "2fe6697d-6af7-4e69-81cb-fea56a8d0369",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0209e03b-b255-4e27-886b-f573b577d95c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91bddfb-91a2-49cd-99d6-2f97cec1164f",
        "cursor": {
          "ref": "d7fb9c8d-415d-49bd-83c6-c465f36853e6",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c2856760-16f2-4366-8ffd-8255b6efd455"
        },
        "item": {
          "id": "f91bddfb-91a2-49cd-99d6-2f97cec1164f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0cfbbcf5-81ff-40bc-9af6-68df1f9d79b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ac1c17-b2d8-4fc2-ac6f-8b064b1ac0b0",
        "cursor": {
          "ref": "69f3e1e4-3bff-4399-8165-c0d7aea9b051",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "30317711-8ceb-4ed8-a0ca-498e82385899"
        },
        "item": {
          "id": "c1ac1c17-b2d8-4fc2-ac6f-8b064b1ac0b0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7594557d-7178-42e3-b3d3-844df257699d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35c4f69-47b6-433f-b987-58f7c4f9ff9d",
        "cursor": {
          "ref": "379998e3-90d9-4d47-a93c-7d60482badef",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a70c4129-8461-4a71-8ec4-2b04585c53fd"
        },
        "item": {
          "id": "c35c4f69-47b6-433f-b987-58f7c4f9ff9d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ece7991c-0f8e-4acf-8ad1-6411ba0617f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1074,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cef345-22bd-492d-8ad8-690140d5afb5",
        "cursor": {
          "ref": "f544dc77-09c3-461a-b896-cbccc9dc01d1",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "06dd4b41-3e8f-4806-902f-16e24d255c28"
        },
        "item": {
          "id": "36cef345-22bd-492d-8ad8-690140d5afb5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d82b8817-98ac-414c-887e-19c7099d2792",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6c641f-3721-45f0-9ecb-bc75af4f2487",
        "cursor": {
          "ref": "984e0ff4-4644-4fb7-be78-8a5514291ba1",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5f8c957e-7e28-448a-a991-8307488e1ad9"
        },
        "item": {
          "id": "ce6c641f-3721-45f0-9ecb-bc75af4f2487",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "1276453d-760e-4a0f-8eab-0f90843e4207",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 962,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f70aa5f-86ac-4b2d-9e51-2074d18f195b",
        "cursor": {
          "ref": "f7dc4c3b-e42a-4247-87d9-1950f3b58684",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8c94466f-cceb-427c-90b4-cc095ec49fb1"
        },
        "item": {
          "id": "3f70aa5f-86ac-4b2d-9e51-2074d18f195b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a6f743f0-08b1-46d6-915c-69bf963e25c6",
          "status": "Created",
          "code": 201,
          "responseTime": 4767,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc9b193-b61c-493e-a86e-b3a93ec92dfe",
        "cursor": {
          "ref": "4ecd1fb6-4e87-4f65-8e9a-ac5e64528ae1",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0fb3f99e-cc15-4aea-a7cb-2f621deef734"
        },
        "item": {
          "id": "acc9b193-b61c-493e-a86e-b3a93ec92dfe",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "ba55ad74-9166-4613-b03b-af17e9f4074c",
          "status": "Created",
          "code": 201,
          "responseTime": 2628,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66f4b6d-3c9f-4649-aac5-9cc1f6083a2b",
        "cursor": {
          "ref": "2d1c1886-7993-4ee3-904b-44a79291979d",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "16de7268-536a-4e87-baec-6d2cfafa592a"
        },
        "item": {
          "id": "d66f4b6d-3c9f-4649-aac5-9cc1f6083a2b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "22058742-9edb-4ee4-9e5f-78fc0b332884",
          "status": "Created",
          "code": 201,
          "responseTime": 2802,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "34744174-9c44-49e0-ac76-49d318b9ac2e",
        "cursor": {
          "ref": "0380b089-d4df-409e-88b4-20038216df96",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ee1df57b-3ae9-40e4-a9b3-589399b9053f"
        },
        "item": {
          "id": "34744174-9c44-49e0-ac76-49d318b9ac2e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bc1d4929-6a43-4025-a90e-5e2cdeb2c9a0",
          "status": "Created",
          "code": 201,
          "responseTime": 6760,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1071eba-6fc7-402c-af1c-160f0b8eaf02",
        "cursor": {
          "ref": "00e11db8-89e0-48d4-b226-0603ecb0a905",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "72520d1d-60a6-429a-a3a5-8b4968fe8981"
        },
        "item": {
          "id": "c1071eba-6fc7-402c-af1c-160f0b8eaf02",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "cb444b90-dcd0-41ff-b683-b0e2f179699f",
          "status": "Created",
          "code": 201,
          "responseTime": 9777,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc8baa8-c668-4aac-b0ba-ce69eb1fc9a2",
        "cursor": {
          "ref": "f80f9647-abfd-4bd8-a301-008b13277409",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "187bcbad-f3e5-4de3-a79b-44879cacff8f"
        },
        "item": {
          "id": "2fc8baa8-c668-4aac-b0ba-ce69eb1fc9a2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "687668f4-6b76-4a96-a4c9-79040149aee7",
          "status": "Created",
          "code": 201,
          "responseTime": 5870,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab74e39e-fbc8-49c3-99c7-d1cb9b9dd682",
        "cursor": {
          "ref": "afc35c38-08aa-4526-8a8a-8c9ad95ec0e2",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ce064087-f99a-4a09-b05e-f6edd7c03152"
        },
        "item": {
          "id": "ab74e39e-fbc8-49c3-99c7-d1cb9b9dd682",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e9f85ffc-9459-402c-9f27-00e913e3af97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab74e39e-fbc8-49c3-99c7-d1cb9b9dd682",
        "cursor": {
          "ref": "afc35c38-08aa-4526-8a8a-8c9ad95ec0e2",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ce064087-f99a-4a09-b05e-f6edd7c03152"
        },
        "item": {
          "id": "ab74e39e-fbc8-49c3-99c7-d1cb9b9dd682",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e9f85ffc-9459-402c-9f27-00e913e3af97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3728f99-b326-4f86-a682-c787fc96aed7",
        "cursor": {
          "ref": "78b5fdf8-72a7-4213-80d4-ad1348c6fad3",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "42ac2518-e5b3-4662-b119-f2ee055091ec"
        },
        "item": {
          "id": "b3728f99-b326-4f86-a682-c787fc96aed7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "648c6471-c307-450a-b72d-f1e0d8d1125d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43d3f15-6182-4dad-850f-71146cf93aef",
        "cursor": {
          "ref": "22b1f6f9-c9bb-49e0-bf70-80821ae7bc5f",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a7ede6a8-df7e-46ef-9617-35a289080167"
        },
        "item": {
          "id": "f43d3f15-6182-4dad-850f-71146cf93aef",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "610b34ca-a39d-423d-b47f-2282b130b887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6af06b-9a79-4a91-9f98-479cb5034925",
        "cursor": {
          "ref": "54bf33b4-490b-474e-974b-1d9a59ccd8d3",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bbc64ccc-f3b3-407c-8f84-d9a3568afc1b"
        },
        "item": {
          "id": "9b6af06b-9a79-4a91-9f98-479cb5034925",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dd30f50f-4723-4b22-b86a-1ada77f7cbc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3826b5-51f5-4010-a208-e4d458cc75de",
        "cursor": {
          "ref": "141bec80-896b-4cac-a111-f14a7465532d",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fe7a7277-359e-40fe-b440-31ea139c9331"
        },
        "item": {
          "id": "fb3826b5-51f5-4010-a208-e4d458cc75de",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "148d3f48-b80d-427e-90ed-9ba492c655f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afce315b-56a8-4ac3-a57e-7081347678e6",
        "cursor": {
          "ref": "cdb72f1e-9cfb-4eef-ab9f-baf71726fcef",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2ac976f1-afac-48d2-8c33-e698e3fa19fb"
        },
        "item": {
          "id": "afce315b-56a8-4ac3-a57e-7081347678e6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fbc370c1-2894-4d80-9845-7da49a25ddee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee8bbb5-0596-4527-9260-9b3bcc7d9c1a",
        "cursor": {
          "ref": "a188887e-2e59-48c9-a44a-d9575a5599ac",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "459cb46f-5e24-4c09-b649-0f0795b4d880"
        },
        "item": {
          "id": "2ee8bbb5-0596-4527-9260-9b3bcc7d9c1a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8c8b52f7-9bc9-4b47-8512-f061db5778ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a71b5b-16fa-49b4-9473-30972d6d19fa",
        "cursor": {
          "ref": "02e30a5b-52c9-4913-82b4-48a80ce65002",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "930301c9-6676-42b3-94d2-ccfab683c54d"
        },
        "item": {
          "id": "b1a71b5b-16fa-49b4-9473-30972d6d19fa",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "92298d36-d030-4011-aec1-487a1ec2183a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd6fbf2-9117-4d88-9231-5a1252789c55",
        "cursor": {
          "ref": "1df6d265-9016-4c99-a1d6-eb8dafd24528",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1e6c2492-f3c2-4e6f-b0c2-619d7543fd24"
        },
        "item": {
          "id": "4cd6fbf2-9117-4d88-9231-5a1252789c55",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "17de492e-4b60-4a99-bf4a-041aa94b9753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839acf8d-8587-4ff8-83d7-41dcdbaa0022",
        "cursor": {
          "ref": "1ad752d4-31f5-4cd9-9eb1-7a6b1fb91412",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "369adfde-eb21-4386-b855-546b57aed5bb"
        },
        "item": {
          "id": "839acf8d-8587-4ff8-83d7-41dcdbaa0022",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "db2666b4-248f-4d38-89d6-7e6a0e7a6b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b9aea6-b515-403d-9f5c-e7a1836cd88e",
        "cursor": {
          "ref": "5accb12e-8b29-4bb1-9b54-6611be5960c8",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6b419be9-da3f-4499-950f-234c338bc24f"
        },
        "item": {
          "id": "a7b9aea6-b515-403d-9f5c-e7a1836cd88e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8fc1b1d6-9f2f-49b0-bf90-c386266eaca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe161ab-c773-43c9-b189-187ee1084401",
        "cursor": {
          "ref": "dccffe57-55e5-4d1e-8e12-695f01603a4e",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9398bf14-5788-4f23-ac7a-a1318f0dd39c"
        },
        "item": {
          "id": "ebe161ab-c773-43c9-b189-187ee1084401",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "df2bbe3f-b051-4ee7-b63a-87be7761bf9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e74083-2c7a-4663-9ea6-843160d82611",
        "cursor": {
          "ref": "1feb2ee5-111c-4caf-a618-6ec27c4e64d6",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c4b67b07-2956-4e32-a50e-406406383228"
        },
        "item": {
          "id": "91e74083-2c7a-4663-9ea6-843160d82611",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4e2ea6de-62f7-488c-8183-8ae62636577f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb2e08c-5aee-4092-8e16-0c8653320c01",
        "cursor": {
          "ref": "4a9c67bf-8cc5-48c2-afd2-eba0b54b866a",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d7b1067d-69fb-48ad-b80d-91c4bedbab28"
        },
        "item": {
          "id": "6eb2e08c-5aee-4092-8e16-0c8653320c01",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2ff340af-e4c6-4417-9a90-21a967176b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3824994-d9db-4016-96d7-2b23fdf8fae7",
        "cursor": {
          "ref": "fde1ce21-1426-46c7-bfb8-d3aafe65554e",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4d681ee2-bbe8-4977-9814-de5543dd3cb3"
        },
        "item": {
          "id": "f3824994-d9db-4016-96d7-2b23fdf8fae7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b912947e-8392-476e-8d93-31b3a44b21dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9666320-210c-4e83-b3b7-2938db3dc486",
        "cursor": {
          "ref": "158785ec-b8dd-43ab-91e4-d9ac499b009d",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b4384dcb-44d5-4cdd-8db5-bd165d6376c4"
        },
        "item": {
          "id": "b9666320-210c-4e83-b3b7-2938db3dc486",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a32479f3-0b00-495a-bdd7-293b5f64b577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4caf61-ab83-48a4-b1c3-6d22fa0717dd",
        "cursor": {
          "ref": "2f70fff1-243a-4611-a7fa-5e3aa8697853",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "968c9f91-1ea8-47f2-ba25-c23d5d9e13da"
        },
        "item": {
          "id": "0a4caf61-ab83-48a4-b1c3-6d22fa0717dd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "abf0deef-f4bc-4b2e-b1ca-57533e0d7ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868f9742-bb7f-4822-83fe-a5f0d9787324",
        "cursor": {
          "ref": "9c29b6de-81e9-4e6e-b3b8-a8eb04da187b",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e8600e2f-aa8d-4f30-b41a-4d55cee68152"
        },
        "item": {
          "id": "868f9742-bb7f-4822-83fe-a5f0d9787324",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3f3e5845-12df-413a-a9ac-4939306a0e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e7a854-c6be-4991-b0a2-960de9efc953",
        "cursor": {
          "ref": "3e791971-bff5-4b6b-8461-8541566a54f5",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a36729a9-1a5d-4c30-80bd-dd6b5a45e9cb"
        },
        "item": {
          "id": "d4e7a854-c6be-4991-b0a2-960de9efc953",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4bc2a640-c815-44ea-a268-09ccff12a9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ce4f67-aa5e-4bad-9f25-e76cacd36fd2",
        "cursor": {
          "ref": "e52f3a19-ccd9-449b-953c-8b66dc0e1556",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5152de2d-d0fc-40c3-8e0e-5556ef076144"
        },
        "item": {
          "id": "23ce4f67-aa5e-4bad-9f25-e76cacd36fd2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2222be8f-e827-4e41-9b16-86e930beb574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778b7b56-7251-4b6a-a683-b30aaa8da069",
        "cursor": {
          "ref": "ad8c0f6c-f6ca-42fd-8698-e2228a65521b",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "988f5e71-fa8e-4700-a7da-37800940ec52"
        },
        "item": {
          "id": "778b7b56-7251-4b6a-a683-b30aaa8da069",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5a00d2be-ccd0-4f3a-863a-e7533ed11b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa23867-c1d2-4b39-af31-46e3e31922f6",
        "cursor": {
          "ref": "aaa36012-1054-4226-8504-d56f5a3b10da",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f78e3a78-5487-4231-94c5-e3349581887e"
        },
        "item": {
          "id": "8aa23867-c1d2-4b39-af31-46e3e31922f6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9a4fdc11-4c11-412c-bead-98a43c5027a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418a1f33-e31c-4128-89a3-ee1b0bd92492",
        "cursor": {
          "ref": "4266a135-46ac-4aff-b39e-e8571d155ab2",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9399c1fb-998e-48cb-9f52-ab44870353d8"
        },
        "item": {
          "id": "418a1f33-e31c-4128-89a3-ee1b0bd92492",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ea57e96e-f2ef-452a-925b-ac32f1d998a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444d10c6-39e4-41df-b74f-00c3a9a3940a",
        "cursor": {
          "ref": "0aaaed9e-0007-42c7-af2e-f3800efac6a3",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c9654b7b-dff7-4503-b924-18bdc3c7e232"
        },
        "item": {
          "id": "444d10c6-39e4-41df-b74f-00c3a9a3940a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7af3c5d0-2a2f-450d-9a32-4b54c5a26736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717cb199-59e4-4c74-96b3-5d6040c9b635",
        "cursor": {
          "ref": "d91741e1-9cb0-4d0b-b846-f96cce704545",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d52e7471-35ab-4734-ae77-628da4f3c6cd"
        },
        "item": {
          "id": "717cb199-59e4-4c74-96b3-5d6040c9b635",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8a2c102a-67e5-4d3f-bd52-f4271217bf9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 923,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6225164c-2848-48eb-aa91-37fd4c6b5e4c",
        "cursor": {
          "ref": "0187c4af-8778-4303-aff0-d526e02581bc",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "41e56a84-3475-4af9-88f9-b74d4f3e8147"
        },
        "item": {
          "id": "6225164c-2848-48eb-aa91-37fd4c6b5e4c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "82166933-807f-49fe-9141-ab7f9c091634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c03dfcb-e4fb-4c21-aa0e-60ad28298286",
        "cursor": {
          "ref": "88e069c6-465b-42e4-bb44-1a642e77d43e",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "be349cf4-11ba-4f4e-aa40-3601b27ad705"
        },
        "item": {
          "id": "8c03dfcb-e4fb-4c21-aa0e-60ad28298286",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bc54d9aa-4309-4b68-85a6-c0199818f29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51663e63-4cc2-4a42-9e15-54916d4d253d",
        "cursor": {
          "ref": "84f0484a-9ffa-4d07-ba8a-9079945b69fd",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1b8154cc-ff0d-4c6f-bb62-9ee37f39f8c9"
        },
        "item": {
          "id": "51663e63-4cc2-4a42-9e15-54916d4d253d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "01667fbc-45a9-4129-a101-f7caf01042bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 938,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ff0a38-7df0-44ef-a2a8-da82a89cc2d1",
        "cursor": {
          "ref": "14a5d09c-8a56-434b-9f5d-a32162c45d1b",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d8cf3029-c9ad-4104-b90b-8363a9f5c0c4"
        },
        "item": {
          "id": "25ff0a38-7df0-44ef-a2a8-da82a89cc2d1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "22820b66-9fa6-4670-a126-99517bf1197b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9949c9-d77b-48fb-affd-558bda6cc62e",
        "cursor": {
          "ref": "0515b356-0a6e-4785-96c7-4b5fe385dea1",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "95900d00-cc35-4530-b302-2587884e2a7d"
        },
        "item": {
          "id": "9e9949c9-d77b-48fb-affd-558bda6cc62e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a04d56ee-dbc1-42b9-8516-a78e2eddd888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f035de67-dfb7-4e15-964d-56c16f440a7a",
        "cursor": {
          "ref": "a8152d5a-05e3-4752-a85d-10a8a0b19442",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3b6ede2e-caa8-4865-86ea-eacf9cd5b535"
        },
        "item": {
          "id": "f035de67-dfb7-4e15-964d-56c16f440a7a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0ebe5cee-bcd2-46dc-b429-58183410e3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79154bf-caa3-4662-88e2-cb0c075758a6",
        "cursor": {
          "ref": "0d6b4e14-a7a8-4638-90c0-c3784a23cb96",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "64c8254e-b876-472e-a2f8-ffd67ccb16dd"
        },
        "item": {
          "id": "d79154bf-caa3-4662-88e2-cb0c075758a6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1ac8fcd8-7014-43f0-beb4-82f487d74409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8157a8b0-fd1a-4dbe-ba7b-4d6249c29074",
        "cursor": {
          "ref": "d91c4135-d6a6-42ab-8830-3ac56a43493d",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "21444d67-dc1f-44a1-b961-6f1797054186"
        },
        "item": {
          "id": "8157a8b0-fd1a-4dbe-ba7b-4d6249c29074",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3bae0c8e-2c8b-402b-bcf1-2393e418ca65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5954965-827a-4d39-9b88-fb16d8136449",
        "cursor": {
          "ref": "154d7245-c8af-4507-afb1-a1f35bae00c6",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ff7eca86-b953-4eeb-9e17-a65009c37fbd"
        },
        "item": {
          "id": "d5954965-827a-4d39-9b88-fb16d8136449",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "37a38272-505b-4943-8d03-489557938363",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 507,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97eb021-04a7-4367-8931-f89f8a9dd943",
        "cursor": {
          "ref": "426673c4-6e08-484a-88e6-d3f922899928",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d4de1dc0-a0e2-4439-b4ed-e9872766c0ec"
        },
        "item": {
          "id": "f97eb021-04a7-4367-8931-f89f8a9dd943",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c6473cf1-eee5-4a7b-9c93-63f4d913450e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97eb021-04a7-4367-8931-f89f8a9dd943",
        "cursor": {
          "ref": "426673c4-6e08-484a-88e6-d3f922899928",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d4de1dc0-a0e2-4439-b4ed-e9872766c0ec"
        },
        "item": {
          "id": "f97eb021-04a7-4367-8931-f89f8a9dd943",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c6473cf1-eee5-4a7b-9c93-63f4d913450e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4101f2da-a5a8-4a29-858e-729e61b779a6",
        "cursor": {
          "ref": "5a11043a-630c-4ae8-a71e-d430acbd498f",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a433179f-462b-44d9-9c95-166d1bf69b1d"
        },
        "item": {
          "id": "4101f2da-a5a8-4a29-858e-729e61b779a6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "327041f7-5fda-4f1a-ba36-50afdf12cc17",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 249,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "07d88395-6199-4293-80fd-4bc5d8bd5cee",
        "cursor": {
          "ref": "b21394f3-02f5-4780-b83f-98bc937e1a5c",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6bcba162-6df6-4969-b221-148f77f32faf"
        },
        "item": {
          "id": "07d88395-6199-4293-80fd-4bc5d8bd5cee",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4d5f62c1-e0a7-4f5b-bf26-a40f6bcc2a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b969f252-332d-4ee6-b31f-003ecea28c6c",
        "cursor": {
          "ref": "71482c47-a9cd-40af-bd08-2a135e6c9bc5",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b2cd1511-5d04-41b3-b172-212a402bcb4c"
        },
        "item": {
          "id": "b969f252-332d-4ee6-b31f-003ecea28c6c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "583dbe30-0b02-48de-86ab-282dfe86ffc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad6ce6d-5aa8-400d-ae4f-4338ea5cdd2b",
        "cursor": {
          "ref": "a17f888d-619f-475e-8ebf-bf4dd1e67096",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bdf983af-0d93-474d-9388-ec4e6fd80e30"
        },
        "item": {
          "id": "7ad6ce6d-5aa8-400d-ae4f-4338ea5cdd2b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a25de4c7-ecfc-434c-8499-088ae9236489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46be74e9-ba21-4ba8-ad83-c3fc8a307405",
        "cursor": {
          "ref": "af228a2a-ff2b-4475-9e22-6e92cf37ac40",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a0a24d09-9a7d-466c-8640-5bb7ec2a8bd2"
        },
        "item": {
          "id": "46be74e9-ba21-4ba8-ad83-c3fc8a307405",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6f5cb8f3-138d-466a-b835-73882a0a3d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e50824-5928-4aba-b5fc-3ece8a7a7fee",
        "cursor": {
          "ref": "d5135d5c-792e-4736-b736-7efcb9862056",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "daddd60d-361b-43e2-95e2-be42dc2226b9"
        },
        "item": {
          "id": "66e50824-5928-4aba-b5fc-3ece8a7a7fee",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d385e0a0-fb35-4d5b-830f-2644c1340027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcafb458-2f91-41fc-adc7-e38e21db4145",
        "cursor": {
          "ref": "5b003cb2-0ec0-4eb3-8b1f-62f77f05a30f",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "12e9ed20-11cd-41ea-b978-4f44d3cb7791"
        },
        "item": {
          "id": "dcafb458-2f91-41fc-adc7-e38e21db4145",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6f2d2f2e-dac8-4d9e-977c-d7ead33c9d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064e35cf-9ad3-4fae-981e-f39c584f3aaa",
        "cursor": {
          "ref": "dc0a17cb-71ee-4326-8bc1-b78f173c7e3a",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "058ac257-1086-4113-aebc-af3a15b836c5"
        },
        "item": {
          "id": "064e35cf-9ad3-4fae-981e-f39c584f3aaa",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "949acadf-ebf8-483d-95bd-830bf7d381c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa692b5b-6c3d-4157-b2ee-ca7787be08c6",
        "cursor": {
          "ref": "5f59ab60-71b8-4446-8438-c06de81239f5",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c46fd911-4558-4468-9a0c-a0964524f0cc"
        },
        "item": {
          "id": "aa692b5b-6c3d-4157-b2ee-ca7787be08c6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "099ef9ca-ac21-46c1-935c-41991b65aee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8d5f7e-ad13-4089-aa57-25cbf9e86cc1",
        "cursor": {
          "ref": "67bc50e1-50d0-4569-8c5f-fb1dbd0225d1",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0abc19dd-1114-4190-b481-7514910d77d2"
        },
        "item": {
          "id": "ee8d5f7e-ad13-4089-aa57-25cbf9e86cc1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "90b682b2-652a-4e1a-8b7e-f7e9a4182390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c490c1d-5a37-4194-a34f-ec48ce196f5c",
        "cursor": {
          "ref": "a3b6e972-065e-4fa7-ac30-335e1d9276a5",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "308bcfd6-003c-418b-9fdd-40fe5302ddb2"
        },
        "item": {
          "id": "5c490c1d-5a37-4194-a34f-ec48ce196f5c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6a7289ad-838d-483f-aef5-1ff62b9a325d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c974a86e-7e96-4b89-9007-cc43a36e56f4",
        "cursor": {
          "ref": "8529b3c5-e22b-46c6-afcf-cf038da3e2a8",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b0b92558-fabd-4204-a0cb-1c7a076c1a77"
        },
        "item": {
          "id": "c974a86e-7e96-4b89-9007-cc43a36e56f4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d61cb9e6-d0be-4f7c-96f8-0be3854eef8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6c5c6c-51e2-4399-88bb-5794e9e5764a",
        "cursor": {
          "ref": "8b208840-4d85-4516-a81d-04c5d22dc529",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "24f506be-74a7-4e82-9b8f-29d2ed4936fb"
        },
        "item": {
          "id": "bd6c5c6c-51e2-4399-88bb-5794e9e5764a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "18b07311-a2de-406f-8280-737259fc8402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ac1cca-f676-41cb-a785-e95a98428d86",
        "cursor": {
          "ref": "f47a5732-f83c-477a-aea3-0370c9633442",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "76cd4e47-659c-468f-be3d-750f4fdc64d4"
        },
        "item": {
          "id": "e8ac1cca-f676-41cb-a785-e95a98428d86",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "521968e7-2dce-4c3d-8aed-84c6d5317c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1e6b44-c6fb-43ba-9f3d-a33e5fc34a05",
        "cursor": {
          "ref": "55f119b1-a3db-4b97-8930-1d2abc390759",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b9307348-c5c0-4686-b52e-107164bfc998"
        },
        "item": {
          "id": "5c1e6b44-c6fb-43ba-9f3d-a33e5fc34a05",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "bc2886a0-01e2-4dd0-bff6-a52ca9649873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4267a50d-819c-43cc-a43a-441316af3aeb",
        "cursor": {
          "ref": "65b2bc0d-d069-4158-b9cf-3a56cd7d48d2",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3d584d2f-95cb-4874-a245-1491637975d0"
        },
        "item": {
          "id": "4267a50d-819c-43cc-a43a-441316af3aeb",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "604dcb88-97e9-4d14-9843-884f5071c541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7425f6-adbb-46ec-81c9-4770a28005d9",
        "cursor": {
          "ref": "1a5a5ad1-d23d-4b2d-9f52-eb2d6f287fa7",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "514d3b0f-a781-4a62-b97b-ee6fa6a5582c"
        },
        "item": {
          "id": "8d7425f6-adbb-46ec-81c9-4770a28005d9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d6e8d8ca-6c94-4368-9111-5761eaeb0f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e60e0d-3681-4362-a5e3-91e66a4b521c",
        "cursor": {
          "ref": "ae0e7b89-3f4c-482c-9cf7-3c3383c51655",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "02d1542a-3171-4ed0-892b-ef39ae7c4ace"
        },
        "item": {
          "id": "e2e60e0d-3681-4362-a5e3-91e66a4b521c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a289eb24-2bff-456f-b8c6-902d7f81d2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb2f39a-5426-4388-a723-f4b56961c0a9",
        "cursor": {
          "ref": "3a200a26-6bdb-44b9-92f5-7be6d44648d0",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "25f8ebfa-6501-455e-94ba-47057673aad0"
        },
        "item": {
          "id": "bbb2f39a-5426-4388-a723-f4b56961c0a9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c98b084c-e093-4a5d-a593-72f8eda2faaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456a2b2b-0649-4b9c-812e-0a842ee23c71",
        "cursor": {
          "ref": "2ce47c1c-9d52-4732-b514-64d4bb811608",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5e054402-0705-46ad-846b-1f8809cc48cc"
        },
        "item": {
          "id": "456a2b2b-0649-4b9c-812e-0a842ee23c71",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c33a1e2a-4428-49d2-8418-a3d45517bd7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c8ec7d-f586-432b-8686-2319038460d4",
        "cursor": {
          "ref": "e58d9322-6b7c-4c0d-844f-49027ebfa5bd",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f5d9c4bd-ae3b-4db0-8152-a5caa2331427"
        },
        "item": {
          "id": "48c8ec7d-f586-432b-8686-2319038460d4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5c27ca44-8b72-46cc-953f-8c2ba9c6fe8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0885015-bf1f-49f3-ba23-4e40579a4c42",
        "cursor": {
          "ref": "d4d5d8e3-3fa0-4cbc-8559-b28027c77661",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "edb265a1-ec98-4d02-9a18-3e3609ea9cf6"
        },
        "item": {
          "id": "c0885015-bf1f-49f3-ba23-4e40579a4c42",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bc980ec8-62d3-4b0c-a369-f604c9912f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a9eb33-aa7e-47d0-a28f-3123b304ecaa",
        "cursor": {
          "ref": "42ea6fb4-5e5d-4ae7-8b2a-0a33a7edec41",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c65474ff-47f5-49fd-a17a-71755cbd1e79"
        },
        "item": {
          "id": "62a9eb33-aa7e-47d0-a28f-3123b304ecaa",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "67a53641-9092-436f-a2a4-4574f271c447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bd7d92-74f6-4f39-921f-4ef3c08a78ef",
        "cursor": {
          "ref": "448e376b-7f38-49a8-98a3-e6baecd42603",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "49a66080-cb1e-46ab-b560-5bacbfc9b464"
        },
        "item": {
          "id": "96bd7d92-74f6-4f39-921f-4ef3c08a78ef",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "58d9d891-cb1d-4091-9b5a-218af05d6702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e69101f-76e4-48ca-898c-fb1c37e42da9",
        "cursor": {
          "ref": "52623687-81d8-476b-82d4-5684440cbd90",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8029074e-a90a-434b-88e3-4574e70a39ee"
        },
        "item": {
          "id": "2e69101f-76e4-48ca-898c-fb1c37e42da9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "031ff684-0033-4793-b534-c3a69d2ecd7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8371d1-e4a8-429e-8288-6871adbc32f5",
        "cursor": {
          "ref": "bdd4dcbf-20b2-4d23-97ac-f614724c7c71",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ca3703fc-b954-49bb-a2bf-93941f087713"
        },
        "item": {
          "id": "dc8371d1-e4a8-429e-8288-6871adbc32f5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9eea1115-03b9-4ddc-a114-2569e7476677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d207389-163e-4709-8449-99b2f5e6302a",
        "cursor": {
          "ref": "672c001a-76a3-4f94-96ec-13215c8df99e",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "43781e89-cff2-44f9-bf18-416d7b0a743a"
        },
        "item": {
          "id": "6d207389-163e-4709-8449-99b2f5e6302a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "256aff83-3a87-4605-8650-bddd7eb3d295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035f604c-bf83-4b3d-8978-68953c199b49",
        "cursor": {
          "ref": "2e008e45-7285-4462-9ced-fc3c5cfb8585",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d79a4900-e095-4898-8a64-802fdaa968cb"
        },
        "item": {
          "id": "035f604c-bf83-4b3d-8978-68953c199b49",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cf3d9792-f674-446a-9d7e-7169717ebfc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5159309-aa13-48df-b05c-d7aa952444da",
        "cursor": {
          "ref": "c10e3b48-e0f4-426d-a33e-1f954dc8214b",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "fa87d91f-c2ce-461f-9859-662fc9c7a8ef"
        },
        "item": {
          "id": "c5159309-aa13-48df-b05c-d7aa952444da",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "538ee95c-3679-4ae6-accf-17406a997d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe513f1-c259-48d4-918e-4060c4bb6c87",
        "cursor": {
          "ref": "57a869bb-f9f4-4b7b-a77b-ab27236203e5",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "09d4ba61-29dd-46fa-a3e5-4657c0af9f2a"
        },
        "item": {
          "id": "dbe513f1-c259-48d4-918e-4060c4bb6c87",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9af89192-e62c-45c2-8245-1afb90d657fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18afcb6f-c9e9-4bbb-8a6f-8d4ae7feb6e7",
        "cursor": {
          "ref": "ca7e9eb5-f98a-41be-9091-d1eb337be589",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3f58c69a-7051-428b-af75-abed81ffa0aa"
        },
        "item": {
          "id": "18afcb6f-c9e9-4bbb-8a6f-8d4ae7feb6e7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0ebeee70-74b9-492f-9242-2c51e3ef563d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de175d6-fe9e-40cb-85f5-a10a42492f0a",
        "cursor": {
          "ref": "78cc4dcb-8e66-4262-bc8a-67c1305b9def",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ee7c4baf-b77f-4077-b795-e96f9554b2b5"
        },
        "item": {
          "id": "7de175d6-fe9e-40cb-85f5-a10a42492f0a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5f2bdd2c-d630-4218-a434-9eebaf39b7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645490b0-0fe9-4497-bb6f-e3d448aa8339",
        "cursor": {
          "ref": "7d2c2e57-00e8-44b9-8bf3-d159f91f8724",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b679f260-19d4-439d-a208-c89653bb7d3c"
        },
        "item": {
          "id": "645490b0-0fe9-4497-bb6f-e3d448aa8339",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "572ff773-0263-4dd4-ab77-a43ebb533334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1193,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72c5a4a-ccb2-479b-9523-41427a20f6c2",
        "cursor": {
          "ref": "161c84c3-b317-4bfd-b3e8-8003a37c5ec8",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f8db9962-6e7e-471f-929b-60c0d1f6de6f"
        },
        "item": {
          "id": "d72c5a4a-ccb2-479b-9523-41427a20f6c2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e84d10bd-5ba3-4a46-895c-ff199315207d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d2c437-7e15-4a5d-9a29-f084e03f4bef",
        "cursor": {
          "ref": "ceea6f92-569a-460b-9ccb-81fd746e0c54",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "320064ec-e886-476e-b74e-ba2702ffac4a"
        },
        "item": {
          "id": "f1d2c437-7e15-4a5d-9a29-f084e03f4bef",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "20a7bbaf-a46c-4373-aecb-df294f2b194e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac51ace-f5c5-4709-a4bf-82c33baf536c",
        "cursor": {
          "ref": "058f43db-6825-480d-b121-97d36428c302",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a3b476f8-81fd-4b57-9485-ffb2a4911246"
        },
        "item": {
          "id": "6ac51ace-f5c5-4709-a4bf-82c33baf536c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7b93a9e3-d440-4097-9886-3fb9c3350a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 980,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c635fa74-b677-4123-b81a-e7721341e26d",
        "cursor": {
          "ref": "e3ab395e-c7a4-4d78-be09-ef6a5e00e8bd",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4e1beeeb-cbc3-4805-98f2-a452f0eb91e0"
        },
        "item": {
          "id": "c635fa74-b677-4123-b81a-e7721341e26d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c2258d8b-c171-40f3-82dc-aaebc22cc7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1044,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bb2e5c-605c-4de1-9f1e-7ca8c7c91cbc",
        "cursor": {
          "ref": "f4815445-4b58-427e-970d-5039b88c1787",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1a85c332-e051-46a0-8ae1-9f58dbf127ab"
        },
        "item": {
          "id": "08bb2e5c-605c-4de1-9f1e-7ca8c7c91cbc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5bda8e42-30db-407c-a187-2d34cb33c2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1128,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c838dfe8-c2da-4387-a475-eb44e42f1220",
        "cursor": {
          "ref": "51eac85f-74f7-4558-8263-e5bde5e20959",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "32fa45ef-a91f-4d4e-a440-a682ed3fd180"
        },
        "item": {
          "id": "c838dfe8-c2da-4387-a475-eb44e42f1220",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "568eae9f-5242-489d-a964-9d773357048e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 876,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6b1b5b-ded7-4f90-b158-ad266ab61204",
        "cursor": {
          "ref": "7ed96837-92c6-42b6-9253-a6f092c73c57",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "76b35d0c-1747-41dc-ac0c-a8d0c45a9d43"
        },
        "item": {
          "id": "de6b1b5b-ded7-4f90-b158-ad266ab61204",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e5851922-5340-4e9d-a0e4-ed1640ca166e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1097,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88d3d57-3315-475f-8fdb-742770b14a97",
        "cursor": {
          "ref": "a852b9ca-ce05-4cdc-9c75-caae3c40220d",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "445d4788-bb3d-45b2-94d0-d703168b7ceb"
        },
        "item": {
          "id": "d88d3d57-3315-475f-8fdb-742770b14a97",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "645b1c75-f5f0-4d0a-b4cb-fae3b3f697f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 909,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10834c6-c269-43dc-80ce-0ab49396b2e2",
        "cursor": {
          "ref": "93d820aa-c08d-42d1-bd8f-74439d230106",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1f8fa1dd-16a9-42a9-bb3f-b1ab5a398830"
        },
        "item": {
          "id": "d10834c6-c269-43dc-80ce-0ab49396b2e2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "81b1cf78-7abe-489e-b7be-954b95efd236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e085322a-2863-4bc1-a7ab-ddaebb9c846e",
        "cursor": {
          "ref": "bd3c239f-d9f8-42c6-a0b8-62a133f53548",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "27cb3898-6245-414a-ae44-7c44421057f9"
        },
        "item": {
          "id": "e085322a-2863-4bc1-a7ab-ddaebb9c846e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3dbfc64a-89ba-4395-8c18-22cc00526eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212c0954-7824-47c4-93d7-94fed5c863a9",
        "cursor": {
          "ref": "523c82dc-58a8-4ec6-8882-43a192b2cfbe",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2de7f311-d925-4635-ba64-1a7058d9227e"
        },
        "item": {
          "id": "212c0954-7824-47c4-93d7-94fed5c863a9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3b4ece35-1979-490e-bdfd-d93a98c7e04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49daac53-aac7-479e-815c-e8398444b64a",
        "cursor": {
          "ref": "6e7e1782-330d-4bdf-9a65-a10a85e7426f",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e95dcc0f-5728-4283-92ac-f71533622882"
        },
        "item": {
          "id": "49daac53-aac7-479e-815c-e8398444b64a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "749e7a72-7550-4d09-824b-fcf4c8f4f321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5668d8a1-7f4c-410f-a1c7-0f1317f9adde",
        "cursor": {
          "ref": "8ba58977-eb03-461b-a460-fe46ab813f39",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e1b3f6bd-2d4d-4752-89f3-c59b0c4f2fed"
        },
        "item": {
          "id": "5668d8a1-7f4c-410f-a1c7-0f1317f9adde",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9a902f0e-e500-4189-b9d1-fe50a2916e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64697b45-be13-412e-905b-fcd61a0684c9",
        "cursor": {
          "ref": "962da8cd-c087-4cd1-8131-90d5a0206100",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8862d6b2-fd0e-4214-9701-5c3d3217b5a0"
        },
        "item": {
          "id": "64697b45-be13-412e-905b-fcd61a0684c9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "33172ece-abce-4150-8345-e2ad30f78805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627c0187-bfeb-4db0-92ab-23d6302d180e",
        "cursor": {
          "ref": "e2eb86be-b513-4e3d-b506-11c039e5ec91",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "912461a6-9f5d-4b5b-88a4-59db419b918d"
        },
        "item": {
          "id": "627c0187-bfeb-4db0-92ab-23d6302d180e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "69337be4-0760-43e5-81ed-0e99631d7d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 887,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65cd409-eb9c-477c-bf26-a647a8bf42e0",
        "cursor": {
          "ref": "c137b316-0ac4-4f34-af20-3fb959d52f2e",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e71465b9-672b-4fd0-b4f4-74540ada5a3f"
        },
        "item": {
          "id": "e65cd409-eb9c-477c-bf26-a647a8bf42e0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7621b3d9-0ab9-4fef-87b2-6c9d726541f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 855,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bc2a9a-6441-4cba-92e8-bf87d8ce709e",
        "cursor": {
          "ref": "8d74db14-5ce0-4634-a8a3-7c52cbcc935b",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d49cb530-276a-470d-9b03-658d9e8202db"
        },
        "item": {
          "id": "52bc2a9a-6441-4cba-92e8-bf87d8ce709e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2f0d3791-d0f6-49ad-af8c-df7641296c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 909,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4eaf3d-cfbf-4345-8ae9-d8ca05bc1af8",
        "cursor": {
          "ref": "50f377d8-8540-408b-8bd0-98b24308490a",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "953072f2-47f3-4dbd-89d8-fdce1ef598bb"
        },
        "item": {
          "id": "0f4eaf3d-cfbf-4345-8ae9-d8ca05bc1af8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "09d36f1e-6e24-4915-ad9b-1f7194d46c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1017,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a770c4d-3f97-4f54-aba3-fc60872abcb5",
        "cursor": {
          "ref": "943347de-cfba-4f00-8d14-80c7e05553d9",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3dad6b6c-df3e-44cc-aadc-2e065c10f444"
        },
        "item": {
          "id": "6a770c4d-3f97-4f54-aba3-fc60872abcb5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "048a56b0-cca9-411c-95e0-58e8a600d927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a188300e-8cfd-483f-a2ee-139e2eb22350",
        "cursor": {
          "ref": "fe9f6c31-3578-4538-a3a6-3be68a7a1458",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "039ed4da-bc3d-41bf-a3bc-f1831ab9bb11"
        },
        "item": {
          "id": "a188300e-8cfd-483f-a2ee-139e2eb22350",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8868b9dc-0aca-4b16-944b-b66509b533c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0da265-e22b-4f2c-ace1-420d511099eb",
        "cursor": {
          "ref": "d60508ad-dde3-4bce-88f2-7a7725839f88",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "67b48606-eb02-43ae-849f-26564715d4db"
        },
        "item": {
          "id": "1c0da265-e22b-4f2c-ace1-420d511099eb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "57273995-72c1-48e9-82b9-dcf8289e6b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7fd994-0fab-4fe6-9b37-60e0da6d0db2",
        "cursor": {
          "ref": "0f851678-ec56-46eb-ab9b-c69b3d807021",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7d2545d4-47cd-4783-9f5e-7597f545305d"
        },
        "item": {
          "id": "7a7fd994-0fab-4fe6-9b37-60e0da6d0db2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7a984c3c-50d5-4624-8d89-238f57b38d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d73c4cc-0d51-454d-a77d-4392a8bdce51",
        "cursor": {
          "ref": "53bc9af2-d4fc-40b8-9ee4-770a3c8ae79b",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1ce38203-cd6f-4f61-a98d-460895994fb7"
        },
        "item": {
          "id": "3d73c4cc-0d51-454d-a77d-4392a8bdce51",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "672630b8-e7d0-4197-a80e-331c5c972ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bfd939-41cd-4afb-b901-6e996933dda3",
        "cursor": {
          "ref": "b95eb61a-2519-4838-93ea-b7d84fd66f77",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f76effa2-a1b6-431a-9d02-f5197260c145"
        },
        "item": {
          "id": "a2bfd939-41cd-4afb-b901-6e996933dda3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8ba80d13-1aea-4835-beed-6e5f693e4c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5a9a58-f8d9-4818-a496-b375ab1c2ea2",
        "cursor": {
          "ref": "8690a212-2f27-4c76-9263-004c899bc11c",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fe32882b-8096-40ff-a35d-1b68ee5f1c07"
        },
        "item": {
          "id": "3c5a9a58-f8d9-4818-a496-b375ab1c2ea2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d0e6f22e-4d7a-43f1-86b9-8d6b28262ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccbca01-63df-495f-b6fb-370ce2de3985",
        "cursor": {
          "ref": "8afbb6d7-daea-4a90-b603-7523f5d8b3a2",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "bd652e0f-1646-457f-abba-bc02291386f0"
        },
        "item": {
          "id": "bccbca01-63df-495f-b6fb-370ce2de3985",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f16e8ece-07d0-4e1f-8bc3-d13bfb473c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d42cae8-2a3a-43df-bcea-428a8871293f",
        "cursor": {
          "ref": "dac5470e-ce8e-40c6-82f4-cccb07d7c05d",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6cc566fa-9bc1-4d0e-b747-abcf2b2e3133"
        },
        "item": {
          "id": "8d42cae8-2a3a-43df-bcea-428a8871293f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "010681a7-fd16-4fa7-92a8-41ffdbd85f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48816bd-d298-46fb-97e2-b8233a28138e",
        "cursor": {
          "ref": "8340123a-1c9d-43d6-8e3e-1d3612814db6",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2cba5f12-8fc7-4f18-af61-2d965e61d3e3"
        },
        "item": {
          "id": "b48816bd-d298-46fb-97e2-b8233a28138e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "15d21d98-9bb1-4c2a-a5b5-736788a19a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e4c24a-09cd-466f-aa33-a726eeb4a081",
        "cursor": {
          "ref": "098ac9e9-9b6f-4ced-8edc-b44b43c77072",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "db430913-b418-4aa3-a56b-6f7fad7cf296"
        },
        "item": {
          "id": "51e4c24a-09cd-466f-aa33-a726eeb4a081",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "29e97364-7e05-445c-951c-54f92fd5fa51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a162d8fb-37dd-4dcc-8fae-4ac64c2aff61",
        "cursor": {
          "ref": "23bd837f-b96f-44c9-b251-b0e87dea1316",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bc418411-9ada-451e-aa3d-f6d8587def3b"
        },
        "item": {
          "id": "a162d8fb-37dd-4dcc-8fae-4ac64c2aff61",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9e9172b6-ab29-4e86-b92d-df834c463844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ae4e92-cefb-46c9-b9ae-8902b5ae1448",
        "cursor": {
          "ref": "ba71fa62-3359-4b58-b5bc-bf28123d46fe",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0d48bd2e-c172-4d0e-a2eb-2a31b4027a65"
        },
        "item": {
          "id": "64ae4e92-cefb-46c9-b9ae-8902b5ae1448",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "80ebd5a6-f9db-45ae-8510-d4c29ddfa0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6779fb7d-0d82-4866-8530-f4024dd22566",
        "cursor": {
          "ref": "5bcedbeb-cad3-4fc0-b3b2-dbdff7d78973",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ad59cb1c-cbc0-4567-8f90-4dd69ab18339"
        },
        "item": {
          "id": "6779fb7d-0d82-4866-8530-f4024dd22566",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "47c12ee7-9f53-4e2f-9f25-2bfcd801a8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aee5dab-740e-4601-841f-635ddcb61959",
        "cursor": {
          "ref": "6e2e0aea-3a29-4912-b09b-2bbd498c8789",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3a83b3ce-e7b0-4fa2-b1b2-ff34a450b88b"
        },
        "item": {
          "id": "3aee5dab-740e-4601-841f-635ddcb61959",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e77307ec-8f8b-4ce8-aa2d-e3b973209fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33adeba8-ada2-4a5c-80be-08d20730db24",
        "cursor": {
          "ref": "b5227de1-2de3-4f5e-9551-74accb20699f",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d4967734-ff56-4182-ae61-f31fa74eeaf7"
        },
        "item": {
          "id": "33adeba8-ada2-4a5c-80be-08d20730db24",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c18728a7-0432-4db1-ab28-22d68fc10854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50b2878-ea96-4cdb-9cae-47dbb0c4055c",
        "cursor": {
          "ref": "f5a09d91-a49c-40b5-91eb-d5effd104274",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "685d345b-16af-4c65-ac61-8462b5c38718"
        },
        "item": {
          "id": "c50b2878-ea96-4cdb-9cae-47dbb0c4055c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "858199bc-b9b0-46a5-b91a-6e44c463991c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a8f3ad-d5a8-4c98-ae4b-7a9a8175b1c5",
        "cursor": {
          "ref": "6f560f0b-b1b4-449d-8f25-0e0b946a00da",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "cad21621-36df-4cd8-af87-a37505b88f78"
        },
        "item": {
          "id": "79a8f3ad-d5a8-4c98-ae4b-7a9a8175b1c5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "03e0740f-2cb2-457d-bf95-416397032625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceaac598-2ad0-495b-a305-26f323c8658b",
        "cursor": {
          "ref": "d5311cc4-4ad7-4324-93a0-090344d64bc4",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "70befb3c-528d-4346-b9a8-3db42632476e"
        },
        "item": {
          "id": "ceaac598-2ad0-495b-a305-26f323c8658b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a0d64093-f89a-4861-b34f-be1c7a47674d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3076da-1ec3-4e65-96d9-582f2132062c",
        "cursor": {
          "ref": "d18c291e-099c-4719-b76e-dc2345bb1fde",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "15235cdd-0311-48a4-a248-afba99ff42a7"
        },
        "item": {
          "id": "bc3076da-1ec3-4e65-96d9-582f2132062c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d1c376c5-7885-4d46-bf9b-3527c1fdf189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c051d0-182e-4edf-83e6-035a241de459",
        "cursor": {
          "ref": "8e6524d5-6bd6-467c-88be-eb27e74e01c7",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "aada293a-42ae-4ceb-8999-07dd3ffe0853"
        },
        "item": {
          "id": "e5c051d0-182e-4edf-83e6-035a241de459",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "59bddfc9-4db3-4853-858e-04e5391f5d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0405bbe3-2b92-4745-ab22-20a34800f9aa",
        "cursor": {
          "ref": "450c11d1-7c7d-4b91-aa27-6949f1ae70fc",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "11d6f266-b091-446f-81f3-d1a4defdfb2e"
        },
        "item": {
          "id": "0405bbe3-2b92-4745-ab22-20a34800f9aa",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "992ee560-b421-46ac-a97a-6595bdb755c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0377b9dc-6f23-4c52-b583-a3118d054e2c",
        "cursor": {
          "ref": "6756ded8-647f-4831-adff-eaaeb02c1f0c",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5dba7bc3-11ff-4445-9f86-d69a7e9be68e"
        },
        "item": {
          "id": "0377b9dc-6f23-4c52-b583-a3118d054e2c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "70069fa0-561e-4546-8b9c-0427ca8d6f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 877,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b803138-a0a0-4b1e-ad3b-2408ae6ed995",
        "cursor": {
          "ref": "f179a9db-fc33-486b-9659-9a179235a986",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ea6635c1-cdc3-4d0d-860c-76bd23a7ac53"
        },
        "item": {
          "id": "2b803138-a0a0-4b1e-ad3b-2408ae6ed995",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9c4e42d7-81b0-4644-b6a7-2833beee4dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 930,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a89509d-1ceb-4008-9aad-f740b503ce13",
        "cursor": {
          "ref": "e627bd6f-dc58-4ec9-872f-a0e7be65a256",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7a45aecb-624d-4c3c-a48f-267bc8acd674"
        },
        "item": {
          "id": "4a89509d-1ceb-4008-9aad-f740b503ce13",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "906afda7-32bd-4477-96c5-0e86ea63dc18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9ec415-18ae-4a0d-9871-e7237886629c",
        "cursor": {
          "ref": "e5b1a3ef-7d92-4184-ab0d-8a417c9f1451",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c8e220c3-4603-48ee-b219-2ee67ff79d99"
        },
        "item": {
          "id": "3d9ec415-18ae-4a0d-9871-e7237886629c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "579b43a4-4e3a-4f1c-8984-4139904fa988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba7d864-9f8d-46af-8a85-b0446f5c21bb",
        "cursor": {
          "ref": "532f8ab2-084f-468f-8074-427cf69fdc32",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4c52c3a8-a2b5-4a9d-b72d-4f145999c77d"
        },
        "item": {
          "id": "0ba7d864-9f8d-46af-8a85-b0446f5c21bb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ffd8b330-a5bf-4092-828b-9b166cf9b488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80e3b34-94ec-4731-9a72-3963111a76d0",
        "cursor": {
          "ref": "79200bf8-6831-4229-a1a9-7916c10a84b7",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3f2eb522-7c4a-4593-af23-fdb851d3a325"
        },
        "item": {
          "id": "f80e3b34-94ec-4731-9a72-3963111a76d0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "56178009-a6f7-439e-93d3-6f47693789e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c401961e-319a-462f-a813-5498840cf4a0",
        "cursor": {
          "ref": "3fbcf723-ca29-4fb0-86b4-bde42c56619b",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6cdab97f-3aa6-497f-9daf-877e90c18cd5"
        },
        "item": {
          "id": "c401961e-319a-462f-a813-5498840cf4a0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e089d33e-0199-471d-a270-dab55a76eb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512ee963-c36f-4e70-a039-e1e50a0c7fa5",
        "cursor": {
          "ref": "ea748c48-3602-4c50-818a-a17fb6ef4388",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6c5c8881-ac2b-4876-9054-8be101c33a2e"
        },
        "item": {
          "id": "512ee963-c36f-4e70-a039-e1e50a0c7fa5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "85acd442-10dc-457b-9cfe-b400e8705b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e4f211-726b-4216-b283-9fc133381282",
        "cursor": {
          "ref": "c787b09f-8f29-4611-b5ff-b6502d301927",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0604ebb7-bd56-4b07-ab8f-78e6a8cecee3"
        },
        "item": {
          "id": "71e4f211-726b-4216-b283-9fc133381282",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "450173b1-e488-4d4d-bd63-96c608d6e5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80618d3-0e28-4161-bcc4-81469849154b",
        "cursor": {
          "ref": "cd362e1d-e2f6-4774-a87d-6e7cc40ada4d",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f7b2cff2-7b77-42a7-ad45-713b55e83b89"
        },
        "item": {
          "id": "a80618d3-0e28-4161-bcc4-81469849154b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0223a90e-4507-48c0-8fc9-b3586e4a12a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3475a832-d01b-4ff2-bb0c-967d14a8d7ee",
        "cursor": {
          "ref": "9936a3a5-4a58-418b-97f8-9e304ff6cf2e",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e39bef11-d68f-4b96-a1eb-ad73bf7d7158"
        },
        "item": {
          "id": "3475a832-d01b-4ff2-bb0c-967d14a8d7ee",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "73e2da2a-ddc8-45db-94e8-039f0a6c521b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d8bbc3-d210-4d70-b280-98541c7bdd0b",
        "cursor": {
          "ref": "b38f7032-e6a2-4ed7-8baf-97f4e2698270",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d9ea465c-c1a2-4d21-87a0-add9c3bfc155"
        },
        "item": {
          "id": "99d8bbc3-d210-4d70-b280-98541c7bdd0b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "90b05c96-4b4c-4af9-8e2a-757ae76c0f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a80f1f6-509b-4986-bea5-3663966d97e8",
        "cursor": {
          "ref": "5152862d-16b8-4784-89aa-7fda21e6f12e",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3f261deb-30c1-4811-8477-84ea03bee73f"
        },
        "item": {
          "id": "7a80f1f6-509b-4986-bea5-3663966d97e8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8d91b5be-af8e-457e-9534-85ceacf56dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c885015-0a43-4fda-adb5-3342c8b58362",
        "cursor": {
          "ref": "c23de0b5-fe07-408b-9c7e-d9464a98a1c0",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b32864b9-8218-49da-ba61-3d3afed8b74a"
        },
        "item": {
          "id": "5c885015-0a43-4fda-adb5-3342c8b58362",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "30cc1f79-2db5-4470-877a-869ac18e5ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15685d0d-a36d-48ff-bcb6-6063b2c8478f",
        "cursor": {
          "ref": "f71b7357-02c5-432b-a851-f5ad4a8d4a44",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e7cb61ef-1f1f-44b9-a037-ad095e897bde"
        },
        "item": {
          "id": "15685d0d-a36d-48ff-bcb6-6063b2c8478f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a2964a47-cfcb-4785-8de4-af5d72ac1c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12bf9410-f955-468c-b419-bc47dc791794",
        "cursor": {
          "ref": "7eb6c805-9962-43a3-bc5c-1612ad34464c",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4a449b58-026d-439d-82e5-839217b4a7a0"
        },
        "item": {
          "id": "12bf9410-f955-468c-b419-bc47dc791794",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e4bd6afc-8ab1-48e8-8d9d-28ba2781e913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e687875-9090-41b4-bb5f-affe5b5c8fa9",
        "cursor": {
          "ref": "d2c341e7-694b-456e-be3b-ffd9e252180d",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cdc1ba98-8760-4fa2-98c3-33bc517d43fe"
        },
        "item": {
          "id": "4e687875-9090-41b4-bb5f-affe5b5c8fa9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "dda17e4c-91d2-4410-89b3-4c909a617a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fca7a2-045a-4024-934d-b0b6287aa103",
        "cursor": {
          "ref": "c5f2c164-0380-4bbb-b932-d4912fdb8937",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e245899c-dfc7-409b-8905-4bd368bf620e"
        },
        "item": {
          "id": "56fca7a2-045a-4024-934d-b0b6287aa103",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "36e01ff2-b96c-4892-ad99-d65d8371d5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f637f9-8263-4ae6-b7cb-fa46685c21b0",
        "cursor": {
          "ref": "2bda9692-b92f-45cb-96e0-db915cbfed09",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "759fc28d-128e-4957-a54b-da9eeffd7c5b"
        },
        "item": {
          "id": "c0f637f9-8263-4ae6-b7cb-fa46685c21b0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c7bf830b-cbe2-4ab6-80b0-befe7946a78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac61f4f4-ccb1-4456-95eb-a90ac3fc3fa9",
        "cursor": {
          "ref": "209b50fd-8a49-4530-a758-ee67fb16baeb",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "54e404b6-6578-4d2e-b130-1140067ca81f"
        },
        "item": {
          "id": "ac61f4f4-ccb1-4456-95eb-a90ac3fc3fa9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "829d76bd-b165-4ab8-989d-fc6329267203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a55968-1bca-4ff2-9eb5-8d16f68e476c",
        "cursor": {
          "ref": "d1447977-99dc-4994-a34a-aacd589409b3",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3cee2fe4-97be-4972-a968-34eebf7f56fd"
        },
        "item": {
          "id": "07a55968-1bca-4ff2-9eb5-8d16f68e476c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "55aecd56-7d52-471a-a240-9ccc7d28497b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2957d292-5e43-4eff-a42f-eb10621f464b",
        "cursor": {
          "ref": "4872ee92-dfcb-40c5-903a-62a39ae53057",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3097c3f2-dbcf-4be2-99b9-ac95a8aeb7ca"
        },
        "item": {
          "id": "2957d292-5e43-4eff-a42f-eb10621f464b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "28a10ca5-733c-4b34-bd1f-71712ff12bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8966efa-c4a6-4108-87b4-917cf14ab557",
        "cursor": {
          "ref": "3ed24696-e09d-4f87-bcd3-ff2d3138ec13",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2ac24c4f-82a3-458c-bb8b-0f00f46d89b7"
        },
        "item": {
          "id": "c8966efa-c4a6-4108-87b4-917cf14ab557",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2af464db-b153-41b6-85cd-0a38a6497986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc1091f-8431-49df-a184-978cb82bebbf",
        "cursor": {
          "ref": "02a96965-2409-4117-8bb2-a892c10f4df9",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "330fa13c-9e28-4e17-9c32-591f30502097"
        },
        "item": {
          "id": "2bc1091f-8431-49df-a184-978cb82bebbf",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d8c51ac7-e8a1-419f-bf4b-0d1143d87257",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f86e408-8091-4500-a7bc-eae728d1712a",
        "cursor": {
          "ref": "b9449108-9e04-4d02-bb44-c0d4d620f563",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "734ec275-7629-4758-b7f8-bfbc202ad374"
        },
        "item": {
          "id": "6f86e408-8091-4500-a7bc-eae728d1712a",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "9a00de5e-2d36-4985-a274-965d4dc57c3e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 348,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10028116-0669-4d04-9522-3fc093ed5d9d",
        "cursor": {
          "ref": "9f6ee870-7aff-4c29-a26f-a76e254811c5",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "90da56bf-6c57-46bd-8d0b-3e2426ec84e0"
        },
        "item": {
          "id": "10028116-0669-4d04-9522-3fc093ed5d9d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3a325780-38e1-4cbe-8d91-7bae3fb8a89e",
          "status": "OK",
          "code": 200,
          "responseTime": 473,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714071af-ea9e-45f7-874b-50c6e2f8aee7",
        "cursor": {
          "ref": "560ced40-24d3-4951-bc17-acaf1580ab3e",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "43296898-fc4b-4ce8-ada4-122223250236"
        },
        "item": {
          "id": "714071af-ea9e-45f7-874b-50c6e2f8aee7",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "b7a75528-4345-4732-8f5b-34d49b1de672",
          "status": "OK",
          "code": 200,
          "responseTime": 352,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd684ed-3381-46ae-b049-b65ad3e93e97",
        "cursor": {
          "ref": "7fc312b3-67f6-4cb1-a912-820828cdac7a",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c0fc6eb8-d05a-47f8-a3eb-46496d9a196d"
        },
        "item": {
          "id": "3dd684ed-3381-46ae-b049-b65ad3e93e97",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "67fd345c-254c-496e-a64e-609e80ea2631",
          "status": "OK",
          "code": 200,
          "responseTime": 398,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972f2b08-b7fd-4642-a64e-278f71e71c4a",
        "cursor": {
          "ref": "a57a1437-5ab7-48a9-abec-e81fe3d35429",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "17b0fe80-18ef-4f7d-b2d2-608fd925cb4b"
        },
        "item": {
          "id": "972f2b08-b7fd-4642-a64e-278f71e71c4a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "50259b62-41ed-4e90-bdaf-b0f28964e5eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972f2b08-b7fd-4642-a64e-278f71e71c4a",
        "cursor": {
          "ref": "a57a1437-5ab7-48a9-abec-e81fe3d35429",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "17b0fe80-18ef-4f7d-b2d2-608fd925cb4b"
        },
        "item": {
          "id": "972f2b08-b7fd-4642-a64e-278f71e71c4a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "50259b62-41ed-4e90-bdaf-b0f28964e5eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972f2b08-b7fd-4642-a64e-278f71e71c4a",
        "cursor": {
          "ref": "a57a1437-5ab7-48a9-abec-e81fe3d35429",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "17b0fe80-18ef-4f7d-b2d2-608fd925cb4b"
        },
        "item": {
          "id": "972f2b08-b7fd-4642-a64e-278f71e71c4a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "50259b62-41ed-4e90-bdaf-b0f28964e5eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91e78bc-00af-4f61-b659-eed3a78e43a2",
        "cursor": {
          "ref": "27df71f3-4067-4b93-a80a-ac5209b44645",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3f2af936-ee0d-40a8-843b-b7ae9bf8e698"
        },
        "item": {
          "id": "d91e78bc-00af-4f61-b659-eed3a78e43a2",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "9fe9a3f3-c5c4-4aa7-b756-d27721bf70e5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 374,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce7bbf1-f7ec-4f29-b519-1ababc97aea3",
        "cursor": {
          "ref": "b4ce2e8b-d736-4814-86ab-4c87727b3c87",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4001135b-d6e0-4aaa-8282-dabe442b1c4f"
        },
        "item": {
          "id": "2ce7bbf1-f7ec-4f29-b519-1ababc97aea3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2fdf5b9a-b0d7-4299-8fbf-293d5d170c0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce7bbf1-f7ec-4f29-b519-1ababc97aea3",
        "cursor": {
          "ref": "b4ce2e8b-d736-4814-86ab-4c87727b3c87",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4001135b-d6e0-4aaa-8282-dabe442b1c4f"
        },
        "item": {
          "id": "2ce7bbf1-f7ec-4f29-b519-1ababc97aea3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2fdf5b9a-b0d7-4299-8fbf-293d5d170c0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72f9aa8-1cab-4314-816a-2d6cb56140f0",
        "cursor": {
          "ref": "6e259594-b6ec-42be-9352-f1d63ff75fdd",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "549c823f-7e3b-47d7-b66f-a80fbc80e27a"
        },
        "item": {
          "id": "e72f9aa8-1cab-4314-816a-2d6cb56140f0",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "01202e7b-6af1-4205-b000-b5177858bd79",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 556,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267b20bc-87bb-41cf-9d8b-6cd04e5838bb",
        "cursor": {
          "ref": "3cb365cd-a94e-4868-85cc-d4f946ea074b",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "63c4446b-340b-41b2-8b8f-4c833433faed"
        },
        "item": {
          "id": "267b20bc-87bb-41cf-9d8b-6cd04e5838bb",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5ef53e90-6ee4-4f1f-a6f2-1908af5288c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267b20bc-87bb-41cf-9d8b-6cd04e5838bb",
        "cursor": {
          "ref": "3cb365cd-a94e-4868-85cc-d4f946ea074b",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "63c4446b-340b-41b2-8b8f-4c833433faed"
        },
        "item": {
          "id": "267b20bc-87bb-41cf-9d8b-6cd04e5838bb",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5ef53e90-6ee4-4f1f-a6f2-1908af5288c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e64305-b486-4cba-9786-a34ca8050659",
        "cursor": {
          "ref": "8e5159d4-2bfe-4371-bd81-a658b719da24",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "26a5049e-030d-467d-9ce4-5a5c5f4aaa38"
        },
        "item": {
          "id": "12e64305-b486-4cba-9786-a34ca8050659",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "98e1d7c7-2229-4c95-94ec-c4cca459315f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 526,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}