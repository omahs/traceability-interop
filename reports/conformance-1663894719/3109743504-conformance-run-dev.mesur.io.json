{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "badc6419-448d-4fad-9d78-8311257dcd35",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "76ae1504-4d5e-470f-a001-885ecee76aa3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "82f5078b-de63-45d9-94bd-ffb2af34db01",
                "name": "did_json",
                "request": {
                  "url": {
                    "path": [
                      "did.json"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26b741df-396b-4273-bb93-dd48124a2126",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec3811ea-b455-42ea-b99c-b40b6fc9a7b7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "05f4c338-b800-4ae3-8894-6d861e55c017",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "744c8b7d-d485-408f-b525-8f5482b4ea9b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5aa037c9-099b-4315-8030-0b8579a1c651",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fa962946-301b-4732-9818-c57542996086",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f085f8c-fdde-4018-a80c-a81764899734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "feda66e1-6f8a-4210-a795-c1b31c064f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e09b05-cfdb-46fa-a97d-555b3a4c6b9b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca0506f-8ac4-4bea-b11b-e9e416e1575c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2bbb3d7d-a3aa-4080-a5d0-9586a46987e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526cba55-4d48-40e3-aede-52067625e64e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce88d710-8558-47db-890b-94abdeabb0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc560454-62e6-43fb-b84d-ddb4249aaa23"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "134eb412-1ba3-41b6-a241-65b8f3e1aa7b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "039219f7-71ab-4087-a54d-69f3617cd800",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21746c92-1e88-42f6-b0cb-03c368cdc59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62606c67-1cfe-4355-a928-f5fd2686564a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88123b8-cf4c-45a1-83a0-cd319bafc384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6f1a22-0eb7-4ec1-a3e5-2b8b47d84530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534b1910-bf69-4a3f-ad4e-843664901d11",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c624742-c0b5-4c21-8d43-396d9da468d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a27c12b7-2aac-42bd-a18c-5e2d479f6116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772baea3-7949-4859-86c0-ad41f5c79e24",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "a89a8e49-49b1-4863-a2ae-9ff7ce310189"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ca77391b-83b0-4810-a943-18bddb7e7935",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f201e36d-682d-4828-af6a-d70c6a78d169",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "27bdfd35-a385-4b7e-b9a5-c4244f4aa06d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4f7d5c70-31e3-4074-baef-4ad0441eed38"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c2485d0-0b8e-4a8b-8be0-5237a3873b40",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "5fa360bc-94b0-4af4-bf96-02cd779e08a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55b6d8b1-9412-4548-b6f8-f06b4c8785c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3345a5fd-d0b5-409d-93de-36c556ae73d6"
            }
          }
        ]
      },
      {
        "id": "a22e52dd-92d5-43fe-a26c-b5e28c52fb86",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8eb11e71-105d-480d-bc2d-f45fa98632f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc027f28-ba27-4f29-8195-b69c74323b9e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ba31c117-9dcf-42ca-ad70-a94230a11201",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce46daf2-37a7-4f13-ad28-d1f943066f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7821fea2-d8c7-4eea-84ff-dea79dfa0eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8a5ed3-7957-4686-be19-5a987f224c55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f38ce256-50cc-42b4-b240-9b737c3231c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d39a2b2-cda1-45b0-bc67-d001a1bf356f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144215ec-ecc6-4ec2-870f-d7584da559ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60de46b-2ab0-4650-8def-88796b540d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f91fd43-ba11-41f9-ae78-6a777d84b66d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f00d5cc-b2d0-46af-ab1d-cab1213cdf27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f628926f-68e5-49de-94f6-bc38bb8166a5",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db872ef9-12c3-48dc-b867-32ccdeae60e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950c388c-d5e3-443a-84d4-a79297ea8a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd59b8f0-ea8f-4008-8b3d-96794935ce7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69d937ce-85fc-47a7-8e68-b03a4844711f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7e4a51-ac70-4c18-9745-edebaafd5349",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab742e6-d10d-45de-9bc9-927bcdd736d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c014353b-14c2-4409-bd2a-e5ddef77f528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf8b27e-b7f2-4318-ba6c-0630bc80d909",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "550fef19-e796-4c90-afdb-4e046314d024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823912ac-6c4e-4932-bd2f-907876a92f0d",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6adc0d1-8ac5-427f-b8c0-3743ad3f7326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb80390-5786-4ad0-bc12-b5b1024ff74a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23ca841-3fa7-4cb4-b314-d3468c6060df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fd9cb21-13de-458f-a6bf-d05c971d170f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d39768-10b4-46d6-a74d-c2fcd22e3cdf",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f041ab4-0d53-4595-ad28-e1d671ff1df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e36be7-202a-479e-8d00-614708d0e752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef790ed3-bcca-4da3-8fc5-fbd16d014fad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0931a011-d12c-4186-abdc-653fa48254b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1db9b11-4f5d-425e-95a5-71dd55f084bb",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9275a1a9-f293-4a72-be43-047861b8f78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598a4430-6a01-4397-9e50-d525fba45fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef81754-8ece-4aa6-9d21-72efc4e0acf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a57497db-ee68-410c-ab65-fff50de0a08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7f34f5-49e9-440c-b050-029015b93f1e",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11839fc3-e504-465b-8957-252bf4029a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "681ab844-2423-4ceb-9850-ad00b152b310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313d18d2-4db5-4644-8a48-7feae86b3b46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a8f047f-b0d3-4cf9-bd42-8367033a8a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c5c6de-691d-400a-839b-5cc58d5621f3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b56e31-3343-4231-bf24-e35bcf221fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a75d9e-871d-4cb7-8a9a-abd3951d2262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1103ff8-8e42-4911-9f5b-368f24ccc75b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e40e8ed4-cf00-4816-af83-b5701dc1993d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6eab177-4cd4-443c-b761-72d6c1f2acbb",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffee19e-ad0d-45cb-a5e2-edfe7417c2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908aff22-ec1b-4c6e-8f1c-fa760f1a9f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9427485-04fe-4b8d-ab23-f7edb13cc01a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77a2aeb3-9cce-4df4-b7bb-25ceaafd500c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8894736-2192-4864-94ed-be32ea04c6d6",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040d5060-0134-4e06-a0c3-d689e63d3e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ebd59f-c760-4a70-ae00-46419b91b75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b498a2d4-90a7-4298-b73b-8154264cd949",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "8c24759c-e700-4af0-8b07-50f9fbff3242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b62151-c6f5-4ec7-852e-1070e52420af",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d391148-320a-49af-8fdc-40fbd9f6bb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fbfa08e-f920-406c-9e79-4d19013c693b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22344de8-5045-478a-98e8-18d59c25cf1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "0ee3db0a-881d-4d2e-80be-795cf3b2c5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5a8aec-6818-429e-ae57-d2b4528454c1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66309608-c932-4b79-a628-fbcb50361901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d4fc34c-55bb-4bfc-81e0-7ae7d15a4a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd25a726-9482-4afe-9ee5-2a6a5772e061",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebc8ad0d-272b-4c86-b5ef-c310407dd9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab15467b-9771-4a8b-983a-6dbd447829ad",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d468cac-650a-4bed-a59c-f6a6e9adcc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50143a26-a6a3-40d9-a319-2511a8629877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc69ed9-7408-4e3e-8e63-cf623c1da0a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dbd04e7-5a5b-4b01-bdc2-b91396618fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954a0837-c172-4a3e-b3f5-225e2d403caf",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe70b9d-6945-4b03-b46c-dd10a5b72484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59819b74-cc81-4449-ae7e-862fe2d919c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3d1dea-f9a1-4140-82c1-7d7cb353abf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "4d7139db-652b-4a58-8ea5-c79d1a88a025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd766ce4-78c2-4cf8-8dad-b879f61e7c2e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff60015-aa84-4646-9e3f-ab1e84c33011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a62465-2582-4497-bddf-0b739f37101f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363922eb-2c50-4919-bedf-0357102ae84a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "806dd92d-3e26-4953-b9a3-386dff4b816d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2024039-c657-4fd0-9336-3ba2ede7553d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f00e02-bbcc-41ae-a865-82f20296be7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec25451-938d-41be-8e24-962572eb7fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12197c58-d11e-4710-8dd7-9a4be6fcf49c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cd051e2-b6e8-48eb-b29d-071169532a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a243d7-2088-48f2-af7d-3b2536c754d3",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0cb9ec-1791-4dea-9ae0-5b9fe6b09c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a628ccaf-308c-47b2-891a-c4d36a2979cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5529429c-0c8f-4775-be7d-3965ec660c65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c45486d-2a0d-46d4-a930-1c7ff41cd9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e257e6-2435-431e-9693-91dccd7644a1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5057b3e8-b6bf-436a-afff-26b82cd5f65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c6bf80-68d7-4309-8c92-d46ea3e14ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e37c99f-a48d-4807-9927-c0029bed930c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bd1a11f-aecc-4eff-bd9e-aba420c7d08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9379b52-025b-4963-868a-885f34cee3d3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d8723d-831d-43c5-8487-a4fa99e7dbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33cb8b0f-083e-424c-8218-bc4b1c1d49da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042807fe-266b-4357-a9e5-62b3d536b7e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5805bafc-cad5-4a21-8992-11362b48e7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a42c221-517b-4e64-999e-84c5dcce458a",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c9ae9e-8c4c-40e2-bf9c-af41b5eeba7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631a5ca3-b7e9-46b1-b0cc-a48129f65fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e2b0ed-5e42-4021-9c00-db7688b4fbce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad680289-ea0b-400f-a605-f49234af46e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51afe570-81d1-4324-a1de-3fd7fabaa93f",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16cc480c-f0ae-49f9-8520-9e463a5dd19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23417334-db97-469b-82a2-43b492d8255d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b53435b-0bf2-4817-8364-54bef34b6eec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e25e587-23af-4327-a31c-8b95c4080f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70206a8d-a153-4522-9aaa-ab21b8bd180f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2f9b8c-190d-4098-86e8-e78da82bdeaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22afb0c-fe0f-42bf-bafe-596fe629009d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18653021-7dad-4f66-b6e7-6a7178c28763",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cf57d0e-0189-41a0-8afb-7a1b3747de3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f94481-aacb-4510-9189-10356106c00e",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604830c6-9dcb-417b-aac6-d6b49780fc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf71ff8-06c0-4e4d-a859-b4c754ebca6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7522be6-3ec3-40a3-ae52-ececf3a337a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac101e2a-dd7b-4a9f-b8af-abde2cd9b807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f572ced-6214-4f1f-b6a8-344fbee15625",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bd2909-6aca-4a6f-a3a2-28318c973e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "740baca0-7cc6-4296-bad5-06a0ef5682e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631c9e3f-4dd3-4b80-a8f0-a763cf36c5ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d22df00-5aaf-4b8b-a14f-923dd90a656b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5853ba-e588-41e2-92fd-cc2061f86a53",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efb9b07-6b08-42b0-b72e-d228a45600c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebac7484-fefc-43c8-8960-d02fc7384bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d175a621-6558-4350-8a08-9b1409658a2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a54c4760-3aa5-47c6-a756-556e68ce1748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9e25f4-0718-41e7-b61f-e3de98874180",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c546b55-2196-4654-9a38-8ca10c07f5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ec2578-4b51-4cb4-9fef-a676fc57ab32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdeca21-f1fd-42e1-96a3-cae925531986",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1134cdf-9a59-4a75-9b3f-ca8185bc3f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e798108e-17a5-46ff-87ad-b7ef6b5973df",
                    "name": "credentials_issue:options.created:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{access_token}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79902e0d-3ec0-482b-8253-9b5b7599fd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c146d2c5-540e-4455-b331-d285304245eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ad0923-f2c3-42a3-a148-4563d59c32ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.created must be a string when present",
                            "rawBody.options.created = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8e2ffdc-5ddc-4c1f-a848-c4e4c0cbe7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02179bf8-d953-4196-abac-dc47fd5deed5",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417fb366-b0a1-494d-ae9a-54ae577361c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff6d229-572f-4a02-af05-2f9e8b4200fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7866640-fbdc-4019-81de-d829b1a18bca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b767b600-24d7-49e5-be7f-2617a1e4cee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8cc919d-0ed1-4f41-8543-3d848aab28c4",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05ccf2a-6d0a-4584-b1f1-27b41bf3837a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed301011-407a-4ed7-adb2-5d0be55f0d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a95a6cf-c1c1-4667-86df-c181e147a1c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d74785b9-901e-4dd4-9417-0212162874a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b5df86-b5b2-49e9-bff8-fd426d5d3fe6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7757bcb-d687-4857-b9a1-e9ce43e10fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2dd09634-d13f-4253-b572-bc9801f28aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9dd2b0e-8330-449f-82d0-c6ec9d9ec700",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5b95f18-1f24-4a9b-8e11-a281ed4be99a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d29ddfb5-ead4-45eb-9e15-12c21aa5373e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c464753-0848-4002-9281-38de4fd89660",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e472ce59-b392-4fa5-a5be-3f9053dc4f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ea97d5e-384b-4dee-9f59-d2f67b492caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439d5659-331d-4635-8380-1c36fd36d675",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "3e2e75a0-e1a9-46f0-bb64-8c4fc81ea1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4d6dc0-d941-4f3e-8cca-b3fb494d5376",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a085aa-6512-4234-8eb1-5d1795e753c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "978b2c5e-1f86-479f-9c34-a29ef9cb17dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a32c78e-23f5-4df3-92b0-b0e2260f0902",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "0baad962-9e35-4b70-adfd-aabe4b7a0b35"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e12d2b0c-85fb-45be-981a-409e43d8e917",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93c28aed-a7a6-45a8-8386-65b8c11a2fe6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8457d4df-0bb1-4b42-916d-450f084bffba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64b2cf01-f7a1-4e51-94fb-b862c789f2cd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "798a470a-fd27-4728-ba1b-130f3dc776a7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8424caea-1738-48f0-882a-0261640b7030"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ecf6b6b4-8875-440c-9df5-b47a6a3c05b7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3b361760-3f23-43ed-984f-0aa146365203"
                }
              }
            ]
          },
          {
            "id": "76d69ad7-e3e4-453e-a6ac-646d4e590610",
            "name": "Positive Testing",
            "item": [
              {
                "id": "620d2843-6707-47cc-9fe7-083d323b440e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f96d257-91d6-4fb1-b0f4-bbcf29966007",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe64b264-cbdb-4ad3-93b5-92960f75f500"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1912eec3-9788-4d68-9cfb-ac363a6d50ca",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "7942bf41-211e-4e39-bd52-f75ded75fbdf"
                    }
                  }
                ]
              },
              {
                "id": "a1e48b9c-9635-4b44-83b0-dfb6d10789ef",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80c4cffc-d27b-4fe3-99a9-30589f948e07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "407bb88a-4930-4f77-8990-143dbece0358"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9461ff37-470a-4902-b8e6-8d41abaa1c0d",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "c357eb66-c3a7-40ad-a939-8c3a75c1e9e6"
                    }
                  }
                ]
              },
              {
                "id": "a1399460-ed5b-4c94-8bdc-628f7947a788",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77bd4ac8-3352-47ad-a7a9-48fc5e29b332",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b1948e58-3f4b-4063-a3c2-81aa433b53a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "caa132c4-9d4c-4a18-8117-ddfec66110d8",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "c68e3778-07e1-4af8-b9d7-b03c21da3a07"
                    }
                  }
                ]
              },
              {
                "id": "aa5085c6-72b4-43be-9bf1-29c6c35fdc66",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec163309-877d-4e9e-9205-747fe4e50b66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "90f77cd5-b25a-4188-afc7-51bf3641091c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a58c5484-ddbe-4956-a567-b97a5d560462",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "2eab3f4c-0452-4bc6-a05b-1ba2a42ef69b"
                    }
                  }
                ]
              },
              {
                "id": "01664fc9-62a8-459f-af4b-27aecad2894b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cb780da-e210-4e0b-aa42-314a4ff4de43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b6ce40d5-ad68-4f6b-a540-1cef43ac08ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9d635f4-584a-4a74-ae76-362dc2df92e1",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "c14f6a8b-3695-4593-bf42-4ee14455bda9"
                    }
                  }
                ]
              },
              {
                "id": "8785b9dc-2465-4428-872f-686d28e6fd5d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08b32e30-b881-4ac5-9cd8-9b0350beb262",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "27a311d8-6201-44f7-908f-d1ec72f7b431"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f727350-9534-4d05-a4db-47c1c5721003",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "486e0caf-eef7-4591-923b-c1bdeecbb02f"
                    }
                  }
                ]
              },
              {
                "id": "51ce116d-20c5-4c2b-9972-39a0d17ef99e",
                "name": "credentials_issue:options:opt.credentialStatus.type",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fef69acb-e1fc-4b90-808f-aeccb0f393df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d56ca8e1-f4b9-442a-802a-f5dbc8355e29"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f42e3244-9341-4615-a0cf-b1ff58c000b9",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus.type can specific string",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "ecfd5aaa-88d9-43f2-810d-30c4b7a6876f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9b14736e-ce1c-416e-8be3-7e4ee252333b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1324bae7-00ff-40f0-b69a-79a1089861c9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "46c57d3e-afd6-4c80-a594-61fc1a9bf527",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7d002355-1f9b-42bf-8717-2aaccd1c7c1e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18b38b29-469b-4946-8bb2-e3aa4974cc9c",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{credential_issuer_id}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"created\": \"2020-04-02T18:48:36Z\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Obtain the credential issuer ID via did:web resolution",
                "utils(pm).getIssuerId();",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "3a0de4ed-1fd0-4f60-adfd-babaae77924b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2eef679-9054-4726-819b-a7f5890d0ac8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c83abfdd-0221-473a-b673-61c0f09a927d"
            }
          }
        ]
      },
      {
        "id": "12b67953-2e45-4ec5-be9b-327b5604d551",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6cae0150-1f2c-4dc5-a067-8b76bc6c3687",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2161d094-a15c-44a7-9f06-bfe992ebf40e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1561c392-9de5-4a24-b9bf-238d8b370bd7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20e6e4e-77bd-4889-9f45-2e6b442bf605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "713b3441-b2b7-4ce6-bd14-4f3ae22bea0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74b5946-f5af-4310-ae53-d94703c9a7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c0639ee-44d2-4f70-98e7-1df7c8d02731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6ec70e-ee61-43f8-b23f-8b6e93e73d72",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8db646d-9bfb-448e-8e6d-ed1e943cab85",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "a80d51f2-bef3-4550-8070-cfdbb2b81092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5ac966-76ce-4c4b-b663-92d9e6458a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c691b6bf-2f4a-4226-bef7-832a86b8e8bb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1fd32b1-a999-4a8b-92ec-6b253acddd48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2a66b25-5a7f-4108-bc54-2080eee6215e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a05c70ac-0c3f-47d9-b3f4-cf7263e050e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c8bf6f1-3dd0-4e52-b607-34aa27939f27"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09141311-797f-4cb4-95f8-ab55e823527c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "4f704dcb-5a7e-4a90-b4b8-c696458110a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b76f64dd-3a99-4c96-bb15-a97200f42cbc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "257f5484-9484-4789-b88c-fb22ff5329ec"
            }
          }
        ]
      },
      {
        "id": "0c22267c-74cb-47ee-92ed-3355958b5b32",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fd12a276-71c5-4a40-a6b0-2cca3c2e2797",
            "name": "Negative Testing",
            "item": [
              {
                "id": "251dfc4e-5b22-4ed7-a66a-4910f08d046a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "740bebf5-25f6-4b78-a938-ae1f36bec96f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8527e47-4832-4f9c-b0d4-73654380da03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b237745-1ea1-4805-9692-fde82bf00725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e55de5-e36d-4bd7-a79f-f44a58be207a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cecaccc1-f8b8-4f1f-a921-5b44bfbaf3cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a138c36e-f9bc-491d-aa3c-38980108eda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ae903e-8438-4da8-8452-a9fcc5726324",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e5317e-d75e-4fe3-b098-6cc658931a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f84795c6-d9f4-4917-9c0a-4c3a898732d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827da6ac-df2e-4093-950d-e9fcf6f98315",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcf2212-b997-4a6a-b364-03c1a2488b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44468b94-5c49-44ab-a246-40ae5ce16d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb3560e-c4c5-402e-a8a2-25b35a42f0e6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd0c79b-7104-4fb1-aacf-4c25307a8549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49096c37-8080-4a36-a6ef-9e5149970393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8878fbe-3990-450b-8306-38f32bebe14b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d63a863-31a8-4aec-9ce0-b2bd049e121e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f15118ce-6cda-4d3c-bc69-91a21c111b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b350eac-7cd9-4b27-b65c-97d7334f7038",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a743b89-946b-4a1d-a787-b1422cf20eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753e5c63-fb2d-4a5e-976f-6f749c82da6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7362e94b-83a6-46f1-9bf4-84f6edcfe9e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b7ce44-9d5c-40f0-8c96-db75f6f57590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e739c5-a456-4c8e-9027-cfcad8db730f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19528a20-a74f-42f0-bcf1-15bf717e846e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f34b100-8a0b-4c89-9d8f-3aecb3f3db8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df34b27d-338f-4734-ab20-9b9c1790a4f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e34d153e-94d2-4b65-8037-d2f0368486a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17cf0aa-59f3-45cd-9aa7-5cf878a83089",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd4b7ae-b6d7-432e-914a-cb3200525c46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbadd660-942a-4118-a2e9-fc471430442b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "646fedee-14ac-4b3e-9cf5-1fa847d058a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a328aaf-1572-4c03-a9c7-64d8d02b1c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84f93d8-1893-4533-b982-3d06f717a3cf",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c74590-2d7e-4628-a2ad-eedc7c0d8231",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be8a859b-b555-4eb4-b889-dd98c17bb5c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58006b7c-9f7c-4650-be09-563245573215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe703f9f-63a3-4d0e-8ce8-beaba1240517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77744f96-1b6e-46fd-8f04-550980721bd1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..RJunbl8K6pk5JyKv0VkmdJT4I8sfatEPdbup0RAYKU6F1fDvEZ8j0xFlr1ocpNQGIi4H5cufTCRE3Fi45ZQ-CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1442bea-bf90-4571-8c5e-c8de6684428d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c734f95-f275-4deb-b6e8-971dfd11ff50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3472689d-7af9-4646-a7f3-df09968db0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b78eedc-96cf-46b0-8541-44e9cbcfc740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7fc622-ef13-4e23-acd0-fc2c456df85c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8d0244-5999-4c70-8b00-ac51ec26379b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495f3a46-a79a-42e1-a0b3-2d5811cf3966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "819e0f5e-c3b6-4b36-b73d-6b4723b69e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97208264-92cb-4f8c-8fbf-e35a000738de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7724c24-7f74-422e-a4da-1ad81aad38f5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd0e8e7-004f-4b18-a27f-7e0d8c97dedc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c17e48a-2b01-43c2-b7ea-bd83a83be794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca63cc00-3fba-42ac-9368-1ea56950921a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fec3413-8774-4c53-9619-95f5cbc6bef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a2b26b-a404-496b-8b0e-5f593f8166a1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35152a26-44c9-4cfd-8cd0-a4c4fc8788e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d47a460a-c0f1-48df-bb84-64539765f2f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c396bb-f90e-4996-85dc-96f5a804266a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248b98c7-825d-4f23-8956-fdaab4d2d405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a06abf1-a478-4110-9b27-2148cf0b1310",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79ca97d-a16c-45f5-b937-a306c5719d62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "110e1c07-aba0-4ccb-891b-14f4184e8f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17da00f-3f91-471c-b79f-fd625193ddf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e8ca54-2622-4407-b5aa-72b2d7b6b323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03d8164-43b2-4b05-afa5-f8bf60937063",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e86196c-035a-4c57-b1ce-3d7b580b658b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66a82109-987b-4cc9-b7a8-f82f94cd11fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97efe8f2-35aa-4c44-867f-5b2af480cc53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1186e0-c687-405c-ae67-b8aea4ed6ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4716e087-f497-4190-8649-864576c3a8ed",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3dec9b3-47f3-44cd-a6df-09db9ffd92e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27004991-fb92-4216-b8c4-27aeda88d9f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6dd697-7c43-47cd-b2a8-770b25d66e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca2161b-e8d9-492c-a6d3-0f91d7d8622d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30bb4fd1-202f-4bac-93d7-de1b13d0f9f4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..CaZ2UcTNDOTCXaDXAclLPy7_3rpuf2sbL5xwaMnN2abolieE_C7fB7RsmZ7i5_6CoKRhGnrM3_YkAms8IlObCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac7e56c-8c7d-4f51-862d-ecbb7527686c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc8ebed-a2e5-4344-9277-27c0cb804875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72adfc8e-729c-4c01-8320-e7f0dfc9322b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb7195d-4a90-4a3b-9c78-b2768e09851a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5362a3-4ea7-4115-ab7b-9d8501408cc5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..yonwdW7r7YFAAjZZxjVrYPkLVrbLR5TMZ3bkWN1uo2UbUi5tgtlikoyyHlj8QD0MPA7xd4Jv-1PlryIVOqtUCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef1992b-928b-4bd6-a4f9-78ebc1c16838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847b9ed1-77f7-4ba0-9574-244cb8d8f916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97be962-5791-4ac4-84c2-9bf929ee4668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6e89f5-b50c-44f0-a807-82fafb5e1814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b28ce8-557a-46b3-b761-a41501de5b69",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TRCl90uRMmkycDvfeHw1S7yxyAVl1-Vc2SfwwDzXkn1SqfCJxptwVsgJWwr3gQRAqveZR0xrxQczy4tWHq2FDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53904f23-4876-4d6d-9243-ab654c58037a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9ed32e-7465-4b24-902f-e6c45025fc84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc931be1-5337-486f-8589-11fc14cad737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2471b21-e055-4313-a1bf-d9a6caddf8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76e36cf-241e-42d5-9910-aaf0f8a910d0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfe936c-4fd4-4890-865a-f02674b86840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49af652-c7d1-4ded-bc90-e7bf07127b35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c215cae-9d3d-4a60-88fd-55ac1fb9e266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5255bd-0b05-4c13-9b3b-8d15dce8fb79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a516de0c-340d-447a-a6aa-1d8df17e7319",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ymo0kNnQ9mVHr1RKpfCuR_ekUAXzNEM7stSEtbbFv4ZPZb6NK7kUBkckgwrZyBp8re9RQEedJ9yiyfzTL41dCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f79466-e8ca-4198-94fc-54ad5bfe2ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0042cd-1efa-4690-8a8f-01cb7a54ae77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3405204c-97db-4620-97f6-79d0f08bae87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ba1745-4c9f-449c-80a4-75cade8a1e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e61efdf-7558-44cd-8590-e18c11ea4e4e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1875879-dd07-4b49-bc5a-3cf2d8114d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01bc394-ea03-480d-b088-1ef2c2c733be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "307e75f5-aa46-48ac-8bb3-b7115e29ece0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19450181-2261-4e7d-9a16-ae47bf97e14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b8dbfa-43b6-43cc-bf73-e1cb5aff3241",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c042c582-839f-48ec-a037-9ec501dfd4d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dbf118d-567c-4e37-88cf-a0df8567d308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "088291d1-2b36-4afa-bd90-161c353f3111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ab2490-6858-4103-8df9-53ba02d8800e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddab1032-efb3-4efb-92f3-beca7145dd44",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e6689a-229a-41ba-a160-0ebc5923f67e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba21dde8-447f-4861-b6e9-d30fdb8bbe4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3004f56c-ea4a-4c7d-921c-72f61536b05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da35ba5-dca7-446e-ab5c-4e4f5380e119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9030ae09-646a-4b64-8415-f32d2a5ac8e2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e467e1c-462f-4ade-84c6-8cc980efcbef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41920860-9f78-428d-8e92-810a23b55cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df5ceea-3404-47ca-aee1-0cac1581858f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c20e11-df1a-4117-8609-c082a0eaec27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce8e8ea-97a9-4abf-be08-dc1c9c623ed8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee382d1-07ac-4204-ac7e-2067ab65e663",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df39a18b-368c-4c99-bd11-28862b61b125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e98467-5106-433a-a422-609dfafaf6a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6768c2-40b0-4570-94f3-6f060f421563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4f3743-0db0-4466-a793-9b1e46bd5f6f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe70a875-5d1a-4c85-9102-0cd6682d65c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416a86fe-2bdd-4f08-89ce-4901dd9149a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a26df61-9671-4556-834f-127072ec4f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064f393c-6805-43c4-99c9-54ecf3398096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bb4b5a-9775-4867-bb96-a2553b78d256",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98933d1c-c192-4bc2-bfbc-6fc286957606",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54465ac4-0f8d-4c01-8c53-c4dc9327e705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "769f524b-f0da-4763-8976-2dc896fa6aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ea5a91-241f-488f-bdc2-c596ed0805d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c0f95d-a494-4f83-af89-3882abfdf09c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98365ab-44d2-4485-9438-11c813e6ff8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70581111-d782-4af6-860c-e5ace0d27c58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de00a444-94a1-4711-a4cc-e48caad7ba65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2b0888-28f6-49ee-89a0-aceeffb06467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e009e611-7ae7-4ffa-83d2-3fff36cfab96",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef88d132-2c33-45f0-bdea-c7b22d52c4df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0695d14f-4afe-4254-a54e-1355af8e8f83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a870bb-8747-4578-b664-6ac6efabcc1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1647e64-bf2f-4c5b-8d6f-1108dc9deb65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a451362-2465-41f5-89ba-a733b47a74f7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c58dbb-013a-4795-a8c3-65beb0354463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dc30361-cf93-4850-bc0b-e4deae46692b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef7e706-fa74-4cd4-96ed-f1ce023b4c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367db3c8-f49a-40ff-b674-d8301090ab1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3148db-9792-4a57-b6a7-d48c789c17ab",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9fbaf9-25e7-4ef8-8b79-d8ed12530edd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fae4fc7-de57-400a-a076-9d3da3faf309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec5afbc-8ff4-434b-8e44-da0456b3e9a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0827c84d-f54d-45b9-96f9-e3eb01477b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1158cb09-ff9b-47b6-94f0-25fe2e989d8c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xkCnC0dheSr9rWQn6uxLta6CXejSLy7FIQkZT2rYiOV0jmWW8SWcCdLqHg2gJ3WyBBmxj_zRwNBpFIUvsLCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7873fe29-7c34-481d-9520-0e291c8b662b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4cf3037-325d-44d9-add3-9107898d5b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a1a2d1-b4fb-41aa-a9eb-bf14ee1d7b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb1c17c-efc8-40ca-bf06-a56fd5d1c3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1c8afd-9d86-489e-890f-39055c014563",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bgY03ZzK02APUHCDiqUVMYbbvu4mSPNC1sGY3lTC8ko7j5oZDB4rB8FRzsXCc9L0O4nHx4UNJURCsRZUErbRCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241fdc91-5a70-4aba-8d4d-68b368be4ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b192c3b0-e9ee-4c98-bbb7-aeaf1a4acefa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e7abf9-472e-48e5-b583-b61cb30e6b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d707bb0d-76b4-41ff-8f41-b112d9a6c573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336c1419-75a9-4410-9a8a-834dfea9e030",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..2Mu6q2PaIBjmfXHqLuT7XIFthDHboV4bdlIdLFY9KxapUXic6uhoefYFrarss-AN_5dUHdjWnHEMCoWYjW4MAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78cf446-6bbe-4f6e-a07f-b98e4afca61b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6f3c8e-fab4-4743-93b4-2e70402868a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8d7e8c-816e-49f8-9ab8-769feafc0bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940ae211-ee3a-48d6-b1e6-f992755d1cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fdf36e5-a9fe-4327-adb7-1e72e2642404",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..L3RWLJfQzaffmRy3vXZF_7gfdlR-iQbA_8TjGFaBCmaOqm8R7Qi0B6JivEqshh8MZWufDitgO-r6ASk2iaGVDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466b6514-be94-4af1-9a43-0c4bebef44d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d58fca0-aa1e-4def-a1ba-7cecd208b7d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a21098-65c9-4915-a1c7-020a9edb4dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb8dd4c-b26b-4580-aafe-29b8932cb1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4878a738-57b3-4ff0-86de-98a2a7a9306b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xkCnC0dheSr9rWQn6uxLta6CXejSLy7FIQkZT2rYiOV0jmWW8SWcCdLqHg2gJ3WyBBmxj_zRwNBpFIUvsLCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8dc73e-5ca6-41b9-8c87-6489c8dd21aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e77dcb-5f59-4462-8ba1-f50a63624d0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3cf387-bd4a-43dd-a84f-5b817628aa14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ebf782-ac53-4492-9b47-cb9bcf7e4002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5dadf9-0fc6-4707-97aa-b36a4af38763",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n0Ffdz9nyzKuJw3OlGpU5h8clE5I6MFEFEEobztPABGQn1hFRN7CBx_BmDMsT7KF3jSLl008sTJ3RllFql5QBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe71962c-7865-4be7-a919-b672b642f5b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d9a4f4-3688-4284-9b82-3682c13d13d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "798e42b7-b58b-4971-9e84-85d6d9fcfc2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d2586c-4e2c-4db2-b2d4-bee6e1e93abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652738cf-1798-42ff-b36c-947af2332159",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..E4WypAOLo4KNTnvHucei_9yLEMdlq_UwhS7mexlp5i3hF8SfBAlLv2scHANd3Ikhtqr9JIyaXuDnIN2LsaVFCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5accb3-0797-4ede-8d7b-d9ae776bd01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a80ad2af-9504-4bd3-afe9-e9e5a85a7d46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e52315-7d52-4e3f-98a9-d069057701e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "326ce17f-f959-40e1-ad89-5830279cafb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9da8477-db59-4d5a-8911-416ee631ab6b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rnEgkKo3EQPiGixl67oPIFuZ7H9zueq0ELswP2p_FdahgJooIojScCnp-AcxeC_G6YDtLUbsNlVy0SkDvTnwBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c40a9c-eba6-4fc6-aaae-cc953cf996e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b847d60-dab3-48ac-b043-ee11aef32978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3217603-c0db-41c4-8ab8-532f8e06ada2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eaaaebf-109e-4abb-83e4-4639ec5d8cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60099c7a-139e-4738-9d6f-78b843342cf3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..nK8J_eHLw18__7Byp9ohgpDCHY1-Wfpw8vk-8k-nw4ezzjlwYoYjbo9x_xx3ES0WY0aCN2Xr9SbRoZHr78P0CQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d94b1c1-49f3-430b-bbc3-549a50c6a422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab54e89-ad26-4a38-b626-b79f4f4bb576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d71c9b4-e8c2-4c64-89c8-e75b27207572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da9d11ba-396c-4626-b11c-843ef93450b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbc176b-d1ed-4c84-ae29-581d4c97edbd",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n0Ffdz9nyzKuJw3OlGpU5h8clE5I6MFEFEEobztPABGQn1hFRN7CBx_BmDMsT7KF3jSLl008sTJ3RllFql5QBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc3a1b2-bb52-4e42-9ddf-08a3f50f984b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63a2989-bc74-4a82-980d-c22dd39dd4dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57733f9b-a6d2-4fc7-bceb-50f98315fa32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b3b529-41d1-47ed-9538-333b9d0fa9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc194c4-9ba3-44f0-a30b-40aa809126a7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GEyy2tqmKf8AzHhXY06veUbSRVk9uoQIu21GZlYtcdMGh-VrTjvfVg2R8DAFtCBe6tEUL4dnsM87mT-20nG5Dg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47dad4f2-9cf0-4008-b172-38489af66a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b34d06-df36-4dd1-a197-899f9d7593ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2edf70d-aef7-467f-8c33-521b3c74e418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34bf37ce-6d7c-4b1e-861e-4bb2509147fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfd7538-aa80-4e40-a74f-4bd9d70147e8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..WtxX0aIcE2JJ6T-a5nqfvElr_E5NwRYeOJgRBqeAVVFNJJaQJh6rz1V6nZsDl2xsblGQxCAaWQq9V6SphImACA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9e9f54-6aa8-40c6-a780-7dc440609528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4941da64-0956-4346-8fc6-50140c8f53c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e790ec7-0bfa-4f40-9c75-d5ddeb167848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e2ed7a0-42c8-4ade-9905-230d1cb74749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4dd4868-8e28-4d4e-9aad-db2b51004376",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vuVI_mdt7bpVwmKIsmIusWlCbj-wk33p6_FC2COcGBKzh9m5jxydHlDRIM6YoJQJWpS8_EavVFKwQvPuLuwNDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c9a61a-b44e-4d6a-a552-73b3bcd5e876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24154698-d28b-43a4-92d6-b332ffce9913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df3a997-b0af-4c38-bc35-e0c3b19f33f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b46720-1e24-489d-bf74-7b6848bd14b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d6aacd-30ee-4076-a179-522030cbc4e9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jurLQ2KXgTdIxIAB1dwcysrBFVMT95g3Mn2SuyxAubRWS8Rbe-dFsoVG24kxo5wE6EZVYEuES8uHwNX_SSrvBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c024e3-8439-4c4a-b9b5-84379a1c6794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5890bea-f49a-49db-a295-07cc7b915ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1573673-a735-4241-b82a-01dbbee7f31b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505377c1-82fe-42a3-a5f0-036a653bece1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b912ab92-40bf-4bc1-a0b3-a99e36ee05d5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..HyTRfrVnRzNCXO3qmmbQnmtXYV_bAdmZg-27bnuBGqQScL87kkmPfY3CpSTLN_8aV72mVBkvy1-uvYhkQotmDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f017a3-1369-4d47-bbfb-4b4463088feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4358a72b-af7f-4613-b2d5-c77ef01426bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e621e8e-3711-4e24-a62c-029860653b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1279a7c5-2355-432f-b77f-9d2f1121e1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a311ea6d-9e75-4312-9fc0-6918f1808d3b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..WtxX0aIcE2JJ6T-a5nqfvElr_E5NwRYeOJgRBqeAVVFNJJaQJh6rz1V6nZsDl2xsblGQxCAaWQq9V6SphImACA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cee7c95-c42b-4bb5-ab82-68a04567d1ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f64cce32-c830-4229-8e0e-fc35adf8b247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6582837-cedf-46df-9829-379d20a70e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b7186a-8693-4b81-a522-0001e230d0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816d6378-a566-4136-967a-ecc8981224b2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5NhiK8XqFDY7TB3l0Mli_VAhnflErggK8zlj71jNg6F5WD4eNAVufeVLhK8HtvGaC-7R7nQzQfzkCH9692DUAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e302f5-3a51-47f2-8485-eaf0c2d8cc77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa76c0d9-f5e0-419f-99ea-146473ccc43b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9031ac3d-bcf8-4490-9f1d-c790de3b5c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca44b1c9-56b5-4f9d-b2a0-6facbb7d8a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50a53ca-cb71-4c29-9729-08c13b10f683",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1phNak29yV9Dt7ljiilV_cD1b78U9dV8Zhwjgrocc4Nahxchof8QHmEAFjfupRQZ71WIBpW-VGUtW-OwUu6eDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1028af3d-3ae2-45e1-959f-518e537226eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120f4f39-a7df-4e9d-9c2b-0ecf13a78a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfbea23-702b-419b-8cad-a4f57873979c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a1e062b-fb1c-46e4-8c3e-bc6f00fb30ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68a6e0a-d399-4970-bf37-b71d3425180a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jbb-uyU5OrakaqoC-9v-KQVdCXvOfr4Vjxox8hwFNP6qggsTP9NhHuq-T2Vdyag8BweIFTykT0SR_jAgtOxKDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07c360b-5201-4711-8662-fb39468988f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc2ea73-11b3-42f9-9621-75c785640a1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c346b6ec-368a-4249-9b70-d02fa8afe098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d009d7-053f-40e5-a998-8ba2bba125d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d65031c-2573-49e6-9449-3ab051649785",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c79e0b-b997-4101-9b2e-538b408f393c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2e9af7-b2a5-44c0-aaea-b793ea325167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c0eb21-b9fa-42b9-9ef0-dea462d54811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4d0773-d414-4c59-b3ae-483a7f5da826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faaec3d5-7b5e-4154-af8b-5a6ede919624",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..j1W65DhMkwul7bodXfKrVNsT_27QIFO7rI-8TDk0-ef-wu4PU7OuA8MFAOXfx-HdVf5KdqVu0BB1ITE6WjIXCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019e1567-f1cf-4c1c-97e2-7e10bfa0a061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69664d41-6403-4ecf-a09b-ab570e0359f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25040dd6-7bc6-4049-af60-04407b49378f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ffe99dd-2aa9-4c88-bdd9-1394e735a4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf9fced-f5a1-4ed7-b183-076298727b1a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Wm4yBzXF87zLmyA0LMEwHSWs-2EfPpdN2yJstmvPJkPVLFdXKUdjh7lZuHNVtTkAMGNT8Wi_RZ5Q1BWAY054Cw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfd2cc2-c134-47b1-aa2a-dec4350a07e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4925de4f-19e5-48d9-b16b-76630c829f21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "678c5fc3-2d8c-4b79-918e-2df3ae852146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088b406f-eb66-4758-9df3-55e13cd62cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bea453-e067-4121-b648-bf69c2fff2a8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jbb-uyU5OrakaqoC-9v-KQVdCXvOfr4Vjxox8hwFNP6qggsTP9NhHuq-T2Vdyag8BweIFTykT0SR_jAgtOxKDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bdae33-8779-44cd-9ffc-e7bc0a7a9a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63fdb94b-c40d-45e3-8eab-437821b97760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a23b0b2-55ff-490a-8bf2-fc169dfb70a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0ef4411-2c29-45ed-9ae9-dbedf1e9effe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b0ff76-2d23-47f0-a08f-2691c39d415d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b02760-d49b-42c0-b0cb-84d42d856e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d2e4c6-966f-408e-9f98-431cc0f3e79c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9490f971-a915-43f1-b48e-d9c4a5165a9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b654a84-eb6e-45a7-ba83-52c0c6ad10f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9643e5f2-cf99-4130-b583-7c6947d9e4ee",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VDVadt3rnBQ7P8dSYyZU5RHdfxVBWz3liR1wKbXbfBuaNT-rJYOoUCLQj-7IQ2elQaB4Fhp2nsgul9ZQmZc1CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcd70fe-c44a-48f8-a752-3c3ca1eeade7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7cf44e-b547-4ceb-aca2-0c474f70549b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8586b15-665d-439f-9b33-3451839cfb54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402d3c96-57d2-4b40-b137-283fe95c1ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19c44c0-7827-4d03-be2a-5e9ceee60f6e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Kz272GRCnCfgHy4D8txIaM1bY5O5vW8iFfQrL2B8a7OnaVTcq6nF-dhqnoMLHPEbrUNzHK7spVAZG05Njl6CDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f2dedf-c760-4133-965d-cfcd97c3ef99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7543832b-27cb-40f5-8022-b046bb3ba531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "551fa55e-238f-4a0d-90e1-5497d2b65f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e490186c-e84b-4881-a62a-120c2df5d76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3412ba7-8397-42e0-a9c6-878dd62b4650",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..P9pVMuK8IN7B38_-uHlTyqAeQFcasIOW06wJWEZDZLPpaeLA4L-S6ee-tZsbGmM0QoSr8WTkbqkhiXpEhuIbAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db15e9db-6dd0-4444-bc39-aecbb9383f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f79abcf9-6aa3-4bbf-8fad-c15bcf3cd22c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d5d721-bd42-40bb-a639-b1402b4ca900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf490ca0-f605-44f3-98aa-f1bc698b4cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9db6b2-8792-4fbf-b70f-9b2053c56ee0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rdlyOsz8ZwKwD5_CacS7c9iPQnRUIywCc_sHdyJlADD9Cq4cRwRw0wwJ7OZtLDylbm512V0s3Cn69i1qMWc8Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b780cb3-3a0b-4d87-a4b5-55ec36468f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29269392-3f57-4358-9c91-28dea6d12db6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d186c55-a8ab-4d4c-8dcb-1f45f9587e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1e597a-4079-464e-a073-04b9aefe8ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ca2172-7719-467c-b937-8848d571e08a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YXI2e8nVY98qybXn64g4bOG063TH6yjKFmSF9gRq0MtX3q3cex1t5ayc38JjZSBEgoJTKQzUTbL71FOukoNrAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab35ad5-0a11-4e02-bca0-d1bab2bbb5f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd44f45-790d-4816-9af6-950e87c79c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb997b11-aedd-4f8a-90a8-9d090db84dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b4a1166-b7de-4541-9a3d-24cf47a2e845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a578e0-3f52-45fd-a984-3aabbca390e1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfd27e1-9881-4333-a0a5-8dbca42cda51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c6e4dce-8bf2-4d24-ac91-e6bebbd4fdb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "057cb8eb-1466-4361-b2b4-f95a3ea570e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d358c831-9f09-4871-a3a3-4d3782b7e911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb89309-486f-47cb-ace3-f8405c140356",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c812c7-7ebf-4eb2-8d73-3be2a3d61b8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9883f1de-a0b9-47a3-b6fc-9fb1f5f4dc9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f303d924-530d-471b-a003-7960ea1cfd1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5647e701-3fb3-47f1-a8d9-145aa21d75d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38852468-4abb-4d2b-a39d-2ebc432af61c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734ca0d9-fa69-48e8-a3d2-d13ed2cc38a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45b11449-71d4-4265-98fb-02516f142ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46030d1-72a6-4940-a330-583160b85337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383b6cff-fc8a-4562-98d3-2e5b0878c510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f68a21-1794-49bb-8f7d-202b5509e654",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1b2bee-589c-4fff-a656-43e5cfb53920",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bde7175-e499-4ba9-aad6-fe6c280a04a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "886217f7-20c3-4c5b-ac37-6c85e6783d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97f465e-556e-4810-9a53-b0b50e2f9797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71f606c-30a5-4111-b0b9-7f4aa5ae2b59",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a385eb3-5be3-4180-a905-ad4d9536060c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76f5dd3a-f92c-4e8b-ac30-cfcad0105287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4dd8d6-97d5-45c2-bea4-4f085b6569d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa7c35ed-7287-4a90-a795-af62b41b7651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48323cc-f3de-45cf-8c92-9781e6f20378",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281c8f67-6a35-4631-9084-f41a8d2c85d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b3e3647-042e-4932-89ce-f06a4fbf35d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ab7bb3-48be-45a6-8f27-dc046188d0c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0016261b-8a02-4578-88b6-a3f54871f474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e8c483-512c-49d2-9b09-b3cf56375a80",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74395e80-67d5-4eb4-ae40-df160fcc6250",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e41c8169-18a6-42e3-8f37-33b4a28ba7b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbc9d32-d8c3-4d23-ac4f-c6499367edea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8188f9-6b60-4457-be1e-0d4c60e4c664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd13075d-def3-447b-8e3b-268dfc9b3464",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcd3f84-3a92-4495-a8de-9aa136013c94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "834813d8-ce46-4819-a948-7870568ad2d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abfcd36-61f5-420e-bce3-0239587b7d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78c5fca-64dc-4c5b-8cae-b0b72350e2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f060dde1-a288-4f77-b131-c51f214fda1e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d847bcf-1534-45e8-a9a5-11af973cd650",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ce38de6-6449-454e-93ba-43d0b0e19c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf76a8b1-4e45-4080-86e4-d92096649334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1c4e4b-9fc8-456d-97d8-d4fb82d4ce48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050f60ca-55dd-4fb1-994c-5bdeb0f6ea21",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d769e01-6221-4c87-9317-bae32e41bc2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d4c5e57-fec8-4c67-85a8-be99c0f28900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "633101b6-422f-425f-9146-5ed7e95bec2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2deb6e7-63e2-4172-9cde-11afabc0a13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6b0ab3-0b49-405c-a7b7-6c4cc29b4706",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82e6b64-6895-41d5-9f08-9a1a437da075",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc406838-d8ae-41be-b5d2-6e48671d7ede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7993d770-c9a3-4372-a66b-90d61b17ebe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8408466a-35ff-4661-91da-62d4e0c18678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027bbaa3-3be0-4060-b1c8-e757df66cf39",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4fdb36f-71b4-4206-9d82-0a7e73da6c33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "057742e8-ebd9-49e3-8c33-c7c9c85bd79f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af8e1fd-9c36-4aa4-ae24-f04f472ff1fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7d7e08-f379-4bdb-ac3a-8e6aa3e883bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c57ec6-01ab-4154-812a-dd058e553b28",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fada0c4-2270-475c-a095-685cb3b576d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "602a56bc-6a0c-409a-83df-9fde01316bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05d634c-2ab1-421c-a65f-764dc02509fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b72836d-6b17-4cbe-8fa6-883873e6f555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e5b96d-c10e-4d67-b72c-cbd8308a664b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bcfad46-8765-41ec-afa3-8e5002335ed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcbfab7a-4bda-4b13-adcd-c5ef90c96d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c799bd7-6d26-4c1c-ac03-1b354e719199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c1c3b1-f438-4cca-906c-e37d21731bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1833f8f-824a-4cf5-b2a7-e9d597e15c93",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b1cdd8-119f-458e-9175-62f914e14544",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a40f42c0-8465-415e-a95d-cb8ffeaa7e67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ec1c5e-8e12-48c0-985e-f8834ef8e2db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b054d037-4448-4038-ac3e-2989a36fa330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f05bc5-69b6-40ca-9423-857694983852",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c96322-f811-4e67-8a32-4c7a53e6282c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cb2bf86-ee56-4112-a72c-80aec62994a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812dafa9-58d3-4ecc-9c8e-f0117cfae752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "266fa721-cfaf-4865-a2af-6cbdb5fbccc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf2c742-5f8b-4e4f-862a-310214397be3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482782c8-0383-4d47-ab9c-59557e4a41b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97e9a83b-408c-4d85-a0af-31047fad8260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fc3689-3d4d-44eb-a386-585196e902ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d54230-002b-4fef-8458-462f08fd5037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea4b60e-2063-4db0-87ae-5c1539855580",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fd6eaf-247c-465b-baf0-ee6149dbf49d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2585c82-1451-456a-8696-8e1ea1c23897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d92b2d0-f718-45fe-a41a-2a0044e4f35b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c6f83f-fdc0-43a4-9213-79ee97fa09b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a108ba6-0b26-4bf8-8c7a-afaf16a89d03",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd63021d-5975-4a6d-88c4-7db24ff00fc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cb62852-35a1-4b3c-a56f-86d8144d023c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeece8cb-cb13-494a-9358-2d253e4c05e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e3a247-83fa-42cc-a443-07f9baef2d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852995be-936d-4552-971a-e5455deb0d86",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641ba973-7845-4a32-a3d8-76e8f16ed799",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eb3f28e-7693-46c1-9570-d69f6d8f9021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c156be8c-1b48-4c13-920a-a12172dab3d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e849e2fc-f161-45fd-81ed-68ea347b8f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617a9455-f531-4953-8073-d6444e093aee",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c1c9dd-a2d7-45ad-9c92-6a9ab32b319b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6905207-e589-4767-ac9b-5b7853ccc7b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a13c17-70f9-4626-8668-c795257e1925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f330b8-a875-4606-8042-f0b03501b328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27601096-08d4-4e94-bc60-59e4465de502",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb06f6d-a3e4-444b-9093-abd6621c6f4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c56a6f9-76b5-4e7e-b05d-90bdc0dc5f80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebedf91-6c03-483f-83a6-d451624ee661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8cea37d-a14d-462a-b50e-f05d5edacbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0448dc51-db6b-4ceb-a930-c38b42823864",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8c9d93-bb3e-4e88-ad2e-d53780667c21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fb9112d-d4a0-4695-b3d5-776212422808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc5796e-2037-4291-8d9f-f8cb77604bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67522aee-ef3d-4861-8156-0205a5e86a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749d200d-fdd4-4bbf-aeff-47606d91186d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320b2cb5-8b01-44a5-b45f-be17027f57cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04844561-bf18-425f-86f5-0c9dbcb57a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8bf5c3-240a-4d98-b766-ba23f386ddde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161222bb-7fa6-4438-ab23-f16a08c6c01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15675dd6-9e67-4674-92be-a36540c85db0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a43582a-124b-4950-87f4-231b7c4dd66b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eeaba50-8d59-4598-a8cf-a1018dfa9cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0cd992-a110-4bec-8264-4cec802c1619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1651b18b-4ed0-4d45-b6c2-a11ab25c8255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0999c834-a0de-4e6e-9e40-1e8a123e000c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d399ed-c1cc-40da-8615-20e4061e8630",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9256ebc4-7560-4a3e-aa81-32ee9b06ea71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9abbfbb-f7ed-444b-9a95-b2f4e2818c75",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c77e259-53f9-4af4-9031-15926e263272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb14d7a-0193-425f-ae8f-02203806d169",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc900d3-2f72-49e1-adb8-92e8e1579434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ddbcb7a-38e6-41a5-8b21-f4497e963c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc873d9-aa21-4edc-9aa2-94827bf2190d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa8a549-a983-41a4-ab1a-b987efd729f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cfd60b-6d39-424a-a6a2-3de50111db19",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d52b621-88f7-4ebf-86f3-09e76560b8f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d559ddf8-c164-4d58-963f-c563ceec92a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "743daed5-965f-43da-8414-fedd568032dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960ecb8f-44a1-4132-8525-18e1bf0a6ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5a61a6-86e7-45ec-bf4a-e9b79d79e15a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c99c42-4357-4f89-b419-0ca2da80a4d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f96b7da-bd02-41c6-901d-51732f7aa568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4092e13f-23db-49be-81b8-5311b8f81f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6dd940-21af-4096-a2d2-f0ad7774dda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bb0672-53eb-48a3-b490-380aa43ecc97",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e970d000-8612-4382-be40-6d6a37560a6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d69a547f-d258-46fd-9421-a4e9266916dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304fe7ae-178e-4ce0-b91f-5100d1ef28c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67112ada-67e4-4380-be33-3939976e8caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7a83a0-ed80-4815-9b79-e23160578d11",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef47274-f0d2-4b2a-9d6e-49011c14bd28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c1bee31-f7c9-47e4-817a-df34c19dd4f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91381f02-0fcd-49f6-bb0f-ab24b89329b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00898de7-9911-442b-922a-ee00e4f2e0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025d2601-75cd-48e1-9b65-2aac3e97061f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72288ff4-ae6b-4bf4-afb8-4a310b17af55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d58fb80c-6c23-47ba-996d-340e8828eb38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5688cbe2-9031-43b7-ba30-bd6d7a920281",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e15130c-173c-49da-a8ad-4073667d8ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314dfa18-f178-42f0-a903-6bf745242c66",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35cca17-e2ff-428e-87bb-68602c7bac71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccd24c95-db45-46e3-869d-fcb36d0b77c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a97ce9-b0bf-444c-8c20-09613a18b507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98755fdc-d755-4afb-a3ff-5388fa4605f4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43b86f5d-b295-4ff8-94c7-358838f09a6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ead88b88-49b4-4f3d-ad8a-826057aa1e1a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bad57ffa-9fa9-4b57-bd05-870c82fbadf2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "62c13aa2-4ef3-4648-a966-b4d60d33f114"
                    }
                  }
                ]
              },
              {
                "id": "4b7108fb-d369-4428-b0eb-30c0640c3cb4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fbb29aa3-c360-4a59-929e-eb533302593c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef084f76-c497-4a0f-bf8d-5fe163f78aa8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4d51b514-cd66-4166-b548-d502ab0925c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0467d920-8627-4750-9524-8da196e63d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "920cbd76-f835-4d70-9798-7f2da6a91abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd884f5-2df4-4078-a732-a82d6f41f864",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63a0228-248c-4d1b-8a24-9c3f9e7dd1ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0921db7d-46ef-4af9-a822-c506ec1bd8ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4e2b4b-791b-442f-a425-b1452e1e5476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8507bd95-35cd-4145-a984-538866a440ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bd86d78-a437-4ec0-a430-3c635efa159c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26983d3e-398b-4a08-b97f-059c9d6d35cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6b25710-5e9d-4900-bf4f-9d0a7200db6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f853e5b5-8348-4bb5-a506-0fb28f6e0a21"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a1a09f0-d818-4209-b599-c6675162eaf7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6ea197b4-804d-46ff-ba99-dbc03bbe6c85"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fcb65fa6-32a6-4539-821b-93a42ec79bb0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e4594bd-d8d6-4339-8afd-d9ddb170fd61"
            }
          }
        ]
      },
      {
        "id": "ce479364-e856-4294-8096-19e9bf85339b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cf60b502-7e5b-48de-9c51-7bf943163c97",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0db42450-6280-4cbd-8399-e63e25eeae64",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b99eb535-5c42-48d5-9e26-64e5c32c09c9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5310200-8853-4b21-b37a-3870229f89a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cdf8bd4-b5d7-45ca-86a4-7fc72f7e6c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28875627-2e93-487c-ba31-94a85946589e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "573e8b0c-ed8a-4806-a223-8a1044dca346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435f4f18-2725-4e43-92b4-cf8960cd560c",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1424ae9c-7f32-4991-8651-30616c407131",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "1395d2e7-d0e9-4473-8259-e2b6702b9613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68abccb3-1bb3-4c25-abc6-be61d0f29f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4d0fe85-7d8f-4c63-8c06-ab35b276d2e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab552da6-40c3-4e45-bcb6-c92dca14d7db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90e91be0-a142-4f5a-a45c-a710957f7e9e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bff2d65c-2348-41b2-a915-cef00cc39efc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3a27ef0-89da-4c01-aa57-2ca6a88ac2c3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5dfbb068-5314-447d-b45a-c097a59e119e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope",
                "utils(pm).getAccessToken('submit:presentations');",
                ""
              ],
              "_lastExecutionId": "59acfb6f-934b-4b7a-9155-165a2edacdab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e069ce19-43d1-45c9-b42d-90198326c77c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a8b5ee5-396a-457c-b3bb-96c5ee496a84"
            }
          }
        ]
      },
      {
        "id": "88548399-e882-4826-b070-35290a723588",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0fff0223-e858-4c2e-b79c-f5947451632e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "455d0d45-fd08-4315-bc9c-d8c75022e68f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "730d266f-6a10-4133-a843-08bc6f242cc6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b281ce-bbec-48d6-b66c-962e96488067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b50c86-0747-4d0b-8888-5fe2e32070d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc51141-20e1-4d8a-bd76-c3f8caeef111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "934692b2-2ff5-4ec4-a460-3b291b06382c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90bfacc-ff1b-4b6c-9d33-e72fe544abe6",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef360eb-c886-4467-8545-3c20cb429e9d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "3d73b8b7-f584-4fcd-97fb-b70d89737df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f65e7e-d0a2-4974-ab4b-41d78dd89c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e19bf4b2-0489-40ad-9bda-7d3e60885926"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4dea7dbb-895d-436a-8a54-307b3f4b7273",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1c37301-f1a0-4ec9-bcc9-247f011ee1ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fd13070-5ebc-4319-9a6c-a0df4da48555",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04e0988e-8d9b-424b-9cd8-7225ca3587f6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e6a7578-25fc-42b6-915b-06d79061bea1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope",
                "utils(pm).getAccessToken('prove:presentations');"
              ],
              "_lastExecutionId": "e7a1562a-0c95-47e5-a950-45e4e9130496"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e7d5d10-e65a-4e7f-986d-eb481765dece",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f18fb16-235a-4a96-a0bc-8b5985613a97"
            }
          }
        ]
      },
      {
        "id": "373f1645-5b83-4bbc-8224-697c4dbcf6b1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bed65c3c-c7d9-4366-949f-03c9907cae57",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31006bbc-858d-4c77-b826-ec1fa8a305ab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7eaa4f94-e456-47de-ae05-1c818cc944d2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87cd59b8-7f82-4d27-9fd0-850a690050ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14ee2de-2a22-40d9-b825-2010420058b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d88254-bab4-4bde-b698-210bcb106089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40590e8c-7abb-4cba-afed-5633dc7701c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b85f9d-78b6-4960-9b85-a68ac0fa80c8",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482bb75e-417c-44e5-a345-116fb948313a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "fd02f49f-a5fd-412e-b18b-6b222c58c9e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5691cd-25a4-4d56-8cbb-590d0a380740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e6e63dd-3d22-4ac5-99d6-566d70119df6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fff37767-8790-4288-a719-0d518d082dfb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a101bf4-ddd6-459d-9646-9a1a06cb1d0c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b30353f1-20f5-4618-84e8-2f7761ab44a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4aacf85d-6b5e-4d1b-a832-2e5bfbbeed23"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a28a2cb4-e60b-4c4b-b961-0df22328e005",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope",
                "utils(pm).getAccessToken('verify:presentations');"
              ],
              "_lastExecutionId": "9c155c54-297f-43f3-91fc-27f59cc958c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0dd69983-7da8-42fa-903f-88cc02dc37ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7d9b74f-1fbc-4f56-a594-9e7bad39d529"
            }
          }
        ]
      },
      {
        "id": "8b7ac2d5-03e5-499c-a970-6de988e50725",
        "name": "Presentations - Notify",
        "item": [],
        "event": []
      },
      {
        "id": "570e855b-3ffc-470c-a00c-64b08dbac3f1",
        "name": "Presentations - Submit",
        "item": [],
        "event": []
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1193,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 200,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 309,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 602,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 591,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 60.24500000000003,
      "responseMin": 10,
      "responseMax": 445,
      "responseSd": 88.6929251688093,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1663894573553,
      "completed": 1663894593856
    },
    "executions": [
      {
        "id": "82f5078b-de63-45d9-94bd-ffb2af34db01",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 152,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "158a0610-2023-401f-8645-bbf5a8e6d9aa",
          "httpRequestId": "a331e7b0-21c1-40e1-9efe-07a8ec83571f"
        },
        "item": {
          "id": "82f5078b-de63-45d9-94bd-ffb2af34db01",
          "name": "did_json"
        },
        "response": {
          "id": "3d7896da-402f-449c-9096-31ee86fba658",
          "status": "OK",
          "code": 200,
          "responseTime": 136,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.service[0].type should be array",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.service[0].type should be array\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ]
      },
      {
        "id": "fa962946-301b-4732-9818-c57542996086",
        "cursor": {
          "ref": "28801274-cdc0-47b9-abba-ec4af7e52c1c",
          "length": 152,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "916d1194-bc86-4d8e-b63e-650969eb8196"
        },
        "item": {
          "id": "fa962946-301b-4732-9818-c57542996086",
          "name": "did:invalid"
        },
        "response": {
          "id": "6753694f-c31c-45ea-895b-4a7f0bd2fec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa962946-301b-4732-9818-c57542996086",
        "cursor": {
          "ref": "28801274-cdc0-47b9-abba-ec4af7e52c1c",
          "length": 152,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "916d1194-bc86-4d8e-b63e-650969eb8196"
        },
        "item": {
          "id": "fa962946-301b-4732-9818-c57542996086",
          "name": "did:invalid"
        },
        "response": {
          "id": "6753694f-c31c-45ea-895b-4a7f0bd2fec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e09b05-cfdb-46fa-a97d-555b3a4c6b9b",
        "cursor": {
          "ref": "cc5899bb-3f5e-48ce-bc64-ab5fa03e1aca",
          "length": 152,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "dfc46ee8-63fa-49c8-860a-fe4e1812de9b"
        },
        "item": {
          "id": "66e09b05-cfdb-46fa-a97d-555b3a4c6b9b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c6d42710-4096-4433-be60-70e014cf103c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 129,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526cba55-4d48-40e3-aede-52067625e64e",
        "cursor": {
          "ref": "65bea351-4f4e-4784-be9a-72319ae737a4",
          "length": 152,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3b7f39d2-8b2f-4e90-901d-b8a1b5122c67"
        },
        "item": {
          "id": "526cba55-4d48-40e3-aede-52067625e64e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "db0bb12c-77ab-448f-9f5a-bf8ea2da245b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 12,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039219f7-71ab-4087-a54d-69f3617cd800",
        "cursor": {
          "ref": "e4b42126-3a73-47fc-a4be-cce6c71246b5",
          "length": 152,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a59808bd-c5be-4670-870b-25493ba4c491"
        },
        "item": {
          "id": "039219f7-71ab-4087-a54d-69f3617cd800",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "878422df-8f31-4b2d-9c36-6b75e12cfccd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 14,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534b1910-bf69-4a3f-ad4e-843664901d11",
        "cursor": {
          "ref": "0ff16d61-6c79-4b2a-bcf6-b74791e46bf7",
          "length": 152,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9f46f201-2fd6-4b4a-a138-1247d5249a9e"
        },
        "item": {
          "id": "534b1910-bf69-4a3f-ad4e-843664901d11",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4d80438a-03f5-4ace-ab2e-1833c17c9641",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 19,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534b1910-bf69-4a3f-ad4e-843664901d11",
        "cursor": {
          "ref": "0ff16d61-6c79-4b2a-bcf6-b74791e46bf7",
          "length": 152,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9f46f201-2fd6-4b4a-a138-1247d5249a9e"
        },
        "item": {
          "id": "534b1910-bf69-4a3f-ad4e-843664901d11",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4d80438a-03f5-4ace-ab2e-1833c17c9641",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 19,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f201e36d-682d-4828-af6a-d70c6a78d169",
        "cursor": {
          "ref": "836ed8af-96ee-4916-a455-f3505b2b6d5f",
          "length": 152,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "44294b8c-f087-425f-bdc5-f48641e57a09"
        },
        "item": {
          "id": "f201e36d-682d-4828-af6a-d70c6a78d169",
          "name": "identifiers"
        },
        "response": {
          "id": "74a9b41d-6e83-454a-a058-5698b3f2cd1d",
          "status": "OK",
          "code": 200,
          "responseTime": 307,
          "responseSize": 1396
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "Error",
              "index": 1,
              "test": "response validates against schema",
              "message": "schema is invalid: data.properties['didDocument'].properties['service'].items.properties['oneOf'] should be object,boolean, data.properties['didDocument'].properties['service'].items should be array, data.properties['didDocument'].properties['service'].items should match some schema in anyOf",
              "stack": "Error: schema is invalid: data.properties['didDocument'].properties['service'].items.properties['oneOf'] should be object,boolean, data.properties['didDocument'].properties['service'].items should be array, data.properties['didDocument'].properties['service'].items should match some schema in anyOf\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "id": "ba31c117-9dcf-42ca-ad70-a94230a11201",
        "cursor": {
          "ref": "2623a347-413d-400b-a638-5684a49a227f",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4442d2ca-bf19-43aa-ad2d-2b2f27f82f8a"
        },
        "item": {
          "id": "ba31c117-9dcf-42ca-ad70-a94230a11201",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9c286350-ad10-4ce2-a289-313664f10ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba31c117-9dcf-42ca-ad70-a94230a11201",
        "cursor": {
          "ref": "2623a347-413d-400b-a638-5684a49a227f",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4442d2ca-bf19-43aa-ad2d-2b2f27f82f8a"
        },
        "item": {
          "id": "ba31c117-9dcf-42ca-ad70-a94230a11201",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9c286350-ad10-4ce2-a289-313664f10ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba31c117-9dcf-42ca-ad70-a94230a11201",
        "cursor": {
          "ref": "2623a347-413d-400b-a638-5684a49a227f",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4442d2ca-bf19-43aa-ad2d-2b2f27f82f8a"
        },
        "item": {
          "id": "ba31c117-9dcf-42ca-ad70-a94230a11201",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9c286350-ad10-4ce2-a289-313664f10ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d39a2b2-cda1-45b0-bc67-d001a1bf356f",
        "cursor": {
          "ref": "188c0004-f0ef-4cab-bc88-a0635e961c4d",
          "length": 152,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9deb7026-d882-449f-b2a1-036d3a44c457"
        },
        "item": {
          "id": "8d39a2b2-cda1-45b0-bc67-d001a1bf356f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b83f7f68-a812-4cd0-b540-12b751596c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d39a2b2-cda1-45b0-bc67-d001a1bf356f",
        "cursor": {
          "ref": "188c0004-f0ef-4cab-bc88-a0635e961c4d",
          "length": 152,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9deb7026-d882-449f-b2a1-036d3a44c457"
        },
        "item": {
          "id": "8d39a2b2-cda1-45b0-bc67-d001a1bf356f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b83f7f68-a812-4cd0-b540-12b751596c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f628926f-68e5-49de-94f6-bc38bb8166a5",
        "cursor": {
          "ref": "ed1d3a59-0532-4753-8d2d-7ac1b264024a",
          "length": 152,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d6103edd-cc52-4245-83aa-3ce80949db20"
        },
        "item": {
          "id": "f628926f-68e5-49de-94f6-bc38bb8166a5",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "a87e53c4-d36d-4a82-9afb-2e1016c9917a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f628926f-68e5-49de-94f6-bc38bb8166a5",
        "cursor": {
          "ref": "ed1d3a59-0532-4753-8d2d-7ac1b264024a",
          "length": 152,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d6103edd-cc52-4245-83aa-3ce80949db20"
        },
        "item": {
          "id": "f628926f-68e5-49de-94f6-bc38bb8166a5",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "a87e53c4-d36d-4a82-9afb-2e1016c9917a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7e4a51-ac70-4c18-9745-edebaafd5349",
        "cursor": {
          "ref": "fd1f83db-5851-4ce7-96ad-89ba642078eb",
          "length": 152,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "dc900700-f12e-4098-b97a-4854165338d6"
        },
        "item": {
          "id": "be7e4a51-ac70-4c18-9745-edebaafd5349",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "18dd8b26-c1bd-4a1c-8e54-3890d46acc00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7e4a51-ac70-4c18-9745-edebaafd5349",
        "cursor": {
          "ref": "fd1f83db-5851-4ce7-96ad-89ba642078eb",
          "length": 152,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "dc900700-f12e-4098-b97a-4854165338d6"
        },
        "item": {
          "id": "be7e4a51-ac70-4c18-9745-edebaafd5349",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "18dd8b26-c1bd-4a1c-8e54-3890d46acc00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823912ac-6c4e-4932-bd2f-907876a92f0d",
        "cursor": {
          "ref": "8d441359-e0c5-4d82-b07f-20a6fca6d33c",
          "length": 152,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "227abb78-f6ff-4643-b119-6fc14c46ebd8"
        },
        "item": {
          "id": "823912ac-6c4e-4932-bd2f-907876a92f0d",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "09b88472-4443-4c13-b7ee-1d5a2b338aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823912ac-6c4e-4932-bd2f-907876a92f0d",
        "cursor": {
          "ref": "8d441359-e0c5-4d82-b07f-20a6fca6d33c",
          "length": 152,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "227abb78-f6ff-4643-b119-6fc14c46ebd8"
        },
        "item": {
          "id": "823912ac-6c4e-4932-bd2f-907876a92f0d",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "09b88472-4443-4c13-b7ee-1d5a2b338aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d39768-10b4-46d6-a74d-c2fcd22e3cdf",
        "cursor": {
          "ref": "b05f3c30-75e7-419b-ba1e-f07b83c974ec",
          "length": 152,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9abe1a5c-5700-46e4-b7a8-317ee07acead"
        },
        "item": {
          "id": "75d39768-10b4-46d6-a74d-c2fcd22e3cdf",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fe7434f3-6b4f-456f-8241-76c1964691bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d39768-10b4-46d6-a74d-c2fcd22e3cdf",
        "cursor": {
          "ref": "b05f3c30-75e7-419b-ba1e-f07b83c974ec",
          "length": 152,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9abe1a5c-5700-46e4-b7a8-317ee07acead"
        },
        "item": {
          "id": "75d39768-10b4-46d6-a74d-c2fcd22e3cdf",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fe7434f3-6b4f-456f-8241-76c1964691bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1db9b11-4f5d-425e-95a5-71dd55f084bb",
        "cursor": {
          "ref": "29ac32e1-560d-4d00-a182-f4980aab05c6",
          "length": 152,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3a12e800-8e1d-46ba-8b34-51b1484a2a0f"
        },
        "item": {
          "id": "a1db9b11-4f5d-425e-95a5-71dd55f084bb",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "2e2c10c2-7788-44bf-87e8-227659db2b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1db9b11-4f5d-425e-95a5-71dd55f084bb",
        "cursor": {
          "ref": "29ac32e1-560d-4d00-a182-f4980aab05c6",
          "length": 152,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3a12e800-8e1d-46ba-8b34-51b1484a2a0f"
        },
        "item": {
          "id": "a1db9b11-4f5d-425e-95a5-71dd55f084bb",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "2e2c10c2-7788-44bf-87e8-227659db2b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7f34f5-49e9-440c-b050-029015b93f1e",
        "cursor": {
          "ref": "e69c312b-e7a3-4be5-a499-82fde3588a22",
          "length": 152,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6a21321e-34ce-4511-a01d-82c782320a76"
        },
        "item": {
          "id": "4e7f34f5-49e9-440c-b050-029015b93f1e",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "1cbe9438-fcb7-48fa-b622-fc43ce84181f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7f34f5-49e9-440c-b050-029015b93f1e",
        "cursor": {
          "ref": "e69c312b-e7a3-4be5-a499-82fde3588a22",
          "length": 152,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6a21321e-34ce-4511-a01d-82c782320a76"
        },
        "item": {
          "id": "4e7f34f5-49e9-440c-b050-029015b93f1e",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "1cbe9438-fcb7-48fa-b622-fc43ce84181f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c5c6de-691d-400a-839b-5cc58d5621f3",
        "cursor": {
          "ref": "b9a1f9f1-d11d-441b-8567-36b03bfe8d52",
          "length": 152,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "48bffd7a-f75a-42ce-a294-6747010f0dbc"
        },
        "item": {
          "id": "04c5c6de-691d-400a-839b-5cc58d5621f3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fb475fae-02b0-4ad2-bd69-65394168b4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c5c6de-691d-400a-839b-5cc58d5621f3",
        "cursor": {
          "ref": "b9a1f9f1-d11d-441b-8567-36b03bfe8d52",
          "length": 152,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "48bffd7a-f75a-42ce-a294-6747010f0dbc"
        },
        "item": {
          "id": "04c5c6de-691d-400a-839b-5cc58d5621f3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fb475fae-02b0-4ad2-bd69-65394168b4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6eab177-4cd4-443c-b761-72d6c1f2acbb",
        "cursor": {
          "ref": "466558cc-594b-42ec-8c26-0700275542d0",
          "length": 152,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ef6c693b-c602-4db9-8c0a-86d27d1e0dc6"
        },
        "item": {
          "id": "d6eab177-4cd4-443c-b761-72d6c1f2acbb",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "82d2359d-f2df-42be-93b9-49fe0379190f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6eab177-4cd4-443c-b761-72d6c1f2acbb",
        "cursor": {
          "ref": "466558cc-594b-42ec-8c26-0700275542d0",
          "length": 152,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ef6c693b-c602-4db9-8c0a-86d27d1e0dc6"
        },
        "item": {
          "id": "d6eab177-4cd4-443c-b761-72d6c1f2acbb",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "82d2359d-f2df-42be-93b9-49fe0379190f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8894736-2192-4864-94ed-be32ea04c6d6",
        "cursor": {
          "ref": "f4d7112e-63b7-40b8-bb84-6a2ec0ed7c12",
          "length": 152,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d816d491-8f33-4ca2-aea5-9b14d779b5c8"
        },
        "item": {
          "id": "e8894736-2192-4864-94ed-be32ea04c6d6",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "d0ac36d6-4515-4dee-b2dc-12637e37f55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8894736-2192-4864-94ed-be32ea04c6d6",
        "cursor": {
          "ref": "f4d7112e-63b7-40b8-bb84-6a2ec0ed7c12",
          "length": 152,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d816d491-8f33-4ca2-aea5-9b14d779b5c8"
        },
        "item": {
          "id": "e8894736-2192-4864-94ed-be32ea04c6d6",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "d0ac36d6-4515-4dee-b2dc-12637e37f55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b62151-c6f5-4ec7-852e-1070e52420af",
        "cursor": {
          "ref": "282bb3de-6097-4534-9372-0884a264a6aa",
          "length": 152,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2e868a6d-250b-4445-a760-fc98dbfb009a"
        },
        "item": {
          "id": "76b62151-c6f5-4ec7-852e-1070e52420af",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5250c113-1d31-4bc5-9dd6-bbe315e27533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b62151-c6f5-4ec7-852e-1070e52420af",
        "cursor": {
          "ref": "282bb3de-6097-4534-9372-0884a264a6aa",
          "length": 152,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2e868a6d-250b-4445-a760-fc98dbfb009a"
        },
        "item": {
          "id": "76b62151-c6f5-4ec7-852e-1070e52420af",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5250c113-1d31-4bc5-9dd6-bbe315e27533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5a8aec-6818-429e-ae57-d2b4528454c1",
        "cursor": {
          "ref": "8628aa35-7675-4242-85fc-f2d1f0338c9a",
          "length": 152,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "641ca677-b0b3-44e7-9bd7-81d78edced78"
        },
        "item": {
          "id": "3f5a8aec-6818-429e-ae57-d2b4528454c1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "84bf5b11-3b90-4f37-a800-060a1ef57ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5a8aec-6818-429e-ae57-d2b4528454c1",
        "cursor": {
          "ref": "8628aa35-7675-4242-85fc-f2d1f0338c9a",
          "length": 152,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "641ca677-b0b3-44e7-9bd7-81d78edced78"
        },
        "item": {
          "id": "3f5a8aec-6818-429e-ae57-d2b4528454c1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "84bf5b11-3b90-4f37-a800-060a1ef57ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab15467b-9771-4a8b-983a-6dbd447829ad",
        "cursor": {
          "ref": "7ed2aa07-2fab-4ffa-8d7b-15825c234d16",
          "length": 152,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b9de22f7-2186-4b12-8830-99351b2e1092"
        },
        "item": {
          "id": "ab15467b-9771-4a8b-983a-6dbd447829ad",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "77789211-c301-4f7d-b09d-838f87afab14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab15467b-9771-4a8b-983a-6dbd447829ad",
        "cursor": {
          "ref": "7ed2aa07-2fab-4ffa-8d7b-15825c234d16",
          "length": 152,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b9de22f7-2186-4b12-8830-99351b2e1092"
        },
        "item": {
          "id": "ab15467b-9771-4a8b-983a-6dbd447829ad",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "77789211-c301-4f7d-b09d-838f87afab14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954a0837-c172-4a3e-b3f5-225e2d403caf",
        "cursor": {
          "ref": "e9510a52-8ee0-4215-a282-7d3c520fd8db",
          "length": 152,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ef94c694-f201-4415-af2e-c8300f4d33b3"
        },
        "item": {
          "id": "954a0837-c172-4a3e-b3f5-225e2d403caf",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "8c374ac7-b3df-449b-bfab-ba1754c882bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954a0837-c172-4a3e-b3f5-225e2d403caf",
        "cursor": {
          "ref": "e9510a52-8ee0-4215-a282-7d3c520fd8db",
          "length": 152,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ef94c694-f201-4415-af2e-c8300f4d33b3"
        },
        "item": {
          "id": "954a0837-c172-4a3e-b3f5-225e2d403caf",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "8c374ac7-b3df-449b-bfab-ba1754c882bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd766ce4-78c2-4cf8-8dad-b879f61e7c2e",
        "cursor": {
          "ref": "5e8bda7e-3e3f-4744-b43b-89ff97bbe3b7",
          "length": 152,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "645ad138-649d-4740-8458-024bfcfc0ea6"
        },
        "item": {
          "id": "dd766ce4-78c2-4cf8-8dad-b879f61e7c2e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "11564f1e-b59f-4547-80db-7b0af70abf1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd766ce4-78c2-4cf8-8dad-b879f61e7c2e",
        "cursor": {
          "ref": "5e8bda7e-3e3f-4744-b43b-89ff97bbe3b7",
          "length": 152,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "645ad138-649d-4740-8458-024bfcfc0ea6"
        },
        "item": {
          "id": "dd766ce4-78c2-4cf8-8dad-b879f61e7c2e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "11564f1e-b59f-4547-80db-7b0af70abf1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2024039-c657-4fd0-9336-3ba2ede7553d",
        "cursor": {
          "ref": "c9908c55-2d25-454c-bb66-9c3eda7e1f6b",
          "length": 152,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ff87dbba-6155-4bf7-9fbc-44208c6bd710"
        },
        "item": {
          "id": "a2024039-c657-4fd0-9336-3ba2ede7553d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ce672790-bf26-4e0c-ae98-738c10193ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2024039-c657-4fd0-9336-3ba2ede7553d",
        "cursor": {
          "ref": "c9908c55-2d25-454c-bb66-9c3eda7e1f6b",
          "length": 152,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ff87dbba-6155-4bf7-9fbc-44208c6bd710"
        },
        "item": {
          "id": "a2024039-c657-4fd0-9336-3ba2ede7553d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ce672790-bf26-4e0c-ae98-738c10193ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a243d7-2088-48f2-af7d-3b2536c754d3",
        "cursor": {
          "ref": "1a99d6c9-b027-4e71-9ae7-16ee9e3d6cb5",
          "length": 152,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f456b1ac-36e9-46a9-950d-710beb4fd39a"
        },
        "item": {
          "id": "62a243d7-2088-48f2-af7d-3b2536c754d3",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "78a93251-1657-49fb-8f45-03d53d67a80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a243d7-2088-48f2-af7d-3b2536c754d3",
        "cursor": {
          "ref": "1a99d6c9-b027-4e71-9ae7-16ee9e3d6cb5",
          "length": 152,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f456b1ac-36e9-46a9-950d-710beb4fd39a"
        },
        "item": {
          "id": "62a243d7-2088-48f2-af7d-3b2536c754d3",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "78a93251-1657-49fb-8f45-03d53d67a80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e257e6-2435-431e-9693-91dccd7644a1",
        "cursor": {
          "ref": "466cff2b-4492-4d90-9054-e7a219a237f5",
          "length": 152,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6d030fbb-1999-4a9a-90d5-a46d3af7e832"
        },
        "item": {
          "id": "16e257e6-2435-431e-9693-91dccd7644a1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8979e788-f7d9-4383-9ae9-2b326937f310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e257e6-2435-431e-9693-91dccd7644a1",
        "cursor": {
          "ref": "466cff2b-4492-4d90-9054-e7a219a237f5",
          "length": 152,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6d030fbb-1999-4a9a-90d5-a46d3af7e832"
        },
        "item": {
          "id": "16e257e6-2435-431e-9693-91dccd7644a1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8979e788-f7d9-4383-9ae9-2b326937f310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9379b52-025b-4963-868a-885f34cee3d3",
        "cursor": {
          "ref": "8eca1041-fdc3-4e36-98f3-54bfed82e62c",
          "length": 152,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3a892eb9-ca8e-4b90-bc4d-0cc3a8300fec"
        },
        "item": {
          "id": "b9379b52-025b-4963-868a-885f34cee3d3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "52098ff2-1311-4950-94ec-6bf058707fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9379b52-025b-4963-868a-885f34cee3d3",
        "cursor": {
          "ref": "8eca1041-fdc3-4e36-98f3-54bfed82e62c",
          "length": 152,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3a892eb9-ca8e-4b90-bc4d-0cc3a8300fec"
        },
        "item": {
          "id": "b9379b52-025b-4963-868a-885f34cee3d3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "52098ff2-1311-4950-94ec-6bf058707fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a42c221-517b-4e64-999e-84c5dcce458a",
        "cursor": {
          "ref": "ee42fbd6-73d2-4aa6-b68b-699455086574",
          "length": 152,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "dc052726-c140-49e2-9d2c-5c9cacaeba17"
        },
        "item": {
          "id": "9a42c221-517b-4e64-999e-84c5dcce458a",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "b45b87c6-464a-4416-b0d2-036f2b1075ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a42c221-517b-4e64-999e-84c5dcce458a",
        "cursor": {
          "ref": "ee42fbd6-73d2-4aa6-b68b-699455086574",
          "length": 152,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "dc052726-c140-49e2-9d2c-5c9cacaeba17"
        },
        "item": {
          "id": "9a42c221-517b-4e64-999e-84c5dcce458a",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "b45b87c6-464a-4416-b0d2-036f2b1075ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51afe570-81d1-4324-a1de-3fd7fabaa93f",
        "cursor": {
          "ref": "f31b363e-5c34-4cc2-97d5-df96720d0062",
          "length": 152,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e68f00e3-d67f-48e2-9b83-225fec0178fe"
        },
        "item": {
          "id": "51afe570-81d1-4324-a1de-3fd7fabaa93f",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "5e064663-e2c1-4d8d-8b9a-248594c2d98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51afe570-81d1-4324-a1de-3fd7fabaa93f",
        "cursor": {
          "ref": "f31b363e-5c34-4cc2-97d5-df96720d0062",
          "length": 152,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e68f00e3-d67f-48e2-9b83-225fec0178fe"
        },
        "item": {
          "id": "51afe570-81d1-4324-a1de-3fd7fabaa93f",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "5e064663-e2c1-4d8d-8b9a-248594c2d98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70206a8d-a153-4522-9aaa-ab21b8bd180f",
        "cursor": {
          "ref": "456aa05b-15da-439c-aba1-66bb776ea22f",
          "length": 152,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dbb7cf57-28d0-4851-8b36-5a816a9e289b"
        },
        "item": {
          "id": "70206a8d-a153-4522-9aaa-ab21b8bd180f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4b8f06ea-63be-401d-a2fb-1491b5bcf03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70206a8d-a153-4522-9aaa-ab21b8bd180f",
        "cursor": {
          "ref": "456aa05b-15da-439c-aba1-66bb776ea22f",
          "length": 152,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dbb7cf57-28d0-4851-8b36-5a816a9e289b"
        },
        "item": {
          "id": "70206a8d-a153-4522-9aaa-ab21b8bd180f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4b8f06ea-63be-401d-a2fb-1491b5bcf03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f94481-aacb-4510-9189-10356106c00e",
        "cursor": {
          "ref": "71d3ed47-3c58-4bc1-b5cc-cc48d7944545",
          "length": 152,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1008c4e8-32dd-4288-a914-0282bf4bbf64"
        },
        "item": {
          "id": "37f94481-aacb-4510-9189-10356106c00e",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "abf0765e-6381-4cb8-a14f-2ce8d5e84b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f94481-aacb-4510-9189-10356106c00e",
        "cursor": {
          "ref": "71d3ed47-3c58-4bc1-b5cc-cc48d7944545",
          "length": 152,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1008c4e8-32dd-4288-a914-0282bf4bbf64"
        },
        "item": {
          "id": "37f94481-aacb-4510-9189-10356106c00e",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "abf0765e-6381-4cb8-a14f-2ce8d5e84b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f572ced-6214-4f1f-b6a8-344fbee15625",
        "cursor": {
          "ref": "9b433d9c-1b7c-42f1-8792-44c43239ed94",
          "length": 152,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f78f162c-9f6f-427e-8208-3494e2d51a4e"
        },
        "item": {
          "id": "4f572ced-6214-4f1f-b6a8-344fbee15625",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d661d5f1-6a2b-4e81-b02e-338487fd0a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f572ced-6214-4f1f-b6a8-344fbee15625",
        "cursor": {
          "ref": "9b433d9c-1b7c-42f1-8792-44c43239ed94",
          "length": 152,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f78f162c-9f6f-427e-8208-3494e2d51a4e"
        },
        "item": {
          "id": "4f572ced-6214-4f1f-b6a8-344fbee15625",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d661d5f1-6a2b-4e81-b02e-338487fd0a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5853ba-e588-41e2-92fd-cc2061f86a53",
        "cursor": {
          "ref": "f5a9ac7e-7344-400b-af85-b0945f022f01",
          "length": 152,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "64163e54-7505-41d5-aef9-314746f745e7"
        },
        "item": {
          "id": "4a5853ba-e588-41e2-92fd-cc2061f86a53",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "2fd6456a-1bbf-4248-ac7d-19e510d6e1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5853ba-e588-41e2-92fd-cc2061f86a53",
        "cursor": {
          "ref": "f5a9ac7e-7344-400b-af85-b0945f022f01",
          "length": 152,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "64163e54-7505-41d5-aef9-314746f745e7"
        },
        "item": {
          "id": "4a5853ba-e588-41e2-92fd-cc2061f86a53",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "2fd6456a-1bbf-4248-ac7d-19e510d6e1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9e25f4-0718-41e7-b61f-e3de98874180",
        "cursor": {
          "ref": "efd0e749-6b3d-4dd7-8788-cc1c0eca0449",
          "length": 152,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5177d366-d5c5-4367-88e8-79c8ad1351d4"
        },
        "item": {
          "id": "cc9e25f4-0718-41e7-b61f-e3de98874180",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4bf6b15b-0cf2-44cf-9225-507d43a9b350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9e25f4-0718-41e7-b61f-e3de98874180",
        "cursor": {
          "ref": "efd0e749-6b3d-4dd7-8788-cc1c0eca0449",
          "length": 152,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5177d366-d5c5-4367-88e8-79c8ad1351d4"
        },
        "item": {
          "id": "cc9e25f4-0718-41e7-b61f-e3de98874180",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4bf6b15b-0cf2-44cf-9225-507d43a9b350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e798108e-17a5-46ff-87ad-b7ef6b5973df",
        "cursor": {
          "ref": "6d4a4f26-09bf-488b-84cc-b17e799b5a3d",
          "length": 152,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f951c773-92c4-4475-8b4a-2c1c149516fe"
        },
        "item": {
          "id": "e798108e-17a5-46ff-87ad-b7ef6b5973df",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "d095c8e1-d0cf-437e-8cdf-8260fc9d412c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e798108e-17a5-46ff-87ad-b7ef6b5973df",
        "cursor": {
          "ref": "6d4a4f26-09bf-488b-84cc-b17e799b5a3d",
          "length": 152,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f951c773-92c4-4475-8b4a-2c1c149516fe"
        },
        "item": {
          "id": "e798108e-17a5-46ff-87ad-b7ef6b5973df",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "d095c8e1-d0cf-437e-8cdf-8260fc9d412c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02179bf8-d953-4196-abac-dc47fd5deed5",
        "cursor": {
          "ref": "04628daa-1505-4b50-b7f4-32b8c4b66608",
          "length": 152,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b1b49b9f-49d3-4f11-9d05-280c3c9ae00e"
        },
        "item": {
          "id": "02179bf8-d953-4196-abac-dc47fd5deed5",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "7147dcd7-dd9e-4e91-baa6-140dcdc51f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02179bf8-d953-4196-abac-dc47fd5deed5",
        "cursor": {
          "ref": "04628daa-1505-4b50-b7f4-32b8c4b66608",
          "length": 152,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b1b49b9f-49d3-4f11-9d05-280c3c9ae00e"
        },
        "item": {
          "id": "02179bf8-d953-4196-abac-dc47fd5deed5",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "7147dcd7-dd9e-4e91-baa6-140dcdc51f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cc919d-0ed1-4f41-8543-3d848aab28c4",
        "cursor": {
          "ref": "d5d17f64-1164-4e7b-875a-077be2e428a3",
          "length": 152,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e74a632c-487c-4261-adf9-d243134714c7"
        },
        "item": {
          "id": "f8cc919d-0ed1-4f41-8543-3d848aab28c4",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "51f82e42-3eec-4930-b722-1ded9052dbdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cc919d-0ed1-4f41-8543-3d848aab28c4",
        "cursor": {
          "ref": "d5d17f64-1164-4e7b-875a-077be2e428a3",
          "length": 152,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e74a632c-487c-4261-adf9-d243134714c7"
        },
        "item": {
          "id": "f8cc919d-0ed1-4f41-8543-3d848aab28c4",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "51f82e42-3eec-4930-b722-1ded9052dbdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b5df86-b5b2-49e9-bff8-fd426d5d3fe6",
        "cursor": {
          "ref": "b4d19874-e9f5-4d72-9a5d-826f7b7cbf54",
          "length": 152,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "84293a50-4fbf-4362-92b9-0f08681a66a8"
        },
        "item": {
          "id": "85b5df86-b5b2-49e9-bff8-fd426d5d3fe6",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "9911d077-bb19-4871-ac64-6bcc05433df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b5df86-b5b2-49e9-bff8-fd426d5d3fe6",
        "cursor": {
          "ref": "b4d19874-e9f5-4d72-9a5d-826f7b7cbf54",
          "length": 152,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "84293a50-4fbf-4362-92b9-0f08681a66a8"
        },
        "item": {
          "id": "85b5df86-b5b2-49e9-bff8-fd426d5d3fe6",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "9911d077-bb19-4871-ac64-6bcc05433df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c464753-0848-4002-9281-38de4fd89660",
        "cursor": {
          "ref": "3c34dba5-fd65-410a-81a6-5b4151190370",
          "length": 152,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7004f46e-796e-4a5d-b5d0-d1baf3df33ca"
        },
        "item": {
          "id": "6c464753-0848-4002-9281-38de4fd89660",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a8d5bae5-e9ff-45ce-a06f-c59b63b60533",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c464753-0848-4002-9281-38de4fd89660",
        "cursor": {
          "ref": "3c34dba5-fd65-410a-81a6-5b4151190370",
          "length": 152,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7004f46e-796e-4a5d-b5d0-d1baf3df33ca"
        },
        "item": {
          "id": "6c464753-0848-4002-9281-38de4fd89660",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a8d5bae5-e9ff-45ce-a06f-c59b63b60533",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4d6dc0-d941-4f3e-8cca-b3fb494d5376",
        "cursor": {
          "ref": "545a0e8e-fff8-4824-a33e-979e483044d4",
          "length": 152,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fe8f5c57-2d5c-4c34-84b1-476c5f0e334d"
        },
        "item": {
          "id": "5c4d6dc0-d941-4f3e-8cca-b3fb494d5376",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "22540fb8-2856-4089-ae2c-17463f4f06c9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 13,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4d6dc0-d941-4f3e-8cca-b3fb494d5376",
        "cursor": {
          "ref": "545a0e8e-fff8-4824-a33e-979e483044d4",
          "length": 152,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fe8f5c57-2d5c-4c34-84b1-476c5f0e334d"
        },
        "item": {
          "id": "5c4d6dc0-d941-4f3e-8cca-b3fb494d5376",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "22540fb8-2856-4089-ae2c-17463f4f06c9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 13,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620d2843-6707-47cc-9fe7-083d323b440e",
        "cursor": {
          "ref": "1f967175-25fc-4779-8f0d-c3ef6dc26823",
          "length": 152,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3b40ab35-ed01-43c3-b2bf-4b9a2687ecbe"
        },
        "item": {
          "id": "620d2843-6707-47cc-9fe7-083d323b440e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "01be9d8a-dad6-4348-82ee-9c8e037ea0c2",
          "status": "Created",
          "code": 201,
          "responseTime": 290,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "620d2843-6707-47cc-9fe7-083d323b440e",
        "cursor": {
          "ref": "1f967175-25fc-4779-8f0d-c3ef6dc26823",
          "length": 152,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3b40ab35-ed01-43c3-b2bf-4b9a2687ecbe"
        },
        "item": {
          "id": "620d2843-6707-47cc-9fe7-083d323b440e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "01be9d8a-dad6-4348-82ee-9c8e037ea0c2",
          "status": "Created",
          "code": 201,
          "responseTime": 290,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e48b9c-9635-4b44-83b0-dfb6d10789ef",
        "cursor": {
          "ref": "e434a1d3-9af2-47f7-a2e6-d7cfc0eec8f5",
          "length": 152,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8eade51c-6bc0-47be-97df-b787c49aae76"
        },
        "item": {
          "id": "a1e48b9c-9635-4b44-83b0-dfb6d10789ef",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "2a5fd358-b6d6-4e81-869c-c6f3e349401d",
          "status": "Created",
          "code": 201,
          "responseTime": 358,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e48b9c-9635-4b44-83b0-dfb6d10789ef",
        "cursor": {
          "ref": "e434a1d3-9af2-47f7-a2e6-d7cfc0eec8f5",
          "length": 152,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8eade51c-6bc0-47be-97df-b787c49aae76"
        },
        "item": {
          "id": "a1e48b9c-9635-4b44-83b0-dfb6d10789ef",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "2a5fd358-b6d6-4e81-869c-c6f3e349401d",
          "status": "Created",
          "code": 201,
          "responseTime": 358,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1399460-ed5b-4c94-8bdc-628f7947a788",
        "cursor": {
          "ref": "f81f23ae-f16b-4999-bdb4-9ac362155367",
          "length": 152,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5220d49e-aea7-4333-97b0-1484294e4916"
        },
        "item": {
          "id": "a1399460-ed5b-4c94-8bdc-628f7947a788",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7bf77cc4-73ba-434e-a787-91fc9791d96a",
          "status": "Created",
          "code": 201,
          "responseTime": 280,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1399460-ed5b-4c94-8bdc-628f7947a788",
        "cursor": {
          "ref": "f81f23ae-f16b-4999-bdb4-9ac362155367",
          "length": 152,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5220d49e-aea7-4333-97b0-1484294e4916"
        },
        "item": {
          "id": "a1399460-ed5b-4c94-8bdc-628f7947a788",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7bf77cc4-73ba-434e-a787-91fc9791d96a",
          "status": "Created",
          "code": 201,
          "responseTime": 280,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5085c6-72b4-43be-9bf1-29c6c35fdc66",
        "cursor": {
          "ref": "273843d1-e3f4-47bb-a2a3-131d1027676f",
          "length": 152,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9c5cf241-be32-457c-a53e-35b8685e549f"
        },
        "item": {
          "id": "aa5085c6-72b4-43be-9bf1-29c6c35fdc66",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a553d616-63d7-4e60-9d63-38dac15329eb",
          "status": "Created",
          "code": 201,
          "responseTime": 332,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5085c6-72b4-43be-9bf1-29c6c35fdc66",
        "cursor": {
          "ref": "273843d1-e3f4-47bb-a2a3-131d1027676f",
          "length": 152,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9c5cf241-be32-457c-a53e-35b8685e549f"
        },
        "item": {
          "id": "aa5085c6-72b4-43be-9bf1-29c6c35fdc66",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a553d616-63d7-4e60-9d63-38dac15329eb",
          "status": "Created",
          "code": 201,
          "responseTime": 332,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "01664fc9-62a8-459f-af4b-27aecad2894b",
        "cursor": {
          "ref": "59f552ea-87b6-4e72-bba1-4df1b48b0aa5",
          "length": 152,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "547d3e19-44d6-4b54-a302-0bc37b92b3db"
        },
        "item": {
          "id": "01664fc9-62a8-459f-af4b-27aecad2894b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2ee5aa44-2f97-4898-a391-63527b70a7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "01664fc9-62a8-459f-af4b-27aecad2894b",
        "cursor": {
          "ref": "59f552ea-87b6-4e72-bba1-4df1b48b0aa5",
          "length": 152,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "547d3e19-44d6-4b54-a302-0bc37b92b3db"
        },
        "item": {
          "id": "01664fc9-62a8-459f-af4b-27aecad2894b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2ee5aa44-2f97-4898-a391-63527b70a7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "8785b9dc-2465-4428-872f-686d28e6fd5d",
        "cursor": {
          "ref": "b3e0a661-9f57-4a2e-8bd3-9d9cb2083d6a",
          "length": 152,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7084ad10-6bb1-4277-a0a6-15e6d00b3f70"
        },
        "item": {
          "id": "8785b9dc-2465-4428-872f-686d28e6fd5d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4cd8085c-678d-45cb-9822-bfa9cdb77126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "8785b9dc-2465-4428-872f-686d28e6fd5d",
        "cursor": {
          "ref": "b3e0a661-9f57-4a2e-8bd3-9d9cb2083d6a",
          "length": 152,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7084ad10-6bb1-4277-a0a6-15e6d00b3f70"
        },
        "item": {
          "id": "8785b9dc-2465-4428-872f-686d28e6fd5d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4cd8085c-678d-45cb-9822-bfa9cdb77126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "51ce116d-20c5-4c2b-9972-39a0d17ef99e",
        "cursor": {
          "ref": "d116b490-d8d7-4361-85f9-71845873abd7",
          "length": 152,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6ee952a8-ff59-4a3c-9342-a33462957fb6"
        },
        "item": {
          "id": "51ce116d-20c5-4c2b-9972-39a0d17ef99e",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "55604b28-465a-42d3-ac61-dc5babc56935",
          "status": "Created",
          "code": 201,
          "responseTime": 289,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ce116d-20c5-4c2b-9972-39a0d17ef99e",
        "cursor": {
          "ref": "d116b490-d8d7-4361-85f9-71845873abd7",
          "length": 152,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6ee952a8-ff59-4a3c-9342-a33462957fb6"
        },
        "item": {
          "id": "51ce116d-20c5-4c2b-9972-39a0d17ef99e",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "55604b28-465a-42d3-ac61-dc5babc56935",
          "status": "Created",
          "code": 201,
          "responseTime": 289,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1561c392-9de5-4a24-b9bf-238d8b370bd7",
        "cursor": {
          "ref": "636e4335-439d-4149-aba1-d4818b07b7b5",
          "length": 152,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d35c0393-9470-42c2-af95-b07661891fd3"
        },
        "item": {
          "id": "1561c392-9de5-4a24-b9bf-238d8b370bd7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8b282857-1ae6-47f6-a558-a418b7c8f9c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1561c392-9de5-4a24-b9bf-238d8b370bd7",
        "cursor": {
          "ref": "636e4335-439d-4149-aba1-d4818b07b7b5",
          "length": 152,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d35c0393-9470-42c2-af95-b07661891fd3"
        },
        "item": {
          "id": "1561c392-9de5-4a24-b9bf-238d8b370bd7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8b282857-1ae6-47f6-a558-a418b7c8f9c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6ec70e-ee61-43f8-b23f-8b6e93e73d72",
        "cursor": {
          "ref": "5da2001a-2c3b-4cff-96a6-246c349f918c",
          "length": 152,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fb55c0fc-3ec2-46af-88eb-30421832d14c"
        },
        "item": {
          "id": "dc6ec70e-ee61-43f8-b23f-8b6e93e73d72",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "2613037e-2297-47af-8da1-68fa1f9e0750",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 11,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740bebf5-25f6-4b78-a938-ae1f36bec96f",
        "cursor": {
          "ref": "f8caaf3a-5bee-4304-9dcc-bd52048d64be",
          "length": 152,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7ad25941-c94e-49ac-bd00-e21b70b63d8f"
        },
        "item": {
          "id": "740bebf5-25f6-4b78-a938-ae1f36bec96f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8d5e94bd-aa89-4df9-aa18-7384ae10813b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740bebf5-25f6-4b78-a938-ae1f36bec96f",
        "cursor": {
          "ref": "f8caaf3a-5bee-4304-9dcc-bd52048d64be",
          "length": 152,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7ad25941-c94e-49ac-bd00-e21b70b63d8f"
        },
        "item": {
          "id": "740bebf5-25f6-4b78-a938-ae1f36bec96f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8d5e94bd-aa89-4df9-aa18-7384ae10813b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e55de5-e36d-4bd7-a79f-f44a58be207a",
        "cursor": {
          "ref": "2cdb8e68-684e-4473-86c5-af22b518b5c7",
          "length": 152,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8fc2fea5-1122-4df8-92d5-591b5fbad1ae"
        },
        "item": {
          "id": "27e55de5-e36d-4bd7-a79f-f44a58be207a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cd241378-23de-428f-bfc4-9e6c9b6b6510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ae903e-8438-4da8-8452-a9fcc5726324",
        "cursor": {
          "ref": "09beb9be-5459-4f79-8851-59421044c4b1",
          "length": 152,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0d01bbbc-870e-4e9c-a751-0ca7422d775e"
        },
        "item": {
          "id": "e4ae903e-8438-4da8-8452-a9fcc5726324",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2769f0f0-7dc7-4b29-85e4-b90560811d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827da6ac-df2e-4093-950d-e9fcf6f98315",
        "cursor": {
          "ref": "34f19f01-aef9-451d-abc1-ba1c975c5e61",
          "length": 152,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "62a6d794-985d-40cc-aad3-d505873f6593"
        },
        "item": {
          "id": "827da6ac-df2e-4093-950d-e9fcf6f98315",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3b5e6bc8-a8d1-4730-aa4d-b2ec968e774f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb3560e-c4c5-402e-a8a2-25b35a42f0e6",
        "cursor": {
          "ref": "6f06ce0d-2b7c-4738-94a7-90d348deb76a",
          "length": 152,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1b2c5a94-188c-4e9c-b813-5f3f9b551713"
        },
        "item": {
          "id": "3cb3560e-c4c5-402e-a8a2-25b35a42f0e6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c69a8498-419f-44bc-83b5-cffcbcff7528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8878fbe-3990-450b-8306-38f32bebe14b",
        "cursor": {
          "ref": "a6480f46-a308-47aa-bc29-7800de4a954b",
          "length": 152,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1e8c9746-9dbe-44cf-99f9-57914f16cd83"
        },
        "item": {
          "id": "e8878fbe-3990-450b-8306-38f32bebe14b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c7c28515-6abf-4e33-8128-8b1b9ceb04e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b350eac-7cd9-4b27-b65c-97d7334f7038",
        "cursor": {
          "ref": "ebb72141-755f-4bbe-9b63-198405da6978",
          "length": 152,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "07cb337e-8065-4836-8841-cf528dc07f07"
        },
        "item": {
          "id": "5b350eac-7cd9-4b27-b65c-97d7334f7038",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d4e1ad5f-b421-4093-b31a-c8a5cd718e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e739c5-a456-4c8e-9027-cfcad8db730f",
        "cursor": {
          "ref": "c7442519-4fb2-4165-acf0-42acc18af142",
          "length": 152,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b4308804-0574-4b27-824e-bb44d7d68b8c"
        },
        "item": {
          "id": "f0e739c5-a456-4c8e-9027-cfcad8db730f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f3cebe4d-d599-4660-b60f-f82d36fc6c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17cf0aa-59f3-45cd-9aa7-5cf878a83089",
        "cursor": {
          "ref": "b06cc149-9028-4b59-a977-e46997a614b6",
          "length": 152,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "41e39fe5-1dd1-48c3-98ee-802daf51846b"
        },
        "item": {
          "id": "d17cf0aa-59f3-45cd-9aa7-5cf878a83089",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "562e3e9a-0a46-4192-b633-893255b3a199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84f93d8-1893-4533-b982-3d06f717a3cf",
        "cursor": {
          "ref": "9fda9921-911e-4f46-8c59-0a87e095d4ca",
          "length": 152,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a5fc678e-6653-4d4c-991d-6e2286a6704f"
        },
        "item": {
          "id": "f84f93d8-1893-4533-b982-3d06f717a3cf",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7e48cc6f-9418-40e1-a85d-13f5e6cb7d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77744f96-1b6e-46fd-8f04-550980721bd1",
        "cursor": {
          "ref": "53f6106b-2cd8-4c8b-9f7f-d9573ab68988",
          "length": 152,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "805ac50a-d1d0-426e-bb31-df59900fcb24"
        },
        "item": {
          "id": "77744f96-1b6e-46fd-8f04-550980721bd1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3cffdb9a-f62e-4a65-88cf-ce7d04f3df77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7fc622-ef13-4e23-acd0-fc2c456df85c",
        "cursor": {
          "ref": "6d65f357-7d71-4e3e-a869-7b1dbeeeea73",
          "length": 152,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "dc1a1d5a-5e28-4f84-8859-10e229034179"
        },
        "item": {
          "id": "ca7fc622-ef13-4e23-acd0-fc2c456df85c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c0cbe95e-6d32-474b-9c55-c7211290e5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7724c24-7f74-422e-a4da-1ad81aad38f5",
        "cursor": {
          "ref": "e6a0db7c-8269-4f32-81c9-899710232f2e",
          "length": 152,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "525de73e-c03d-49d3-96c2-fb0a265abb66"
        },
        "item": {
          "id": "c7724c24-7f74-422e-a4da-1ad81aad38f5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c905a2c8-0ebf-43cb-8a60-fb1a156b26ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a2b26b-a404-496b-8b0e-5f593f8166a1",
        "cursor": {
          "ref": "8ab4f5ca-2736-4c87-8f0d-5382b05cf5e4",
          "length": 152,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bdec4a59-cf8c-4d69-b2a3-a5efd7013404"
        },
        "item": {
          "id": "88a2b26b-a404-496b-8b0e-5f593f8166a1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2bf35aca-28e7-4204-b937-126273ae62d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a06abf1-a478-4110-9b27-2148cf0b1310",
        "cursor": {
          "ref": "2fd2e20e-ec4b-43ba-bdc5-8f61cf46efe5",
          "length": 152,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c4c93793-f7c6-470d-8116-b1763e2f73b4"
        },
        "item": {
          "id": "8a06abf1-a478-4110-9b27-2148cf0b1310",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7883a523-907f-4a9d-8f89-07c5d38680ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03d8164-43b2-4b05-afa5-f8bf60937063",
        "cursor": {
          "ref": "5e5eebbf-104d-4742-b28d-a75ebafb2170",
          "length": 152,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d10560cd-853c-474c-aff9-06915ee0874f"
        },
        "item": {
          "id": "d03d8164-43b2-4b05-afa5-f8bf60937063",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "bed40e42-2963-497b-b7f6-24a2e2ced7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4716e087-f497-4190-8649-864576c3a8ed",
        "cursor": {
          "ref": "9fecd951-b172-40fc-b544-a1281c0d8dec",
          "length": 152,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "78ecbd6e-7b4a-4057-8668-53a9ad52ff1b"
        },
        "item": {
          "id": "4716e087-f497-4190-8649-864576c3a8ed",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b5964d73-5c8d-45c4-8594-d899751cfe06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30bb4fd1-202f-4bac-93d7-de1b13d0f9f4",
        "cursor": {
          "ref": "bfbf281c-9eb6-43b4-bba7-e2a52522c347",
          "length": 152,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6fe29f85-e5fa-4684-98ca-de12b862ce02"
        },
        "item": {
          "id": "30bb4fd1-202f-4bac-93d7-de1b13d0f9f4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4f2facc1-5111-4e6a-ac35-afa765ffbf5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5362a3-4ea7-4115-ab7b-9d8501408cc5",
        "cursor": {
          "ref": "3c57e08a-25a8-4f6c-8be8-19cad8ab2679",
          "length": 152,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "dd2f140d-162e-442c-86dd-fedc847d48d1"
        },
        "item": {
          "id": "9e5362a3-4ea7-4115-ab7b-9d8501408cc5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "89d4edff-be0f-49b4-8a3c-cab9d927f029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b28ce8-557a-46b3-b761-a41501de5b69",
        "cursor": {
          "ref": "05772336-b18e-4ac0-bb0d-2b4275df89f1",
          "length": 152,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8c9a9ba6-40e7-4342-817e-ff508764b51a"
        },
        "item": {
          "id": "71b28ce8-557a-46b3-b761-a41501de5b69",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3fdd9cf0-8334-469e-8f99-b515c855bedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 177,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76e36cf-241e-42d5-9910-aaf0f8a910d0",
        "cursor": {
          "ref": "c2ace8db-3b38-4262-a168-5f44429dac85",
          "length": 152,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "65036439-be0f-44c9-bbc7-52585051601e"
        },
        "item": {
          "id": "d76e36cf-241e-42d5-9910-aaf0f8a910d0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6fc9a1bb-b60b-4263-bea6-135b45c02a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a516de0c-340d-447a-a6aa-1d8df17e7319",
        "cursor": {
          "ref": "39be21a2-ef1b-4acb-8a20-e2c4e2d62d6b",
          "length": 152,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ca1a2b5a-125d-483e-9fe6-02d0d07f19e8"
        },
        "item": {
          "id": "a516de0c-340d-447a-a6aa-1d8df17e7319",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ed59e359-522f-486f-8f79-07f7a0d5017c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e61efdf-7558-44cd-8590-e18c11ea4e4e",
        "cursor": {
          "ref": "d5ecec84-930b-4889-896a-d746dbdcf35f",
          "length": 152,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8984154c-4de5-455b-884c-4bc686fb9c61"
        },
        "item": {
          "id": "4e61efdf-7558-44cd-8590-e18c11ea4e4e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "32adbf96-c138-4824-b18f-33363784c084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b8dbfa-43b6-43cc-bf73-e1cb5aff3241",
        "cursor": {
          "ref": "4cad2f46-b72b-4f63-a39b-cccfce74c16a",
          "length": 152,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3f7b3184-0768-4c92-8ff1-4c1f79b23809"
        },
        "item": {
          "id": "d1b8dbfa-43b6-43cc-bf73-e1cb5aff3241",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b353f0ca-5112-41ad-8e56-c19f8cf0b42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddab1032-efb3-4efb-92f3-beca7145dd44",
        "cursor": {
          "ref": "7963e05f-1572-4c10-b969-27ab2aa53121",
          "length": 152,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ecdb7be2-834a-4de7-8df8-bf12010c09bc"
        },
        "item": {
          "id": "ddab1032-efb3-4efb-92f3-beca7145dd44",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0152e47a-de12-4d24-95e6-ff3fc4456844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9030ae09-646a-4b64-8415-f32d2a5ac8e2",
        "cursor": {
          "ref": "382e8b3f-7536-48f0-9706-317dc09306f5",
          "length": 152,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b49ff4f4-cbee-46a2-84f5-2dcae343ac1e"
        },
        "item": {
          "id": "9030ae09-646a-4b64-8415-f32d2a5ac8e2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0911c006-efea-4528-adf5-ba2220707226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 168,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce8e8ea-97a9-4abf-be08-dc1c9c623ed8",
        "cursor": {
          "ref": "073176ac-2ad7-43fc-9744-13a7ba9a6f5e",
          "length": 152,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "09afe8ad-f4bf-48cc-9e66-7dbf4d52508b"
        },
        "item": {
          "id": "3ce8e8ea-97a9-4abf-be08-dc1c9c623ed8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4ea820bf-2b86-4aa4-b9d1-f287fca5004f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4f3743-0db0-4466-a793-9b1e46bd5f6f",
        "cursor": {
          "ref": "8476ccab-7232-4afd-bb38-47b37f673124",
          "length": 152,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "78814c6c-d7ba-4d8b-8083-6500ca04a7f6"
        },
        "item": {
          "id": "fe4f3743-0db0-4466-a793-9b1e46bd5f6f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f5c9c166-50e9-46b2-a5ff-cc86e72925c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bb4b5a-9775-4867-bb96-a2553b78d256",
        "cursor": {
          "ref": "fcad55df-c3af-4f86-8367-91668f388923",
          "length": 152,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3b339792-7baf-4a2a-b5ca-ae9db3c22225"
        },
        "item": {
          "id": "17bb4b5a-9775-4867-bb96-a2553b78d256",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "cb0d7a6b-5b3b-4471-a4ee-3ad2e73ae0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c0f95d-a494-4f83-af89-3882abfdf09c",
        "cursor": {
          "ref": "ba5342bd-6b9b-4708-93bd-e1dd12c46f29",
          "length": 152,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0ebeba0b-b376-4a63-899a-815cd1af904a"
        },
        "item": {
          "id": "00c0f95d-a494-4f83-af89-3882abfdf09c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8bd1dc55-bd27-414f-9662-fb8dd77566e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e009e611-7ae7-4ffa-83d2-3fff36cfab96",
        "cursor": {
          "ref": "c8db38b6-81d5-479d-a2fd-c6e678a24c40",
          "length": 152,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4bdb92c3-078f-4af8-8221-adb760a7cf77"
        },
        "item": {
          "id": "e009e611-7ae7-4ffa-83d2-3fff36cfab96",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d3756a83-1483-4f75-b95e-e9a073248ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a451362-2465-41f5-89ba-a733b47a74f7",
        "cursor": {
          "ref": "ce65a8f9-5e7a-4141-a5d2-f4648476a636",
          "length": 152,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "340e491c-36ce-4783-8a56-bfc115a85973"
        },
        "item": {
          "id": "6a451362-2465-41f5-89ba-a733b47a74f7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2cc993a1-4344-4ea2-964b-781397e0d8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3148db-9792-4a57-b6a7-d48c789c17ab",
        "cursor": {
          "ref": "40980990-163f-4cda-85dd-1a69ba80b831",
          "length": 152,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cc3ddcbf-cb1e-475a-b588-940101215809"
        },
        "item": {
          "id": "fd3148db-9792-4a57-b6a7-d48c789c17ab",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8dbe45c5-8024-4e05-ae9d-9e97ebc4a6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1158cb09-ff9b-47b6-94f0-25fe2e989d8c",
        "cursor": {
          "ref": "b1f413cd-0568-47f9-adaf-a3239af38f2d",
          "length": 152,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e3d6d3e3-60aa-42f9-a946-b76e59f34885"
        },
        "item": {
          "id": "1158cb09-ff9b-47b6-94f0-25fe2e989d8c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8637d7db-9d5b-4859-bb7c-3efa0828d990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 169,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1c8afd-9d86-489e-890f-39055c014563",
        "cursor": {
          "ref": "60e14a01-f675-4f0c-9967-9e18f59c0a2d",
          "length": 152,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "75c27ecf-5e33-459b-b791-d5ad639eb619"
        },
        "item": {
          "id": "4b1c8afd-9d86-489e-890f-39055c014563",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3c08e033-edb5-4484-b032-7b58fbc2a817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 181,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336c1419-75a9-4410-9a8a-834dfea9e030",
        "cursor": {
          "ref": "c6a10e04-9296-4a5f-ac75-48ee42a50c91",
          "length": 152,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0d3c125d-f8dd-48a4-a957-10fe4da7dfb3"
        },
        "item": {
          "id": "336c1419-75a9-4410-9a8a-834dfea9e030",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "91416912-d0df-4e78-984f-d287fc959bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fdf36e5-a9fe-4327-adb7-1e72e2642404",
        "cursor": {
          "ref": "5e82b20e-0e90-4bf5-a906-db0dc6119fac",
          "length": 152,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "eca3415f-d2a5-43df-af30-fc0ceb55520a"
        },
        "item": {
          "id": "4fdf36e5-a9fe-4327-adb7-1e72e2642404",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "13d684b4-e731-4480-9688-6d03c3f6e033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 185,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4878a738-57b3-4ff0-86de-98a2a7a9306b",
        "cursor": {
          "ref": "b508e09d-48ca-4d48-b59b-35b32ca558a5",
          "length": 152,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7d31dcef-ff29-4a51-aee7-0231d1846908"
        },
        "item": {
          "id": "4878a738-57b3-4ff0-86de-98a2a7a9306b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "945e38fe-709d-4457-9469-c0ed545b16f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5dadf9-0fc6-4707-97aa-b36a4af38763",
        "cursor": {
          "ref": "f1aeb038-2329-40a6-ac4f-33e3720aeaca",
          "length": 152,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "28640f57-96ec-49d1-8794-885117729b5a"
        },
        "item": {
          "id": "ae5dadf9-0fc6-4707-97aa-b36a4af38763",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cfae8d1f-92dd-4652-981a-f26b0893df63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652738cf-1798-42ff-b36c-947af2332159",
        "cursor": {
          "ref": "93f235c7-c3b0-4104-bdf0-8cf6b69b2447",
          "length": 152,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "87dd1243-29d4-4d6e-b3dd-f39898afc753"
        },
        "item": {
          "id": "652738cf-1798-42ff-b36c-947af2332159",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a0d29782-6e01-4cd0-977d-74a194215cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9da8477-db59-4d5a-8911-416ee631ab6b",
        "cursor": {
          "ref": "3c668d40-ea10-4def-9518-0576e750d2b5",
          "length": 152,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8e4c1ef0-08fe-494f-bb8e-c343251b9d52"
        },
        "item": {
          "id": "d9da8477-db59-4d5a-8911-416ee631ab6b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f9033a58-a7d4-4526-bd9c-d70e22a18cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 181,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60099c7a-139e-4738-9d6f-78b843342cf3",
        "cursor": {
          "ref": "9a321c52-fe65-4440-9119-68c6990639b7",
          "length": 152,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a9993909-ba11-4683-a431-f48d6707717a"
        },
        "item": {
          "id": "60099c7a-139e-4738-9d6f-78b843342cf3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "62de6ba7-88d9-4888-8614-5a5e2e7b9f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbc176b-d1ed-4c84-ae29-581d4c97edbd",
        "cursor": {
          "ref": "04862f57-6496-4293-8538-f461e33fb644",
          "length": 152,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "69e04649-d716-4981-8281-dd2b0d75e558"
        },
        "item": {
          "id": "ffbc176b-d1ed-4c84-ae29-581d4c97edbd",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "78cabf54-5a64-44c7-9e45-5c52e8682153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc194c4-9ba3-44f0-a30b-40aa809126a7",
        "cursor": {
          "ref": "adac07c7-3f49-4f92-8a91-7c631179b266",
          "length": 152,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b6d726b0-aaa9-4fb7-ae02-e6ea6ea55111"
        },
        "item": {
          "id": "4bc194c4-9ba3-44f0-a30b-40aa809126a7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "424a9e00-55e9-47a1-9d7b-014381ffeb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 177,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfd7538-aa80-4e40-a74f-4bd9d70147e8",
        "cursor": {
          "ref": "83a48f5f-d8ee-4793-b708-dbad65f546a0",
          "length": 152,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f747f655-8856-45b0-b468-bb9f15053c38"
        },
        "item": {
          "id": "ebfd7538-aa80-4e40-a74f-4bd9d70147e8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ffe1f134-a3ce-4a5b-916c-1cbafd4c0323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4dd4868-8e28-4d4e-9aad-db2b51004376",
        "cursor": {
          "ref": "afc32781-b570-40e3-87a5-f35600e1aff2",
          "length": 152,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a3930abc-ec14-4a31-8af1-83f4355c1e41"
        },
        "item": {
          "id": "b4dd4868-8e28-4d4e-9aad-db2b51004376",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "084097d9-90ee-4fcc-aee4-167259cf712b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d6aacd-30ee-4076-a179-522030cbc4e9",
        "cursor": {
          "ref": "8d0bccdc-f68b-4c37-878a-b2f7a714093e",
          "length": 152,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "43a713e7-3b19-4236-820a-2a9c8a0c3aab"
        },
        "item": {
          "id": "d6d6aacd-30ee-4076-a179-522030cbc4e9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d76f466b-a33d-4a6b-9a5a-2ad48f9ff1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b912ab92-40bf-4bc1-a0b3-a99e36ee05d5",
        "cursor": {
          "ref": "9b352f5a-504c-4809-85ef-b8d1ffc7e1d0",
          "length": 152,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c5ecfb4a-82a8-42c5-86a2-4fafce111ccb"
        },
        "item": {
          "id": "b912ab92-40bf-4bc1-a0b3-a99e36ee05d5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f936c640-873e-426d-9715-222c644b29ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a311ea6d-9e75-4312-9fc0-6918f1808d3b",
        "cursor": {
          "ref": "27ce1918-7706-4eef-bbc3-80e9209d1fb8",
          "length": 152,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bbaac662-d039-41dc-ba3e-8eee3cd501c5"
        },
        "item": {
          "id": "a311ea6d-9e75-4312-9fc0-6918f1808d3b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "73f08907-b8f8-4771-95cd-e161aef4d0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816d6378-a566-4136-967a-ecc8981224b2",
        "cursor": {
          "ref": "ca6f60f4-fc73-4a3e-a4d2-1a28f6df34d3",
          "length": 152,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a3e33ffa-b096-45e8-905f-2604b3d66026"
        },
        "item": {
          "id": "816d6378-a566-4136-967a-ecc8981224b2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c39f1c96-9df4-485b-9413-5fd53c1d8810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 170,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50a53ca-cb71-4c29-9729-08c13b10f683",
        "cursor": {
          "ref": "f93aa984-a480-423d-aecf-3074525d3d16",
          "length": 152,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d43e269c-5750-4c83-8d2b-3cd3cff00819"
        },
        "item": {
          "id": "a50a53ca-cb71-4c29-9729-08c13b10f683",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "50356803-c6c5-474c-9fcb-8421e510fcec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 169,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68a6e0a-d399-4970-bf37-b71d3425180a",
        "cursor": {
          "ref": "cf89dab5-cf43-4b92-b4bb-e6c07481870d",
          "length": 152,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "93d23eba-e5d3-4dc9-9bd1-fb87310aa8b8"
        },
        "item": {
          "id": "f68a6e0a-d399-4970-bf37-b71d3425180a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "05c48a6d-e326-4e2a-8c49-bebf8eac3975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d65031c-2573-49e6-9449-3ab051649785",
        "cursor": {
          "ref": "c2dc1d73-d0f8-4999-9894-acb6c2814eb5",
          "length": 152,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b6db7f33-8e87-4369-be55-39078782cdd2"
        },
        "item": {
          "id": "5d65031c-2573-49e6-9449-3ab051649785",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "faec8482-4d05-4aca-8bd7-ef52360d61f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faaec3d5-7b5e-4154-af8b-5a6ede919624",
        "cursor": {
          "ref": "1c6c3fd9-4597-4048-b209-b552c272b3a7",
          "length": 152,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "307567c2-94bf-441d-920a-7a3239653b9a"
        },
        "item": {
          "id": "faaec3d5-7b5e-4154-af8b-5a6ede919624",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e84921d8-ffc4-47f5-a6dd-a9cf1468751a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf9fced-f5a1-4ed7-b183-076298727b1a",
        "cursor": {
          "ref": "60f8c31e-cde2-4586-99b7-514530cd52a7",
          "length": 152,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d525cda6-f513-473c-8914-6825aff7fe14"
        },
        "item": {
          "id": "5cf9fced-f5a1-4ed7-b183-076298727b1a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0b992813-85ae-424e-b4d9-74dda05c5ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bea453-e067-4121-b648-bf69c2fff2a8",
        "cursor": {
          "ref": "e43c5ac9-3d03-4240-8d06-986ea388129b",
          "length": 152,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fe19a476-3f35-43b5-a637-8178c88f6f1d"
        },
        "item": {
          "id": "27bea453-e067-4121-b648-bf69c2fff2a8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "653be430-87b8-41b7-abc7-00ca4593e0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b0ff76-2d23-47f0-a08f-2691c39d415d",
        "cursor": {
          "ref": "fe195f10-f08b-4db5-8bc6-7f06984c3e4e",
          "length": 152,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "603e35c6-4a20-496b-83fb-aa5015d21731"
        },
        "item": {
          "id": "c7b0ff76-2d23-47f0-a08f-2691c39d415d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5d2d12bd-56dd-4dea-8da6-0935ee3b251b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9643e5f2-cf99-4130-b583-7c6947d9e4ee",
        "cursor": {
          "ref": "414ca96d-f0ab-4ba3-bfe1-7a407ff9eda8",
          "length": 152,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b942931f-830c-4d1a-ac50-c01da5c54f57"
        },
        "item": {
          "id": "9643e5f2-cf99-4130-b583-7c6947d9e4ee",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fb90ac69-53b0-4a31-9d93-ea0ec05095e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19c44c0-7827-4d03-be2a-5e9ceee60f6e",
        "cursor": {
          "ref": "740231b7-90fb-4992-a4a3-ea15d2c4894a",
          "length": 152,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "342e2e28-0ad8-44f3-8bde-3feeacb55e6e"
        },
        "item": {
          "id": "d19c44c0-7827-4d03-be2a-5e9ceee60f6e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "582457e6-9ecd-4b4d-ac87-f6e1bda0b2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3412ba7-8397-42e0-a9c6-878dd62b4650",
        "cursor": {
          "ref": "feaf0564-6571-49da-a3fd-363d9a5bb4da",
          "length": 152,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9dd1b26f-e528-455d-875f-4a9c87fd4080"
        },
        "item": {
          "id": "d3412ba7-8397-42e0-a9c6-878dd62b4650",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c3a6ee9c-12c8-46bf-b209-f6b426cc0d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9db6b2-8792-4fbf-b70f-9b2053c56ee0",
        "cursor": {
          "ref": "bc556c03-88aa-4030-9ad0-95fb39e33814",
          "length": 152,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "baaafe6f-e477-469d-8cd6-b53e7a930d27"
        },
        "item": {
          "id": "6c9db6b2-8792-4fbf-b70f-9b2053c56ee0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c96ac6c1-e887-496d-912f-a203b808a590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 181,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ca2172-7719-467c-b937-8848d571e08a",
        "cursor": {
          "ref": "c759af20-321a-4985-a6f8-df074025d1a1",
          "length": 152,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0e61bfb8-3b3a-425a-890e-25431436060b"
        },
        "item": {
          "id": "08ca2172-7719-467c-b937-8848d571e08a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "711091e8-6285-4214-8909-dc18bd11d080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a578e0-3f52-45fd-a984-3aabbca390e1",
        "cursor": {
          "ref": "52ccf25f-30af-4313-9316-e80ab53d1ff9",
          "length": 152,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ae134b20-d5af-4a5d-b40d-a2792208dc06"
        },
        "item": {
          "id": "a7a578e0-3f52-45fd-a984-3aabbca390e1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "543eba5f-902a-4593-ae34-31e40867ca75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb89309-486f-47cb-ace3-f8405c140356",
        "cursor": {
          "ref": "289ddcb0-1c85-4f6b-9824-d654ee760b8c",
          "length": 152,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f2b268ed-0ec2-4ca8-86a0-a4cf0bd90da3"
        },
        "item": {
          "id": "6fb89309-486f-47cb-ace3-f8405c140356",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0211a24f-8e0f-4226-985e-aaa7b99ecbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38852468-4abb-4d2b-a39d-2ebc432af61c",
        "cursor": {
          "ref": "1f4cd270-eff7-46ef-b4a7-aded16c70c94",
          "length": 152,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0c39d0f2-ee0f-4fe1-a44a-2518b7a193a5"
        },
        "item": {
          "id": "38852468-4abb-4d2b-a39d-2ebc432af61c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2f80d9d8-8698-4cfa-b0f9-c79bae4fed21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f68a21-1794-49bb-8f7d-202b5509e654",
        "cursor": {
          "ref": "45638fa6-4289-4ee6-9da9-0f66ffe05568",
          "length": 152,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dd5d2a4d-b04c-4c30-9fc5-caf13f79e13e"
        },
        "item": {
          "id": "c7f68a21-1794-49bb-8f7d-202b5509e654",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f5bc826a-51c9-44ec-a423-505738ff2d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71f606c-30a5-4111-b0b9-7f4aa5ae2b59",
        "cursor": {
          "ref": "bfd63a2a-d6b7-40fb-8bbf-8c2adb6eed9e",
          "length": 152,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a54b365b-de0b-4429-816d-82ef81b35ad2"
        },
        "item": {
          "id": "d71f606c-30a5-4111-b0b9-7f4aa5ae2b59",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4a493c39-87fb-4dfb-b4b4-fdbb774650ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48323cc-f3de-45cf-8c92-9781e6f20378",
        "cursor": {
          "ref": "600793db-62f0-4d97-9f2c-641421cce73b",
          "length": 152,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "85ae4012-971a-488f-98d7-f9a8deea9123"
        },
        "item": {
          "id": "f48323cc-f3de-45cf-8c92-9781e6f20378",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "106b72c3-36a9-4bb9-a745-ccb684b38793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e8c483-512c-49d2-9b09-b3cf56375a80",
        "cursor": {
          "ref": "2cf89ae9-c334-4194-ab7b-e854e1b3f74d",
          "length": 152,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a52a87ae-322a-4a62-b9cf-40250744fab2"
        },
        "item": {
          "id": "a1e8c483-512c-49d2-9b09-b3cf56375a80",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "de06cfb5-1359-4334-bd14-f43454f37a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd13075d-def3-447b-8e3b-268dfc9b3464",
        "cursor": {
          "ref": "c2ef93ca-1600-47ff-b51f-0baff9d5dfe4",
          "length": 152,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8901452c-b1a9-4683-b189-2477ea166c96"
        },
        "item": {
          "id": "dd13075d-def3-447b-8e3b-268dfc9b3464",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c7c38c83-f571-4d1d-9587-c66f46a18a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f060dde1-a288-4f77-b131-c51f214fda1e",
        "cursor": {
          "ref": "d7dfa7b8-82ae-4668-a85a-764020bcfd9f",
          "length": 152,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e94b46e1-8fce-4619-b1d4-7cc7f9dc8512"
        },
        "item": {
          "id": "f060dde1-a288-4f77-b131-c51f214fda1e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d54ae6d4-58e4-40c4-ba61-7b12c25b2f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050f60ca-55dd-4fb1-994c-5bdeb0f6ea21",
        "cursor": {
          "ref": "7b602c52-04c2-4ac1-b95e-0c1c59930a9a",
          "length": 152,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fcf1ff86-411c-4130-ac91-536e3fc34757"
        },
        "item": {
          "id": "050f60ca-55dd-4fb1-994c-5bdeb0f6ea21",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1cea260e-6de1-4a72-8cd6-3239a35cbd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6b0ab3-0b49-405c-a7b7-6c4cc29b4706",
        "cursor": {
          "ref": "eb7cfb63-aaf8-4fcc-957d-074e32d6353e",
          "length": 152,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f2c9f30a-c112-4fc9-b205-4176f48c0b4c"
        },
        "item": {
          "id": "fb6b0ab3-0b49-405c-a7b7-6c4cc29b4706",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c7fef7d3-370c-47ab-bbc6-3a2f641e6ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027bbaa3-3be0-4060-b1c8-e757df66cf39",
        "cursor": {
          "ref": "a548894f-01bb-4e15-a9bc-bee7dcd7315f",
          "length": 152,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "cb29dc43-e360-47e6-87df-00a636a4b604"
        },
        "item": {
          "id": "027bbaa3-3be0-4060-b1c8-e757df66cf39",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "aff18b35-d561-4e34-96f4-a21607b1e39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c57ec6-01ab-4154-812a-dd058e553b28",
        "cursor": {
          "ref": "e9af8a47-cef3-45ab-b8c9-c6d894b335b6",
          "length": 152,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "70dcc8ad-b75c-4a78-9deb-96f87c2edbff"
        },
        "item": {
          "id": "69c57ec6-01ab-4154-812a-dd058e553b28",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "34fa8778-6ada-4479-94a0-67d6d83d1f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e5b96d-c10e-4d67-b72c-cbd8308a664b",
        "cursor": {
          "ref": "cce8c6a8-327d-419c-927a-86ebf8026432",
          "length": 152,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7caa9f72-e3cc-440a-929c-b4421d39b267"
        },
        "item": {
          "id": "c4e5b96d-c10e-4d67-b72c-cbd8308a664b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "32bd076f-f88b-4505-ac8c-90c0427ef1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1833f8f-824a-4cf5-b2a7-e9d597e15c93",
        "cursor": {
          "ref": "351470de-c093-4fe4-8c59-e3af3c637d27",
          "length": 152,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5b8cf335-32be-4437-af8c-992f856ced34"
        },
        "item": {
          "id": "b1833f8f-824a-4cf5-b2a7-e9d597e15c93",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fd268dd4-9051-4e5a-afe1-6c058e08c940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f05bc5-69b6-40ca-9423-857694983852",
        "cursor": {
          "ref": "8d8b8d80-b2cc-43aa-ad10-3eed7d7b569a",
          "length": 152,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2028b736-03cf-468b-a2d3-fac097de4d0b"
        },
        "item": {
          "id": "b5f05bc5-69b6-40ca-9423-857694983852",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d4453ad6-82c8-417a-aafa-e97871cccffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf2c742-5f8b-4e4f-862a-310214397be3",
        "cursor": {
          "ref": "bc75b656-9da2-49ed-b752-bfb65401bc1c",
          "length": 152,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "86355ee7-ea66-45c3-985b-5dedc43281c8"
        },
        "item": {
          "id": "2bf2c742-5f8b-4e4f-862a-310214397be3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cd0b9ff3-c48a-479d-ac99-6bddfb208715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea4b60e-2063-4db0-87ae-5c1539855580",
        "cursor": {
          "ref": "7c505838-3b3a-4e57-b91a-f578a9ef6142",
          "length": 152,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0961c61a-d57d-4c52-9ee8-64290948b2f5"
        },
        "item": {
          "id": "9ea4b60e-2063-4db0-87ae-5c1539855580",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "caee421e-c801-438f-80b1-aee120fe7848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a108ba6-0b26-4bf8-8c7a-afaf16a89d03",
        "cursor": {
          "ref": "7a20785c-c4aa-4100-b61b-f8bc00b24f09",
          "length": 152,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "42f28cb5-f86d-427f-ad12-e1f873d12fbd"
        },
        "item": {
          "id": "9a108ba6-0b26-4bf8-8c7a-afaf16a89d03",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6a6a1351-2638-474a-b52b-b1ed9b0238fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852995be-936d-4552-971a-e5455deb0d86",
        "cursor": {
          "ref": "4a1d4885-a98e-4414-8e96-7445da996c55",
          "length": 152,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d299ff94-8ab5-4222-bdc9-6d15c7f544c4"
        },
        "item": {
          "id": "852995be-936d-4552-971a-e5455deb0d86",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ca1b6087-11ef-4a73-b5d8-09721dfa1f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617a9455-f531-4953-8073-d6444e093aee",
        "cursor": {
          "ref": "d89431d5-2bb5-4305-9e8c-0567b73a2fc6",
          "length": 152,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "73987289-a751-417b-89f8-e37d8da51e6f"
        },
        "item": {
          "id": "617a9455-f531-4953-8073-d6444e093aee",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "93d471ec-7b10-4b79-8477-e179aebe919b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27601096-08d4-4e94-bc60-59e4465de502",
        "cursor": {
          "ref": "5aebc144-8003-4658-bfe2-3982d8c3b4e0",
          "length": 152,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9456f301-2977-4686-a7bb-383c7156939e"
        },
        "item": {
          "id": "27601096-08d4-4e94-bc60-59e4465de502",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4560b0a0-ee62-4f70-99ec-7e31925a1815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0448dc51-db6b-4ceb-a930-c38b42823864",
        "cursor": {
          "ref": "ddfc7825-4436-4270-83be-fb0b56dcda90",
          "length": 152,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b5ab9c5a-ea2e-413f-bfaf-e251a7a82254"
        },
        "item": {
          "id": "0448dc51-db6b-4ceb-a930-c38b42823864",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e9e9fe55-272e-4313-b310-cb771d3af8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749d200d-fdd4-4bbf-aeff-47606d91186d",
        "cursor": {
          "ref": "ffdf323e-61ef-4dd8-bd87-e59fb16c6bc5",
          "length": 152,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6918556a-c77d-4658-b80b-8651141d1285"
        },
        "item": {
          "id": "749d200d-fdd4-4bbf-aeff-47606d91186d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "efa59606-6508-4b87-a2e5-9ff6b922c5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15675dd6-9e67-4674-92be-a36540c85db0",
        "cursor": {
          "ref": "e4777ed3-88ee-4ba5-b9ec-3d7a851de941",
          "length": 152,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "26f74763-e07c-4477-bf6b-eefc62640331"
        },
        "item": {
          "id": "15675dd6-9e67-4674-92be-a36540c85db0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c7a06c3b-55a8-4ee9-b3b9-b7a2e861e733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0999c834-a0de-4e6e-9e40-1e8a123e000c",
        "cursor": {
          "ref": "94106bdc-7195-4d09-acd6-2fae38935a9b",
          "length": 152,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "53ab1765-b8f0-43a5-91ee-a48c0939fd9b"
        },
        "item": {
          "id": "0999c834-a0de-4e6e-9e40-1e8a123e000c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d4139d52-527d-42d6-b6b1-a3da92decc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb14d7a-0193-425f-ae8f-02203806d169",
        "cursor": {
          "ref": "1aa53edc-1a16-4fa9-a2be-34a7482b348f",
          "length": 152,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f05a85e8-c41c-4915-9264-accf7c2a232b"
        },
        "item": {
          "id": "3bb14d7a-0193-425f-ae8f-02203806d169",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5b0e966a-c5b3-4dee-ab40-13e6a989e001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cfd60b-6d39-424a-a6a2-3de50111db19",
        "cursor": {
          "ref": "ca6912d3-9679-48f9-9c21-7d85a0a9d2fc",
          "length": 152,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d02665ae-9a06-400d-8ca4-74ec6e1fcc6e"
        },
        "item": {
          "id": "88cfd60b-6d39-424a-a6a2-3de50111db19",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "10e73e20-e8e6-4678-b60f-9490fbadfb69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5a61a6-86e7-45ec-bf4a-e9b79d79e15a",
        "cursor": {
          "ref": "92b97946-d5a6-4c69-a12f-a542570b1376",
          "length": 152,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7f241c13-52ad-43d6-b412-728395cec517"
        },
        "item": {
          "id": "2a5a61a6-86e7-45ec-bf4a-e9b79d79e15a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c8370594-8a34-4138-bc90-001876d2a574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bb0672-53eb-48a3-b490-380aa43ecc97",
        "cursor": {
          "ref": "978db8a5-ab2f-470d-8bfe-d40f8b5c16cc",
          "length": 152,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "dd1c7044-5bf8-4c09-a822-814311be2d17"
        },
        "item": {
          "id": "05bb0672-53eb-48a3-b490-380aa43ecc97",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "343b58e6-c330-4647-afc8-6c2f427c6723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7a83a0-ed80-4815-9b79-e23160578d11",
        "cursor": {
          "ref": "29ab80e2-e0c6-4cab-9681-690a05a25134",
          "length": 152,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fbd1b524-0891-4c5c-ac68-f2222b24d30d"
        },
        "item": {
          "id": "0e7a83a0-ed80-4815-9b79-e23160578d11",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "236dfd8f-5a24-4b6a-95f6-10a2c7ed2a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025d2601-75cd-48e1-9b65-2aac3e97061f",
        "cursor": {
          "ref": "0452d8e1-9bf5-46f0-b296-576e2516859d",
          "length": 152,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3a15cf6c-ff94-4f99-822a-52bb1ceb0847"
        },
        "item": {
          "id": "025d2601-75cd-48e1-9b65-2aac3e97061f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f1181439-21d1-4e3d-884d-009fcbca8fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314dfa18-f178-42f0-a903-6bf745242c66",
        "cursor": {
          "ref": "0b1d0b7e-1fec-41f4-9798-4482cbe5caf4",
          "length": 152,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7aa69515-9da5-4030-81dd-855f8d3a034d"
        },
        "item": {
          "id": "314dfa18-f178-42f0-a903-6bf745242c66",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8a64f90c-53f3-4d4b-a9be-37a12ca2774a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb29aa3-c360-4a59-929e-eb533302593c",
        "cursor": {
          "ref": "77357d1c-a39c-4912-b0ee-f3130b998f78",
          "length": 152,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a849d632-ecc0-4aba-b4c7-ba7d7371571e"
        },
        "item": {
          "id": "fbb29aa3-c360-4a59-929e-eb533302593c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0e4e099b-5f9e-4989-9ca6-132535aceff8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd884f5-2df4-4078-a732-a82d6f41f864",
        "cursor": {
          "ref": "5b60adf5-aa7c-4f26-ad8e-0509cab61792",
          "length": 152,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2d449a14-a102-41ac-99c5-7c1c0825850c"
        },
        "item": {
          "id": "2dd884f5-2df4-4078-a732-a82d6f41f864",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "b41afa27-884d-472f-99c5-c2756213811e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 12,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99eb535-5c42-48d5-9e26-64e5c32c09c9",
        "cursor": {
          "ref": "6586e010-24dd-4d2c-b6bf-0bd66a8575ba",
          "length": 152,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ac877a9a-b9c2-41c8-84f0-46d596779ca3"
        },
        "item": {
          "id": "b99eb535-5c42-48d5-9e26-64e5c32c09c9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "41edfa4e-2b2c-4c39-bf73-ef7bdb601120",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99eb535-5c42-48d5-9e26-64e5c32c09c9",
        "cursor": {
          "ref": "6586e010-24dd-4d2c-b6bf-0bd66a8575ba",
          "length": 152,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ac877a9a-b9c2-41c8-84f0-46d596779ca3"
        },
        "item": {
          "id": "b99eb535-5c42-48d5-9e26-64e5c32c09c9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "41edfa4e-2b2c-4c39-bf73-ef7bdb601120",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435f4f18-2725-4e43-92b4-cf8960cd560c",
        "cursor": {
          "ref": "8e5a6ce0-066e-4eee-91d2-a00e26b1ebe3",
          "length": 152,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cd41ab31-7c1b-4ce5-af9b-8a13ccc7250f"
        },
        "item": {
          "id": "435f4f18-2725-4e43-92b4-cf8960cd560c",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "c20225c0-fac0-448a-9a8e-ef67dc0ad807",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 13,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730d266f-6a10-4133-a843-08bc6f242cc6",
        "cursor": {
          "ref": "37fc1212-5104-447e-a4d9-0b7d8c9c74af",
          "length": 152,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "328861bb-acca-4da0-85e6-7757baee3172"
        },
        "item": {
          "id": "730d266f-6a10-4133-a843-08bc6f242cc6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "606199e6-f2f2-4dba-843b-4335d16b5005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:149)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:149)"
            }
          }
        ]
      },
      {
        "id": "730d266f-6a10-4133-a843-08bc6f242cc6",
        "cursor": {
          "ref": "37fc1212-5104-447e-a4d9-0b7d8c9c74af",
          "length": 152,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "328861bb-acca-4da0-85e6-7757baee3172"
        },
        "item": {
          "id": "730d266f-6a10-4133-a843-08bc6f242cc6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "606199e6-f2f2-4dba-843b-4335d16b5005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:149)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:149)"
            }
          }
        ]
      },
      {
        "id": "b90bfacc-ff1b-4b6c-9d33-e72fe544abe6",
        "cursor": {
          "ref": "2729578f-9034-4322-adce-9d23812ff90f",
          "length": 152,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7f671cfd-0bb4-41e6-8e6f-2fd2be19ba22"
        },
        "item": {
          "id": "b90bfacc-ff1b-4b6c-9d33-e72fe544abe6",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "ae4b18d9-70c5-4500-a9ff-5f926376f70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:150)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:150)"
            }
          }
        ]
      },
      {
        "id": "7eaa4f94-e456-47de-ae05-1c818cc944d2",
        "cursor": {
          "ref": "91a21f4c-512a-407a-96cc-3265bfe46e78",
          "length": 152,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3f9e045e-e838-46a8-adb8-64d258b343e5"
        },
        "item": {
          "id": "7eaa4f94-e456-47de-ae05-1c818cc944d2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cfbef410-d141-4f78-9dbe-42da3afb346b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eaa4f94-e456-47de-ae05-1c818cc944d2",
        "cursor": {
          "ref": "91a21f4c-512a-407a-96cc-3265bfe46e78",
          "length": 152,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3f9e045e-e838-46a8-adb8-64d258b343e5"
        },
        "item": {
          "id": "7eaa4f94-e456-47de-ae05-1c818cc944d2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cfbef410-d141-4f78-9dbe-42da3afb346b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b85f9d-78b6-4960-9b85-a68ac0fa80c8",
        "cursor": {
          "ref": "8c2599e9-e5fb-4b57-a1d1-f728d616d9a9",
          "length": 152,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "36b2d7de-e70e-4f3a-bc73-91798e8778e9"
        },
        "item": {
          "id": "23b85f9d-78b6-4960-9b85-a68ac0fa80c8",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "c7ec1b5c-43c2-4363-b327-286b9c84c1f4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 11,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}