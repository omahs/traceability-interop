{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "80ff581b-da9d-4637-9d56-6b6646567c18",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5199739e-0a45-4575-96e4-f161b13917b3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d8b6275-676e-4461-a536-1f453bd5fd47",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e5691fd7-5e6c-4f0d-bf1e-71e25eca7205"
                }
              }
            ]
          },
          {
            "id": "2638c10a-36c5-4855-af5d-0904c400b616",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ff56a57a-6bbb-4ed9-be8b-02bbe64e8b20",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "12604860-67e5-434a-936c-705cfdf55854"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b8c75fe0-a1f9-455d-9a38-86db6cb0b4b5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "40dcc0af-2e6c-4246-9f7d-4b09df539703",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9d037f5c-62ef-4a40-9fa9-b52bedccb54d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68914e86-257b-4103-a4f8-38126f9dc016",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e50c040-5d58-4771-854f-1d6fa2a2441e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6d09e0e0-852f-4bef-8240-023d246a8d9a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "484537fc-6238-47b6-97ad-c244117f57e2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7c919379-9b7f-4e8c-860d-d7a67c7adc66",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4bc23d3b-b494-45db-a57b-80685feca7bb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58a7199a-f88e-4895-b1e9-56cdefe1d217",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5151e18e-5ceb-47a1-bd5b-8b7594c0d9b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0901bb32-bc0e-4c4a-91f8-36158f58a349",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a4f9841e-30f0-45ea-a85f-221075afc1dc"
            }
          }
        ]
      },
      {
        "id": "080e4842-579b-4aff-bff4-24bd763ee5e9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "aa5e6d2d-6075-428e-a0f7-60de30523899",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db57d719-6c15-4057-a11a-72740cfdb523",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "388e436e-4a90-4bb0-aa44-38b6e7107467",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7f622a-846f-44c0-bd45-904228958e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f84b92b7-e672-4a4f-a4fa-22dd418e23b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0aa574-45fd-4200-aa64-285ec278f3ad",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e128e7b5-eacb-4f98-b482-0eac1966e5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ebd644d-d4be-403d-8422-3270c252d4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f049ee5a-d866-405f-8c3e-fdaa353138f4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f12021a-4b3b-49ac-8172-cc751eefcd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a55b4533-a7e7-42eb-a467-d55e20643b3d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a7c7c96e-9520-4d2c-9ec6-838f7f33988b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a786480a-4b31-416e-846c-dfa810930ef5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "391fdb65-ee2e-4d29-ba78-ac71079909bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0bc386e-79db-4db5-a0c9-142a0a46cda1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ae8a99-5797-49a2-bc9f-fd8e44492690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad29555f-85b7-446c-8960-e631406ffb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0558442-6f0a-4694-93ed-bef1d3d3a64a",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f1d034-8295-4144-bc91-8f2404706084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12802f74-a407-4f6f-81f9-f5f1aa6d3c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cc2758-1c9d-448b-8c2d-e745cb251a65",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "166b0a40-7f9f-4c2c-8fec-3354a52f70b5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2c645c07-771b-42f0-9977-24a49e99a85d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7b61325a-1d29-451e-a002-e58eaa568c77",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a30b094c-e7ef-4105-9bd9-c1df88a100ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "438e1f38-b884-4603-8ca2-7c3d6aeb6ce3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a14b6f3-a515-4f77-8817-deca288b09b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "1644d2b5-2e85-4071-ab0c-aeac36b8ee52"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7fa57d5-b8e5-4d7d-ab8f-db19af3f0bf3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c414ed8b-7d7f-41b9-b64c-82e0b74b5545"
            }
          }
        ]
      },
      {
        "id": "38eabf15-9e0d-42dd-b6db-ba8dbc537b46",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b7f54b9e-bb65-41d2-a6d9-c8d3877ad2e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2df539ca-3c26-45c6-9c96-9616391b1ef8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "63e7d14c-8b1d-483a-af9a-4659a4054d01",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e331920-fab3-4d43-90ed-6a22523367b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac48b92-58e1-4ed2-84a3-098986887887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3bd52c-d38b-413f-bc30-40c88d3ec2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d26a8dd1-8495-43c5-983c-e4472d56cc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e410d3-e458-4293-a0d0-54f5b57945dc",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e26727c-6634-4512-9203-cbcffefd6e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667851f9-5c4b-4a47-9e27-e73fd9d9801e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955ffdd4-496d-41a4-ba28-78a3014af840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c36c05e6-e7e5-430c-9bb5-860fdd6a1473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3099b50b-cf24-414f-82a7-071b1b3e28df",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5998335e-b148-42dd-9967-575cfe1b6216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be5e2f8-f6e4-48c8-a816-89050cbb8b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978d8611-c358-43fc-ac0b-7173d5261b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c0e4321-2008-48be-8a52-e75ef90f53ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1541be-9002-4299-8d4e-3750af9947a6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ea05dd-46b3-41a0-95f7-b041cde2be0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36439e0a-0a66-486a-bba7-01fc74d9638c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e40e8ae-5918-4ee6-b245-af31f8230091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93b1358d-036f-46c6-b744-adbc6ffef178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eceffc0-cbe6-487d-8a89-c08d3a4bdd28",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebbdb90-c925-400f-9745-2bc7ff3f4817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59bed35a-f39f-410f-bfcc-e8cdb534a390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7fc960e-df65-4d7f-8da4-648a4c89fe10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56db50ff-96ed-436a-8cbd-b50af481da16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b47f2fe-ed89-4d86-8829-60d059bf982c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bffeec6-0f8d-43df-b413-4217de449822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bfa6810-8804-49c3-9d97-e878c4380a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2454b7fd-8f12-42eb-bea7-b08ccf6d1e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc756ebb-f6fb-4913-8032-acbfd87db90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5742f592-cb1a-4c1c-801a-71ce139b970d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac29555a-0866-4486-9980-0f15974d8aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab9fdb4-ba7f-4fe1-aade-4d325b085095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ecdb40-ba79-49d6-9aee-dc905b9e1585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "beb95e56-8505-4cba-9da7-8aa3bdee4977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7de55f3-6fad-478e-a9b5-74611025dd78",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a24d02-4cde-445a-b07f-f6d617ec926e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c4dc2d-b6d1-49d4-9877-e4e7747c76f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06192aa-9969-4cfd-a9bf-e699d2cbc05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "967a3a28-2124-4b94-9f86-fa3d2c1d6aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e22a652-e2eb-4134-aaf0-3352d6c9f493",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db8593f-44e5-406d-96a7-02f4424341c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a509d4-8610-4ff2-9b39-77d2af060ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f57b9bc-2aee-4c42-bc42-9da31e0fcc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7d5afce-3efe-41db-b13c-a57f9673cbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9b37cf-1504-4ab8-870f-7e2f64cdf51c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46370d92-064a-44d0-83cd-428f1df2b80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c764626d-08d0-451b-8ac6-69d595506123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b985e0a-642c-44b0-9a53-30ed93435aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72f93b2c-34b7-454f-9436-bf049c342c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344d529a-3ba1-41a7-be73-855171d7c551",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626d0ad2-35af-4a01-8a19-83ebaaedb96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "637d6c6e-3b64-4501-8fac-d9ba50ac544f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db456bfa-8ffd-4a65-897e-8308f0248b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25899f6d-5278-4111-bec6-62891556bd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb8a7d1-b998-4bd3-b847-5150381f0868",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c1ab0b-a542-44db-9d38-1bcbf67a1152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253694ae-b1b6-432a-abf7-2824fe586bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9845af-5d66-46e9-8fbe-d96d8bb95e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40d17598-1d84-4d07-8d8e-b6daa44e2b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9576199d-3934-464e-b568-1f27cebcb11d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be764284-c310-44b5-a427-2ef6ebd790df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ab9f92-1c5f-4fff-b3c4-41c119000198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242b7d6a-00a9-403f-8c90-2ecd008c569b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a119b8c0-f9cb-4f92-b4d2-4992de7b3317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f886282-aec3-4f3b-bc66-b483d55f0c43",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253f66b1-68e3-4857-af61-215c4055124a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31439bc-4e42-4d91-b89a-262ea2568e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4aad9f1-dde9-46a8-9bc7-867167899ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b266f198-a291-43f1-8d47-c5aeb2a7c9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74469ca3-d6d7-4c3b-be2a-08bdf7ad4f30",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b26e40-81d8-46da-8f2e-661626db7acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ad4b1b-2abd-4b95-9990-6c3d8961e3a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2202abd5-1466-420d-8b93-428dce42ea6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a3d98ce-368c-4e28-b1e5-c2c8d4abec76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd45348a-28b3-45e3-bece-9118a163367c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f5b5ef-cf76-4915-ad69-713e66d8b294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8246690-2dbf-481c-a8e8-2dc717aca035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc11207f-0125-40a4-afb6-3990764d87ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3f59110-3cd4-468b-8cdf-47fc3545af3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51c2dfa-d1ad-4cd0-a629-facdfec35c02",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b158a87-cf26-4bc4-8595-83136528ec40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c39a52-da2c-46c4-865a-741e81dae535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524ef3fd-c23d-47c9-af73-625be0ae95f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9829457-60d6-4366-88dd-e0ab27308c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4711c1-7420-4d62-87d3-b03e12e40f64",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa391480-d811-4e0a-8404-9a207dac12c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc570676-cd07-4cb6-adb7-43b467fbd778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d31ddb9-fac4-43a7-9ad8-c8361330b44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae4146a-4eb3-4199-a88e-9a1dd97a8e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b5a50c-031d-4522-ad91-3ef831f23052",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b7e8e8-7517-4fbd-b669-f9e10a9ef6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3dc9b46-54c5-43be-8a22-e9ebd4a69cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75d38dd-13e9-4069-ae9a-207d3b0b5952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "946309e2-3f5d-41bd-be0d-38697205272a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7059f25-7a5a-49c5-8f2b-cf07d64e4161",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e2dd91-cd4c-4973-bf87-772c0e371e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f425e5b-1668-43c3-8ce7-dff172334541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd68f58c-a139-4954-91cf-273d7d8489bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31846c4c-f4b2-4868-9af9-0a4b95c391ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fcb249f-6202-4511-98bf-561df3348533",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433e24c3-c6c7-4786-a8f2-3055c97b7c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10786cfd-10df-47a8-9e75-efe08ace3b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0273ef3d-5032-43ca-852b-361f1a6f8eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9dbdabc-ef3b-4a2c-9b87-088d91079c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87638996-80b8-4e24-8a53-c72a21cac4e8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1898a159-3ade-4052-9927-2d9dcb9000c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7a39d7-855f-47c8-822f-351487f20a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0e8e47-2169-4658-933e-6e3843782624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32e27a29-7a13-496b-9473-ca34c817a457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c07da09-3f8a-450c-afaf-9fb6b2170a25",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbcc41c-1696-47b5-92eb-4d2cb7cf4444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0adcbd36-003b-48b6-b7ed-4f342084ee2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4468d5f-cefc-4bf8-a23b-316d29c82491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a8db72d-1ee0-4705-8c2b-91a5f5a8a584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34dc9477-b021-4ce9-a149-191d6cecb5a8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75074568-1e7d-4128-92c5-dae12f63173c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd59b7f-10ac-4804-b7a4-f24f7e4ff6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c09152d-698c-4b7c-b95e-87f83d25f560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f70166be-ecbf-4a0f-a89c-b9c9fbd1ab85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d67042e-50a1-4407-a4aa-541768137838",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b796b8-bc1b-4708-a8c0-b3329dfafb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "591456a9-2478-4d86-a8e1-052003dbde73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1ecefb-6719-4c92-84cc-334784c5194b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "31b095c9-31e4-4000-b896-14c56c38350d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e804d0-f875-4ceb-a21e-560520350425",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9f32bc-8128-4c74-8dbb-6516c3e9486b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f67b863c-a276-4d52-84d8-417a14713996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f44f3a-3f05-4a4b-8944-391d07a264dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bde2f034-927d-4d26-a904-24e8897fad14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77dad422-a706-4202-8703-a724d3334238",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b886747-35d4-44c0-ad2e-1371a9c2d15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9fcaf9e-0325-4d07-91d9-fe06d51d7be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cfbbd0-8183-4585-adac-4152610d01fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76537a26-c7aa-4c96-95e0-592b1d9382a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8a6c8c-0168-4892-b528-d502cd9995c9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524c8a6c-91bf-4512-b96c-d4835ba0b8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5786042f-f956-4115-9884-84411dbd5745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce99c7cd-c3b9-47e7-8e05-1f3c46a9c249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e10e8de-0293-4ace-847d-0e37920bfd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20954eb-1739-44e0-b679-923a1e1efa11",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cbe6e5-2ed3-4890-a41c-415991019fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa05d5ef-17f2-405e-8ae4-3d591b2e9624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d1d1ea-d86b-4802-a712-7752133c51e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c241ebbb-bf4e-4608-9f23-79320985c7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb77b6c3-9182-41cd-acff-16df09abb6d6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d3afcf-bec0-4310-b967-0423415b234a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e8db5c-a2ce-46e5-ac4d-0795849ce631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d787994c-9dee-416d-979d-f1eb10ba31cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "86d27ee1-d7e3-4c6c-bfeb-a6a141ae0b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd3445d-bfaf-4e5e-bb1b-8a1fa20fc938",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e001760-d751-42cc-a317-15f43b2eef7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "602aad4f-1d2c-4a63-9e27-f6c6b56d622f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8accd28f-8a40-4523-a7cf-e8c9064af90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c1b5b6-a98f-4b71-b724-f9f3748b4c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7294326-9e6c-4d4d-981c-9ff1df95a833",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79f2ee0-8e98-4631-a1a0-a0bc3662c840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9fa94e6-9ea9-4e2e-a6e4-feab35e97ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05c3b49-8c1d-4455-9bc6-08a811d893c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e80c6c04-6643-4a5e-a930-d5883d887341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f55526-02af-4b92-a1ea-05a2649fe347",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fd22aa-313d-4225-a507-9440779a55cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8707da9-da03-4e7f-a025-cb085b055e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0145a1-1b74-489e-a3cd-b87f662338f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "169444cc-856a-4c7b-8f4e-f9e809c4bb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f5500c-784e-459f-aeb4-6fd2940eae3b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7faef0-f453-46f9-8adb-f29abbec1820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a399a4-b1ef-4238-9229-898f8e69066e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7731e50d-a435-4872-a875-4fa46dbd3a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3970b200-6a18-4507-8ed4-9fd2899d9165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5738ca-62f8-44c2-bc7a-2becdea65e44",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99514851-607c-4820-aebb-8564baf98cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8316bb51-1b8a-44bc-8ec8-90dbb7a6fbcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882ecb3b-3276-4052-ae65-b38cf5fe7b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a9d6da-aee3-407c-98aa-0b1e0b0c37eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253f9158-316e-4396-8ab8-54100083834b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c6a157-c539-416d-9376-9865213acccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc7d17b9-9685-4d91-96d0-ef2382f407d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee62fa4-3805-4ecb-a598-6d9d406aab09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a2c6f4-fdeb-4115-b661-92d0df58b5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0c3668-3de6-4ed8-8eaa-229e9f12f107",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9804fd07-1953-4ab1-8d50-f4f286c4c826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c4e0ae-b0d2-42a5-90dd-718bb73f7373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53704434-863b-4d92-9366-f38f83852107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc969095-292f-4894-9744-faa529d570cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8feb6013-157d-4bc1-ad53-d66fe3aece8b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceafb62d-2b66-42d2-88a6-dc740fd3ba98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c963f6-a201-4422-87e1-7e7f60c93edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957f1c12-0ddf-42dc-b47b-93dabceb3976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a852fef2-25a9-4aac-9022-b0b3179a0eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a386802-7580-45de-adc6-f4f89927a404",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa2d65a-72ca-4722-8ecc-13f2acadcd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11cd35f-81ba-413c-991d-450e7b287f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f696afda-94ab-446e-8bb5-9a3345fe173a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bbb836-f1cd-4d6d-b060-d4b8bbd38c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1d823e-58f6-44a0-b29a-7284af48a61e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0a95fb-98fa-4acc-9147-cb9940be6539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22951612-1d50-4174-b1f9-407f1039fc7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3136be58-b070-44d5-9cb9-30bf968bd58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "70867d60-86f4-4415-a1a2-08e1902c1910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114c185a-efb8-435e-93c0-f49864c4110f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24411f7-d93c-4b4a-90fd-ba2a37b94561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28828852-0363-4cc6-b2ed-8e6b96462d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5707c89c-8720-4400-98c5-860caabbe93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3802237e-f70c-453c-99f7-32a38eeb67b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d1f100-184d-4b18-b9ee-f59b26ee9e6b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35329fb4-1a5b-4929-bd68-c2fbd67c6239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23287879-5b34-4283-8ca6-ba82ed8ac7ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae208fd-a0f2-49ee-933b-d6f0628e584e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9695f2e6-8fb3-4a03-af8b-99f2f54bdacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb5b1c7-7888-47ff-aa51-54d33063b207",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "166e2826-80a9-40df-8c22-10efc9e15baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4097bc6b-0075-409f-be68-8f37ac57a0aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd36cd60-be4c-4b64-b2c8-c52673f67fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d0e26ba-8f8b-4e0a-8a52-b8eb0eed53ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63892e2f-c21a-47d4-b5ea-a6c31a7b0f44",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2c5497-3225-4b68-9922-59ce55bdf4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3da6a47-bafd-415d-b3e1-6154457c2ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6b85c6-c655-4440-87d0-0e6560f046e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "161f61be-90f1-45ba-8bf0-f23be965b2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5bb3fd-e005-4eab-a5a2-7b375994033f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ca4e77-7be3-4152-a1a0-c94ff2f6a016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f7a77a-4d8a-4240-86d0-c9861173f043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28be2bee-d65c-4ca3-a7d0-a12d253bdf91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae418e31-b1a0-4ed3-8a2d-40266e7bd7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc14a550-9085-4369-9eda-2a6edff26610",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8316e5-f9c4-43ac-ad4b-93020d72b5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6068b427-358b-4773-ac35-3003abb6527d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d035efb5-d46b-42a8-8c0a-cb8b113b5039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d4be828-a4ed-489f-95a1-2d511d04da9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92580841-0979-4a88-8200-b5264479afa3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03cf1a4-92f7-4668-949d-9d81a8d2d340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c317872-1d48-4886-a7d9-696df689a854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa3ae39-b395-44e1-b192-71550d43111f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2de991e9-4b40-42f1-bc28-cb8cf424151d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4952b88b-f3ab-417a-9cfa-f466c95997b2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4a66f2-7d0f-419d-b61a-419f6911e235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0614209-1aa4-45d6-87f8-9063b8857b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049d645c-b70e-43e2-9165-d94bf8d88c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73664878-e8c5-49e3-901a-03c652f16eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ae19c7-9520-475a-96a6-a4725cd6c1f8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5de4d4f-9d16-4ef7-b290-c94c38ffdad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a68ee76-dbe9-4f7c-a2a6-3248df857a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153ee903-f7cb-470b-bd3e-c70a37267238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd8fc74e-df67-4ebb-ac55-a2a506427343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4b3467-fb0b-4025-8881-b247bdbe9df4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd16b130-9fe0-4cdd-9285-3c0cb2c43531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fdbc336-22ad-4092-b35a-5a4b1f686f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4692ffc-42bb-4f95-b84b-10a25f2b70c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d19f83b-2517-4946-bffe-51908cb3a157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e32e17-a5b9-4f18-908a-d96cc49d68ab",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3049ce-97e3-47d3-9874-597d303deb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba9cd3d-7c96-4eb7-88f1-097ed34ae962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3f3027-4801-4913-8c38-599b5c75ee07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d53c2aeb-c48b-48d2-8d08-ee5fbe045a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba07981-e318-4a7d-922b-6bc48bc0c8ff",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27abb52-d894-4cc0-8e9b-8608870eeae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c324a9-cbc6-4aee-ad43-f0c385b8aefb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01ee33d-8565-419d-8a83-94f32d00eb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e10192c-6fe2-4945-98a4-99909d26698c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da32c03-735e-4790-a782-d10f6bc23fdc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60be98c2-9756-4917-b321-b9b9d4a0c64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec173490-e814-4269-b301-4b45fafd9353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1722a7-3495-48da-9788-07c5b1dc790e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f04d8915-8967-4600-8611-b3e91221cc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00d4ef3-4add-46d3-95ef-ec04a3a2dbbb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22b2d72-e463-4e99-a598-2998c9d1cab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d89c5b8-c131-4aaf-9fcf-e389606d9722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3e49e4-2490-43ea-962e-93ade9e9c8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18b43906-5c68-4694-9779-128e2ca200ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3ae227-f6fd-4785-b162-ad2fc3096e6e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3731c70b-6ebf-4a68-846d-319540491cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "700b3405-5b47-4acc-ad9b-662e63c479f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd500afd-4288-44c0-adb7-18487991d050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f29b22a2-57fe-4a95-8626-5d1a88aec857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300f9331-9b53-4ed8-8bb3-678513b3e0b7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdea9a0e-984b-40f8-ae7c-bab2f483c6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d69a330b-9337-4973-b6f6-2b19db560b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529450fd-419e-49dc-8b04-8bd9155a25ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "deec2bd5-24cc-4d67-9d4b-f2321f9f2aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631fcb9d-c8e9-4146-8f06-3aabad951f3d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba61a63-9f2e-42a7-9fa8-8cd36903e4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca50ce7-4a1f-4abc-a7f4-13476eeb2725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5038e1c0-3e01-4853-9810-e6f2b57be23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba944ccf-f596-45b2-850b-1891143527c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a4d370-d63d-415d-9b67-4d7592df792e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd7932c-5345-4dfb-a00c-7e7ab7a0843e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800d712f-283f-4eae-bf7a-2fbd638b4d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5840b2f8-0246-4bd6-92be-8689ba1db4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "195290a4-b62f-4667-bcff-63aac84f2a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3601d14e-8670-4bb6-92db-46595911a8bd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df9cf2e-f4f5-41e0-8674-e34379294e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "545dc89c-8fa4-44ce-93d9-8fab2eefc469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ba2e75-28bb-45f2-847c-728db5bb0876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4875a357-7a29-40a3-b045-bfdf54326e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a25a63-892a-4a75-9d15-ad63a133f650",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e629ce82-7372-41c6-992d-04037a1cb870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0cb7d55-7a47-4a70-a170-423fb4be13b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612dffc8-dcc6-4957-9f7d-bd91b5641bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6a966f-e855-4436-9204-6d22951985cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a063b78-3e89-41d9-9e7d-7f4f15dc0e88",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d9d39f-8a1f-4c73-9ef6-1e591f812122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82fc5e22-602a-467c-9007-95c14ef68822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9229203-94c4-47d8-a11f-47be6f8498e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b512a24a-a906-435f-8183-ac97323dc3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c08bd3-f32b-4705-a7e7-6cada47364a9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fddc745-b0ce-43bd-b4d0-438c1cf80867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03749098-70ba-434b-81d7-b094f1f2be18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a5e5fa-749d-401d-9af9-dd0e611a8c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1968d947-3447-48f6-b5af-4035dbf3917e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511464e4-8e8c-432a-9043-621693abcc99",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1eda1a4-caec-4caa-ac03-90712fbae9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6385dcae-9d12-4f3b-b9dc-9f3ffcefa4da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffaf77fe-bf21-439a-b2a9-d742e7241df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ea81f1-14c9-4214-a979-b7d4300d6d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d9505d-8ff0-4e44-a2f2-dd72e60ddb63",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6de1805-32ec-421d-a43b-a467b1d96dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d51007a-06e1-4400-a9e6-9ec686b1bc28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019b7d6e-efad-40c3-9cb5-75fdd95492dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e3e504a-525f-4099-b29c-bd29e1322059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e88d761-3ee4-455f-8eb1-9e1f8a790477",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "429aa2ab-463e-4055-8c64-13f8eda82953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697ece37-4c5c-4c5d-82c5-2108cd8be16c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c56354a-9008-470e-9f41-e3f6d5cd9ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a05370b0-d255-4e3b-9ea6-b68cbf2cb79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719b71f6-316a-4a41-9f88-44684eb7d5e8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801f197d-ef6a-4224-b731-d7c587578487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdef4e94-1d36-45c0-885a-d04eeeda2760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e4419e-a8f6-4ad2-b960-e29b2ed8030f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78c15759-8db7-4c1a-93c6-b93497d349a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13728644-b316-4c0b-bee7-a86862eb0440",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c61fb88-c7dc-4310-8ae9-57004f695445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3313451e-2d48-4927-bf10-9327259b787d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea79836d-41ec-4b11-b81b-c0b83a3e6e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37ea6314-458c-46f4-a0d0-5be6a13f4d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f319cdac-e9ff-4ab3-bc5c-adec602ec61d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f44b3d2-f0f0-4d16-b462-849ef136a063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900f4047-849e-4c4a-90bc-4d7a098b69e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef71882a-933c-42c8-b2f6-982ce3308b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "833be5c6-d37c-4475-8fb2-7cd97d844b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6956e276-512f-492e-828c-e33290365d43",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153fa060-d206-4110-b69c-d594119bf9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ecdf19-700b-40ee-8165-cb5535cb4a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332debe2-e04e-48e0-96a8-7bffbd6aab4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7fce84-0e64-4a7f-a7de-8da8f4c51ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2d20be-43bb-4b02-8e3c-b21697e2339c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61652985-b9f9-4bf3-9a3a-42c17da8bf19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29199bd9-8e8a-4cb9-a973-f3d322688c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234c1328-087d-4f6e-8ce1-4eed74efd7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6963dba7-9e4b-4179-9418-4121b3dec49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b14843-fd88-4ff9-b2c4-3269e26a6f4e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51136123-7bc0-4339-96c0-c2091362af70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afa9f96-d5de-43bd-bc11-a9533baff77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b427a3-b46c-42b3-b9bd-bcee96142a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30993869-388a-4571-a71d-0f6fae6ca534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc903ae-1e8f-48e3-8f76-9a2392886390",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48060314-0a72-411f-8804-a0e0f2ecd978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b3d825a-4ce9-4a82-99c6-b917491a11bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85605d72-ec7b-419a-ac0e-7f83c75a2f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e32f050-3b14-4102-8f70-1c8d544c529b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdfa556-42e6-46e6-b9db-b9b741361077",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9b428d-81a1-4950-a33e-8a52af7dfb46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e3e986-1e7a-476a-9282-27a7d8bdef83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7eabcbc-f88a-4cf1-bfb2-296082cd7ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "609e8cb2-03e1-4d88-98c1-617d4150983c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3315002c-ee7d-4505-b476-d0d90f1c8ddf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ec0200-5958-4797-ab54-ae44edd9ab38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a66c9e-0dc7-4071-bb0b-706680ce2c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae44ea5-b907-4567-baf2-8e89637ddab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "340fa207-16c5-4732-9090-e04c86212dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f0a415-7e4a-4dfc-a061-e59c0547b1b4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bafd6e3-f2a4-40e1-a788-7de56ba48252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc871f4-db86-4913-b2de-04c200973d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d48d5ce-0bdf-44d4-9532-d24c7fb60450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbe88213-1622-48ad-a261-389dfed418ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878bb15b-7372-4c77-bf2a-638aa05a0880",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0f8123-4606-4612-b4cf-856fd7a06cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7dd8988-5247-4b2c-bf46-991b91aa6115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24dda080-838e-496f-a278-e200e4330906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "740360fe-c414-46cb-b8be-d80ae038bee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24298a4f-d102-4032-95c1-0b027625e630",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79cb8d6-9d70-4c33-827b-9e4744457fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35f56fe-a257-4dad-b0d7-9a78483c48ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968b5f48-a9a6-4684-8776-3d0b4daf9e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40cd499d-0af6-4b10-b4b5-f91bf658b7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbd3f4d-12b7-48a7-885b-88d69757c20a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee43a1d-2676-4491-a747-475e83b58faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619abd86-c99e-47d9-8871-b34b01478822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a98bf4-1d5a-4534-92df-053e51ce368d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a553573-13a6-4350-a8af-5fc9d0094622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600fdcf5-0a0c-4b66-b1e4-89224677867b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc7ef27-bb93-4174-bd3d-c0b11894d67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af5616e-b7b3-461a-89b6-67f372807e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8a87d4-ec05-4ec9-8c01-680ca78d6f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "44576ddf-85fc-4b64-a5d2-8a1e25f74490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83b3b5c-0aa1-4f51-b5fc-bfe668c8380c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c529929b-86da-4f68-818d-5b00b0e07d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8170f939-6c56-4e18-9b8a-d38392fb4cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e30fc49-9039-4674-a4e4-0b19f57e93e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "74f602b0-43e4-4d73-a02c-404503a19899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3c22fa-e85c-406e-baf4-e68d044c8231",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835205a5-2855-4faf-bfc4-a9804ebadff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2f060e-b096-4816-9023-c6701aef2caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93c7f95-ae34-4023-9c5c-389ba02e9cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a83360e2-359f-40e8-92f6-4e0a4977f8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e280a7-2f51-4a2b-9e69-309e5e44da18",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f57fba-6150-4799-a501-c6719548706f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b236a695-12f7-42b4-8cde-122d6795d2a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44fc6e9-55be-4ffd-9272-79056d9d4bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "325a73bd-8a16-4b1c-a1be-d6c73a7e7548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ab97c4-c8ce-4efb-9997-78ce0681bcef",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6018df2-5be8-4f2c-b3e5-60e55d642fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e0127e-04cc-49a2-9630-807da5b02c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4538be14-4210-4ab4-8c9a-d593588fc885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8366432f-c9f1-4858-88ef-8e2bb922fe92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0639aa7-262c-4ac6-b001-c49697e7b92f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1e4897-c266-4888-a903-515488e9eecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63799f0e-edd1-4d6c-8261-e4ff21516091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b99286d-417f-4221-b3d4-0fd53d29ed8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e77b6a36-c8d8-44ce-b393-6e23c3148e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae95382-7937-4805-a226-2e3f11435b56",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69a7419-9d5e-474a-b824-de25a19cf2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e269687-e15e-40cf-81b4-b08c10905a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdded474-8b9d-42fc-9e33-82a913fdf8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9bf955b-3105-4cfa-a846-9b0410441a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d04fa14-d8c7-4c68-879d-ea9373007904",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294c9d92-0033-4163-877f-2bd429bd1a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01394cc-7c20-4964-b645-8091879aa44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379f7fa4-951f-40de-b870-a85f59922574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce41f7de-85e8-4901-91ed-d9c26bbf407b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bb8116-b6af-445d-a62f-83d67a4739bd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a40bf5-c157-4f11-b3df-60b2d0728f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65bd3dd3-3750-491c-a614-75714883acee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78080025-f11b-4a8d-b84e-c5449a031d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "32734ef0-c3d4-4250-882e-7105b5ea8cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6181295-38dd-44ab-af84-31dbedfe39d5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff182117-1e12-4d46-8fb4-931ca22469bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0764a005-ac54-40e7-ba42-b55f591f974f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7822e9a2-47ce-4d02-aaa8-0b14314e742d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf53803f-ed5a-4d69-8e9d-7dac9dd7038d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4569a914-3e7b-4f77-a4cc-2236a8c1e44a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac23664d-e2cd-48f3-8650-00b8c663ea87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf30aa48-ca56-44db-90ca-65271d4c6dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95154d69-ad0c-4470-b3fc-301d86661241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "08fee049-cf94-45a5-9ed0-e43dc3f9bb03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f126c5d1-712e-4813-861b-6ddd3e89b9bb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d81eb0f-7682-4922-8738-c215bcd559a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "761839e5-5a94-4dab-a404-a5549acf501e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35906cdf-cdda-466d-98a4-e8ba276ed898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b04c70af-82e5-4ef4-bc78-c7437b8645f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d536d06d-b4c4-4cdd-ba6c-39d9b0d2bf2a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055f362b-1575-4e3f-bd03-ccaf7d4a21c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f2ad8e-bc69-4872-a972-ac3f8a6fa9b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72df9a7a-75a2-4220-9f08-ddc032467496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa06628-1541-448c-89a5-7a3d93c42b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd32f1b-c158-4fc4-a578-11fe76df6495",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ede300-51a3-41db-bbf6-1873289e8e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "581fd5c3-90cd-441e-a581-a0c10e3fd2d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635e3bbe-a7fa-4665-97a7-22f85a8e9706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "86556594-2410-4d7e-b0e8-d4e8632cdd8f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e8e9ac5e-508f-4cf8-8b8a-48f4b234425f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b4fcbbfd-bf67-4549-b2c8-18b399e8f77c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72806289-0657-45a5-b85e-17f3fd2d1f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd81ec9a-13e3-435e-a960-b40cdb821933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca37c69-5215-4e64-a67b-40c5aa4f1759",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "bd693246-1bef-41f1-afad-ae203af5c50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd6dc43-78d3-4cbd-8571-a33dc77e4da1",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ad7184-32a8-4917-8cf6-116bfcb3d835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e58ee79a-d211-4cd1-80e1-6e8db4ea56b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516db08b-e66f-489a-a72d-e8e575dc0751",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "19dc3dac-4d6c-42ea-b4ac-b43b30b8f07d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f01f0a62-ce25-41c1-847b-c1473d04b979",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "019f7b18-7e25-49d5-a882-aec569bd59af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c482a63-ec58-4148-86b7-627b2b69d6c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7ef4ac3-864c-477c-a9f0-135e2b82fc02"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "58500887-8d00-4728-b819-42aef0506194",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "174aaa82-9be2-408b-bb96-b02835fc6cd3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f5351f45-93ca-4ef9-b7ae-23e5689241c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f3891cab-da25-4f2e-bf86-405580e156e0"
                }
              }
            ]
          },
          {
            "id": "b97a7adf-7152-4880-bec4-4558d0f166c1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c2d64379-0f68-4028-a41d-8440f003ba13",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "305a22b9-65af-4746-841b-e6dfc0cbb822",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c93cd98c-4ba6-4e22-bd6c-5fda9c0a6659"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "044d7ad5-607a-4494-83ce-7e81cc464dba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d1b2c3d9-89d2-48ab-90a0-d4fcf039495e"
                    }
                  }
                ]
              },
              {
                "id": "76443d28-7af6-4d7b-bb69-c6e9deba3bcd",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2acc5fef-0d0c-4f56-818b-a3c65e751f99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c23e74c5-cc92-45a0-8d83-eff7be4dc225"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cf4ca91-8fbc-4d04-b740-4f63bbb05d3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e1a37ea0-3431-483b-a95b-395981d0ce1a"
                    }
                  }
                ]
              },
              {
                "id": "19ab8103-e134-49d9-9c2b-9163f0258fdf",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "adb60b10-90e4-4e82-8e5f-e99e32763e93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a1e4c6b-6a67-4c7f-8709-6a125c732ccd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e2c6e41-609e-476a-b6b3-c93270ae9b02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a2c4fd03-ce5f-4613-9911-4ccdf2bcb29d"
                    }
                  }
                ]
              },
              {
                "id": "90d3a6f0-5000-43e1-bc45-e445e854ab50",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb53b05a-622e-456d-a286-620c55ef57f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e15a70a-a67b-48f8-9824-88a57265648b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fce53f5e-3de1-49c5-9e78-2c2c0d6b5b6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8e1f4cca-0caa-477c-8bb8-38309bdb4d4a"
                    }
                  }
                ]
              },
              {
                "id": "93ea45b6-2f27-41f2-9250-ebd4c4331e77",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce73c33e-f968-4940-a3bd-3f095aed8de0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ab76df3-7edf-48f9-8e22-d7118c18bbe6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "955f104e-f865-4fa3-aff5-b48fae75ebe3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fa6d622a-73e8-49f0-be10-65cfdccfa174"
                    }
                  }
                ]
              },
              {
                "id": "ce0268e4-164d-42cb-8280-832dfb40f96e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb22ce39-ed9f-42cf-9c11-ab3a4f82a366",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d8053d6-bc9d-4bf1-a5d7-c2a6ea09d171"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4b12ec4-18a9-4b37-b3ce-80b9b582ca1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "838fd808-8fc5-4a21-aa0b-c1cacfa9842e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b0d1694-efac-48e3-ac43-094084ec85fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "accad1d1-e7f1-4c96-893c-720344a50e63"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9a16e461-1f06-4c9c-bdfc-6c2a3bb0affa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0748c629-2774-42cc-981c-93739b215f35"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7bc4e42a-1821-423e-b3e2-cdba5358c469",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "32ffda6c-56aa-42b6-9053-6e15cf2d3df0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d2c2e9e-5f66-4e19-8eb3-132f0dbc9621",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7005df1d-3f13-467b-a954-1bc465c85737"
            }
          }
        ]
      },
      {
        "id": "cb9ddb45-2e35-47f3-86f9-b8805731a97f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4a7837b3-e813-4fb0-8ed6-af3f52f67908",
            "name": "Negative Testing",
            "item": [
              {
                "id": "36d4f217-71b8-4862-bb84-c95b93c967d4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "31a0b8a3-5d14-4ae6-acd5-48a4073f13ac",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1add25e6-e108-4f31-b035-c137f23cbcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8628e381-44d7-45f1-80f6-ca5c19cdf45a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f74b1a1-ff16-4788-aeb9-1b33ef703796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b169cd-0184-4659-8d2f-0dffc7122322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9c88c7-878f-4db9-b754-302fdcb862c8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd1c860-64b4-4ede-a638-1ed3ad983fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72343c5d-ce83-4a17-ba0e-e3b1b6d32093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6be84f-50f3-4d01-8c83-4918a5eababc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "132cde39-0aa6-494d-a49a-37b9ac2ea9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c8908d-5b1a-4a97-9d59-99e63194178a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232f030a-a5d0-4e24-9f4d-7b78ba335398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884a17bd-35c4-4135-828f-11e0e4afcacd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454cdb6c-cb76-45b0-ac41-cb6928120f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0df24a7-031b-460a-91f1-704d5cdae9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2d4d50-8167-4ba3-926b-e0475dccd5d1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2deff0f7-a55d-4204-a7cd-883a9575b980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70773e7-5fd5-4e98-b4fa-46d101dbaa42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef57a31-e68e-456b-9a1f-e4cf847ba9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b3bdb85-dbc0-485d-89ae-e0c508b7bfd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a31206-554b-4972-bc96-57874cd1be5d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8c2def-85fc-469c-abe3-04a1c3d63376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4360a20-19b7-4f23-85c0-ebbfad21f4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fb4f96-b4d5-4e8c-9807-e401b4d6dd31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "805589ab-1ae8-44a3-8008-e7b48dda3ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86c441e-d27f-420d-bf84-fb329d479af5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d914e5e-a75b-418f-99be-70da98d7e718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a722558d-8319-4f59-9bd3-8ed809020d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695e5c0e-9e2b-4032-a2c0-2104f0472c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b39f53e-93e3-4b0e-bf78-3c94d99c077c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb649da-eeba-4d61-863e-022ec830d0a1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05292a08-7175-4321-8f5b-3732fa9c619e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899ccf21-addf-458b-b7f6-4bffe0e7d456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8add6abd-e1c6-45f9-a17f-f72b2ea9b1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "be3e2626-5a9b-42e4-abeb-75006bb4fb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384a2614-574f-4e15-a090-fcd5b2033030",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1d9026-aab2-493f-8675-4f7041924d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec7e9a1-8202-445a-a3f2-dbe90e481585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1e64ae-3a45-40c1-a876-f62603058c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f93dffd3-82e7-4a0e-8d6e-1c8a8a7663d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324a4e35-d769-4517-a3dc-b6ef8bd82f84",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef7973c-34cc-42d0-97b9-de510d0afe69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b3b5cc1-d0df-41ff-ab79-e68b8300bc77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9feb31c-7cfc-48f3-873c-e99e17596ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21ea2c42-0523-4603-812e-b11f1f87bfab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409e268b-a31c-4944-bfa1-3bb83b99c42e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710294e3-d64e-4beb-bdc4-3c58cebf18f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "969307f4-d889-4a48-a45d-b9d59050d49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f081398-ec43-423e-bc67-fc89a8cc9077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3f1238-d112-4631-8349-22d7f77cb2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0359fe89-a4ec-4c06-8880-41025b066202",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3928a530-aea3-4c5a-9a23-bf52fd8e516f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de1359d0-7f26-429e-acae-3ebf1757f617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3d1891-bbf9-4274-a672-0520f41563a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6ed16d-53bb-4921-bd4a-42169e562eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a926ed03-b39e-41be-82db-af18df947544",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf265b6-0ec5-43e8-9124-77468cb4bf76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2058cb1f-7697-471c-af14-ab0fbd4c9e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385bef9b-add0-426f-a7fb-fa2eaaf0c10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de3aa5e7-747d-4724-b05e-f2674d8468e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e469cb2e-37c3-42c1-9955-0634efae55da",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7f7b1d-b5fe-4207-a820-7803f768bc6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788061b2-2ba3-402f-8a7f-f4fc2681f03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8691649-8e0d-462e-9986-5698004e5d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "644e6d84-769f-4a47-a149-d16ac5bc3fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68919fd7-8a56-44d4-aca4-891558ba0cf5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73532134-5a20-46a2-8e17-8adbecde6b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849828cc-7444-4bc7-8d5f-9dd737e71ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e9628e-9a4f-4d23-9e4c-7a5b84c7fd70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "75af9651-6644-4ba6-aee1-d3968da0c233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2647ad2b-d130-40a0-a21b-d29af8c7f965",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4640b133-e5b6-4dd1-9a1a-5275f302a56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6755187-570a-44c4-ab3a-5eb084b1fdc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9edb9de-8664-460c-9bba-15a3e147d9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e065304c-200e-41ff-94e6-4cd74028e095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67889d9d-a564-4604-8f85-2da367cd0cc2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c520eb-0b35-4d3c-9377-8730ef631499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16568933-14e9-485d-a4be-76b8b9eec1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a250f9-4ebe-4dc7-b82f-37ca3bad7273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2cfa07-2a56-4e71-ac67-e41409de927b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7755e6ce-fa4a-4c73-9f1c-c6d80656381c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95deb4ec-2305-414f-8e43-beb7442ca05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54a06c4-7a01-4791-ae09-ccfcd75d6b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8de38fb-a77a-479d-9404-5952fb51470c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea512db-0326-4965-a8c0-a08685fe3d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e100c11-ff73-42d4-a1ca-d32cdeaed3ce",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0d66d9-12b0-4b2a-8907-77e761601a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89caea9-470a-4d4e-97c7-db86072caf6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ce0dbc-9fd7-4320-b0d7-a95da9b7c618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed6484e-a99b-41a9-ba14-6367425ec3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8ac6f9-bb39-4d8d-89a3-04799eebe619",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ea3a97-7f49-4532-a486-fb1428caafff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963c602f-69cd-461e-afec-f27571b94a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b373f9fb-84e1-45e9-b518-6f7da961211b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff87a2c-1a46-4459-9724-edcae2af6336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889b131c-4246-4161-9f42-7e2f063d98dc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4759ad5-ab3c-482d-b5cf-90988d985fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7faa51cd-4dce-47c6-a73d-fdae9164f151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6e0691-070a-43c9-a822-cb4996b08faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a85257b-4403-46c7-ae88-73e3c38d1be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4729a42e-2507-42ec-8c27-dffec5ca7365",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0f3e2b-71c1-4286-9348-c1cc003d26af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7043c160-0cc1-4266-9dc6-c4c30dd7e802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6335a761-65d2-4b00-bb00-4828a8507770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b97fa495-7018-4d08-ae01-25f2c615f710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274965a4-dccb-4ad4-bc43-4d980472b817",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60769919-07b7-4715-8f18-2acbaf5d5466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d09fce9b-7ac0-4a88-9d36-36db86f1ff49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a67220-bf1b-4b53-97e6-97cbd00fddd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d00a23cf-b392-4ffb-8293-abe6cc2edf7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a7ec0d-9fe9-4c9a-b645-98b460f368dc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed43d5e3-9dd0-4826-935d-60445d011db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e4906c-b7e0-4413-ae7f-233ce1355b57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e997e0a-4064-47cf-a999-07f46236e851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5724a2-a3c8-45ba-b19d-2d3205543735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9d06ea-48a4-4eca-af5f-602786d34422",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d1e066-1aa2-4b6a-aa70-7f032d9a6a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "545a4c68-19a5-409e-9446-0dc90e71a48e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfb93a7-8bf1-45fd-abc9-5e014bcb745f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60beb7b2-4e47-49b3-9c56-d698fcd9af6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e4d92f-e80d-4f6e-bcfe-d70e37212b79",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084bb9eb-a3d1-4f46-a73a-8a22ca9e96b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67dc9785-2bd7-44fa-9913-ffc608a3d14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c6154a-5f4e-41dc-aa24-2c5e3bbec3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba418414-1623-4399-852e-75a00e0db54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be6643e-2861-419a-b0a1-a3403a1ddf81",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa92d050-5923-4776-bfd9-2ea53669ee61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f61c8d7-5e5b-43c1-b72d-7e9f0191c415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf10659-58c1-4054-a384-c1a36c1ebcfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b96318a-01f3-4282-8b41-0912b6f59166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c39a244-8c6c-4edc-b87a-82abcb94e0d3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f06df95-fdf0-4af6-b66b-e09b6086361e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7521959f-065f-4f58-83ce-2f1e27b60691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f92e316-4199-47b0-b0a6-9f833c39e99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9363c663-ad2e-4cc4-9c04-ce8c0c8a0eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75de904-f5b0-4ad0-ad83-f3b78b3dd1e6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b673efb-0eb3-497f-a54d-e36ce31b4732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec50c0c8-a63c-4fe0-8fd0-25f4888ebc91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44894fbb-6a05-4234-9895-ecfb4fe15541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7609a0c0-4a81-4772-9998-32a435ff7fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f99acb-9c2f-4499-8880-36b6721d4e77",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccedc563-036e-4818-b9de-60256c23222d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b0fbf65-b617-403c-b767-f8be15df8085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9f4070-938b-4e83-873d-1fdc894bd5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82635bb6-0f7d-4494-9c47-e3195f8bc576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff1c9f2-8b43-4a54-988d-ace431716215",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baee40ca-6c91-4582-ae05-758a7200ec00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621e262f-2eee-44ab-9fd7-ef586848ef6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60ce835-3e73-4b38-927b-811ea8eb6d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e1e7de5-ce18-415c-b440-d753ed49a03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7112b693-048d-485b-9b9e-7e7178425dc5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12415e8-6489-4864-abd9-bb83ae9429f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2a3098-b544-435e-b002-a67802fb3168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556cc64d-0d0a-4a6b-be6a-d3f79e9d8727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05e6bc2f-1d6d-48e8-8aae-eaae7fdebf73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a6f423-70ca-4a02-bf08-089150c28a30",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdc9f35-b461-4c5b-a867-f55ba416cc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bbb6396-d257-4e79-9de4-c4535ee5ce7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803b7c7e-9e8b-40c3-8d45-7fb5f4746273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d57b89d-f7d1-4256-b1ee-a3d6baa638d1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e287340e-2a56-4fb0-bff6-33633bdc0ac9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a49489b1-eeb4-413e-96c1-0e1445322227",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b101ee7-81b9-4018-b28f-8d50481667a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae16eda2-a2a9-44da-9ced-91aaafdce38f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f952e791-9293-4c11-8eaa-4c598b7ad49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3731ccc1-f418-45da-b77a-84b6ada017e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae348405-bdda-4947-a5d6-d8d7ede4b73a",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826e26d7-fad3-4e4a-be0f-08a577a5eeca",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "8924130b-015b-4f49-8322-d55cd6733fe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdda4b9-a2e9-4efd-bcd2-74f7d1949029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97ab7052-d5bd-457b-aca0-6c9a08485968"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "210614fa-63d4-4de9-b067-03f3de18adf6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47179c94-ad1e-47bd-a680-46f9add1f8a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfaaee3b-095e-450f-a5ec-a516b4d9ba90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33ba1df4-1575-4f11-8ba3-992a05f6a102"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b98b139d-f16d-4415-a191-2b804cb57a49",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5d89444b-6f0a-4518-953e-9093d39a56e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce7c0ff2-e309-4dfd-bb51-958a8c7e4fa0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1031b100-ecff-46e7-95e1-d089cf83c4b5"
            }
          }
        ]
      },
      {
        "id": "be3d5e9f-ec61-482a-9bc6-6c130c3b18a2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "31279d29-fd3b-4b2e-85bc-e5d48f7f528c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a317e020-c731-4f11-983d-30f455e3ad1e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d566faa4-3cb3-4188-bd3d-ffb95863caad",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d072cd6-4c04-4c33-9c7c-24de0245009d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "745f08d2-0a61-4241-a045-6b439e26dc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffce512d-fa3d-4175-a688-feb453bdcbad",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fafb7c-418e-41bd-be9c-e957cd037902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c10afb5-acab-4324-9511-af6d841776c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6860b15f-f763-4c0b-a6d0-2f9316c6c55b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db453ee-974b-43cf-893c-f3f1a678219d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "123f6680-daa2-4da6-8d03-c69756065a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd7cf9a-4a55-4530-b517-50676bc5f77f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd503ac-3384-408b-b795-0db50985f0cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e648511-1f9d-4d13-bef4-a04719b56f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a78278c-5047-487a-aff3-a552e76a7f5b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83692fe0-f9af-4d8c-8846-3153d6941353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264a0359-e630-4f4e-b2ee-99654b6a4089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952518c2-476b-4944-b919-58046465a889",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a821379f-65a9-409d-a904-01b1eb11b8ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cb1f615-7a50-4a23-87b9-3655feed9112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c695ce-a7f9-4a13-ab59-0efcee04d427",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdba16e0-7f1c-475d-ac69-373e7cd90f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e180913f-957a-4670-b554-0c5118f2084c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff03fc58-d340-470c-a074-3994572589f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80242e68-dd7d-4c1f-8e89-7f62838394c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5723c875-e90a-4538-8ae5-5f1cdaff5aa2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5453535-2a89-4332-8d3f-de593034d87c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cc3d56d-5f3d-4dc8-b4d6-77c0750c50b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6072c6bb-2339-4109-a306-361727ae5a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87bea36e-e4fd-4d01-b0c5-b9d826a37628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88addb99-f5a4-408e-b011-99ab2f53be48",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05138b04-46ff-4f60-859d-0f01124a8d5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7abfa469-f1c4-41dd-a508-529d7176c44f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1e1dae-512d-4544-ae4c-a63aac829852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be2b003-e5f1-44cc-be1a-a8246e546770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed3ac7d-4d96-4bb8-8798-4a17349f520e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd40bfa-0dbb-4238-ab6d-cd58207cba0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed017bc9-c21c-4778-9a19-3ffa6e987589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc567ea2-75a8-4b6c-b853-46717c1ac3be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e11374f-f2a0-4ff9-ab4d-d0cf27678685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54f15aa-fd24-4306-a901-b5093b7ff6c9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4970f9fb-8d85-4eff-966f-940148eebe9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0494171-619a-45ff-b6b4-2c3c99c70927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e27871-8cc5-4066-826d-810cdcf05082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a9f25a-7600-4b8b-9b9d-24563a8aca56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a9d744-fed9-4209-aff2-2f9f4272ec68",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b19f5b-4b40-496d-9ba7-7623525a8bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661c9ab3-4ebe-41ab-a76a-c8875c9841ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ef957e-cc76-4cee-b66d-dee17f54495f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80239a6f-ef50-4eb6-81d2-e5c6f30cee0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80fa2d3-ba23-4e8e-8c1a-30eac40cdd58",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771a5269-300d-42ca-9e02-29a249820331",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10bb3b0b-c172-4cd9-bd08-4cc1abf4836c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ec02b4-5d44-4553-ac03-35b1387e528a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f02c9c3f-ac5a-4cfe-8684-d0b1f27e4d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423c75f4-28c8-443d-8abb-5a864801459f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8996bb1-fc3b-43fa-b6db-b77bf21e74c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "284da81e-bbe9-4277-9cd7-46ad7205dd58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f36801-cec0-47e5-b42f-16fe13dc0740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b2d204-80ee-4fed-9079-e63d582d40e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd5bef7-80bd-4e26-8c67-b4febc0f4c8d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c999b94-423c-42e9-b507-00746caa57ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d40754d8-9b93-4035-96e4-19aede4fa1b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c4e877-2b32-4097-8121-7c851f2b73ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34330a7a-bfec-44a2-95ae-e29a94599249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b43db0-5896-4958-b231-8b53b635a363",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576bc462-18c7-4996-8c19-3bcefe8b6e8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94891c44-11f0-4157-be08-04acd913a8d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a287a9a-02e3-4a77-b56b-114edfb771c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a7e6ab-5179-48f3-8fe6-d88b880ef19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b696cfa-7df0-406a-bbc5-2b306fd339db",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c533b8-7e54-47ef-8817-58dbfeb40bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d92644c-eb52-43d1-812d-a50452c8211f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6f2a54-59d8-429a-97d2-b0b00c71aff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea78dea-b085-4580-9d80-6b51a343c03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71e8af9-1d6c-4725-8eca-377df7ba725e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527f994c-b2d4-449d-8ab0-29b7aaa7e584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7311d327-5c34-48e6-8c93-72c7970ffa72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77771d78-95f8-411c-b6d8-ea1645ccb9a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7757eea9-912b-4f16-a8fa-944165fc663f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0c9b09-01be-4fce-8bd5-8f0dda108ae5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273184fd-50e9-47dd-af3d-ea32c90b17c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fb00ce-f5de-4d13-aaaf-1a6d656ef323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f3b1da-dcae-428b-94d1-0f2f51d077ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e8bb61-19a4-4228-b3e3-64543c28741b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa614aaf-56f6-42d6-96c9-6bb72355f12c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567699d3-7682-4bb0-8b66-4955390b2d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4291d907-a72f-4a4b-aa29-7970caf9b50c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46544d94-f086-4e16-be77-c1b35c9558c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e7a5ff-e64a-4ba0-9cd7-c23dadaaeaf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98a57a4-ea11-4d39-8ec8-921a1830a236",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb73cbb-39fc-4b9a-a31f-43967b97ca9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9b6bb6-4b1c-4929-bcba-5af9b1cd41c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ca2a45-9b7f-47aa-81c9-8d7bce020f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72fe4b26-a833-45fc-87f7-1826b4751bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61a7d63-3bc9-476c-92a0-2d7394fbb1ae",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ccffca4-fcb5-4768-a88f-6e5c61ac6dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb1e4cc-fd05-4db0-b74f-fe9b62511cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa9f528-ef8e-4d37-84ad-42a74116ccad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08e40e67-ca06-4a1c-a538-ec4c71204b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4be30e6-f75d-41d5-955c-8be07b892b26",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69350ecb-dac2-48ee-b5be-79ea9b561afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e657cc28-80df-41a0-ab77-b206d426b322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd2ced1-892e-43c5-b301-79d3bffaa2e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80124481-09df-4d4f-b40e-97846b8c67d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e2324b-5d5d-4eb5-b71e-9ff323992fe5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fc1d49-81bd-4de0-876b-fb718562233d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "219561ad-768e-4b06-9e32-7146064f62a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fd0792-d850-42a9-9d7c-012ec16d074a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f899a5af-0980-488f-b706-de5c2fb42a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80dcf1b1-1b84-4ab6-aa35-a26fdce3d2b7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd687b8-5914-4c55-ac36-52357e330901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5359228e-09fe-4716-abdc-ef7d9047b27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c9e443-f006-4f66-bc54-9e66ef214b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "907119a3-9149-4189-a79b-13a8afd823aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3f1401-8acb-460d-a235-dc23eee84838",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3215f8-b0df-442a-a248-d1ef09fa6ed5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b429ffa5-ac71-4bbd-ad54-9eab3c46715c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "340641aa-7896-4adc-91e8-8d0af76861ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7e3861-2dac-4b92-b790-ca60d821bb2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33ae507-2fc7-453e-9e12-c83798acdce4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6c77dc-ecd2-4696-ad63-2be402cc291e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42844e0c-96fc-4048-a95b-732f9abfab1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b431fe4d-595f-43cd-b65e-0b31d3405ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd23d6b0-fd2a-408b-af6b-6b01b18678b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81eb8e39-a0f2-40e5-975b-53a7e37f7b5d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fee7662-b205-4077-be15-ac805d0a225b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3db3c14-88dc-425a-bc4f-0e62e49e305e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e5db9e-d543-4e9e-9c98-339f66d00467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3225ead3-98ba-4eea-970f-563a76391393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba77bfd0-58fc-4f62-829d-59bde55e3f9d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d79934-4aa3-4fef-942f-8a7c8658b111",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e95fc672-4284-458d-8da5-d2e1193cf36c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09da86e-f275-442e-88a5-32815dacf983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93675c9-a0f8-4f58-8de7-f72af9e3ef0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8da0586-9b1a-484e-b7fd-49b65a2482ca",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174dc49f-5e6d-4396-a898-cc4317aa592f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eaa003d-503d-443f-8c62-551aab4ad459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b3a6c0-9954-4c3e-b77a-4838185b74a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e4451b-090d-4955-80b8-ec3fe9693f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c6ee69-f0e0-464f-bbe1-c4649b87297d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5589d1-5940-4387-81a9-1c9bc5862b2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "027ebdeb-68cf-46e7-9072-129a03d4a07e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d2009e-2e54-4a0a-98bb-d3a3ca1948e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10d55b5-6c1d-4a02-8e25-02fe7b5ba1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9edd99-5ef4-4e4f-bf60-b6ac0b885a10",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538a7d86-1b44-466b-9f0e-aa39074f2c63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfe5987e-36ab-49d5-8c87-31ab60891aa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fee505-3049-4d90-b8d8-ede749ae002c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49cc11ba-512c-4735-b4be-e44140718a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42ae833-a85f-4847-be9b-a7d08448f1c4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c49e51d-0b0a-4923-ace1-003e7e0dd32f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5603983-5ab8-4db2-a0cd-1d155f79a522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f97a150-1f25-4e7a-96b1-56aee35d08c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b2cb6f-e9eb-48ce-8e3d-50bec27df3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5009ac-2024-4344-8d67-d05642ba15df",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67870c15-2a60-4d6a-9d8c-7931092e8a8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ad5e062-0806-4907-b54d-d44f6457a2db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79eb674d-1bc5-42df-a507-e06737f20651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e5100d-2f29-4989-89a5-db855078dacd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34b7c2b-abea-4a1c-8664-ad87aa7c47aa",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fcef8c-7943-4cc6-8161-ede635e42a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd75054e-2d07-4753-a2d5-d07775a01d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b40f76-dc43-410a-9444-0c720aacc911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8caafd4-8a21-468d-b6d2-4424e2172698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c40972-e22a-4e45-977d-7840c874321f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2819502-bc10-4e3e-96bb-249164dfbf5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f434efc9-373d-4a71-b452-05717eac6b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e08b19b-e704-45b2-9bb5-72aa7a1c95e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "545ea1f8-06b9-4f0a-ae9b-5ad46fcf5fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0379a7-342d-4e47-97b7-4998e114de10",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204d5c20-e660-45c4-a35e-88744c45535e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c8775a3-e7c2-4e41-8f9c-f4a94d8229b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4665979f-89b3-4221-b973-ac57d51f7b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d61ad6-0162-45e7-9969-66fa1af353b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acb9794-737a-4490-9a1e-57c798c31923",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9552ca31-38f4-421d-bf30-31c5923b9a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebecff32-5eb3-44c7-9436-30ce5886e258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a667c5-0edc-4ab2-b4c9-bb9b5396f32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61930fe4-2670-4669-80ec-5b30cdf489ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f873c4a2-b0cb-445f-ad9d-624d2dd3f55a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c3d70d-94c0-4b5b-a68f-f228734a8d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0edfb139-0e9a-41a1-b1cd-7f2cef23f04d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9862c355-b80f-4f4c-9ae5-63dfa47d028b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6d0a43-4bf1-46cf-8ac0-4b77b23eb9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26f23b2-d974-4bde-a6bb-6e6e758dc18f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c44a0ec-0b21-430e-b2e7-57230c08c6b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e45ab05-5989-4808-b9d2-dceaa81757b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecfa60a-047e-4edf-b416-4933364fa424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00551cb4-ba02-4181-a3f5-a5b849a01bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d539734b-1937-4649-89e8-bcdef57dfe27",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e69c46-d801-4ce4-9181-0fe712a04b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177d43c7-6a57-4d09-b424-d80af8d1db68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d65b6c-dfb0-401d-9a88-f58064775ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220f741c-71eb-48bc-8357-01cf0ac7791e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7f8be6-d70f-4e8c-b2f8-1819396e0035",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af6e87c-bd62-42ac-b27f-9edfc8c92e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47b3653-c59c-4bf1-84a9-f4d9719f864b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f759bc9-8d50-4c11-9e2e-c19465b2d1c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c2778c0-5e1f-4f38-acfe-4cccb5944a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153eccf0-1401-439c-b204-b909a7f54ac4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9f93dd-a3dd-4e25-99a4-b13eab0a06d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6188d73-2e88-4806-8275-c39261cc8fe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea37537d-deed-4858-97b1-97de21638672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2dd2fd-18a5-4cfe-90a0-54cfda036b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0772c37b-fd91-459f-a78c-44d41708571c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d67a180-caea-43e8-82a1-8dca78500841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf1b1d60-6912-449c-a7f5-490e279e498a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69050667-795a-4bea-b3ad-d42a85e058da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f6d8af-621d-423c-9bf4-6b8596a03af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb91259-712c-42f9-89bc-d6b6e086ee5b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db26009e-9774-48d0-8251-2271e42c804e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2cefa92-e9f1-4f3b-a6c5-5937b2356908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3850ed-3429-491a-b3c0-0c46fd548d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba603630-7b6c-44c6-9f15-908e995b5154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c9767b-ccd2-4b6f-a340-a8de016da54f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af88caa6-3bab-4a16-a645-2e2ed83f14cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8f27ff-24f1-43b3-8a13-bba0c06a80b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fada4fc-a6b6-4bfd-8066-4278bcc6de67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb51cbf9-a27a-4701-99ca-9b9dd91d028a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7700fa4d-538d-44a8-9355-c3d386144ec3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16f1bb9-4bd5-46dc-a905-0c10bd921aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e33c7fe-e663-44ed-a106-289b36f3278e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda72e98-0ccb-4536-9f39-da5d858e8260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35ddba4-016e-415f-b86c-8361816ec28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f79c80a-9cf4-4c0f-812f-8bf8315d02d6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ef4016-1413-4d11-b8db-66f9ae5e9b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a062a8-c21c-4707-8835-c8d931774f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aebf4ec-b09f-476c-8b5a-de9a5a06b504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce489f58-0a70-494a-93de-2cd84856e330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54dd21da-203f-4729-b6e2-e1ec9d045ecc",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd68a26-521d-4cb3-94cb-d2468c86a42d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "530dc75b-71db-47ae-8d60-8c052ebc7033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d132327a-c3fa-4094-b66a-019ff8fe9b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6395fb26-ada0-4e05-b360-d1f5c7403d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965fea0c-939e-4ef7-9950-772f1e1b2300",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4683103b-1c21-451a-9e0e-9a0775a3dcd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346e0700-584a-462b-a6e1-2a8b9597b9ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5604fee9-1cd1-4fa9-b94f-1a06e2d257cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00846d5e-4bcd-464e-bec8-b521e3b0a3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc433f1-df26-451d-a8c6-a86854a121c7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c027d2db-5795-4aa2-a112-0f2d8e1aadde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a969c72-97a4-4e4f-898f-374f48b99006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e926d2-56fa-45d6-910a-77bed9996d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d398f42f-34e8-4f7f-bcf5-097294214e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6951e0d4-38a9-4d3e-bdb3-e934ffaf4880",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d5d36b-550d-4f04-9f72-53a487258747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "448701c1-1e41-4951-af6d-49f0086322f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "794db41a-753c-49fd-85e4-5e707cb610a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56dcf2e9-86c6-4f87-a3d6-295532e7d2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832c0778-ff52-44c2-b1c5-19ca3f1b459a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0ad80b-a2db-4c70-ab88-22937a988021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b789536-f365-496e-81e2-053aedc72857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae397a45-bb03-4a6d-bee7-ded7ba543f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32124a2-0768-4374-ae28-d56ffeb4be47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b363306-f830-44b0-972f-5ad35bde2ea5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33d1e37-5fdb-4c97-a506-08832c23889b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee658ce8-00d2-4925-acca-c7f1cca97550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cfea9b-d9b2-40f8-b074-fa8fb407dde3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b0f41d-36d9-4825-bf23-f4fde1011614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958c2366-2051-4d50-abc2-49094a063a1a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00ca80c-8fb5-4d40-bf3c-dcd68d4f1358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a4fcb4-8e83-4f9c-930c-78f419b6ac3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f4460b-0a1f-419c-9371-533a956d4490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcdc75a3-4828-4a24-850b-f0660f8b7216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591ca8e3-6bc7-4f61-95a5-ffc9f9efb905",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2794e464-5e69-44aa-8a57-256d2e164214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655b8121-2b70-42b9-95d0-2c5b62841f6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ea60ab-4e4d-4499-bdfc-c0e37e9a6338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe46525-6a3d-4bef-93b9-973570203cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477dd780-fdc2-4769-a061-9f31515be48d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cba6d48-5503-41af-8236-ef39878e0672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07cc1e2a-0de2-40fd-a6c6-a345add11652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d893c82f-9b4f-4a88-97e6-7f94ca080717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31923265-1563-4111-8672-239afed288b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aae6939-32e8-41a1-9337-f29ac5d0311f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b89fb91-adc5-42e1-8a92-cff1d48c9b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd4e6c6-cf55-4213-a86e-75afe2614942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b801adc-ffe9-4e30-9f5e-74ecad123bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c24fa3b-2b03-421d-8e9e-c0050c0f2620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1709c47-ed88-4f2d-b5cc-d16b0ad3eb89",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedab59d-c847-4603-be6c-7160e149a1df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a9fca7-990c-4337-91ff-a9af51c0be42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9fa710-4155-489f-9127-a10f75e9b1df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4448c206-4647-4286-a86b-f0b9f19927e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c33da7-abbb-44d4-b9ec-f7990f74c347",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46584cf-d6c9-4d94-9bab-1fbfe2020cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4721a959-5feb-4ffe-a6dc-9ce55c95cf0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "874993fe-dce4-45c5-9272-cc88092a1bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce9c6e40-d260-463d-b406-0f40131e5d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3186cb9f-9ffb-4fd9-a41f-4353e667bc55",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a181514a-a9f8-4000-b180-0c1b6f9dd4e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2a888e-402c-458e-8cb2-417f696c9b33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cf7a23-0ab0-4cd3-9182-26a2e6708b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36513b9-95dd-4aa4-8bc7-dbb1786e7787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561df60a-2ef9-4dcb-a0cf-fadceed346df",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70859ad9-df53-4a4a-b6c8-b11e6c6743d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31671b29-0095-40cc-a8dd-5fb17da9522e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "821b6a69-f3d7-4fd5-b821-35c323ccce9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e363204-f3a1-4d2b-be0a-4f561c8428fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9f309a-b31f-4771-ba2c-d6059dc1468b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23dec63d-1ca9-40bb-ae7d-063d79653b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951256ff-6397-40f7-84f7-d7ab5b045b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18bb0c0-34c3-478b-9732-9978052def67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90055be3-9cfc-4994-a46a-209331a67279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1385ab4-14f4-46e6-8cda-439b819afd25",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25afcb54-8a7f-4083-9a97-2c8569977463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22fc0783-1b59-4024-ab12-697da0658e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cee0bba-a665-46c2-ae6e-339f16e71e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b4a2ce-593b-4f7e-b21e-1de4dec5a38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84a865c-ea20-44b4-bf2a-7d5412878aa5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa072603-53f4-4546-93bc-f2ab503f00f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aefa62c-4e3d-474b-9c08-f01cbc7c85cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "033db163-c26e-4cd8-9f23-37e2da75deb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41621507-20c1-4d8e-ac1b-e2b7833dc883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2184015-300b-4c5b-8e15-f6afa1fe9249",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035fb6a8-6ef9-4f8e-ab10-580d2e138764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0753f8f6-9ed5-4a85-9aef-abee3a001851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ac121a-e8ca-4f82-91ca-82ad45d67237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af687ce-9729-4195-8d11-8b6b9edf52e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6e30d8-06ce-4ec7-a543-859208f54c9f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b3f9c9-dce3-4d4d-bfd3-b9e28c772b2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4960fbf-0dd3-440a-9d12-4ac5d0f7534e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0df426e-7028-4031-ad0e-05d45bd93779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25534c9e-30e1-448c-b160-92b580af2e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d7580a-4468-4bad-864a-e1b65c5c36c5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ebd5b5-37f6-498b-b46f-06145747ef4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f64ce187-d1d9-4a28-9148-1709ba1dfa04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa746c1-fdda-4c5c-aea5-27cfa2dca6ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b2b57c4-03bb-4720-bfc1-7fb64352f043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9d3f30-630e-4b79-a7f5-9328f20e3e19",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7444082-bff4-4c74-baea-20f96b05dfc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0192199b-f36d-4198-ac86-5cfb72c47208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1deb6b-4e31-44d6-83f3-93581081d145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0bc5ae-e0fa-44a5-ae47-895430f2c09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6545802-dd41-4af9-9b3f-470f55af9211",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d156b7d9-227e-44ca-83db-e5786fabb153",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fd05bef-59d9-453e-8003-1259b4e7e87c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9b30c1-6976-48ac-b5bd-897ec3641edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b9daa6-8761-4e7d-b7e2-bb75bc2430e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51142be1-8abb-4d3d-bd2c-9adf582ec3de",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93239633-4197-457c-91b2-21dbb0e6482e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1660074-98ca-40e6-8166-ae7f9e2b1675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "646fcfdb-f97c-412f-8913-d16fbcd2e58a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b881f4e-026c-4efb-9251-d723cec4dfde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e745d60a-64b9-4839-8989-3fca8081809c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a69f7bb-1361-4811-81fe-128c0d5626f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8780ffce-8ef5-46ea-8a14-14b1d736b38c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "305902f7-1837-40a8-bd6e-2aecf36d7441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171d4431-a165-4e43-a90b-7acccd0a5d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716b57e0-2622-4004-aba5-d79fbb5d1a51",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6730fe5f-78e8-4d73-b862-3c666e1336a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecd5ff3d-db6e-47d8-a245-48aa425b37b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "005538f9-ed2e-4e71-a531-d55550900aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4284a054-2106-4b31-8e90-8d851ee3755c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466e1eb3-d8f2-4abd-99cf-8f4ecb19513b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af325b8d-9e6e-456c-9864-5bddfe76170f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a00ae82-014f-4ca3-b4e3-8f5dd2739b9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ac009d-533e-4214-9fca-d717b1404b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e23beb-2462-42d1-be6b-01288ae94650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185c9445-2807-49bb-bbaa-09cac4dd4c2a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9faf7d2-1212-4a91-ae02-32547897b596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "783232f3-cc0c-41f5-a6d1-2cb58191c9c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3334bda0-1516-4ba2-9075-d16ac749806d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5816a35-da7a-479e-98d1-d94053e7b68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a59b5f4-fa19-4910-af75-8d5bf7d45d5a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dafef86-0485-4fad-b4dc-e3c742c42c91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d024ece-8fe8-4740-b6f3-07cce459c4d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45a20dd-99f3-4e47-a6aa-083fe1d9390f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589f561e-b4d6-42db-b56a-5e5d08e9fbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f958eda1-7332-4248-a9fc-bb087b1c96f0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acdfa37c-0a5a-47ed-b567-892e8d9400d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69e93d0f-6531-4af9-96b4-dfce0b3f8ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "977ac849-86f7-4cd7-a60b-8611eb2d9d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2cdf266-91d2-46c3-8d38-ddd3abf30421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6dcb07-522c-4f1b-bdac-853032ba8232",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c200ba34-c613-48e6-aac6-75136ea5ea8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f73acdc-f975-49cb-8a0a-cd0d90e012b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff38eef8-b426-44f1-80e6-c997d43d2492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbea70da-0c21-47d1-9abe-ce2c6983e6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e4c5f3-e2f1-4242-86b8-aa57ba2d7458",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd1dd92-f312-4ed7-8f77-e17ecbc6779c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67eadd71-6198-480d-afef-f0d2e1c64781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff25853b-5290-4ebf-b10b-09898d8eecfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "598c7305-6cdb-4da1-969f-48ef42e04049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c6bd04-e15b-422e-9eda-7582205a1df6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1985db08-20a4-4930-9f16-4e5ca5ae04f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca4b6755-b61b-40a7-a65b-d22f872ac679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c936df8-1042-4561-a370-3be19478fe8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39313801-4416-4e68-9db9-d066dbd5438a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5220a5-9261-4cca-9d45-139f3e42d389",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa9834f-0e8b-42f5-85d8-1aab1f4845a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3928c04-aaf4-46bf-85b6-d9f7a5445b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "937b72fb-f8d3-46d4-b0df-422941c19d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9bd36f-18b4-4f4d-9692-944639e42554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9286b902-f072-4e27-87fb-24a994152841",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da866f0-55aa-4096-85ab-e1fd0710a4d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf5d3cc2-2101-4ed1-8652-232498b3e496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "234fa4bd-d7ec-4006-9b71-688139bfadc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f1d279-e447-4244-800f-50b0b7daa766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7ea1fa-46e0-43c6-b547-222152087c85",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282dc867-0a6f-47d9-b634-0aafd85bed5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f719395a-dc54-4820-b990-f55b7f82b623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2233d74d-7f59-4acd-adbb-a6e1633beef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d2c059e-8b9b-400a-b113-69039d5ded09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4c8d8c-b644-4f9c-9014-9eedfdddb386",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903b6ec1-2072-4822-bf9a-48361cdfd2d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d37a36a0-623a-4e12-a410-f92243afdc67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70e4137-f30a-40e4-b7bc-fa6c94172865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "914cf681-91da-4dc4-a231-053a691d28bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105f6042-1239-4109-a498-977ec8de35d5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6853bae9-8164-4666-b802-e46a8e6dc8b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a693eadc-18a5-4fc9-9bac-42a7b1f15802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "650d6727-826a-4a6b-aeb1-ee7027317cb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f80255-98b5-4f60-86bf-7e62e3c4c04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496e7c2a-e3ec-4ec7-8392-e724c661306c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14befe5-401f-4474-b700-4c9c50f94050",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "793ed969-60f5-4e53-ac7e-fff7e0c9f368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "458fd83d-4dee-47f1-8c11-964cc968abc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0710ff17-b70b-4dc0-babf-6192192422d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b06e394-a9c6-45cb-a229-f1173f5c40d3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122ebd1f-af11-4cc0-b12c-9d05fd592843",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2477d862-0821-44b1-ba47-a9ed930d2ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37756fa2-f263-4084-bb66-c605a16be9e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2257b9e3-2115-4ddb-846c-e72ac7dbfda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e8552d-56d6-49ae-8a75-556acb2818e2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0881a95d-3cbc-4621-89cd-32d0b14aa9c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fe39bef-ccec-44b7-88c4-3d573c52d4e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2a1f85-8055-4201-b275-274039f538b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8f3d0d-ad07-4e6b-80e4-1fcd545744c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8039eb2b-db8e-4f8b-b761-6c92a61e222f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa0c642-1669-4d9d-b90d-ea8147d4e783",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e039835c-b5a6-4a10-a912-35da47536d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8673977-1eaa-49ad-b537-ad3eb90df5df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2c62c3-4091-4ab5-b05d-5a8a2b4194c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8938a4f2-9793-46ec-bb66-72d1a8133bfc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58664e25-e4dd-41ad-ba99-d4bdb5dfedb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89b3d39f-2888-4cd2-9beb-e0d348e99aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9711029a-b451-4ba7-be68-7f9d91eb9555",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c92b1c-c451-4675-b0a1-3301d1896519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fb0e5b-be19-4c66-9437-b737e9fabaa8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7da083-9939-41c1-a03b-12b3e5046724",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae72a221-bb95-41e4-8a5c-911babe949e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0e9f09-2e89-4fc5-9d1c-bd085c3fe4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc29493-f66a-4731-806e-9869ff3f0b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83946aa5-8792-49e5-a7bd-144aaff9edf0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20f0171-d1c1-4624-a192-0a328da162d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16b9bf70-07ea-439f-a93e-e95d8f60fe19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24033b15-1f04-4c20-91bf-86f0eb8036fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64fa87f3-1823-42d3-8d59-b3a5617fd9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2924fb-62a6-43f1-9cba-98ac7b86e54d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ef9470-3d93-4655-931f-35bd24458e2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3b25034-3927-45f1-bdcd-26560625ed3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fbce84-2686-4aba-832b-36cf7e98c417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c4125d1-d115-4b39-9646-95a3ceaf2641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e637b3-9aaf-496a-8128-b661f9c3bee4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed92827c-b348-45c4-a8ce-e9ba4bd3ed61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f401ece-d127-4de3-a9f7-b3e78adce40e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3738631d-9872-4a7e-b501-9e523302a970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417cf587-b83f-47d1-8a74-a9acb132b8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4c21c8-16bc-41ae-a5b3-f3411ce52578",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f56893-4725-45e2-a070-af0d4453ba05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eea4d659-14d1-4bb6-af03-15b01956b84e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f23d675-f93a-4f2f-979c-991e5e2c068d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9bc1abf-b782-401d-97c3-142533fc912c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39351ae4-da9f-4382-95f7-c7a311c733e5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd7b9ab-36bc-422b-bac9-aaeca841bb99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "329c0942-b16a-4268-8692-d61f78eff1a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1ee11f-643b-465b-b5d3-0f4471afea7b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1996b0dc-8faa-486b-bb17-116b1db3bc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18eaa7d-79f3-4315-a767-a580b76d88ea",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94638b25-912b-4fb3-a7d1-e20324d5179c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba1cc033-e73f-405e-8d02-0c503a1ed3b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b819ae90-2a11-4df0-9abd-9cb5a5b9fff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8341f6da-826c-40ec-a633-1493d75750b8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17f9097e-3270-4215-9a0a-4a596a3630f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a12f02fb-dddd-4851-a1d9-1ea23347dbc0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "659d6ee9-95fa-4d2c-bb43-5d6107c66867",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "383545d3-fc4e-45b4-8f5b-633d9cebbd3a"
                    }
                  }
                ]
              },
              {
                "id": "22e49e2e-dccd-4a78-9d20-3352a2f25441",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0857e326-7e77-464f-a9dd-805603f32fff",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1f9e6d-fa13-4473-b86b-4dc4447dd016",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8d7f9fc6-2489-460c-a2c3-68d5c490a71c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec29e49-144f-4267-9a70-6f0bdfec898d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61595398-bce2-4cf2-8e58-7dec5a8d1416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499d72b5-e339-4223-a114-2bd10e24a982",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e74f26b-4de7-4b52-90d0-3f3e20682142",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "37a5942d-20e7-4b09-a69b-d0720d873538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a697d023-075f-486a-a17d-1d3ccfa3d10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd3530c4-8f60-4343-8edd-7e25528e05ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4030cb7a-b985-4544-a923-af2a58d56c92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdd40f74-3f02-41d0-bc0d-fcbb61db499f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac4de8a5-22cc-48a9-8021-e659bc4ea7a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47923147-54e0-4088-8f06-b225f03be16f"
                    }
                  }
                ]
              },
              {
                "id": "62815ada-8930-4aa3-a230-ab522ecdb899",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8fcf961b-c97d-4c66-8d88-f668035a505e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf8e3f2-c47d-485f-945f-e9cc7de06d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6d842386-7b16-44c5-b752-0e90ca1a02e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556418b2-2e3b-4d35-92c1-461905f89421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c9987a-425d-4550-a332-ca842b0ba53f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "83bf8440-eb27-4aad-a201-b9a9b24511f0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "656181a4-b3f7-43a2-a7bd-c663f83e954e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0888ebb-d03d-4a8d-9f29-d8aedebc677d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9b738772-1f4f-4a5f-ba8d-8d2c6148fc6b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c1363de-37de-44c7-9cd3-8dda3dd5f8c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60f99c66-238f-47a4-bec4-1cc234030c7e"
                    }
                  }
                ]
              },
              {
                "id": "6b5b758c-c202-4729-a240-24d2e5f4d10e",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87bb1ffe-ee14-41a0-a3d2-a007adbe8d32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2fab693a-c8a5-4cde-b019-2ac8265c6172"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "793b72e6-b979-4708-b3a2-4ce002b28504",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e8f8366-bb0d-4945-9a21-56af0e598336"
                    }
                  }
                ]
              },
              {
                "id": "4cdce7c6-27d7-4756-96f4-c821140f7b81",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72f3d9b1-4ae6-4db5-a643-c4a4caa2a6dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8c845a6e-ba5b-432d-9c66-c1644a1f51df"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9fdb1bd3-2f51-4ce0-9bf7-39127af735a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86eae9fb-be3d-46cf-83a3-c884cafe9762"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6671da9e-0ce6-4b46-bd31-08ad48a195de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9dd8b98f-1c41-4bf8-acbe-2fe1b25eabde"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36077816-45d8-4be1-89bc-726f292e191c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74277d88-36ee-4b02-a1eb-3ae7ba475129"
            }
          }
        ]
      },
      {
        "id": "0d63cf19-9eea-414a-bb16-230b58ef4082",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f611ac0b-33ea-4a7c-9cef-e8fdc0098e9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98e0b196-29f7-4433-9c79-4485099e890e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2b74b95-d662-487a-b3a0-4b4186b3c86d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9424e7a-6aca-4923-8bc9-198c0a20c83c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9fadd632-cb71-40cc-a5e2-52732ecc9e28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd2de84-ed01-4d53-b75a-114b0bffe6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df61d593-e995-4226-96c3-6e949f478309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbf4073-4606-472d-acf5-6c344b349e02",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2537297c-231a-4444-8b01-02a0d06d7e72",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "40c2aa9b-0188-44d9-89f7-d24790a394cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b84d65-0798-4dcc-92c1-58dc78ca35ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e27ec792-a0f2-4eb8-ac9e-d9e79f19b17d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4e7d6d4-43aa-4cf7-99ea-642dd82a00f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78e220d5-6c7b-4d6c-a714-7555c17dcff8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f4dd279-77bd-4699-a9c7-e906122733cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8ab84b4-d1c6-4992-8b8c-e99d94d67ab6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b24cc07-deaa-4464-8004-ee75a716f282",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c30f4a31-bccf-4a1b-9aeb-9b46b0aef8ee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "adb5d16a-47cd-4945-95e9-ec56e656df07",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23f5b271-66c0-4791-93f3-a17d6b78d3fd"
            }
          }
        ]
      },
      {
        "id": "e813a244-6f46-4471-b22c-97a091c6cf15",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e427d062-3195-43e8-9713-14d246c6e954",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9fdeec27-d0e1-4225-8ca6-ecfe99eab977",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16492bbb-c541-472b-bc3a-ed8037a368ee",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6937e8-2f0b-4467-8463-bcc7875f5d9b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3f7a7c35-7555-438a-8e29-7c329143c87f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f999dd5e-e983-4a41-9c6b-9e26dd6c38a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3323141c-a158-4474-9181-9826abbe307c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed091811-3259-46ea-ab64-a81c118ac83e",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a58f9ef-00be-475a-8b1d-911627b3305f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ee0cfa70-76ec-484b-900c-eddb7821a4c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6883296-b5af-4582-96ad-8ed4ab5776ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f51a59f-911d-4580-a8e1-f26800ded22f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4d7aee2-0791-4f4b-822f-e35bc068b7a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87414261-616b-4c8e-b49f-208ac70d9025"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88282087-5e1d-41d8-a75a-0a1f3db5752e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d1ccdf8-70aa-44b0-afb4-c654dbf99e41"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc3c3509-a837-4f28-bf54-72d0d35df1b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "efbc7a1b-d059-4028-a3f3-5efc2b87def1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "051ebb54-f7e3-4943-aad9-6e4c4a4fa963",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4172812b-f6ad-4dbd-913d-d3d540ae1e7e"
            }
          }
        ]
      },
      {
        "id": "45ec393d-f8bb-4b37-b2da-c4267e2e8333",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2bbf84f8-7b6f-4d97-a099-1a4c3c644b09",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87ce2aa4-7ff0-4d07-9db2-b097318fc134",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2eaa1b74-1896-43e9-8fe9-6043b11af235",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afa1c6d-cf44-4546-a077-342aa9090bb5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a25207b0-9f79-4a3c-abe2-bc8907daa2a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e689569e-e28d-4343-87c6-0a1e1949af27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4b9e881-d146-4a56-a6e9-217667f4345b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a348830-38de-41be-946f-b011a4b862c9",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34359961-24b1-4957-bb98-c379cb68fd82",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3ad6fac7-f3dc-4611-a19d-c39011d5b7bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d225bc-9bf9-47ae-9d9c-34ffbc447e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43b5a3c6-09de-4d0e-997d-e4863723a15e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "246283f5-2948-4df0-a2da-bac8cdd410f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0447bd5-2659-4395-bcc9-53aefec87d2e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82f81644-5202-4c25-9720-5ba3e4b8d6fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b2f13ea-caa7-40d8-b38a-2b812285db94"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74a62ee1-0628-447d-b37f-36a5edb784f5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ab7bea42-7028-49ff-b112-83a92054b4a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53755b4b-fe3d-42e4-97aa-42a3d422bfc2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d66159fd-16ff-4a3d-9ff0-45ee9bb9b36d"
            }
          }
        ]
      },
      {
        "id": "43fa402c-c06d-46cc-8a7c-a4cd006408dc",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81c7ee68-6b84-438e-b9b2-25140402cc4a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f73f27a-1f08-47f0-90f2-e7e30f217478",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8349304c-8673-4a70-a3d7-0998dad7817d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17954c8e-a655-4223-b068-a10b9468546b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d759ccb-6c17-48cd-952a-662fba304f97",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 13
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 446.21072796934885,
      "responseMin": 15,
      "responseMax": 2683,
      "responseSd": 316.48954157005676,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1670287045714,
      "completed": 1670287175190
    },
    "executions": [
      {
        "id": "5199739e-0a45-4575-96e4-f161b13917b3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8042efdb-3d52-4397-92ab-a036f16c9505",
          "httpRequestId": "b2523adb-b62b-4ba6-b53a-a293574f4fe2"
        },
        "item": {
          "id": "5199739e-0a45-4575-96e4-f161b13917b3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "32e2d184-b0ff-4bdf-b92d-bd0567b123f6",
          "status": "OK",
          "code": 200,
          "responseTime": 100,
          "responseSize": 0
        }
      },
      {
        "id": "2638c10a-36c5-4855-af5d-0904c400b616",
        "cursor": {
          "ref": "d49ad865-b0d0-4e8c-88d1-265e3b6bdb4e",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "497ea79e-9d53-4b32-b7e2-e6a31c708d22"
        },
        "item": {
          "id": "2638c10a-36c5-4855-af5d-0904c400b616",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5724dd3b-b164-4aed-939e-257a33d026bd",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "9d037f5c-62ef-4a40-9fa9-b52bedccb54d",
        "cursor": {
          "ref": "5f89558b-a5fd-4b05-a0f4-efb8f6260f77",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "84526558-25f6-415d-aeb7-884dde4bf1bb"
        },
        "item": {
          "id": "9d037f5c-62ef-4a40-9fa9-b52bedccb54d",
          "name": "did_json"
        },
        "response": {
          "id": "a443a019-6e4b-4c16-91d1-91f276a82880",
          "status": "OK",
          "code": 200,
          "responseTime": 825,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388e436e-4a90-4bb0-aa44-38b6e7107467",
        "cursor": {
          "ref": "ea216133-195e-40aa-8794-4364f50bdfce",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "16d39cbb-6b41-4158-b188-2bce30b7705a"
        },
        "item": {
          "id": "388e436e-4a90-4bb0-aa44-38b6e7107467",
          "name": "did:invalid"
        },
        "response": {
          "id": "e62fdea2-42e7-4f1b-837d-f9b913096491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388e436e-4a90-4bb0-aa44-38b6e7107467",
        "cursor": {
          "ref": "ea216133-195e-40aa-8794-4364f50bdfce",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "16d39cbb-6b41-4158-b188-2bce30b7705a"
        },
        "item": {
          "id": "388e436e-4a90-4bb0-aa44-38b6e7107467",
          "name": "did:invalid"
        },
        "response": {
          "id": "e62fdea2-42e7-4f1b-837d-f9b913096491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0aa574-45fd-4200-aa64-285ec278f3ad",
        "cursor": {
          "ref": "43020e41-935d-4738-8e3b-c01606111fe1",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3540729e-3da1-4fdd-bfff-7fa9114270c6"
        },
        "item": {
          "id": "ac0aa574-45fd-4200-aa64-285ec278f3ad",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7192d194-430a-4ced-b937-bab46748e023",
          "status": "Not Found",
          "code": 404,
          "responseTime": 570,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f049ee5a-d866-405f-8c3e-fdaa353138f4",
        "cursor": {
          "ref": "4f75afd1-0ed8-47ec-a3b0-8e6b582a0546",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c6c47097-ab14-4d88-849c-44d7ddcc7a59"
        },
        "item": {
          "id": "f049ee5a-d866-405f-8c3e-fdaa353138f4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "dd8f2603-d3b9-4ee7-b44f-66a1c6925235",
          "status": "Not Found",
          "code": 404,
          "responseTime": 456,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a786480a-4b31-416e-846c-dfa810930ef5",
        "cursor": {
          "ref": "f3e78ab2-efaf-48b3-9b9e-b5b6c8f2ac44",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b6afe2d5-9b9a-4083-bd67-45609dfb7ff6"
        },
        "item": {
          "id": "a786480a-4b31-416e-846c-dfa810930ef5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f28f3f64-ef25-48e3-81cb-9b08654a5d6d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0558442-6f0a-4694-93ed-bef1d3d3a64a",
        "cursor": {
          "ref": "8546f776-12fd-4bda-a00a-2027a3bfffa3",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c71231d9-59df-4828-9869-796c6627f45e"
        },
        "item": {
          "id": "e0558442-6f0a-4694-93ed-bef1d3d3a64a",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "37f4e947-158e-42f8-a23e-43b055c661ce",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 470,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0558442-6f0a-4694-93ed-bef1d3d3a64a",
        "cursor": {
          "ref": "8546f776-12fd-4bda-a00a-2027a3bfffa3",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c71231d9-59df-4828-9869-796c6627f45e"
        },
        "item": {
          "id": "e0558442-6f0a-4694-93ed-bef1d3d3a64a",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "37f4e947-158e-42f8-a23e-43b055c661ce",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 470,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b61325a-1d29-451e-a002-e58eaa568c77",
        "cursor": {
          "ref": "f56e2f22-eb40-430d-a8fa-93c89c072571",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ca141665-9695-4116-be5d-c85398fbb576"
        },
        "item": {
          "id": "7b61325a-1d29-451e-a002-e58eaa568c77",
          "name": "identifiers"
        },
        "response": {
          "id": "c1edd0de-e54e-4629-8358-369cacb1537a",
          "status": "OK",
          "code": 200,
          "responseTime": 694,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e7d14c-8b1d-483a-af9a-4659a4054d01",
        "cursor": {
          "ref": "db5a90e0-f1cc-494c-a22b-2ba9bc0df966",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d0b684a2-ac4c-4c11-857d-8bb5fc8d7e00"
        },
        "item": {
          "id": "63e7d14c-8b1d-483a-af9a-4659a4054d01",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e8ef2eef-59ad-4e39-b248-4f7f0f735636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e7d14c-8b1d-483a-af9a-4659a4054d01",
        "cursor": {
          "ref": "db5a90e0-f1cc-494c-a22b-2ba9bc0df966",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d0b684a2-ac4c-4c11-857d-8bb5fc8d7e00"
        },
        "item": {
          "id": "63e7d14c-8b1d-483a-af9a-4659a4054d01",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e8ef2eef-59ad-4e39-b248-4f7f0f735636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e410d3-e458-4293-a0d0-54f5b57945dc",
        "cursor": {
          "ref": "38f4b0e8-fd7e-48f6-8a97-b95609ee1e2a",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "950767f6-e8b7-49b6-ae04-cbdc270c6505"
        },
        "item": {
          "id": "a8e410d3-e458-4293-a0d0-54f5b57945dc",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "fad16159-c7f6-4d68-a10a-4c195559470c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3099b50b-cf24-414f-82a7-071b1b3e28df",
        "cursor": {
          "ref": "6329ce62-428f-447f-99dc-8ac50d0fb616",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4a1f2b75-3eed-407c-8e08-02c28da357a6"
        },
        "item": {
          "id": "3099b50b-cf24-414f-82a7-071b1b3e28df",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d5e6326b-885c-439b-89c1-611865a79fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1541be-9002-4299-8d4e-3750af9947a6",
        "cursor": {
          "ref": "1e732a45-79a7-4f8c-adc7-f0238a229206",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6ad29ed1-e9de-4e60-bbf3-0b28dc1b02ac"
        },
        "item": {
          "id": "5d1541be-9002-4299-8d4e-3750af9947a6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8deb6679-84f6-49a0-aa62-d1d1b51871ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eceffc0-cbe6-487d-8a89-c08d3a4bdd28",
        "cursor": {
          "ref": "e2254a01-dbda-4fc6-b6ba-26774aed4b62",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "abdbb4dd-ea54-4244-8007-170afa317cd4"
        },
        "item": {
          "id": "5eceffc0-cbe6-487d-8a89-c08d3a4bdd28",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fe6c9805-7243-4e10-a0a6-eae77dcc70a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b47f2fe-ed89-4d86-8829-60d059bf982c",
        "cursor": {
          "ref": "e165fdc4-a235-47fb-a04a-73ba0f518269",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a5eac951-88d2-4b5f-80cd-a68f8c831bc1"
        },
        "item": {
          "id": "0b47f2fe-ed89-4d86-8829-60d059bf982c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ca0f9922-5c32-4d93-86aa-b752a4d971a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5742f592-cb1a-4c1c-801a-71ce139b970d",
        "cursor": {
          "ref": "c01a4c40-40de-42d0-8d1c-8e00ac813f13",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f7d1a587-6537-4a64-9b27-5cdff5e00fb9"
        },
        "item": {
          "id": "5742f592-cb1a-4c1c-801a-71ce139b970d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "faca625c-09a0-4abe-ab0f-58ab0470f110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7de55f3-6fad-478e-a9b5-74611025dd78",
        "cursor": {
          "ref": "4a038456-b3c8-4dbd-8091-4df9b65673cf",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9d65ca96-df3e-4bbe-9026-bf57330d3d3e"
        },
        "item": {
          "id": "f7de55f3-6fad-478e-a9b5-74611025dd78",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "74afc3dd-1441-4f75-92b2-14507a7dfe62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e22a652-e2eb-4134-aaf0-3352d6c9f493",
        "cursor": {
          "ref": "434cca8e-cf20-4393-ac23-33df8a82c7df",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8de121ca-e7d2-47ee-bad9-0875432660d1"
        },
        "item": {
          "id": "4e22a652-e2eb-4134-aaf0-3352d6c9f493",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f6efe064-4464-4394-9dba-34938c1611a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9b37cf-1504-4ab8-870f-7e2f64cdf51c",
        "cursor": {
          "ref": "5c6fb615-07f5-4188-8cc2-40c4402d3ab1",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "902f8209-a4d6-4202-8732-1bade6cd8948"
        },
        "item": {
          "id": "fa9b37cf-1504-4ab8-870f-7e2f64cdf51c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "58743719-af35-4a99-bf17-53158f3ca9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344d529a-3ba1-41a7-be73-855171d7c551",
        "cursor": {
          "ref": "e8d7a1dc-5c0d-48e8-a56a-720e8fb0f5f1",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "94506c98-014d-4149-88d9-645ff72b6b5e"
        },
        "item": {
          "id": "344d529a-3ba1-41a7-be73-855171d7c551",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5c183a14-bfdf-44ac-8f4f-02116c709588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb8a7d1-b998-4bd3-b847-5150381f0868",
        "cursor": {
          "ref": "f2c792b7-e2c1-43a8-bfda-2f2c935c5ae2",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "04826bd2-88ff-4634-ae7b-914c5e21d703"
        },
        "item": {
          "id": "7bb8a7d1-b998-4bd3-b847-5150381f0868",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "102016a3-f125-4c13-86d5-709a9f70a63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9576199d-3934-464e-b568-1f27cebcb11d",
        "cursor": {
          "ref": "0773b15e-dfa9-44b2-a762-f1e958bfb498",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "345f9651-41ca-4182-a648-69edfcbc4a03"
        },
        "item": {
          "id": "9576199d-3934-464e-b568-1f27cebcb11d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "abf2642e-3c7f-4112-bf99-cd85175dedde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f886282-aec3-4f3b-bc66-b483d55f0c43",
        "cursor": {
          "ref": "cba7e0e1-e44c-4485-b1b5-a0e4e4db6b79",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3c69813f-e28c-4440-8470-08d17e9a1c86"
        },
        "item": {
          "id": "0f886282-aec3-4f3b-bc66-b483d55f0c43",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6727ac02-34ac-4873-9cae-15e3c76a96a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74469ca3-d6d7-4c3b-be2a-08bdf7ad4f30",
        "cursor": {
          "ref": "3c87c59d-d744-4418-8d6c-f3eb111df46c",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ff37462e-8b2a-4c7f-9eaf-43197ead5d7f"
        },
        "item": {
          "id": "74469ca3-d6d7-4c3b-be2a-08bdf7ad4f30",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b5a08437-8564-4118-89dd-45cfd77632a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd45348a-28b3-45e3-bece-9118a163367c",
        "cursor": {
          "ref": "fc2b0248-ff58-4cf2-b781-4a33343e9d4a",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4682073c-b91d-4b48-a591-209c6817138a"
        },
        "item": {
          "id": "fd45348a-28b3-45e3-bece-9118a163367c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "33bcb660-db80-4fa4-8c35-0217c35212a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51c2dfa-d1ad-4cd0-a629-facdfec35c02",
        "cursor": {
          "ref": "a033b190-9579-408e-be96-6ff6c8fe61a9",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "68899b22-1658-4b4e-88d4-6894e954d6a0"
        },
        "item": {
          "id": "e51c2dfa-d1ad-4cd0-a629-facdfec35c02",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ed025650-a65f-4fbe-a48d-626cbbd7b20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4711c1-7420-4d62-87d3-b03e12e40f64",
        "cursor": {
          "ref": "f75cd268-3609-4565-9853-20758fdea519",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "00139f17-5c7b-4624-9fdc-c0b7a521eb3d"
        },
        "item": {
          "id": "3a4711c1-7420-4d62-87d3-b03e12e40f64",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bb61c1d5-e82d-4c7e-9409-7e3a65d2811c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b5a50c-031d-4522-ad91-3ef831f23052",
        "cursor": {
          "ref": "e30c8093-fdf7-425c-b443-96a2677abad2",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "90bb5344-6f73-4fef-b0ef-ad4ff27d4037"
        },
        "item": {
          "id": "34b5a50c-031d-4522-ad91-3ef831f23052",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ca025946-ca73-4517-ba9f-cb1171a511ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7059f25-7a5a-49c5-8f2b-cf07d64e4161",
        "cursor": {
          "ref": "d503d6ed-3d56-4111-a8c3-92857591684a",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d7e03afd-5c51-47de-9dfb-8f992d9858ae"
        },
        "item": {
          "id": "c7059f25-7a5a-49c5-8f2b-cf07d64e4161",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "635fb1b0-14e6-45a6-91a4-a36a25fd76e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fcb249f-6202-4511-98bf-561df3348533",
        "cursor": {
          "ref": "f908db19-cd1f-4ad3-a310-9eb63fbdda62",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2f4d5879-9d5b-46e4-8719-1141585e9ee0"
        },
        "item": {
          "id": "7fcb249f-6202-4511-98bf-561df3348533",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a4a228dc-3f4a-4a4d-ba3e-af501fb504b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87638996-80b8-4e24-8a53-c72a21cac4e8",
        "cursor": {
          "ref": "b6fa1958-bf9e-47b5-b874-536529203662",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5678cde3-5438-4ef2-ac77-f8ba11f725e9"
        },
        "item": {
          "id": "87638996-80b8-4e24-8a53-c72a21cac4e8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "56f15320-09fd-4a59-9338-772769731deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c07da09-3f8a-450c-afaf-9fb6b2170a25",
        "cursor": {
          "ref": "3c4b784e-e48f-4e8f-9af1-99e5ac3ea03a",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d231cbd5-23be-4eb1-acaa-be14cc7c2d16"
        },
        "item": {
          "id": "2c07da09-3f8a-450c-afaf-9fb6b2170a25",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b62fe168-74b0-4abf-abe0-f2f189ad795f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34dc9477-b021-4ce9-a149-191d6cecb5a8",
        "cursor": {
          "ref": "960df6d1-1e95-4ade-9c3a-e8da633a5b5e",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e03de308-410f-4650-b542-e480a2270abe"
        },
        "item": {
          "id": "34dc9477-b021-4ce9-a149-191d6cecb5a8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "21dd1343-92fb-4118-a54c-0bb4f353726d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d67042e-50a1-4407-a4aa-541768137838",
        "cursor": {
          "ref": "1f2c45f7-a29a-4ff9-b096-b2b0cb2a0bf0",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "29b71870-d902-4e0e-8be4-c54aca02ef5b"
        },
        "item": {
          "id": "9d67042e-50a1-4407-a4aa-541768137838",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "43546810-ce70-43b2-8e87-99bf4aa6752d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e804d0-f875-4ceb-a21e-560520350425",
        "cursor": {
          "ref": "ca7dab92-c396-437d-bc63-32a818cedb18",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d7e01429-35f2-42a7-b615-4bcc66d07477"
        },
        "item": {
          "id": "03e804d0-f875-4ceb-a21e-560520350425",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "897dee92-2290-4bcc-9d04-bf028896c1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77dad422-a706-4202-8703-a724d3334238",
        "cursor": {
          "ref": "85ad32c9-cf6f-46b7-9d0f-2dcc59851fc6",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "80b3a30b-7922-4e2e-b78e-20879f137e04"
        },
        "item": {
          "id": "77dad422-a706-4202-8703-a724d3334238",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "816b41ab-0ac7-45e1-9ce7-ccb09329e4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8a6c8c-0168-4892-b528-d502cd9995c9",
        "cursor": {
          "ref": "adc3b9a0-1423-4ca9-94e3-f2a234f22bf2",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3be82429-f969-493e-8aa0-1c604f0bfc01"
        },
        "item": {
          "id": "ef8a6c8c-0168-4892-b528-d502cd9995c9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8e527f12-900f-4471-ab0f-0e645b394bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20954eb-1739-44e0-b679-923a1e1efa11",
        "cursor": {
          "ref": "a52f89e8-317b-42ac-b4d2-4d87a8bf93a6",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "222a4d22-65a5-40b2-ac40-46c733f012ab"
        },
        "item": {
          "id": "f20954eb-1739-44e0-b679-923a1e1efa11",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "35b2f312-501a-4ef7-82f1-1d9da3f901a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb77b6c3-9182-41cd-acff-16df09abb6d6",
        "cursor": {
          "ref": "91b312e3-9e08-4296-aaaa-b2fcb399a0ee",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ad8dd411-246a-4075-b8d1-e4eed5e386e2"
        },
        "item": {
          "id": "fb77b6c3-9182-41cd-acff-16df09abb6d6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "29c61b4e-cb6a-41fa-b6cc-f4c139e25410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd3445d-bfaf-4e5e-bb1b-8a1fa20fc938",
        "cursor": {
          "ref": "bf964168-77f8-4811-982b-ff1f1c9701cd",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6461174d-525b-4b6e-850e-fefc378265ca"
        },
        "item": {
          "id": "efd3445d-bfaf-4e5e-bb1b-8a1fa20fc938",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ef3f1c5f-ed03-4d68-8f1a-809af6145cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7294326-9e6c-4d4d-981c-9ff1df95a833",
        "cursor": {
          "ref": "1efbf5b7-f04a-4c2a-93c9-81061b75e736",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "386f0aac-414d-48ab-be2d-423bf406a1ca"
        },
        "item": {
          "id": "e7294326-9e6c-4d4d-981c-9ff1df95a833",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "21fd51d4-f5c7-42d7-b09b-03161ffafe70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f55526-02af-4b92-a1ea-05a2649fe347",
        "cursor": {
          "ref": "6654951b-614a-4bb4-aeab-d81405f5edff",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7ba2c3b9-3213-4959-b002-dabb6075ed06"
        },
        "item": {
          "id": "b3f55526-02af-4b92-a1ea-05a2649fe347",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "60ce6d26-7d13-4184-9051-9c4cd2d077db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f5500c-784e-459f-aeb4-6fd2940eae3b",
        "cursor": {
          "ref": "1b44ffb0-6304-42ce-9ffb-d9e974176ae5",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a676dd4d-cbcc-40e3-987b-057fd6f313ff"
        },
        "item": {
          "id": "91f5500c-784e-459f-aeb4-6fd2940eae3b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4ad7de81-7595-427f-87c6-1d1257c007ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5738ca-62f8-44c2-bc7a-2becdea65e44",
        "cursor": {
          "ref": "b3ab1dd2-cfbc-4835-a42e-b147919ff925",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9b3f1a27-31d4-4b0f-a732-675ea50593bb"
        },
        "item": {
          "id": "ad5738ca-62f8-44c2-bc7a-2becdea65e44",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "391162f6-dd53-4d5c-bbc8-50b574ce07e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253f9158-316e-4396-8ab8-54100083834b",
        "cursor": {
          "ref": "39ba7742-b56c-486c-8e24-5fb3f687eb8a",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e3a11f19-100f-4a7a-b103-e6777a0bc8e5"
        },
        "item": {
          "id": "253f9158-316e-4396-8ab8-54100083834b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0e810bde-e9fe-47a7-bf0e-77e8337dfa94",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 538,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0c3668-3de6-4ed8-8eaa-229e9f12f107",
        "cursor": {
          "ref": "76667399-dbd5-45e5-81d0-936d5bf3b27b",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ceb8d13b-1c3a-42aa-b34e-5c1121689577"
        },
        "item": {
          "id": "3e0c3668-3de6-4ed8-8eaa-229e9f12f107",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b81fd97f-d23e-4038-8db7-a2413c7a1c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8feb6013-157d-4bc1-ad53-d66fe3aece8b",
        "cursor": {
          "ref": "ab15e3c6-a3c3-4bd5-9a08-9fb1ba12b00b",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "802899c3-11be-4540-aac2-c1ca8c4304ba"
        },
        "item": {
          "id": "8feb6013-157d-4bc1-ad53-d66fe3aece8b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d6bbda81-9f4b-4e5e-ba0f-85a9b2d02323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a386802-7580-45de-adc6-f4f89927a404",
        "cursor": {
          "ref": "da87242f-14a0-40d0-9092-9c1db710c4fc",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9647b558-d127-4c64-b5d6-f69dc6a702b1"
        },
        "item": {
          "id": "4a386802-7580-45de-adc6-f4f89927a404",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1541c0a1-fe02-4183-ad35-c02b9eb4f92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1d823e-58f6-44a0-b29a-7284af48a61e",
        "cursor": {
          "ref": "8e6dd41c-379b-4ddd-beca-f81973ca7e76",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "da09e1c7-977f-4c39-8b6b-cf3222a574b1"
        },
        "item": {
          "id": "2d1d823e-58f6-44a0-b29a-7284af48a61e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cb07ece4-d771-4793-8c1d-9354b5cc65cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114c185a-efb8-435e-93c0-f49864c4110f",
        "cursor": {
          "ref": "d43918cf-0a67-449a-b71f-e71a724df4a3",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "100c3d7c-e9e6-4b2c-bece-f424a19bc0c3"
        },
        "item": {
          "id": "114c185a-efb8-435e-93c0-f49864c4110f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ca763f84-c227-41da-888a-50556e92064e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d1f100-184d-4b18-b9ee-f59b26ee9e6b",
        "cursor": {
          "ref": "8ac289b9-e025-420e-bd4d-c84101b63547",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "065bb8f5-8e9b-4f7d-ba6a-b3a7c12ec182"
        },
        "item": {
          "id": "74d1f100-184d-4b18-b9ee-f59b26ee9e6b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0919c9de-17eb-42bc-8e3e-42c810a73792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb5b1c7-7888-47ff-aa51-54d33063b207",
        "cursor": {
          "ref": "ce547a48-f0c5-4ea5-84b7-2dc9878dfe74",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1de59930-c914-465e-9575-a5132dc8833e"
        },
        "item": {
          "id": "cdb5b1c7-7888-47ff-aa51-54d33063b207",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "10420367-cd16-4158-88c0-52f5425c77e9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 539,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63892e2f-c21a-47d4-b5ea-a6c31a7b0f44",
        "cursor": {
          "ref": "956bd275-f19e-40c8-9dfe-c4e80cebf7a8",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "523c1e78-ef96-4b60-99ea-5ed90ccdb2ba"
        },
        "item": {
          "id": "63892e2f-c21a-47d4-b5ea-a6c31a7b0f44",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "23916292-2209-4a67-b423-8f74c8f1d05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5bb3fd-e005-4eab-a5a2-7b375994033f",
        "cursor": {
          "ref": "89ba0fc4-e2bd-4094-8185-aa395bceecc7",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fafd6463-7216-47ff-938f-b782f0a321a0"
        },
        "item": {
          "id": "5c5bb3fd-e005-4eab-a5a2-7b375994033f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b1878718-cb52-4b6d-bf92-e137818d212e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc14a550-9085-4369-9eda-2a6edff26610",
        "cursor": {
          "ref": "aef9bbfe-353d-4b94-9355-0972c9d9c658",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a1fda2bf-57bb-404b-8674-f5fa186b6406"
        },
        "item": {
          "id": "fc14a550-9085-4369-9eda-2a6edff26610",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "19a66592-8baf-445c-a7e7-8047902d6d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92580841-0979-4a88-8200-b5264479afa3",
        "cursor": {
          "ref": "acdfdf3e-38c3-472c-8d10-22e553c2538c",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9ff97803-ceb2-4522-96f1-e4bec584cfc1"
        },
        "item": {
          "id": "92580841-0979-4a88-8200-b5264479afa3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cc51bbab-80d3-4079-a097-010be3e6032f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4952b88b-f3ab-417a-9cfa-f466c95997b2",
        "cursor": {
          "ref": "7edc62ad-247c-4cc8-ba4c-1c6ab5d52e64",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "37099327-8f3a-4844-85f9-870c2f72273d"
        },
        "item": {
          "id": "4952b88b-f3ab-417a-9cfa-f466c95997b2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a3cd355e-8a16-4a69-8a7c-1415f1059b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ae19c7-9520-475a-96a6-a4725cd6c1f8",
        "cursor": {
          "ref": "972ce48c-6555-4bfc-b927-adb01b9d183d",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "423962fb-f2e9-4378-87c9-df1ab5d06f2b"
        },
        "item": {
          "id": "44ae19c7-9520-475a-96a6-a4725cd6c1f8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1fb3e55b-afca-4b61-b5c8-a061a244cd34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4b3467-fb0b-4025-8881-b247bdbe9df4",
        "cursor": {
          "ref": "e1d063bb-1ea3-420b-a6f0-18b960c11930",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a3b4343f-6fd8-417d-8166-1ef8eb09ab56"
        },
        "item": {
          "id": "1f4b3467-fb0b-4025-8881-b247bdbe9df4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "91ef3b05-65d9-4ff9-9eff-d457e43fc898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e32e17-a5b9-4f18-908a-d96cc49d68ab",
        "cursor": {
          "ref": "d0605331-3bfd-4dec-8133-b2049dae8224",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "33c79fc5-9ce2-4cbc-8f37-8bd852614bd2"
        },
        "item": {
          "id": "52e32e17-a5b9-4f18-908a-d96cc49d68ab",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "afa920a0-1838-42dc-ab90-7e1a9c098d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba07981-e318-4a7d-922b-6bc48bc0c8ff",
        "cursor": {
          "ref": "29e0fbdb-e3db-47c6-b5b1-ff652a7c3843",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b1836146-aa11-4bba-befd-13379a51888b"
        },
        "item": {
          "id": "aba07981-e318-4a7d-922b-6bc48bc0c8ff",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4587d37a-5a83-4eb6-b287-034c26cd3c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da32c03-735e-4790-a782-d10f6bc23fdc",
        "cursor": {
          "ref": "c53a077a-616f-4545-9795-1fcacacae02a",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "72ce9153-f84f-4d4f-8a21-6a3cde7ee654"
        },
        "item": {
          "id": "0da32c03-735e-4790-a782-d10f6bc23fdc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9da88b63-83b4-458a-8de2-3f332f5df1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00d4ef3-4add-46d3-95ef-ec04a3a2dbbb",
        "cursor": {
          "ref": "76a633b9-a2e9-43ea-9208-ec3cc3b5ea72",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a3f97106-fbfc-40a7-908f-49bced83cdb3"
        },
        "item": {
          "id": "a00d4ef3-4add-46d3-95ef-ec04a3a2dbbb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f65f5328-b05b-46c3-b193-8c5247f4c074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3ae227-f6fd-4785-b162-ad2fc3096e6e",
        "cursor": {
          "ref": "977c3b22-e2c3-4ffa-bff6-b52cfe334a26",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "fdeb522c-651b-49e9-bf38-2f390319fa24"
        },
        "item": {
          "id": "5a3ae227-f6fd-4785-b162-ad2fc3096e6e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "56ad4007-dba4-4cdf-90a5-247763f306af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300f9331-9b53-4ed8-8bb3-678513b3e0b7",
        "cursor": {
          "ref": "f811f393-8d8e-471b-b267-ac32559b7ccf",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1e585e8c-ba53-40ae-856d-b342f5dddd7f"
        },
        "item": {
          "id": "300f9331-9b53-4ed8-8bb3-678513b3e0b7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c0b91cec-6869-4a65-b85e-d4763eaedf5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631fcb9d-c8e9-4146-8f06-3aabad951f3d",
        "cursor": {
          "ref": "9b0b2326-e3c7-4089-b0e0-bacfab808e45",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "80b73bf1-3fdd-4bb6-b94f-99e647649534"
        },
        "item": {
          "id": "631fcb9d-c8e9-4146-8f06-3aabad951f3d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d234c1d1-067e-4328-9d9b-6bb7193dfe79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a4d370-d63d-415d-9b67-4d7592df792e",
        "cursor": {
          "ref": "11f1e370-52da-4db3-ba8c-da0d9dea643b",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "35af5288-5643-499c-b51b-d7bcd0ddd15a"
        },
        "item": {
          "id": "11a4d370-d63d-415d-9b67-4d7592df792e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "85d45018-1dc3-4e91-87f5-1d6a7c260b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3601d14e-8670-4bb6-92db-46595911a8bd",
        "cursor": {
          "ref": "40ae4946-49c3-4766-8241-26971219fcc4",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f983cd95-1f97-4623-9b5e-e28133919ef2"
        },
        "item": {
          "id": "3601d14e-8670-4bb6-92db-46595911a8bd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "86e472f0-90be-441b-bf0a-4924191deffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a25a63-892a-4a75-9d15-ad63a133f650",
        "cursor": {
          "ref": "59535604-2336-4efa-a28f-872638ee4318",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c08ba46e-1075-4dbf-92af-3372e9e59012"
        },
        "item": {
          "id": "d4a25a63-892a-4a75-9d15-ad63a133f650",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1cc6282c-6b0d-4292-9e0c-f51061e333d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a063b78-3e89-41d9-9e7d-7f4f15dc0e88",
        "cursor": {
          "ref": "dada3018-ffcb-469a-b742-9dd4b1f32e7c",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "dd6aa593-8fe2-47cd-9676-951ecb49560c"
        },
        "item": {
          "id": "5a063b78-3e89-41d9-9e7d-7f4f15dc0e88",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6a260f50-9464-44b8-a00a-92dc0032f7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c08bd3-f32b-4705-a7e7-6cada47364a9",
        "cursor": {
          "ref": "a9a1e5e3-894f-42dc-a93b-4ed310d9339a",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8c667de5-dfc5-41e5-86b6-39f671b65605"
        },
        "item": {
          "id": "66c08bd3-f32b-4705-a7e7-6cada47364a9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "31bfa186-c9bf-419f-b925-2e9f4f3f3764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511464e4-8e8c-432a-9043-621693abcc99",
        "cursor": {
          "ref": "2cc366fe-c5ba-4c96-8955-dd1d42a7dddf",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "52950117-f739-4b14-92b1-cd06a26ad98b"
        },
        "item": {
          "id": "511464e4-8e8c-432a-9043-621693abcc99",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "82fcb9c1-2f23-4ef0-a7c2-5b07b4e9d5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d9505d-8ff0-4e44-a2f2-dd72e60ddb63",
        "cursor": {
          "ref": "dc953b29-65cb-4f32-abf9-40277293a24c",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2bb3cea2-0071-48bc-aa79-87873b57bf5d"
        },
        "item": {
          "id": "74d9505d-8ff0-4e44-a2f2-dd72e60ddb63",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ce128469-1fd0-4b93-ae0e-512657507f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e88d761-3ee4-455f-8eb1-9e1f8a790477",
        "cursor": {
          "ref": "c670660d-a221-4fa3-912c-71a67390f70a",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e1f22108-1928-4636-ac6c-680e8ad82983"
        },
        "item": {
          "id": "7e88d761-3ee4-455f-8eb1-9e1f8a790477",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4abcea10-dabf-4c4c-b3b5-096565d8cf2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719b71f6-316a-4a41-9f88-44684eb7d5e8",
        "cursor": {
          "ref": "9d941834-89bf-4cca-8b80-14830ec8a77e",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8ae1d6d9-8257-4553-9b5f-ef18daf3922c"
        },
        "item": {
          "id": "719b71f6-316a-4a41-9f88-44684eb7d5e8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3bf61b02-55b1-4f29-b3ad-003474cfe1cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13728644-b316-4c0b-bee7-a86862eb0440",
        "cursor": {
          "ref": "ddd66f37-593c-46d5-afa2-d38949404d9d",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "674beb02-a06d-449d-9f63-d35f13e96625"
        },
        "item": {
          "id": "13728644-b316-4c0b-bee7-a86862eb0440",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "61fb715b-7a11-4fa1-8752-ba10dce8baa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f319cdac-e9ff-4ab3-bc5c-adec602ec61d",
        "cursor": {
          "ref": "4edfc4ad-fbd7-4879-8925-8833097fb649",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "badea806-de8f-47ba-bb09-ed80df50328d"
        },
        "item": {
          "id": "f319cdac-e9ff-4ab3-bc5c-adec602ec61d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fc62700f-d530-4718-aaa2-a2c21fd72d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 869,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6956e276-512f-492e-828c-e33290365d43",
        "cursor": {
          "ref": "75f1e770-c689-4036-b0cd-29e1a1858539",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "de10f3d2-4db4-4576-abcd-391262d8269e"
        },
        "item": {
          "id": "6956e276-512f-492e-828c-e33290365d43",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8caf6531-0d15-465e-bf84-aa2d688a419c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2d20be-43bb-4b02-8e3c-b21697e2339c",
        "cursor": {
          "ref": "58c35f4d-e2aa-4cfc-af65-597abf2187ad",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ff439d60-d0d8-4e34-9144-71113af86536"
        },
        "item": {
          "id": "fe2d20be-43bb-4b02-8e3c-b21697e2339c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2a97b928-03ee-42a9-b0d3-121fe6e37a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b14843-fd88-4ff9-b2c4-3269e26a6f4e",
        "cursor": {
          "ref": "17a24fe3-a980-4ba1-b803-905ee553a28e",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b03b7fec-e884-4c86-8812-1591d670c62f"
        },
        "item": {
          "id": "89b14843-fd88-4ff9-b2c4-3269e26a6f4e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "28a4211f-4c5d-4a3a-9738-f411e19fb72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 734
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc903ae-1e8f-48e3-8f76-9a2392886390",
        "cursor": {
          "ref": "25ca38fc-bd3a-4674-a376-53fb625d7ba0",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8745754b-c2c6-4533-a4a7-85ae7f9ae82c"
        },
        "item": {
          "id": "bdc903ae-1e8f-48e3-8f76-9a2392886390",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "88001a85-9cb4-435a-bfb6-0857e73ffe9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 736
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdfa556-42e6-46e6-b9db-b9b741361077",
        "cursor": {
          "ref": "a2b644a5-4fc9-48fe-8378-25e09cfe587a",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "18bc75cc-6217-4094-aa31-a0ee06390ba9"
        },
        "item": {
          "id": "6cdfa556-42e6-46e6-b9db-b9b741361077",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6249374e-2007-485c-8bf7-fec41e892e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 734
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3315002c-ee7d-4505-b476-d0d90f1c8ddf",
        "cursor": {
          "ref": "eb00c288-b3d5-4bd1-8b8b-5f0366c83925",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "96b68384-3a22-4215-9489-10bfc6048aa4"
        },
        "item": {
          "id": "3315002c-ee7d-4505-b476-d0d90f1c8ddf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8403a66c-8a52-4eb6-bcad-87c4ab5428d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f0a415-7e4a-4dfc-a061-e59c0547b1b4",
        "cursor": {
          "ref": "1389aaa0-2a1e-4b8f-850e-0a3a120fe8bd",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e98d3ced-05a3-4fdf-9167-9ddda5455cdb"
        },
        "item": {
          "id": "e5f0a415-7e4a-4dfc-a061-e59c0547b1b4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7cd21198-e9c4-41f7-b206-b2001670e085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878bb15b-7372-4c77-bf2a-638aa05a0880",
        "cursor": {
          "ref": "534d1aa5-c5e1-4180-a080-e438ef7f3018",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "66eaa460-4bbf-4ea0-974a-5cc59daf0c7e"
        },
        "item": {
          "id": "878bb15b-7372-4c77-bf2a-638aa05a0880",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "52b86641-d0a9-4fd1-9470-e6bb4ce5fada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24298a4f-d102-4032-95c1-0b027625e630",
        "cursor": {
          "ref": "50c80bfa-2459-4b1c-a499-bc3c1ea59d01",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "aa724cd5-f32b-4625-b623-96919c376151"
        },
        "item": {
          "id": "24298a4f-d102-4032-95c1-0b027625e630",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "db2020b7-b373-450a-b3ab-6e6022a7194b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbd3f4d-12b7-48a7-885b-88d69757c20a",
        "cursor": {
          "ref": "93efa4bd-2796-49cf-a8e7-61dddde37201",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "041bf883-722c-4079-9530-42c0331a900d"
        },
        "item": {
          "id": "9bbd3f4d-12b7-48a7-885b-88d69757c20a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6f011137-61a2-4cbf-951c-f6891bb15516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600fdcf5-0a0c-4b66-b1e4-89224677867b",
        "cursor": {
          "ref": "4e2284b6-1ad7-4bf4-9437-712ddcf61179",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "408b9ece-1d29-4251-b955-ffae909808bd"
        },
        "item": {
          "id": "600fdcf5-0a0c-4b66-b1e4-89224677867b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3c714270-f81b-4075-9a68-cd53850f867a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83b3b5c-0aa1-4f51-b5fc-bfe668c8380c",
        "cursor": {
          "ref": "d3cac8fe-a76e-41fd-bc38-afa875843226",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8c7ade7f-1f68-4fc8-83cb-ce3ee44d8c90"
        },
        "item": {
          "id": "c83b3b5c-0aa1-4f51-b5fc-bfe668c8380c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ad469e1f-bf79-4c34-abda-9042ab79d249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3c22fa-e85c-406e-baf4-e68d044c8231",
        "cursor": {
          "ref": "cc74885f-8c1b-492b-b35a-b639c0acc78a",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5fb104d1-c02b-4249-9eed-1992228dba77"
        },
        "item": {
          "id": "1b3c22fa-e85c-406e-baf4-e68d044c8231",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "78f83231-dc7b-411f-8bc5-41a9c82bebf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e280a7-2f51-4a2b-9e69-309e5e44da18",
        "cursor": {
          "ref": "545116f2-c532-4ed3-a2cb-18b777e639a8",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "af4ef958-f0b4-452e-8da0-faf2d3849934"
        },
        "item": {
          "id": "d8e280a7-2f51-4a2b-9e69-309e5e44da18",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a29e306b-3cc9-4209-89df-f1f8047a6c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ab97c4-c8ce-4efb-9997-78ce0681bcef",
        "cursor": {
          "ref": "13455142-b247-4704-8eec-704052fffcfb",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8f3983f5-c7ba-4ad0-bf43-6fdf49cfcf5d"
        },
        "item": {
          "id": "81ab97c4-c8ce-4efb-9997-78ce0681bcef",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b3b93b2b-b176-4949-a33d-54ee91a2f8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0639aa7-262c-4ac6-b001-c49697e7b92f",
        "cursor": {
          "ref": "5960b48d-db5c-4cd0-ad56-58211c8bc599",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f7aed18e-b678-4f7e-b0f8-2a128c15cc27"
        },
        "item": {
          "id": "b0639aa7-262c-4ac6-b001-c49697e7b92f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1fb88141-f4dd-4552-964f-4173a84c7ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae95382-7937-4805-a226-2e3f11435b56",
        "cursor": {
          "ref": "55a33175-c833-4b82-9ac6-65ff10e71958",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5a0582da-151b-4f88-aa09-4d880c2862ec"
        },
        "item": {
          "id": "7ae95382-7937-4805-a226-2e3f11435b56",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f084a90d-38b2-4816-9ecf-cbd2173b8a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d04fa14-d8c7-4c68-879d-ea9373007904",
        "cursor": {
          "ref": "3813a4f5-b25f-4eef-afa3-6f8ef591a528",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1c257a44-7d65-406a-a0d0-d43863915d71"
        },
        "item": {
          "id": "9d04fa14-d8c7-4c68-879d-ea9373007904",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ca558dbe-99c8-4891-8078-ee15f58e959f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bb8116-b6af-445d-a62f-83d67a4739bd",
        "cursor": {
          "ref": "6121e457-d4e9-4cec-996e-2f88607caa99",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "718bbd50-53ec-4a81-bc48-9aae7d311469"
        },
        "item": {
          "id": "69bb8116-b6af-445d-a62f-83d67a4739bd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a00d37a6-0b0d-45d9-89eb-0ba614909214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 873
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6181295-38dd-44ab-af84-31dbedfe39d5",
        "cursor": {
          "ref": "f885898f-ce1b-4e33-9969-062f153ded81",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c58bf518-0ead-42f2-b619-765dcec817ba"
        },
        "item": {
          "id": "c6181295-38dd-44ab-af84-31dbedfe39d5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "86e72c9e-67f7-417d-b051-6533b23ac48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 850
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4569a914-3e7b-4f77-a4cc-2236a8c1e44a",
        "cursor": {
          "ref": "627cccdb-4658-428c-9e8a-2aa41ebd7042",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "20fb5dc6-e442-4754-8648-6d1fdb040d7d"
        },
        "item": {
          "id": "4569a914-3e7b-4f77-a4cc-2236a8c1e44a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5065e15f-178d-4cbe-a04e-de3ef8c326a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 847
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f126c5d1-712e-4813-861b-6ddd3e89b9bb",
        "cursor": {
          "ref": "6e82bc3f-e092-4f4d-bdb1-c1409a21d117",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "896a2ce3-bf8c-4bfd-9c99-913b58a4b09b"
        },
        "item": {
          "id": "f126c5d1-712e-4813-861b-6ddd3e89b9bb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "14f84405-89a9-4e67-8a80-23f2e6fcb859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 849
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d536d06d-b4c4-4cdd-ba6c-39d9b0d2bf2a",
        "cursor": {
          "ref": "7df30b62-7e0a-49c5-b9b3-a43d773dcf45",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "547ba004-4db3-48d2-8e66-84eb8bf757b1"
        },
        "item": {
          "id": "d536d06d-b4c4-4cdd-ba6c-39d9b0d2bf2a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c3c6c4e0-f89d-4cf6-9ef0-500d815b7aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 847
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd32f1b-c158-4fc4-a578-11fe76df6495",
        "cursor": {
          "ref": "02b2b202-c332-4dd2-b4e0-5a4f8fbf62fb",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "40f32603-56a4-4ebf-8b5d-68be9b92e104"
        },
        "item": {
          "id": "1bd32f1b-c158-4fc4-a578-11fe76df6495",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "66ddcae4-0071-420f-a353-3688e1d265e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4fcbbfd-bf67-4549-b2c8-18b399e8f77c",
        "cursor": {
          "ref": "53936e29-b79f-4efa-81c5-2e4bbb5a846c",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f9155b5d-e6c1-4e11-87ba-732cffa654cd"
        },
        "item": {
          "id": "b4fcbbfd-bf67-4549-b2c8-18b399e8f77c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "dc4a195c-ad9e-4d2c-aaa2-c655c2f11feb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd6dc43-78d3-4cbd-8571-a33dc77e4da1",
        "cursor": {
          "ref": "53197756-91ae-4cf2-83bc-f82a768a8852",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1610f258-b98c-4aff-8335-145be5a94030"
        },
        "item": {
          "id": "5fd6dc43-78d3-4cbd-8571-a33dc77e4da1",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "09aa3418-0394-43bd-b52f-45ea6687af19",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 502,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d64379-0f68-4028-a41d-8440f003ba13",
        "cursor": {
          "ref": "3e2e93c2-a1b6-4fe7-94a6-8ae8572c9e94",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6f073244-3f95-4226-bd02-878c867400ec"
        },
        "item": {
          "id": "c2d64379-0f68-4028-a41d-8440f003ba13",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b39d0f51-6194-4041-876b-6f5c409a3ee3",
          "status": "Created",
          "code": 201,
          "responseTime": 2380,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "76443d28-7af6-4d7b-bb69-c6e9deba3bcd",
        "cursor": {
          "ref": "19e0a97b-8adf-4b9d-bbb7-e8846d0eb253",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "89c4e26c-feee-44e1-b4a6-57b5301be7bb"
        },
        "item": {
          "id": "76443d28-7af6-4d7b-bb69-c6e9deba3bcd",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "d0752b8e-2044-4aa6-956a-a226419a7ff4",
          "status": "Created",
          "code": 201,
          "responseTime": 2326,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "19ab8103-e134-49d9-9c2b-9163f0258fdf",
        "cursor": {
          "ref": "f4186150-fe7c-4089-953f-b72840196356",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "30b5699a-4c75-4b0b-b9ad-1e3f944185fd"
        },
        "item": {
          "id": "19ab8103-e134-49d9-9c2b-9163f0258fdf",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "310fa747-5960-45c0-8f70-b9d7be8af7d4",
          "status": "Created",
          "code": 201,
          "responseTime": 2069,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "90d3a6f0-5000-43e1-bc45-e445e854ab50",
        "cursor": {
          "ref": "d05e2bfe-a461-441c-abd9-0b79a1c3b62d",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6aaf43d2-fab7-4120-811a-5cc569300d5e"
        },
        "item": {
          "id": "90d3a6f0-5000-43e1-bc45-e445e854ab50",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4f827008-dd16-4b91-b960-f6a0b587bc8f",
          "status": "Created",
          "code": 201,
          "responseTime": 1995,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "93ea45b6-2f27-41f2-9250-ebd4c4331e77",
        "cursor": {
          "ref": "5fef9bb5-2cbf-41dd-8c85-c58f35deb2c8",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8fa8cff0-ceab-48e2-8ec1-854c75f15e50"
        },
        "item": {
          "id": "93ea45b6-2f27-41f2-9250-ebd4c4331e77",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2a5381b6-124f-4541-842b-1413736ef6e3",
          "status": "Created",
          "code": 201,
          "responseTime": 1997,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "ce0268e4-164d-42cb-8280-832dfb40f96e",
        "cursor": {
          "ref": "249804c9-9302-4d40-a92b-583e744dc56a",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b88556ae-d8a4-4f0f-9240-24a6c5f79117"
        },
        "item": {
          "id": "ce0268e4-164d-42cb-8280-832dfb40f96e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9157584a-41ba-4fce-8a98-da5bf315cd02",
          "status": "Created",
          "code": 201,
          "responseTime": 2683,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "31a0b8a3-5d14-4ae6-acd5-48a4073f13ac",
        "cursor": {
          "ref": "677ff27f-e718-44cb-9a62-c0c7fc00d039",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d38a3523-8a0f-40f0-a49f-71fa582f3d33"
        },
        "item": {
          "id": "31a0b8a3-5d14-4ae6-acd5-48a4073f13ac",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e2a882ff-c0c5-4fcf-bc43-9afb9b907de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a0b8a3-5d14-4ae6-acd5-48a4073f13ac",
        "cursor": {
          "ref": "677ff27f-e718-44cb-9a62-c0c7fc00d039",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d38a3523-8a0f-40f0-a49f-71fa582f3d33"
        },
        "item": {
          "id": "31a0b8a3-5d14-4ae6-acd5-48a4073f13ac",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e2a882ff-c0c5-4fcf-bc43-9afb9b907de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9c88c7-878f-4db9-b754-302fdcb862c8",
        "cursor": {
          "ref": "7e5a553c-780b-44a7-a321-d324c9ce1404",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "56bbb529-519c-4e10-897d-e96e4dc28d76"
        },
        "item": {
          "id": "6e9c88c7-878f-4db9-b754-302fdcb862c8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a5c9cc60-7080-46d7-8a43-4c0718a380bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c8908d-5b1a-4a97-9d59-99e63194178a",
        "cursor": {
          "ref": "ac026bd0-cba7-421e-a400-4c81f6999d7f",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "95c29d36-4e0f-43fc-b1ae-549424694714"
        },
        "item": {
          "id": "24c8908d-5b1a-4a97-9d59-99e63194178a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2f954f1b-aebb-45f0-aef5-53ccbd66827f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2d4d50-8167-4ba3-926b-e0475dccd5d1",
        "cursor": {
          "ref": "6b59a6a8-a425-4156-989f-5a14fdf1b652",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "821bdd98-d660-4287-91d0-285bbe2fa01b"
        },
        "item": {
          "id": "af2d4d50-8167-4ba3-926b-e0475dccd5d1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6878e9e8-0dc1-4a2a-88ab-70ae2478cd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a31206-554b-4972-bc96-57874cd1be5d",
        "cursor": {
          "ref": "f9cab00c-ed18-4d26-9a05-28a5621ba884",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5ec55249-ca24-4c82-aef3-4432baddb66b"
        },
        "item": {
          "id": "33a31206-554b-4972-bc96-57874cd1be5d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c4d7fb6e-29e6-40b9-8004-9d3ae935be9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86c441e-d27f-420d-bf84-fb329d479af5",
        "cursor": {
          "ref": "71d86ec0-e6b7-45fe-a546-85452bce4425",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5a353fa9-eda7-4d2e-a327-b257782f7e72"
        },
        "item": {
          "id": "d86c441e-d27f-420d-bf84-fb329d479af5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "33e22cfd-7b97-482d-a3d3-a588ac32f41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb649da-eeba-4d61-863e-022ec830d0a1",
        "cursor": {
          "ref": "ca743388-5b76-4874-849a-2ada213ba083",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b363b54a-6aed-41bd-bead-22bbad4560f5"
        },
        "item": {
          "id": "0cb649da-eeba-4d61-863e-022ec830d0a1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4f62ca2d-a2e9-4ce4-b56a-b130e54b9bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384a2614-574f-4e15-a090-fcd5b2033030",
        "cursor": {
          "ref": "ca4283f9-e7e9-4fd4-9d24-b10192263ba4",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "edf9312f-8bb4-4ccb-83a9-9911ee494a6b"
        },
        "item": {
          "id": "384a2614-574f-4e15-a090-fcd5b2033030",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7ce97e3d-e019-42da-af6f-52371f907979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324a4e35-d769-4517-a3dc-b6ef8bd82f84",
        "cursor": {
          "ref": "23ebbf49-24c7-4730-b5f3-fd81eb131a1b",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "25ed54cc-4469-4499-846c-85ac4e8d662c"
        },
        "item": {
          "id": "324a4e35-d769-4517-a3dc-b6ef8bd82f84",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3b3ffcfb-1830-47bc-b7b0-87c0daf133f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409e268b-a31c-4944-bfa1-3bb83b99c42e",
        "cursor": {
          "ref": "dc23542e-e479-473c-82e7-4d6cb109b42d",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e143c3f5-0d60-421f-ac87-8d808abf5046"
        },
        "item": {
          "id": "409e268b-a31c-4944-bfa1-3bb83b99c42e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7a22b4bd-af6e-4dbb-a8dd-c97c7052512c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0359fe89-a4ec-4c06-8880-41025b066202",
        "cursor": {
          "ref": "34f6816a-94d2-4bb2-8c84-b8c48b709ffd",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "21e3f21b-8fab-4675-875a-55744f70ecb8"
        },
        "item": {
          "id": "0359fe89-a4ec-4c06-8880-41025b066202",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fb13b577-6944-49a7-a379-01e8a355fb96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a926ed03-b39e-41be-82db-af18df947544",
        "cursor": {
          "ref": "0343cd2d-b2d2-4140-8bf3-f0222bb6cbaa",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "eab622a4-e9dd-4b5d-acef-a636cb02ee70"
        },
        "item": {
          "id": "a926ed03-b39e-41be-82db-af18df947544",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "de0e1d69-5316-41ee-a6c7-d3c3ef8e00fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e469cb2e-37c3-42c1-9955-0634efae55da",
        "cursor": {
          "ref": "4cf022d1-e916-43a5-a048-9e2eccfaf6fd",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "38f4ca88-3597-4c28-9209-3c4afdc4b65c"
        },
        "item": {
          "id": "e469cb2e-37c3-42c1-9955-0634efae55da",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "98357be1-f957-4a57-ba14-baec4065112b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68919fd7-8a56-44d4-aca4-891558ba0cf5",
        "cursor": {
          "ref": "e4f495ec-8cc8-4640-ab96-081a4f540440",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0d4ab809-4c0d-4a55-8d5f-403fd882c4bb"
        },
        "item": {
          "id": "68919fd7-8a56-44d4-aca4-891558ba0cf5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ba4a8771-0841-4f76-aa65-f5b1f952d25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2647ad2b-d130-40a0-a21b-d29af8c7f965",
        "cursor": {
          "ref": "047ff414-7431-4b6e-b765-2d0d0a893496",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "45b95fea-529b-4809-8a0b-0bdbe3ec152a"
        },
        "item": {
          "id": "2647ad2b-d130-40a0-a21b-d29af8c7f965",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2f4963a0-2ad7-43f6-835d-d43694c56db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67889d9d-a564-4604-8f85-2da367cd0cc2",
        "cursor": {
          "ref": "941b0c56-852f-4c59-8719-5027731b89c2",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3a1b3ae3-3807-4e56-8700-d396192f073c"
        },
        "item": {
          "id": "67889d9d-a564-4604-8f85-2da367cd0cc2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "957fffec-870c-4293-ba84-f3f08f71cecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7755e6ce-fa4a-4c73-9f1c-c6d80656381c",
        "cursor": {
          "ref": "5b9c64c5-989d-420c-9b74-65229b35a57a",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6bb0d37b-1c4c-4526-b1c8-44514c9cbd63"
        },
        "item": {
          "id": "7755e6ce-fa4a-4c73-9f1c-c6d80656381c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c22e04a6-129c-4615-a648-fd1fc7ccdca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e100c11-ff73-42d4-a1ca-d32cdeaed3ce",
        "cursor": {
          "ref": "51a0baae-c592-4d92-972f-c8733c5e3593",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d9b3a25a-d642-4f00-9ac4-1daafe661e15"
        },
        "item": {
          "id": "4e100c11-ff73-42d4-a1ca-d32cdeaed3ce",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "643d1702-8c80-4402-bfee-e13878892a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8ac6f9-bb39-4d8d-89a3-04799eebe619",
        "cursor": {
          "ref": "1c9968de-a567-4d80-8f39-2ae3b767d261",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "aa7d0d6a-ef0e-4fb9-9236-19d0e9612316"
        },
        "item": {
          "id": "1b8ac6f9-bb39-4d8d-89a3-04799eebe619",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5d404cb7-c406-44fc-9b76-1d3fe7f86237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889b131c-4246-4161-9f42-7e2f063d98dc",
        "cursor": {
          "ref": "ae0807e9-83f6-4ff3-872e-0215a86fff02",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "01c122bb-bfd1-4af4-a25f-7ddc5680e718"
        },
        "item": {
          "id": "889b131c-4246-4161-9f42-7e2f063d98dc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cb93feda-8cf3-4387-ae08-02946999dbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4729a42e-2507-42ec-8c27-dffec5ca7365",
        "cursor": {
          "ref": "d2cf8783-71a9-4fd6-8847-77ade04e395d",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "89013b35-cc22-426b-8af4-6015b17006df"
        },
        "item": {
          "id": "4729a42e-2507-42ec-8c27-dffec5ca7365",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7928ba7a-31ef-4ca4-9d94-c18dbec1bb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274965a4-dccb-4ad4-bc43-4d980472b817",
        "cursor": {
          "ref": "e10f6e32-39c9-4b7f-b178-0af0204450c3",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "17021917-e88e-4951-b042-47fcce29d918"
        },
        "item": {
          "id": "274965a4-dccb-4ad4-bc43-4d980472b817",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "003e287d-684a-42f9-a29b-aae530e58b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a7ec0d-9fe9-4c9a-b645-98b460f368dc",
        "cursor": {
          "ref": "9327275f-f063-4b8c-a92f-58ae08b5d0ef",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b6e92f01-a63e-4a9c-b1b3-25bd27eedf2f"
        },
        "item": {
          "id": "f5a7ec0d-9fe9-4c9a-b645-98b460f368dc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "83c01a78-9d79-4610-9edb-f0df12942f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9d06ea-48a4-4eca-af5f-602786d34422",
        "cursor": {
          "ref": "868f644a-fa63-4275-b5c0-1c0832bf1ea2",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "32073d90-acb5-4bb8-beda-d3fe1dcff422"
        },
        "item": {
          "id": "ff9d06ea-48a4-4eca-af5f-602786d34422",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0e9cf028-4a25-457f-a31a-7a29ec0aae35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e4d92f-e80d-4f6e-bcfe-d70e37212b79",
        "cursor": {
          "ref": "cdbd0640-cf45-4fbe-a9d4-45ee77905913",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "010ab863-915f-4179-9d64-2cb08f887db9"
        },
        "item": {
          "id": "03e4d92f-e80d-4f6e-bcfe-d70e37212b79",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b35d0348-53cf-4f5d-90cd-2f89084fbe59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be6643e-2861-419a-b0a1-a3403a1ddf81",
        "cursor": {
          "ref": "ecdfc363-2c8f-4570-8fcf-b916a852c75a",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f9254814-5c2b-4123-a21c-fdf9f3c7c6c7"
        },
        "item": {
          "id": "3be6643e-2861-419a-b0a1-a3403a1ddf81",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "deedb21c-2625-457e-b3e2-f98d234733a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c39a244-8c6c-4edc-b87a-82abcb94e0d3",
        "cursor": {
          "ref": "993ea3a4-4818-4b1d-999c-ccc234904730",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "44688dbd-ffd3-4c4e-92f9-bf388e9f8499"
        },
        "item": {
          "id": "1c39a244-8c6c-4edc-b87a-82abcb94e0d3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "63c65696-da8b-44f0-8588-08e10bdf40ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75de904-f5b0-4ad0-ad83-f3b78b3dd1e6",
        "cursor": {
          "ref": "c017ab18-006a-4e9d-ae89-02744e87eb89",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "40d10bc7-91ed-436e-98f1-4c92c4e79cc1"
        },
        "item": {
          "id": "f75de904-f5b0-4ad0-ad83-f3b78b3dd1e6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "beb19b53-2b81-4916-b450-5585c1c450d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f99acb-9c2f-4499-8880-36b6721d4e77",
        "cursor": {
          "ref": "a155204e-08db-4720-a7fa-1f450f7d3282",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9f5a0a56-291d-4e05-9270-497d2634cb51"
        },
        "item": {
          "id": "d8f99acb-9c2f-4499-8880-36b6721d4e77",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e6bdd2c1-b81b-4ca2-8b5e-ce22007eed5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff1c9f2-8b43-4a54-988d-ace431716215",
        "cursor": {
          "ref": "f0bebbd4-1f71-47eb-98b4-b3bb272b86e6",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1ef80b15-8bbd-4b07-9bb2-bf9075efdc7c"
        },
        "item": {
          "id": "2ff1c9f2-8b43-4a54-988d-ace431716215",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bc4fd4d0-e549-4cbc-898b-bb3333accbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7112b693-048d-485b-9b9e-7e7178425dc5",
        "cursor": {
          "ref": "c530823c-adac-42da-8677-2bd672b52048",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8e004349-8a5c-4f44-8220-874576e08f6e"
        },
        "item": {
          "id": "7112b693-048d-485b-9b9e-7e7178425dc5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "171310d6-7b26-4ccd-9eec-20d5ccb816dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a6f423-70ca-4a02-bf08-089150c28a30",
        "cursor": {
          "ref": "bf46c1d2-70ea-47da-9b99-46045a88727a",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c0b64365-7c63-4b0f-ad8b-fc4036ef1413"
        },
        "item": {
          "id": "e3a6f423-70ca-4a02-bf08-089150c28a30",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ad85a2ea-95b4-4176-ac17-cffb1f9e7958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49489b1-eeb4-413e-96c1-0e1445322227",
        "cursor": {
          "ref": "3f1e1817-0a70-4fae-be9d-e12042c6154f",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4c27ddf8-f023-41b2-a3a0-c0aa31bef1e3"
        },
        "item": {
          "id": "a49489b1-eeb4-413e-96c1-0e1445322227",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "aa68d156-d73d-4014-8228-e2b8efb27370",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae348405-bdda-4947-a5d6-d8d7ede4b73a",
        "cursor": {
          "ref": "d0e95e22-e415-4199-8b12-2072b66a6f97",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a7a72820-2993-45b7-b0e0-05225807a33f"
        },
        "item": {
          "id": "ae348405-bdda-4947-a5d6-d8d7ede4b73a",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "54d1d661-09d5-40ac-99cd-894766ccf632",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 509,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d566faa4-3cb3-4188-bd3d-ffb95863caad",
        "cursor": {
          "ref": "060f372e-8e7f-4d0c-9511-db267e40b802",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1c813899-fcef-4a58-b5b7-22adb8ce32c2"
        },
        "item": {
          "id": "d566faa4-3cb3-4188-bd3d-ffb95863caad",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "eca4fb8e-47ce-4b40-874d-c3935435083f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d566faa4-3cb3-4188-bd3d-ffb95863caad",
        "cursor": {
          "ref": "060f372e-8e7f-4d0c-9511-db267e40b802",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1c813899-fcef-4a58-b5b7-22adb8ce32c2"
        },
        "item": {
          "id": "d566faa4-3cb3-4188-bd3d-ffb95863caad",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "eca4fb8e-47ce-4b40-874d-c3935435083f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffce512d-fa3d-4175-a688-feb453bdcbad",
        "cursor": {
          "ref": "9d8a914f-0025-4091-8b20-146d9b13c07f",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c6bec6ff-00d4-41a0-ae4b-2d6dcd366bf2"
        },
        "item": {
          "id": "ffce512d-fa3d-4175-a688-feb453bdcbad",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "72a479b1-c4ce-427a-b7ce-bcf05c2a37d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6860b15f-f763-4c0b-a6d0-2f9316c6c55b",
        "cursor": {
          "ref": "e5ed7c3a-74ef-4675-b40e-99d18e8cf8e6",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fb53b0ba-3b87-4302-ab1d-b38d48c304fa"
        },
        "item": {
          "id": "6860b15f-f763-4c0b-a6d0-2f9316c6c55b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d1a68355-9af1-488a-9591-bd7f565b0aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd7cf9a-4a55-4530-b517-50676bc5f77f",
        "cursor": {
          "ref": "e2982f53-5144-4dae-b6a9-612f14851ca2",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "55553603-bda8-4dcf-9297-888c4fcf684d"
        },
        "item": {
          "id": "5fd7cf9a-4a55-4530-b517-50676bc5f77f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0a719b3b-c5a8-4670-8dd6-81f20c9b4630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a78278c-5047-487a-aff3-a552e76a7f5b",
        "cursor": {
          "ref": "716bfab6-b44a-4d5d-a029-33417397f703",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a04840bc-c143-48bb-a011-07c33aa347d3"
        },
        "item": {
          "id": "9a78278c-5047-487a-aff3-a552e76a7f5b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0503ab93-378f-44c2-a063-c78d92cf62ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952518c2-476b-4944-b919-58046465a889",
        "cursor": {
          "ref": "1ce97c21-2c11-4084-bd3f-c8e2e09b1d59",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "dfdc881d-5c44-4178-9321-6c4aefc693d4"
        },
        "item": {
          "id": "952518c2-476b-4944-b919-58046465a889",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "52467763-5ac0-49f7-98e5-0ea1e4965db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c695ce-a7f9-4a13-ab59-0efcee04d427",
        "cursor": {
          "ref": "92e6da87-6429-47cc-b93a-0dde8ccae880",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7ce9cb15-d24f-465d-9932-c6ef0baaad5c"
        },
        "item": {
          "id": "51c695ce-a7f9-4a13-ab59-0efcee04d427",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2a5e7a19-2c1b-4bb3-8575-0c5921d7db3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5723c875-e90a-4538-8ae5-5f1cdaff5aa2",
        "cursor": {
          "ref": "841b0467-2b9e-49ce-a24b-bc7da82e3a37",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3c7a5056-8700-41e2-80bb-d9d8afff6a30"
        },
        "item": {
          "id": "5723c875-e90a-4538-8ae5-5f1cdaff5aa2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e0e010f4-da7b-446e-93dd-6d60c0aedddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88addb99-f5a4-408e-b011-99ab2f53be48",
        "cursor": {
          "ref": "d8633ad1-2272-4419-a905-86cdc5ad3b2a",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b55a3883-5f23-4556-a810-c11a8955ec86"
        },
        "item": {
          "id": "88addb99-f5a4-408e-b011-99ab2f53be48",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "33490fd1-5327-4d9a-8276-64ad68c824fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed3ac7d-4d96-4bb8-8798-4a17349f520e",
        "cursor": {
          "ref": "88aabb01-6a74-4f4b-819f-c4ac73ba556f",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cfd21c84-c338-42c4-a3cf-01e7f79ae4cb"
        },
        "item": {
          "id": "6ed3ac7d-4d96-4bb8-8798-4a17349f520e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "60878499-fada-457a-befb-d2b9ff5d0fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54f15aa-fd24-4306-a901-b5093b7ff6c9",
        "cursor": {
          "ref": "267395c1-38d6-4680-8f4c-dfc4a3b3b5c5",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c685d6f1-d96b-4e8e-a865-e60086a6ba06"
        },
        "item": {
          "id": "d54f15aa-fd24-4306-a901-b5093b7ff6c9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e824bb52-6507-4500-a622-74b32fc1cbc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a9d744-fed9-4209-aff2-2f9f4272ec68",
        "cursor": {
          "ref": "6d448ad5-7136-4833-a1cf-8500bc899bae",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "eb8350ff-22fb-4c8f-9924-35658e677dce"
        },
        "item": {
          "id": "b3a9d744-fed9-4209-aff2-2f9f4272ec68",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "18cb6261-6bdf-45be-b5e4-050a0dfe6378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80fa2d3-ba23-4e8e-8c1a-30eac40cdd58",
        "cursor": {
          "ref": "136f55c9-8e20-41ff-b86e-baa833525254",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6709d71e-3fea-478f-a5f4-d1bf5389e81d"
        },
        "item": {
          "id": "a80fa2d3-ba23-4e8e-8c1a-30eac40cdd58",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "72c1a5f3-975d-46b8-ac61-55d1976ef47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1843
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423c75f4-28c8-443d-8abb-5a864801459f",
        "cursor": {
          "ref": "f9b671ad-7ff1-4bf0-83ed-ab8cb1988ef5",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b6fbc51b-5528-474c-8f5d-c69f3f9bfe1d"
        },
        "item": {
          "id": "423c75f4-28c8-443d-8abb-5a864801459f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e559b913-6d5c-4a75-a470-72ac04df9ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1833
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd5bef7-80bd-4e26-8c67-b4febc0f4c8d",
        "cursor": {
          "ref": "671258f0-c805-429c-809b-ee1c6a091ef5",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "153d0e6e-be0d-4012-8c2b-2147db088559"
        },
        "item": {
          "id": "acd5bef7-80bd-4e26-8c67-b4febc0f4c8d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0e1b1380-1fb6-478d-975b-c3ce6bde7bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1832
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b43db0-5896-4958-b231-8b53b635a363",
        "cursor": {
          "ref": "9206bb4f-a353-4a2a-a12f-6376fe3ee84c",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5632455f-9130-40ef-b2a4-bc255e0b8e22"
        },
        "item": {
          "id": "b6b43db0-5896-4958-b231-8b53b635a363",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a21ab438-b4fc-4568-8de0-2bbf2ff3b5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1833
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b696cfa-7df0-406a-bbc5-2b306fd339db",
        "cursor": {
          "ref": "5b49fc54-2e93-4236-984e-bc1874051f9e",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9d788248-453f-4809-b0cb-5671faa5e071"
        },
        "item": {
          "id": "9b696cfa-7df0-406a-bbc5-2b306fd339db",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e3464edf-d146-427b-aec2-d23d22ceed04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71e8af9-1d6c-4725-8eca-377df7ba725e",
        "cursor": {
          "ref": "d4451eab-7416-4448-b51f-16789dc746be",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "967171cd-a00b-4f1a-b8f5-9b73525a77ed"
        },
        "item": {
          "id": "d71e8af9-1d6c-4725-8eca-377df7ba725e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "89aff022-02fd-47c7-8c67-ff65914c6d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0c9b09-01be-4fce-8bd5-8f0dda108ae5",
        "cursor": {
          "ref": "f48d6e7f-0c00-4334-9ac9-574a7624f4f0",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f4da88cd-a085-4ddb-8902-cd606e36e37e"
        },
        "item": {
          "id": "ec0c9b09-01be-4fce-8bd5-8f0dda108ae5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f0e4fb7c-d03c-48c4-bc85-8fa5bb1e1068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa614aaf-56f6-42d6-96c9-6bb72355f12c",
        "cursor": {
          "ref": "dc8e2aac-0e5b-42b0-be5b-9d91ee78127b",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1594db1c-eb1a-4b6f-bf87-994873079773"
        },
        "item": {
          "id": "aa614aaf-56f6-42d6-96c9-6bb72355f12c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4c9a65e2-935f-4f73-8f52-a1631f45983b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98a57a4-ea11-4d39-8ec8-921a1830a236",
        "cursor": {
          "ref": "68a32238-724a-4905-b4c3-aac6ed9276dc",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "83ce7ff1-7ae6-4eb0-95a3-fd2925167c86"
        },
        "item": {
          "id": "e98a57a4-ea11-4d39-8ec8-921a1830a236",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "248ec2b4-3ff2-4540-959a-9117690723c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61a7d63-3bc9-476c-92a0-2d7394fbb1ae",
        "cursor": {
          "ref": "55aae7dc-dac9-4de9-a8f6-e284b3085d43",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d7956d00-2e18-4ca6-8574-668a660884f4"
        },
        "item": {
          "id": "a61a7d63-3bc9-476c-92a0-2d7394fbb1ae",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a5efdc97-6bc1-4869-92b2-ece2a0d06dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4be30e6-f75d-41d5-955c-8be07b892b26",
        "cursor": {
          "ref": "6bab2467-de30-4ee7-b98b-6a9db216941d",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "cbc187e8-7437-4da7-8902-7cb30c018eae"
        },
        "item": {
          "id": "c4be30e6-f75d-41d5-955c-8be07b892b26",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "87fe18fa-a7c6-4acf-8691-d62430dbbc9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e2324b-5d5d-4eb5-b71e-9ff323992fe5",
        "cursor": {
          "ref": "c8990e92-437a-43d8-8dd1-f54ff6c7e5ce",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a5698e88-a298-40db-8627-70078ba52200"
        },
        "item": {
          "id": "25e2324b-5d5d-4eb5-b71e-9ff323992fe5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "97fd9ac7-2724-4f53-bc07-7c1ca3c5da12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80dcf1b1-1b84-4ab6-aa35-a26fdce3d2b7",
        "cursor": {
          "ref": "56c4020c-08b6-4f40-90a7-12e14ec50427",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bd5dd9c1-dddc-43c9-8bd6-30f35e151c5a"
        },
        "item": {
          "id": "80dcf1b1-1b84-4ab6-aa35-a26fdce3d2b7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3c181b48-5153-4c10-81cb-50949ac67267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3f1401-8acb-460d-a235-dc23eee84838",
        "cursor": {
          "ref": "712c3ebb-8bc8-4dc1-97ed-e3f777cf7659",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "490e7d41-9c20-4ea6-9eb2-6ff8def53d42"
        },
        "item": {
          "id": "da3f1401-8acb-460d-a235-dc23eee84838",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2e88b28d-14e8-41a4-ba1e-e45543749a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33ae507-2fc7-453e-9e12-c83798acdce4",
        "cursor": {
          "ref": "921ff656-fa7d-4cce-b368-0e5e097e3ee1",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a6f27697-8279-43e4-ad9c-59f8e297ac16"
        },
        "item": {
          "id": "b33ae507-2fc7-453e-9e12-c83798acdce4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8931d3e6-8c0a-49eb-bb00-49dbbb029d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81eb8e39-a0f2-40e5-975b-53a7e37f7b5d",
        "cursor": {
          "ref": "806dec3a-dfdf-407f-86ab-481384fb3ff1",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e11e08b3-7c35-4d16-9ca5-7f60582e4935"
        },
        "item": {
          "id": "81eb8e39-a0f2-40e5-975b-53a7e37f7b5d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8ae8431b-9bdf-44bc-bc69-a86785fd1989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba77bfd0-58fc-4f62-829d-59bde55e3f9d",
        "cursor": {
          "ref": "a55a0ffd-6ce6-41df-b0f1-06fe41717646",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "cde9920a-0bfb-47a2-b718-3d4c0a2e4f61"
        },
        "item": {
          "id": "ba77bfd0-58fc-4f62-829d-59bde55e3f9d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "58053e9e-7a34-487b-8af0-5a194e44c8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8da0586-9b1a-484e-b7fd-49b65a2482ca",
        "cursor": {
          "ref": "d3900f1d-5035-43a4-a05e-faa7644e5af6",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "110af0c0-9dc8-47b5-8033-59b91a636ea1"
        },
        "item": {
          "id": "f8da0586-9b1a-484e-b7fd-49b65a2482ca",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "50787047-d99c-4e18-9ec1-dda972a591c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c6ee69-f0e0-464f-bbe1-c4649b87297d",
        "cursor": {
          "ref": "f9d2f22a-6d74-4b07-ba89-f34674b68563",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fe7d2031-b165-4378-b48b-dfdf935e62cf"
        },
        "item": {
          "id": "17c6ee69-f0e0-464f-bbe1-c4649b87297d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a9129e6a-a796-4a29-a2ef-18cbc421aaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9edd99-5ef4-4e4f-bf60-b6ac0b885a10",
        "cursor": {
          "ref": "9cd460a0-5dc5-4f00-9ed6-4159c18f7f52",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "cf8c0f5c-2559-447e-866b-6d78c4483597"
        },
        "item": {
          "id": "8c9edd99-5ef4-4e4f-bf60-b6ac0b885a10",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "41bf275c-b151-43b0-9e7b-edf3ad0ebbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42ae833-a85f-4847-be9b-a7d08448f1c4",
        "cursor": {
          "ref": "c4197d75-54d2-414e-8d12-a26ceafddaae",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9876d12d-a9d4-4ee7-9746-3ebc52355409"
        },
        "item": {
          "id": "a42ae833-a85f-4847-be9b-a7d08448f1c4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "649d77d1-7b55-41fa-8037-0a50255b3aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5009ac-2024-4344-8d67-d05642ba15df",
        "cursor": {
          "ref": "a29efe12-8fbe-4357-a8c4-4e4f6b9d210c",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5013b96d-50c5-4a20-bf47-9f79bc647185"
        },
        "item": {
          "id": "9d5009ac-2024-4344-8d67-d05642ba15df",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "aacc4ed8-842c-46a4-94c0-5674676c1d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34b7c2b-abea-4a1c-8664-ad87aa7c47aa",
        "cursor": {
          "ref": "4aa0aa98-5841-446b-96c8-1766caa36cd6",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a6aacd23-5846-4a24-9f91-c79db6e61537"
        },
        "item": {
          "id": "e34b7c2b-abea-4a1c-8664-ad87aa7c47aa",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0a71dc21-b63d-490f-b895-e025c76e6ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c40972-e22a-4e45-977d-7840c874321f",
        "cursor": {
          "ref": "01a0bfe4-0663-4df4-81a3-b8dc92b4f8c6",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f171b5eb-fce9-4238-a02e-d9b373c62d17"
        },
        "item": {
          "id": "e4c40972-e22a-4e45-977d-7840c874321f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4cb797ea-191f-4fb6-afd0-09215ed977a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0379a7-342d-4e47-97b7-4998e114de10",
        "cursor": {
          "ref": "a221932b-14d0-463d-9209-f78dbb8404ed",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7d79a610-8ba0-4e3c-b10d-3e7e30961321"
        },
        "item": {
          "id": "fa0379a7-342d-4e47-97b7-4998e114de10",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fa5d492e-007b-4473-a571-757828e11e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acb9794-737a-4490-9a1e-57c798c31923",
        "cursor": {
          "ref": "2c51b60e-8d8b-4d40-b980-05657414f394",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d699dbe9-90d5-445a-8ea7-b82393ba42f3"
        },
        "item": {
          "id": "7acb9794-737a-4490-9a1e-57c798c31923",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "dd2382c3-c9a3-4379-a3d9-3f563ab0f067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f873c4a2-b0cb-445f-ad9d-624d2dd3f55a",
        "cursor": {
          "ref": "52a4d185-70a9-446f-83ad-6e8980892270",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bf426118-6c6f-4ccb-a18b-9d596dec762b"
        },
        "item": {
          "id": "f873c4a2-b0cb-445f-ad9d-624d2dd3f55a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b7c4e423-6fe2-4808-b29a-a16223fcf4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26f23b2-d974-4bde-a6bb-6e6e758dc18f",
        "cursor": {
          "ref": "dcc5d5c5-3838-4113-b597-74c84a82fc1d",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "792ac4df-f922-47d9-84a5-32dda7192766"
        },
        "item": {
          "id": "b26f23b2-d974-4bde-a6bb-6e6e758dc18f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cf23708e-9ecd-48bb-a35a-2518b152501f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d539734b-1937-4649-89e8-bcdef57dfe27",
        "cursor": {
          "ref": "ec537425-5787-4cf0-bbd3-092ed98186f6",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1932e289-8f8d-4513-ae47-2a5b773c4921"
        },
        "item": {
          "id": "d539734b-1937-4649-89e8-bcdef57dfe27",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e66d35e0-d16f-4b09-b2ca-40db5a5989a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7f8be6-d70f-4e8c-b2f8-1819396e0035",
        "cursor": {
          "ref": "c8eeaf31-3bec-4836-a63d-046a2702f077",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "40afe3b6-8906-4276-96ed-5678ecee4f3d"
        },
        "item": {
          "id": "4b7f8be6-d70f-4e8c-b2f8-1819396e0035",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "87cb6910-f964-4c1b-80c4-d3a9fece1a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153eccf0-1401-439c-b204-b909a7f54ac4",
        "cursor": {
          "ref": "91104696-f8e6-4eac-841d-4aaaee392246",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b1eb4b62-ceb7-4181-a6f4-6e8f3243af5f"
        },
        "item": {
          "id": "153eccf0-1401-439c-b204-b909a7f54ac4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "278b859a-769d-48ea-8e76-b41b5e4f96e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0772c37b-fd91-459f-a78c-44d41708571c",
        "cursor": {
          "ref": "5bbb4f1a-bd7b-4510-9c88-5e333e31e6d4",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "effe803c-9ec6-4436-82e3-2956df6695d1"
        },
        "item": {
          "id": "0772c37b-fd91-459f-a78c-44d41708571c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "cb118c1d-9c41-4f0e-9a29-0fcb4e02326e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb91259-712c-42f9-89bc-d6b6e086ee5b",
        "cursor": {
          "ref": "d89de359-9176-4ff1-90b9-6cfac958d138",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1190c3dc-6bbc-48c0-b18c-71b948770418"
        },
        "item": {
          "id": "9eb91259-712c-42f9-89bc-d6b6e086ee5b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a1313423-a899-442a-b2b1-bb42815cc014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c9767b-ccd2-4b6f-a340-a8de016da54f",
        "cursor": {
          "ref": "1967e20b-ad82-42b8-a3f4-bc059d88b8c2",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "91115d77-acd4-4bf8-971e-1be4a37a9fb1"
        },
        "item": {
          "id": "56c9767b-ccd2-4b6f-a340-a8de016da54f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "08b05b53-57ab-47ea-a5ef-7a4cdb6ce720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7700fa4d-538d-44a8-9355-c3d386144ec3",
        "cursor": {
          "ref": "a1dee058-e2b3-4b2f-a63f-9057e11b89b0",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b1f37a78-1a88-40d9-9ab5-da9d736ec2cd"
        },
        "item": {
          "id": "7700fa4d-538d-44a8-9355-c3d386144ec3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d8eaaaa7-c9cb-48e5-8b2f-9b03540933d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f79c80a-9cf4-4c0f-812f-8bf8315d02d6",
        "cursor": {
          "ref": "f2726c2f-4ff7-45ca-8f6a-5418aeab0c3d",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "edecf7d8-e414-4b38-89b3-464380447a76"
        },
        "item": {
          "id": "8f79c80a-9cf4-4c0f-812f-8bf8315d02d6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4d9c8f72-eb0b-4f50-8293-4da3054e02e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54dd21da-203f-4729-b6e2-e1ec9d045ecc",
        "cursor": {
          "ref": "5c9607ad-53ac-4265-a9c5-7bb03172ee02",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "172daaae-fe20-46c5-b09f-8f16edaaed16"
        },
        "item": {
          "id": "54dd21da-203f-4729-b6e2-e1ec9d045ecc",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ab61f7db-aeda-4903-bad2-777be094b4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965fea0c-939e-4ef7-9950-772f1e1b2300",
        "cursor": {
          "ref": "7e5dac30-8f39-4753-95a7-cac7813700da",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ab86325b-e51e-4499-9f63-8a935e7677c4"
        },
        "item": {
          "id": "965fea0c-939e-4ef7-9950-772f1e1b2300",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3ac2bf9d-f2b7-4ed3-8530-1bfd9def424b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc433f1-df26-451d-a8c6-a86854a121c7",
        "cursor": {
          "ref": "5dcf4095-9b56-47f0-80ec-0bd9b774de93",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ae0c5882-6b69-41cb-9e07-718f2c8e041a"
        },
        "item": {
          "id": "1cc433f1-df26-451d-a8c6-a86854a121c7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "eb520d4c-9457-4a63-9592-f883573ded1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6951e0d4-38a9-4d3e-bdb3-e934ffaf4880",
        "cursor": {
          "ref": "e5d255e7-f8f6-47fe-b8c5-133c26fe564a",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a04901e3-ee51-49d1-959d-c41a6efd2e83"
        },
        "item": {
          "id": "6951e0d4-38a9-4d3e-bdb3-e934ffaf4880",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fde16e35-c12a-4ad0-bd6b-e4742e019c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832c0778-ff52-44c2-b1c5-19ca3f1b459a",
        "cursor": {
          "ref": "ffbb767d-3e41-42e5-9b68-86587caaeada",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "91e01a86-9ada-404d-956e-8cdfa99c0757"
        },
        "item": {
          "id": "832c0778-ff52-44c2-b1c5-19ca3f1b459a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "60069869-4f10-4689-b551-1e6b467ef1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b363306-f830-44b0-972f-5ad35bde2ea5",
        "cursor": {
          "ref": "02cd0387-40a2-4c3f-a020-c767c13139ca",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b2029d0d-1a65-4ac9-9102-671c0a521eda"
        },
        "item": {
          "id": "7b363306-f830-44b0-972f-5ad35bde2ea5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bb569672-9086-46cd-800e-012d614ed282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958c2366-2051-4d50-abc2-49094a063a1a",
        "cursor": {
          "ref": "f0ed0c80-26c8-4db8-94f7-8410d58967da",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "923b3689-1aba-4ddb-a597-df4cd4098a21"
        },
        "item": {
          "id": "958c2366-2051-4d50-abc2-49094a063a1a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "42ee89d5-bea5-42dd-a0d5-e4650b7c6e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591ca8e3-6bc7-4f61-95a5-ffc9f9efb905",
        "cursor": {
          "ref": "924f4a72-caab-45a8-8676-24ac62a4ce7b",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "379c3486-d591-4f23-814e-04f7b324a172"
        },
        "item": {
          "id": "591ca8e3-6bc7-4f61-95a5-ffc9f9efb905",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c1beb88f-c789-4792-86f2-2e807b851e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477dd780-fdc2-4769-a061-9f31515be48d",
        "cursor": {
          "ref": "abd09862-a2fc-4ebe-afe7-717b9d3aa46e",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e2673344-9b79-44a8-b1c2-3b32158f32b5"
        },
        "item": {
          "id": "477dd780-fdc2-4769-a061-9f31515be48d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "950e9730-6369-4692-a3f3-4ca403430d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aae6939-32e8-41a1-9337-f29ac5d0311f",
        "cursor": {
          "ref": "9b616614-6ce7-4b85-960b-20f708c44b48",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "85b36aed-8393-4d97-a345-c2d95654a988"
        },
        "item": {
          "id": "7aae6939-32e8-41a1-9337-f29ac5d0311f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1f00a384-e5c1-4ffb-8706-a2a7045b10a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1709c47-ed88-4f2d-b5cc-d16b0ad3eb89",
        "cursor": {
          "ref": "88d4fd31-c6ac-4024-af30-f7fe0b17831f",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6ca76538-d852-4f18-98cd-6aaadc7f1820"
        },
        "item": {
          "id": "e1709c47-ed88-4f2d-b5cc-d16b0ad3eb89",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "77a23e2b-fd46-4d90-8c14-9d5bf955d03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c33da7-abbb-44d4-b9ec-f7990f74c347",
        "cursor": {
          "ref": "7d3224c5-2d92-4235-8f1b-d72ab3a2ee8a",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "027a9abf-935e-4ccc-a0d0-11c9bc5c2e90"
        },
        "item": {
          "id": "63c33da7-abbb-44d4-b9ec-f7990f74c347",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b332c435-1980-4a39-8aa5-a486b39d633d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3186cb9f-9ffb-4fd9-a41f-4353e667bc55",
        "cursor": {
          "ref": "a726d05d-f4f2-4162-aed2-f8f630ad9210",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "67628abc-9b1b-40d0-a264-7daf015fe14c"
        },
        "item": {
          "id": "3186cb9f-9ffb-4fd9-a41f-4353e667bc55",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "552333f7-e4ee-4d9d-b086-94c7ff6843a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561df60a-2ef9-4dcb-a0cf-fadceed346df",
        "cursor": {
          "ref": "56286b68-002e-4a36-91fc-0608fbd2450a",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "93e48d0d-6048-46fb-bb10-c09ee88107f6"
        },
        "item": {
          "id": "561df60a-2ef9-4dcb-a0cf-fadceed346df",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f2289fde-7677-470f-90e0-9ab65a004a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9f309a-b31f-4771-ba2c-d6059dc1468b",
        "cursor": {
          "ref": "3d175b34-5b79-4aca-86b7-2ab31e56813d",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7f342b0b-2470-4a19-aca9-33308ddb5655"
        },
        "item": {
          "id": "5b9f309a-b31f-4771-ba2c-d6059dc1468b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "54959f93-95d3-41c0-989f-c1ed302daebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1385ab4-14f4-46e6-8cda-439b819afd25",
        "cursor": {
          "ref": "851ec454-7022-44d8-a5c3-5c4c289d2fa9",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ce0a7552-f91d-4399-a66a-0d46e291bf93"
        },
        "item": {
          "id": "b1385ab4-14f4-46e6-8cda-439b819afd25",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e6773a7d-0085-4f97-b068-3e439e1f8684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84a865c-ea20-44b4-bf2a-7d5412878aa5",
        "cursor": {
          "ref": "a9ada9a7-7124-41f0-9c92-5622fe941ca7",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1609dfb8-5005-44e3-95d9-bbc14b68aad0"
        },
        "item": {
          "id": "d84a865c-ea20-44b4-bf2a-7d5412878aa5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6e94132c-d101-498d-bccf-630a76e137c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2184015-300b-4c5b-8e15-f6afa1fe9249",
        "cursor": {
          "ref": "cc962a64-b29e-4261-acf2-7e9793930c58",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "17aba6a3-c1ea-4445-819e-0910b24fafa6"
        },
        "item": {
          "id": "e2184015-300b-4c5b-8e15-f6afa1fe9249",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d046ec10-351a-4454-9ef3-4402405fc6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6e30d8-06ce-4ec7-a543-859208f54c9f",
        "cursor": {
          "ref": "89f26203-34dd-474a-83c6-8fdf61397a52",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c32a3448-f79c-4412-ad1c-410c46a4d5ea"
        },
        "item": {
          "id": "7c6e30d8-06ce-4ec7-a543-859208f54c9f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ebdeac7a-13bf-4f5f-9b42-c8dc654beed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d7580a-4468-4bad-864a-e1b65c5c36c5",
        "cursor": {
          "ref": "33e2df1c-4eb0-4baa-9b1b-54e82c293e3f",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9f2bc516-7ad5-46c0-ac8a-16cba70d3d2b"
        },
        "item": {
          "id": "49d7580a-4468-4bad-864a-e1b65c5c36c5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8ce05a86-18e6-41cc-beb2-fccf5401be94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9d3f30-630e-4b79-a7f5-9328f20e3e19",
        "cursor": {
          "ref": "54637680-6df5-4d77-a16b-40fa3865b7dd",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e7b44018-df3b-4bcf-acde-c560767266bb"
        },
        "item": {
          "id": "2e9d3f30-630e-4b79-a7f5-9328f20e3e19",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9f4a546b-9e2e-460c-a0d7-b3ae07268dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6545802-dd41-4af9-9b3f-470f55af9211",
        "cursor": {
          "ref": "1f44cea1-ee5c-46cd-9424-e2880c38d863",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fc65c520-9419-4290-b11e-1c76fd429047"
        },
        "item": {
          "id": "a6545802-dd41-4af9-9b3f-470f55af9211",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6bf1a49f-1c17-4c75-94ba-1bc1e0fd488d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51142be1-8abb-4d3d-bd2c-9adf582ec3de",
        "cursor": {
          "ref": "43a9c173-8411-4a21-8a95-33c1e4475fc3",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6d31f2a9-2906-4035-b565-3f241ec4ec2b"
        },
        "item": {
          "id": "51142be1-8abb-4d3d-bd2c-9adf582ec3de",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "729e5e78-1adb-4fab-8a38-90039fee4272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e745d60a-64b9-4839-8989-3fca8081809c",
        "cursor": {
          "ref": "a2b52502-94e0-4cc5-8c52-1422fef41adc",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e1927492-92ba-43bf-a5d4-ec238ba1e483"
        },
        "item": {
          "id": "e745d60a-64b9-4839-8989-3fca8081809c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a773a212-0594-4628-8edd-58bf4f2a1745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716b57e0-2622-4004-aba5-d79fbb5d1a51",
        "cursor": {
          "ref": "bd4c94c1-d67d-4519-8098-b426e6653e07",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "28f76942-ccfe-4f56-91e5-e67d87daebe6"
        },
        "item": {
          "id": "716b57e0-2622-4004-aba5-d79fbb5d1a51",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5c2f5bfd-5e8f-4f1a-9b94-f1c8491751d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466e1eb3-d8f2-4abd-99cf-8f4ecb19513b",
        "cursor": {
          "ref": "f26f7d60-1256-47a3-bb30-c5fd456cd436",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5bff0e73-4868-4e19-884c-6e7219b2390e"
        },
        "item": {
          "id": "466e1eb3-d8f2-4abd-99cf-8f4ecb19513b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5b259c84-b9eb-4cd1-ad0a-053d313215c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185c9445-2807-49bb-bbaa-09cac4dd4c2a",
        "cursor": {
          "ref": "c146e2f3-81cd-425f-9de6-929ab256d64b",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "14d4a8b3-9efb-472c-9ece-597c8dc6edd7"
        },
        "item": {
          "id": "185c9445-2807-49bb-bbaa-09cac4dd4c2a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9cd43081-1e66-4cfd-8503-214a127aaa7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a59b5f4-fa19-4910-af75-8d5bf7d45d5a",
        "cursor": {
          "ref": "2ccb8a13-91b3-4299-9565-9daadc196081",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "608fd82a-0550-4167-b333-4631886427d5"
        },
        "item": {
          "id": "3a59b5f4-fa19-4910-af75-8d5bf7d45d5a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f264adec-dab0-4a69-aa08-af33221b8ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f958eda1-7332-4248-a9fc-bb087b1c96f0",
        "cursor": {
          "ref": "b4262afb-6b66-40bf-b10b-907639e0123a",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f9b4fbf0-1b9a-4760-969d-c05e8d086dbc"
        },
        "item": {
          "id": "f958eda1-7332-4248-a9fc-bb087b1c96f0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f782892a-ee26-4176-99f2-1972c7bd4861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6dcb07-522c-4f1b-bdac-853032ba8232",
        "cursor": {
          "ref": "fda97361-6cc0-49ff-94ad-33a3095cf123",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e4e71477-dc96-4f3e-8841-b6ae25c0b9dd"
        },
        "item": {
          "id": "2c6dcb07-522c-4f1b-bdac-853032ba8232",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6230266a-5e90-4661-b102-9f57621b09b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e4c5f3-e2f1-4242-86b8-aa57ba2d7458",
        "cursor": {
          "ref": "2b93d2e5-7d2e-4c4d-bbc4-3bb3d190cbd2",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "835e53f1-ffb9-453e-b38b-efbc3b91f093"
        },
        "item": {
          "id": "05e4c5f3-e2f1-4242-86b8-aa57ba2d7458",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1b4a9c61-3d02-45af-92b9-d99d775293da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c6bd04-e15b-422e-9eda-7582205a1df6",
        "cursor": {
          "ref": "b38a953e-7fb7-4117-9ff0-25acbf126564",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cbbb7908-c375-42f9-9d6b-31ea4f4bf74f"
        },
        "item": {
          "id": "b1c6bd04-e15b-422e-9eda-7582205a1df6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e24f92b9-69a3-43d3-880c-379685110683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5220a5-9261-4cca-9d45-139f3e42d389",
        "cursor": {
          "ref": "2485deab-d383-4a95-b6d5-90fa9b162645",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7cbf8538-4e57-4f4c-9473-ba6579c43f55"
        },
        "item": {
          "id": "6d5220a5-9261-4cca-9d45-139f3e42d389",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1f965e0c-14a7-487c-951a-66c63075e8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9286b902-f072-4e27-87fb-24a994152841",
        "cursor": {
          "ref": "8007da53-ebc3-43e9-bce2-c6926c07023d",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "daa1e810-6b23-45b6-8740-7793e42c6daf"
        },
        "item": {
          "id": "9286b902-f072-4e27-87fb-24a994152841",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9a2040e5-bdba-4ed1-a96f-684105aa567a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7ea1fa-46e0-43c6-b547-222152087c85",
        "cursor": {
          "ref": "e18b3718-3f13-498e-ae17-1306dc1290cd",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b7d244d4-70fd-4d7e-8eb3-ccbacc269bc2"
        },
        "item": {
          "id": "9a7ea1fa-46e0-43c6-b547-222152087c85",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2e934590-6ac9-4dd9-8b89-19e961fd5b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4c8d8c-b644-4f9c-9014-9eedfdddb386",
        "cursor": {
          "ref": "bd95673f-370c-44fb-bdea-188b3fb11eef",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2e661732-b5a7-4f95-ba7b-277157718141"
        },
        "item": {
          "id": "ea4c8d8c-b644-4f9c-9014-9eedfdddb386",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b3a02a20-7dbc-4a2f-ad6b-cb1e60979a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105f6042-1239-4109-a498-977ec8de35d5",
        "cursor": {
          "ref": "a5792138-309d-4076-876a-75f562397bbe",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "890353a6-bb89-4de8-b195-fcd2372c0706"
        },
        "item": {
          "id": "105f6042-1239-4109-a498-977ec8de35d5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0f5e8c07-49a2-40ad-be01-42f5137448bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496e7c2a-e3ec-4ec7-8392-e724c661306c",
        "cursor": {
          "ref": "af113d4d-96e0-4516-9028-5f44384ff218",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "90feba8f-3eef-43f9-8409-af062297f0e9"
        },
        "item": {
          "id": "496e7c2a-e3ec-4ec7-8392-e724c661306c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e32760f6-2d4c-4088-84fa-237232957655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b06e394-a9c6-45cb-a229-f1173f5c40d3",
        "cursor": {
          "ref": "0c26d580-9ea0-4e5b-b62d-cc216976fe34",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "14a1a25d-c155-4b5a-a725-4d852df2eafb"
        },
        "item": {
          "id": "9b06e394-a9c6-45cb-a229-f1173f5c40d3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "284e6099-9ef9-40cf-b8f3-427ac5f9a37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e8552d-56d6-49ae-8a75-556acb2818e2",
        "cursor": {
          "ref": "620f498f-7f25-41a2-82aa-c8038b015f18",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "868aed3f-22f2-4868-b70b-06530591cead"
        },
        "item": {
          "id": "d5e8552d-56d6-49ae-8a75-556acb2818e2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "82a9f84f-89cf-48e2-9eea-64c1a3b1c52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8039eb2b-db8e-4f8b-b761-6c92a61e222f",
        "cursor": {
          "ref": "969aab23-9d03-4b89-9d9b-f05534f2bd8b",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3f7f94e9-f65c-4fe3-bec2-4a06c7c34575"
        },
        "item": {
          "id": "8039eb2b-db8e-4f8b-b761-6c92a61e222f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ec9c6474-3bcf-4120-99b8-8f8989ada42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8938a4f2-9793-46ec-bb66-72d1a8133bfc",
        "cursor": {
          "ref": "b0ce38c1-d49c-4d0b-8676-c3739d6a3311",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d3b99633-e0d6-41f3-bcd4-55c53b8236ad"
        },
        "item": {
          "id": "8938a4f2-9793-46ec-bb66-72d1a8133bfc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6aee3af7-2e5d-4563-93b6-b48de1033031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fb0e5b-be19-4c66-9437-b737e9fabaa8",
        "cursor": {
          "ref": "58ffc4f4-125d-408d-8aa3-72039a4f1ab0",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a8f06ae5-248f-4f63-96a6-b043eb58af29"
        },
        "item": {
          "id": "01fb0e5b-be19-4c66-9437-b737e9fabaa8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2967fa2a-a35d-4a93-9145-374cb9965017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83946aa5-8792-49e5-a7bd-144aaff9edf0",
        "cursor": {
          "ref": "9317fecd-936f-4883-b8b4-9abc297591a8",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6c9ff650-6d24-45b2-8b2c-527959faefaa"
        },
        "item": {
          "id": "83946aa5-8792-49e5-a7bd-144aaff9edf0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1a4ea988-7afd-44a1-9317-4178da66b215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2924fb-62a6-43f1-9cba-98ac7b86e54d",
        "cursor": {
          "ref": "3b868d06-a164-4e29-bd4a-e63358a51c08",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "04b54360-a2d4-46b3-88e2-8c983a91cb69"
        },
        "item": {
          "id": "7e2924fb-62a6-43f1-9cba-98ac7b86e54d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a23da845-fb36-4a1b-b0e2-081eeaf23118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e637b3-9aaf-496a-8128-b661f9c3bee4",
        "cursor": {
          "ref": "69677326-7e8b-49d1-91a9-5eb2dde6753c",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f368a5f8-07b9-4c01-bf61-17e6e8bae42f"
        },
        "item": {
          "id": "d5e637b3-9aaf-496a-8128-b661f9c3bee4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "60fca5d9-0c9d-4ba5-a012-5593dd042cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4c21c8-16bc-41ae-a5b3-f3411ce52578",
        "cursor": {
          "ref": "ac5f6c57-c74f-405c-98d2-6519b23a388e",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1b5f2876-788e-4d26-b602-166e0d14287f"
        },
        "item": {
          "id": "ff4c21c8-16bc-41ae-a5b3-f3411ce52578",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ffd25fc8-47ea-4d6f-9242-352ca6f2a179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39351ae4-da9f-4382-95f7-c7a311c733e5",
        "cursor": {
          "ref": "ab72d6cd-3aa5-40d0-a281-093384f5e25c",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e2b7175b-65e5-4ccf-9957-7aad0490389e"
        },
        "item": {
          "id": "39351ae4-da9f-4382-95f7-c7a311c733e5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b16ae30c-f82e-433f-b373-8531d77be86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18eaa7d-79f3-4315-a767-a580b76d88ea",
        "cursor": {
          "ref": "7b5d9118-fac1-43f7-bcce-dd7c53ddf5aa",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "971287c5-d7f6-40a8-90cd-445f7e9fbbf8"
        },
        "item": {
          "id": "a18eaa7d-79f3-4315-a767-a580b76d88ea",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1ab48b4b-f467-4a4c-b31d-37a47271e0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0857e326-7e77-464f-a9dd-805603f32fff",
        "cursor": {
          "ref": "5050adcb-35c5-4dd5-9acd-bf8473cf2547",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "03e5198e-a331-4149-8a93-f7ae8c959a4d"
        },
        "item": {
          "id": "0857e326-7e77-464f-a9dd-805603f32fff",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7ceb9151-187d-4667-8e64-fd59b9dccc86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499d72b5-e339-4223-a114-2bd10e24a982",
        "cursor": {
          "ref": "b56688b0-de30-4d2b-8c06-358c2068d0a1",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7d1f998e-58c7-4671-b2e7-b4c1ab9db97e"
        },
        "item": {
          "id": "499d72b5-e339-4223-a114-2bd10e24a982",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "99312c01-c778-4b69-991a-27ab541a2e1e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 402,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcf961b-c97d-4c66-8d88-f668035a505e",
        "cursor": {
          "ref": "2650c03d-c9b4-4f41-bde7-c465b3f6f01d",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "07ca8701-bf9a-4369-8a4d-0e676c030cb6"
        },
        "item": {
          "id": "8fcf961b-c97d-4c66-8d88-f668035a505e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e5a08e6f-e73e-480d-82df-3a646ba65d38",
          "status": "OK",
          "code": 200,
          "responseTime": 558,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "656181a4-b3f7-43a2-a7bd-c663f83e954e",
        "cursor": {
          "ref": "989b1bd8-c0de-49a3-a9cd-314ce4129e57",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "cef8d579-4b63-4f01-8298-d4eadb7d096a"
        },
        "item": {
          "id": "656181a4-b3f7-43a2-a7bd-c663f83e954e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6a102e8b-7982-4b0b-a7db-28cef3ca30a5",
          "status": "OK",
          "code": 200,
          "responseTime": 536,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5b758c-c202-4729-a240-24d2e5f4d10e",
        "cursor": {
          "ref": "6095f2d2-304c-46e4-8dd4-4e94eafa3c84",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ea4f1a40-5a91-4dea-a585-e5e3a5290785"
        },
        "item": {
          "id": "6b5b758c-c202-4729-a240-24d2e5f4d10e",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "60407800-b53d-4e6e-9534-17baf9145e2f",
          "status": "OK",
          "code": 200,
          "responseTime": 454,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdce7c6-27d7-4756-96f4-c821140f7b81",
        "cursor": {
          "ref": "034887fb-e73f-4b00-9947-949bb8fbe91a",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "744f8eae-af0b-4e46-8240-c9d0776c56b6"
        },
        "item": {
          "id": "4cdce7c6-27d7-4756-96f4-c821140f7b81",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c4976c2e-e862-4ff4-9f86-bc88395da7f3",
          "status": "OK",
          "code": 200,
          "responseTime": 569,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b74b95-d662-487a-b3a0-4b4186b3c86d",
        "cursor": {
          "ref": "775f4a06-b0cc-42eb-bdea-951af3f3612f",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e25f4e50-8b8c-40cc-be97-750a08664352"
        },
        "item": {
          "id": "b2b74b95-d662-487a-b3a0-4b4186b3c86d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d1553524-121e-4205-a763-9b4d55fa2f2b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b74b95-d662-487a-b3a0-4b4186b3c86d",
        "cursor": {
          "ref": "775f4a06-b0cc-42eb-bdea-951af3f3612f",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e25f4e50-8b8c-40cc-be97-750a08664352"
        },
        "item": {
          "id": "b2b74b95-d662-487a-b3a0-4b4186b3c86d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d1553524-121e-4205-a763-9b4d55fa2f2b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b74b95-d662-487a-b3a0-4b4186b3c86d",
        "cursor": {
          "ref": "775f4a06-b0cc-42eb-bdea-951af3f3612f",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e25f4e50-8b8c-40cc-be97-750a08664352"
        },
        "item": {
          "id": "b2b74b95-d662-487a-b3a0-4b4186b3c86d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d1553524-121e-4205-a763-9b4d55fa2f2b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbf4073-4606-472d-acf5-6c344b349e02",
        "cursor": {
          "ref": "b53b2ed1-b173-4718-9140-10ad283f1fca",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2f8703f7-5780-4f24-a487-8662d4c37b7c"
        },
        "item": {
          "id": "ebbf4073-4606-472d-acf5-6c344b349e02",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "639de56a-f3f2-4cd6-a915-068f2c38a2db",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 492,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16492bbb-c541-472b-bc3a-ed8037a368ee",
        "cursor": {
          "ref": "7819163c-0521-4766-9607-2c61fb4a3507",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8c797413-5a7e-4d7e-81ed-c275f67ccefd"
        },
        "item": {
          "id": "16492bbb-c541-472b-bc3a-ed8037a368ee",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a9d51f3d-e370-471c-828d-746c7d245726",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16492bbb-c541-472b-bc3a-ed8037a368ee",
        "cursor": {
          "ref": "7819163c-0521-4766-9607-2c61fb4a3507",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8c797413-5a7e-4d7e-81ed-c275f67ccefd"
        },
        "item": {
          "id": "16492bbb-c541-472b-bc3a-ed8037a368ee",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a9d51f3d-e370-471c-828d-746c7d245726",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed091811-3259-46ea-ab64-a81c118ac83e",
        "cursor": {
          "ref": "25dcc305-dff5-4563-bb04-524b3cbb15f2",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f3511ae7-7359-465f-a3c1-635494012323"
        },
        "item": {
          "id": "ed091811-3259-46ea-ab64-a81c118ac83e",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "855e8a8a-1c1d-4025-9465-a879ebed90c7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1487,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eaa1b74-1896-43e9-8fe9-6043b11af235",
        "cursor": {
          "ref": "1aa83b65-dff1-46b4-8dfb-8d77b8cb88ab",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "874430e2-adae-4458-8a61-d5891ca845c5"
        },
        "item": {
          "id": "2eaa1b74-1896-43e9-8fe9-6043b11af235",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "870db2e8-51bc-46cb-8662-e0c35778212d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eaa1b74-1896-43e9-8fe9-6043b11af235",
        "cursor": {
          "ref": "1aa83b65-dff1-46b4-8dfb-8d77b8cb88ab",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "874430e2-adae-4458-8a61-d5891ca845c5"
        },
        "item": {
          "id": "2eaa1b74-1896-43e9-8fe9-6043b11af235",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "870db2e8-51bc-46cb-8662-e0c35778212d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a348830-38de-41be-946f-b011a4b862c9",
        "cursor": {
          "ref": "02106879-ee8b-4f23-a000-29c5a592cf04",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "9b7c2b1a-e37e-4196-80ad-6392356b7829"
        },
        "item": {
          "id": "2a348830-38de-41be-946f-b011a4b862c9",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "d0e8bfd9-7d05-4717-af27-145527a47684",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 597,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}