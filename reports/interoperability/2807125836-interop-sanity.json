{
  "collection": {
    "info": {
      "_postman_id": "5f758c01-00c0-41e7-acb7-d2e6a9b36116",
      "name": "Test Report Demo",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e6cda457-4794-4f8f-b0c3-c3fd3ce5b9d9",
        "name": "Discover API Configuration",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "identifiers",
              "did:web:api.did.actor:api"
            ],
            "host": [
              "api",
              "did",
              "actor"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "9034e1d0-92b4-43ea-a2a2-b9abb4e2ec3a",
              "type": "text/javascript",
              "exec": [
                "const jsonResponse = pm.response.json();",
                "",
                "pm.test(\"The DID Document MUST contain 'alsoKnownAs'\", function () {",
                "    pm.expect(jsonResponse.didDocument.alsoKnownAs).to.be.an(\"array\");",
                "});",
                "",
                "pm.test(\"The DID Document MUST contain 'assertionMethod' DID URL\", function () {",
                "    pm.expect(jsonResponse.didDocument.assertionMethod).to.be.an(\"array\");",
                "    pm.expect(jsonResponse.didDocument.assertionMethod[0]).to.be.a(\"string\");",
                "    pm.environment.set(\"issuer_did_url\", jsonResponse.didDocument.assertionMethod[0]);",
                "});",
                "",
                "pm.test(\"The DID Document MUST contain 'authentication' DID URL\", function () {",
                "    pm.expect(jsonResponse.didDocument.authentication).to.be.an(\"array\");",
                "    pm.expect(jsonResponse.didDocument.authentication[0]).to.be.a(\"string\");",
                "    pm.environment.set(\"holder_did_url\", jsonResponse.didDocument.authentication[0]);",
                "});",
                "",
                "pm.test(\"The DID Document MUST contain 'service'\", function () {",
                "    pm.expect(jsonResponse.didDocument.service).to.be.an(\"array\");",
                "    pm.environment.set(\"traceability_api_root\", jsonResponse.didDocument.service[0].serviceEndpoint);",
                "});"
              ],
              "_lastExecutionId": "25e56abe-9295-4635-bdf7-7ee6d64aa20f"
            }
          }
        ]
      },
      {
        "id": "b4ef1b34-06fb-4c3b-8b70-95b68dcb159f",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{traceability_api_root}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"credential\": {\n    \"@context\": [\n      \"https://www.w3.org/2018/credentials/v1\"\n    ],\n    \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n    \"type\": [\n      \"VerifiableCredential\"\n    ],\n    \"issuer\": \"did:key:z6MktiSzqF9kqwdU8VkdBKx56EYzXfpgnNPUAGznpicNiWfn\",\n    \"issuanceDate\": \"2010-01-01T19:23:24Z\",\n    \"credentialSubject\": \"did:key:z6MktiSzqF9kqwdU8VkdBKx56EYzXfpgnNPUAGznpicNiWfn\"\n  },\n  \"options\": {\n    \"type\": \"Ed25519Signature2018\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d5dfb50-60ab-4e53-afd0-282eae9bdb61",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2262c91c-c6fb-4199-b9f3-1dcfdd53077d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58976eb2-c712-421f-855f-fce3d931d8c0",
              "type": "text/javascript",
              "exec": [
                "const verifiableCredential = pm.response.json()",
                "",
                "pm.test(\"The Verifiable Credential MUST have a 'proof'\", function () {",
                "    pm.expect(verifiableCredential.proof).to.be.an(\"object\");",
                "    pm.environment.set(\"verifiable_credential\", JSON.stringify(verifiableCredential));",
                "});",
                ""
              ],
              "_lastExecutionId": "3daaf2ef-4bdc-4d00-86fe-0b0f5b62dd12"
            }
          }
        ]
      },
      {
        "id": "b908b4e9-da09-47e1-9639-e57530dad6e5",
        "name": "Verify Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "verify"
            ],
            "host": [
              "{{traceability_api_root}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiableCredential\": {{verifiable_credential}}\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "bb641704-f9dd-4a29-9d0c-6e637b4ca4a8",
              "type": "text/javascript",
              "exec": [
                "const verification = pm.response.json()",
                "",
                "pm.test(\"The Verifiable Credential MUST have been verified\", function () {",
                "    pm.expect(verification.verified).to.eql(true);",
                "});",
                ""
              ],
              "_lastExecutionId": "46c5d438-51f8-40f9-b8d8-f4fc3e2484e2"
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 4,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 2370.3333333333335,
      "responseMin": 331,
      "responseMax": 5542,
      "responseSd": 2273.069046221185,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1659748597689,
      "completed": 1659748604902
    },
    "executions": [
      {
        "id": "e6cda457-4794-4f8f-b0c3-c3fd3ce5b9d9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 3,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "42127303-499c-465b-b336-93fd0922f5f5",
          "httpRequestId": "84141897-d049-4e7b-a202-22ad67bb1c45"
        },
        "item": {
          "id": "e6cda457-4794-4f8f-b0c3-c3fd3ce5b9d9",
          "name": "Discover API Configuration"
        },
        "response": {
          "id": "02f5392b-4b78-488a-b92c-abf6a99d155c",
          "status": "OK",
          "code": 200,
          "responseTime": 5542,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "The DID Document MUST contain 'alsoKnownAs'",
            "skipped": false
          },
          {
            "assertion": "The DID Document MUST contain 'assertionMethod' DID URL",
            "skipped": false
          },
          {
            "assertion": "The DID Document MUST contain 'authentication' DID URL",
            "skipped": false
          },
          {
            "assertion": "The DID Document MUST contain 'service'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ef1b34-06fb-4c3b-8b70-95b68dcb159f",
        "cursor": {
          "ref": "c7af7b0b-3116-4987-ba87-b2952742f67f",
          "length": 3,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5b5d41b1-3410-4eb8-a376-df3974a61cb8"
        },
        "item": {
          "id": "b4ef1b34-06fb-4c3b-8b70-95b68dcb159f",
          "name": "Issue Credential"
        },
        "response": {
          "id": "1edb64dd-a52c-4244-aa1a-4e008e9b8621",
          "status": "Created",
          "code": 201,
          "responseTime": 1238,
          "responseSize": 713
        },
        "assertions": [
          {
            "assertion": "The Verifiable Credential MUST have a 'proof'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b908b4e9-da09-47e1-9639-e57530dad6e5",
        "cursor": {
          "ref": "334b1b43-54fa-4c1d-9c29-69652c4bf884",
          "length": 3,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1ad0699f-af1a-4607-bcf7-8e767b487e63"
        },
        "item": {
          "id": "b908b4e9-da09-47e1-9639-e57530dad6e5",
          "name": "Verify Credential"
        },
        "response": {
          "id": "71525c0e-4ff8-4d96-94a0-6fdc1ec879ee",
          "status": "OK",
          "code": 200,
          "responseTime": 331,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "The Verifiable Credential MUST have been verified",
            "skipped": false
          }
        ]
      }
    ]
  }
}