{
  "collection": {
    "info": {
      "_postman_id": "5f758c01-00c0-41e7-acb7-d2e6a9b36116",
      "name": "Test Report Demo",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4d845c71-cc34-43d1-8a6c-5f7c60464ab8",
        "name": "Discover API Configuration",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "identifiers",
              "did:web:api.did.actor:api"
            ],
            "host": [
              "api",
              "did",
              "actor"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c7a865b3-3836-434e-b174-7fae2b2e020e",
              "type": "text/javascript",
              "exec": [
                "const jsonResponse = pm.response.json();",
                "",
                "pm.test(\"The DID Document MUST contain 'assertionMethod' DID URL\", function () {",
                "    pm.expect(jsonResponse.didDocument.assertionMethod).to.be.an(\"array\");",
                "    pm.expect(jsonResponse.didDocument.assertionMethod[0]).to.be.a(\"string\");",
                "    pm.environment.set(\"issuer_did_url\", jsonResponse.didDocument.assertionMethod[0]);",
                "});",
                "",
                "pm.test(\"The DID Document MUST contain 'authentication' DID URL\", function () {",
                "    pm.expect(jsonResponse.didDocument.authentication).to.be.an(\"array\");",
                "    pm.expect(jsonResponse.didDocument.authentication[0]).to.be.a(\"string\");",
                "    pm.environment.set(\"holder_did_url\", jsonResponse.didDocument.authentication[0]);",
                "});",
                "",
                "pm.test(\"The DID Document MUST contain 'service'\", function () {",
                "    pm.expect(jsonResponse.didDocument.service).to.be.an(\"array\");",
                "    pm.environment.set(\"traceability_api_root\", jsonResponse.didDocument.service[0].serviceEndpoint);",
                "});"
              ],
              "_lastExecutionId": "14577d6c-f9af-46dc-bc27-9e0f4ded0b6c"
            }
          }
        ]
      },
      {
        "id": "4d4b40ad-52ac-4971-9429-d97f216fd190",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{traceability_api_root}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"credential\": {\n    \"@context\": [\n      \"https://www.w3.org/2018/credentials/v1\"\n    ],\n    \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n    \"type\": [\n      \"VerifiableCredential\"\n    ],\n    \"issuer\": \"did:key:z6MktiSzqF9kqwdU8VkdBKx56EYzXfpgnNPUAGznpicNiWfn\",\n    \"issuanceDate\": \"{{$isoTimestamp}}\",\n    \"credentialSubject\": {\n        \"id\": \"did:key:z6MktiSzqF9kqwdU8VkdBKx56EYzXfpgnNPUAGznpicNiWfn\"\n    }\n  },\n  \"options\": {\n    \"type\": \"Ed25519Signature2018\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ef9a89b-6cc2-4a32-a62d-699efba7d150",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2cadd2ce-c5a0-45e3-a191-c08b539c4f5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ddc7289-2d64-485b-aea5-3e0629d8ee13",
              "type": "text/javascript",
              "exec": [
                "const verifiableCredential = pm.response.json()",
                "",
                "pm.test(\"The Verifiable Credential MUST have a 'proof'\", function () {",
                "    pm.expect(verifiableCredential.proof).to.be.an(\"object\");",
                "    pm.environment.set(\"verifiable_credential\", JSON.stringify(verifiableCredential));",
                "});",
                ""
              ],
              "_lastExecutionId": "5f959a95-7036-4d91-8290-18248d7d9793"
            }
          }
        ]
      },
      {
        "id": "ab8f8a0a-145a-4401-8d37-ac8d17843bf9",
        "name": "Verify Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "verify"
            ],
            "host": [
              "{{traceability_api_root}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiableCredential\": {{verifiable_credential}}\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "9d8b163b-3061-4fd6-b7a7-39ac9b53354a",
              "type": "text/javascript",
              "exec": [
                "const verification = pm.response.json()",
                "",
                "pm.test(\"The Verifiable Credential MUST have been verified\", function () {",
                "    pm.expect(verification.verified).to.eql(true);",
                "});",
                ""
              ],
              "_lastExecutionId": "441028fe-7083-4f9d-bd4b-895277739bcd"
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 4,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 2564.3333333333335,
      "responseMin": 553,
      "responseMax": 5654,
      "responseSd": 2217.679317564998,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1670375475302,
      "completed": 1670375483096
    },
    "executions": [
      {
        "id": "4d845c71-cc34-43d1-8a6c-5f7c60464ab8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 3,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cf289382-f54b-4f34-bdb1-4fab0bc495f8",
          "httpRequestId": "6c8d43ee-8114-4576-8670-b4c07dc4edee"
        },
        "item": {
          "id": "4d845c71-cc34-43d1-8a6c-5f7c60464ab8",
          "name": "Discover API Configuration"
        },
        "response": {
          "id": "856f5285-45cb-4118-bfff-2b7059962eb1",
          "status": "OK",
          "code": 200,
          "responseTime": 5654,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "The DID Document MUST contain 'assertionMethod' DID URL",
            "skipped": false
          },
          {
            "assertion": "The DID Document MUST contain 'authentication' DID URL",
            "skipped": false
          },
          {
            "assertion": "The DID Document MUST contain 'service'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4b40ad-52ac-4971-9429-d97f216fd190",
        "cursor": {
          "ref": "93ad4aaf-b616-4e8f-93a0-7ef7373c9d27",
          "length": 3,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "454b47f2-21de-4b97-b3e6-314f850f51d4"
        },
        "item": {
          "id": "4d4b40ad-52ac-4971-9429-d97f216fd190",
          "name": "Issue Credential"
        },
        "response": {
          "id": "2ab8d4e3-4242-4642-b61b-32d881e259fa",
          "status": "Created",
          "code": 201,
          "responseTime": 1486,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "The Verifiable Credential MUST have a 'proof'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8f8a0a-145a-4401-8d37-ac8d17843bf9",
        "cursor": {
          "ref": "70775331-11ad-4eaf-94a9-bc8939e8a02c",
          "length": 3,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8168a7b9-0a30-4664-be62-d0748a06c4ec"
        },
        "item": {
          "id": "ab8f8a0a-145a-4401-8d37-ac8d17843bf9",
          "name": "Verify Credential"
        },
        "response": {
          "id": "83c7901e-509c-43e2-a935-ec97d1a626d0",
          "status": "OK",
          "code": 200,
          "responseTime": 553,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "The Verifiable Credential MUST have been verified",
            "skipped": false
          }
        ]
      }
    ]
  }
}