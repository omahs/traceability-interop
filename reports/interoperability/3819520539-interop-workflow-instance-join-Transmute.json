{
  "collection": {
    "info": {
      "_postman_id": "c0814470-0c07-43ad-9ed4-2ad4b125c937",
      "name": "Workflow Instance Join",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "67d7c9bc-2e12-42a6-a337-977610da9b23",
        "name": "Get Access Token",
        "request": {
          "url": {
            "host": [
              "{{ORG_1_TOKEN_ENDPOINT}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "audience",
                "value": "{{ORG_1_TOKEN_AUDIENCE}}"
              },
              {
                "key": "client_id",
                "value": "{{ORG_1_CLIENT_ID}}"
              },
              {
                "key": "client_secret",
                "value": "{{ORG_1_CLIENT_SECRET}}"
              },
              {
                "key": "grant_type",
                "value": "client_credentials"
              },
              {
                "key": "scope",
                "value": "resolve:dids issue:credentials prove:presentations verify:presentations"
              }
            ]
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "141b82bc-92b7-4c0b-a0b0-91102263fb92",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Importer application has access token\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"`org_1_access_token` persisted to collectionVariables\", function() {",
                "    const { access_token } = pm.response.json()",
                "    pm.collectionVariables.set(\"org_1_access_token\", access_token);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "9c2bffd1-eecc-408e-a810-47d396f13b7b"
            }
          }
        ]
      },
      {
        "id": "29d73523-5543-4e91-bfab-9279308ba3bc",
        "name": "Get Access Token",
        "request": {
          "url": {
            "host": [
              "{{ORG_2_TOKEN_ENDPOINT}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "audience",
                "value": "{{ORG_2_TOKEN_AUDIENCE}}"
              },
              {
                "key": "client_id",
                "value": "{{ORG_2_CLIENT_ID}}"
              },
              {
                "key": "client_secret",
                "value": "{{ORG_2_CLIENT_SECRET}}"
              },
              {
                "key": "grant_type",
                "value": "client_credentials"
              },
              {
                "key": "scope",
                "value": "resolve:dids issue:credentials prove:presentations verify:presentations"
              }
            ]
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "8890c7bd-f5f9-40c6-9cfd-e7d4e32c930f",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Importer application has access token\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"`org_2_access_token` persisted to collectionVariables\", function() {",
                "    const { access_token } = pm.response.json()",
                "    pm.collectionVariables.set(\"org_2_access_token\", access_token);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "142401ff-da42-46a5-92ea-2c971a80912e"
            }
          }
        ]
      },
      {
        "id": "f097d0d5-645e-47f6-8e2e-5f805f89d55c",
        "name": "Get Access Token",
        "request": {
          "url": {
            "host": [
              "{{ORG_3_TOKEN_ENDPOINT}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "audience",
                "value": "{{ORG_3_TOKEN_AUDIENCE}}"
              },
              {
                "key": "client_id",
                "value": "{{ORG_3_CLIENT_ID}}"
              },
              {
                "key": "client_secret",
                "value": "{{ORG_3_CLIENT_SECRET}}"
              },
              {
                "key": "grant_type",
                "value": "client_credentials"
              },
              {
                "key": "scope",
                "value": "resolve:dids issue:credentials prove:presentations verify:presentations"
              }
            ]
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "4f4bdc84-64b2-4cdf-b63c-df0a68f06086",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Importer application has access token\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"`org_3_access_token` persisted to collectionVariables\", function() {",
                "    const { access_token } = pm.response.json()",
                "    pm.collectionVariables.set(\"org_3_access_token\", access_token);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "c5280f5c-0273-4eaa-b8a5-36a87e687afe"
            }
          }
        ]
      },
      {
        "id": "05a5a09d-499f-475c-8ece-00d6e3a9256e",
        "name": "Get Organization DIDs",
        "request": {
          "url": {
            "path": [
              "identifiers",
              "{{ORG_1_DID_WEB}}"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "7f6fd9d0-0d1d-481f-9fee-e57d9eaffc00",
              "type": "text/javascript",
              "exec": [
                "const { didDocument } = pm.response.json()",
                "pm.collectionVariables.set(\"org_1_holder\", didDocument.id);",
                "pm.collectionVariables.set(\"org_1_tenant_url\", didDocument.service[0].serviceEndpoint);",
                "",
                "pm.test(\"Importer has holder DID\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_1_holder\")).to.not.be.undefined;",
                "});",
                "",
                "pm.test(\"Importer has service endpoint\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_1_tenant_url\")).to.not.be.undefined;",
                "});"
              ],
              "_lastExecutionId": "54fe5d19-9b69-4c83-8dbd-2cd670f87910"
            }
          }
        ]
      },
      {
        "id": "ef915c13-70ad-4d98-970b-cb5feb309bfb",
        "name": "Get Organization DIDs",
        "request": {
          "url": {
            "path": [
              "identifiers",
              "{{ORG_2_DID_WEB}}"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "6b5d52e5-285f-4389-85bc-8a4e38a36682",
              "type": "text/javascript",
              "exec": [
                "const { didDocument } = pm.response.json()",
                "pm.collectionVariables.set(\"org_2_holder\", didDocument.id);",
                "pm.collectionVariables.set(\"org_2_tenant_url\", didDocument.service[0].serviceEndpoint);",
                "",
                "pm.test(\"Freight Forwarder has holder DID\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_2_holder\")).to.not.be.undefined;",
                "});",
                "",
                "pm.test(\"Freight Forwarder has service endpoint\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_2_tenant_url\")).to.not.be.undefined;",
                "});"
              ],
              "_lastExecutionId": "96955796-ead7-449e-818f-22f57b1131e2"
            }
          }
        ]
      },
      {
        "id": "f38a4d97-fb00-4e24-953b-3881b4b76466",
        "name": "Get Organization DIDs",
        "request": {
          "url": {
            "path": [
              "identifiers",
              "{{ORG_3_DID_WEB}}"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "71ca3d30-9e2a-4fa1-9176-93d0b59c7f44",
              "type": "text/javascript",
              "exec": [
                "const { didDocument } = pm.response.json()",
                "pm.collectionVariables.set(\"org_3_holder\", didDocument.id);",
                "pm.collectionVariables.set(\"org_3_tenant_url\", didDocument.service[0].serviceEndpoint);",
                "",
                "pm.test(\"Customs has holder DID\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_3_holder\")).to.not.be.undefined;",
                "});",
                "",
                "pm.test(\"Customs has service endpoint\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_3_tenant_url\")).to.not.be.undefined;",
                "});"
              ],
              "_lastExecutionId": "9c246d66-2eaf-493a-92c3-002891ecb317"
            }
          }
        ]
      },
      {
        "id": "80bca41f-aba7-44fd-b44e-f1f944416ad5",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\",\n            \"CommercialInvoiceCertificate\"\n        ],\n        \"name\": \"Commercial Invoice Certificate\",\n        \"issuanceDate\": \"2022-02-23T11:55:00Z\",\n        \"issuer\": {\n            \"id\": \"{{org_1_holder}}\",\n            \"type\": [\n                \"Organization\"\n            ],\n            \"address\": {\n                \"type\": [\n                    \"PostalAddress\"\n                ],\n                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                \"addressLocality\": \"Tsubame-shi\",\n                \"addressRegion\": \"Niigata-ken\",\n                \"postalCode\": \"959-0215\",\n                \"addressCountry\": \"Japan\"\n            }\n        },\n        \"credentialSubject\": {\n            \"type\": [\n                \"Invoice\"\n            ],\n            \"portOfEntry\": {\n                \"type\": \"Place\",\n                \"unLocode\": \"USLGB\"\n            },\n            \"destinationCountry\": \"MEX\",\n            \"purchaseDate\": \"2021-02-21\",\n            \"seller\": {\n                \"type\": [\n                    \"Organization\"\n                ],\n                \"address\": {\n                    \"type\": [\n                        \"PostalAddress\"\n                    ],\n                    \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                    \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                    \"addressLocality\": \"Tsubame-shi\",\n                    \"addressRegion\": \"Niigata-ken\",\n                    \"postalCode\": \"959-0215\",\n                    \"addressCountry\": \"Japan\"\n                }\n            },\n            \"buyer\": {\n                \"type\": [\n                    \"Organization\"\n                ],\n                \"address\": {\n                    \"type\": [\n                        \"PostalAddress\"\n                    ],\n                    \"organizationName\": \"Generic Motors of America\",\n                    \"streetAddress\": \"12 Generic Motors Dr\",\n                    \"addressLocality\": \"Detroit\",\n                    \"addressRegion\": \"Michigain\",\n                    \"postalCode\": \"48232-5170\",\n                    \"addressCountry\": \"USA\"\n                }\n            },\n            \"shipToParty\": {\n                \"type\": [\n                    \"Organization\"\n                ],\n                \"address\": {\n                    \"type\": [\n                        \"PostalAddress\"\n                    ],\n                    \"organizationName\": \"Generic Motors of America\",\n                    \"streetAddress\": \"12 Generic Motors Dr\",\n                    \"addressLocality\": \"Detroit\",\n                    \"addressRegion\": \"Michigain\",\n                    \"postalCode\": \"48232-5170\",\n                    \"addressCountry\": \"USA\"\n                }\n            },\n            \"itemsShipped\": [\n                {\n                    \"type\": \"TradeLineItem\",\n                    \"product\": {\n                        \"manufacturer\": {\n                            \"type\": \"Organization\",\n                            \"address\": {\n                                \"type\": \"PostalAddress\",\n                                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                                \"addressLocality\": \"Tsubame-shi\",\n                                \"addressRegion\": \"Niigata-ken\",\n                                \"postalCode\": \"959-0215\",\n                                \"addressCountry\": \"Japan\"\n                            }\n                        },\n                        \"description\": \"UNS S30400 chromium-nickel stainless steel rolls.\",\n                        \"weight\": {\n                            \"type\": \"QuantitativeValue\",\n                            \"unitCode\": \"lbs\",\n                            \"value\": \"16500\"\n                        }\n                    },\n                    \"itemCount\": 5,\n                    \"tradeLineItemWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"value\": \"82500\",\n                        \"unitCode\": \"lbs\"\n                    },\n                    \"priceSpecification\": {\n                        \"type\": \"PriceSpecification\",\n                        \"price\": 5200,\n                        \"priceCurrency\": \"USD\"\n                    }\n                },\n                {\n                    \"type\": \"TradeLineItem\",\n                    \"product\": {\n                        \"manufacturer\": {\n                            \"type\": \"Organization\",\n                            \"address\": {\n                                \"type\": \"PostalAddress\",\n                                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                                \"addressLocality\": \"Tsubame-shi\",\n                                \"addressRegion\": \"Niigata-ken\",\n                                \"postalCode\": \"959-0215\",\n                                \"addressCountry\": \"Japan\"\n                            }\n                        },\n                        \"description\": \"Galvalannealed ASTM A-653 zinc-iron alloy-coated steel sheets.\",\n                        \"weight\": {\n                            \"type\": \"QuantitativeValue\",\n                            \"value\": \"12680\",\n                            \"unitCode\": \"lbs\"\n                        }\n                    },\n                    \"itemCount\": 20,\n                    \"tradeLineItemWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"value\": \"253600\",\n                        \"unitCode\": \"lbs\"\n                    },\n                    \"priceSpecification\": {\n                        \"type\": \"PriceSpecification\",\n                        \"price\": 4400,\n                        \"priceCurrency\": \"USD\"\n                    }\n                }\n            ],\n            \"totalWeight\": {\n                \"type\": \"QuantitativeValue\",\n                \"value\": \"336100\",\n                \"unitCode\": \"lbs\"\n            },\n            \"totalPaymentDue\": {\n                \"type\": \"PriceSpecification\",\n                \"price\": 9600,\n                \"priceCurrency\": \"USD\"\n            }\n        }\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5267066d-0651-4aa4-ad4f-bfb52f31594d",
              "type": "text/javascript",
              "exec": [
                "  pm.test(\"Proforma Invoice VC issued\", function () {",
                "      pm.response.to.have.status(201);",
                "      pm.collectionVariables.set('importers_proforma_invoice_vc', JSON.stringify(pm.response.json()));",
                "  })"
              ],
              "_lastExecutionId": "fd555acb-5026-479b-aa2a-56fbcb44de90"
            }
          }
        ]
      },
      {
        "id": "9cbe79fa-0b12-401c-953e-4dcb601fffdc",
        "name": "Initiate Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "30817708-cc42-461e-9dbf-cdceb8e7dcbc",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"org_3_domain\", responseJson.domain);",
                "pm.collectionVariables.set(\"org_3_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Importer has authenticated to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "b3edd923-cc68-4184-9d56-3464a5cf0bc2"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "ebfd153e-4734-4aac-a502-4bb4d46b8d4a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd25c7c0-1cf6-4491-b8c9-e581a2d0bf4a"
            }
          }
        ]
      },
      {
        "id": "b0f93517-f949-461e-a7bb-b05b2457110f",
        "name": "Sign Presentation",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_1\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_1_holder}}\",\n        \"verifiableCredential\": [\n            {{importers_proforma_invoice_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "0f71ac4c-cb7f-4be8-ab71-ee619b9abe1b",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"importers_proforma_invoice_presented_to_customs\", JSON.stringify(responseJson));",
                "",
                "pm.test(\"Importer VP of Proforma Invoice with workflow instance 'instance_1' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "c5820c35-124d-4a90-a734-16f4361c1b92"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "40506293-1077-4f93-b795-032459b1db4f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "286aa1e2-2e84-4976-8350-991c13e02366"
            }
          }
        ]
      },
      {
        "id": "ec915a9b-daf0-4aca-86ac-4f4e7dde5cd6",
        "name": "Complete Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{importers_proforma_invoice_presented_to_customs}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c284551b-4543-43b2-92bf-7f161354eadb",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Importer has successfully presented Proforma Invoice to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"Proforma Invoice VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "a5f0e1f0-c0a3-4c57-a222-e7ca5f91461a"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "bdcd5fa1-8c1f-42a0-850c-542cae7f507c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d3b9cd85-ee53-4f07-9b6b-27dc07edbf0b"
            }
          }
        ]
      },
      {
        "id": "3c962c52-13c6-46cb-a03f-d442a050dd1e",
        "name": "Verify Credential",
        "request": {
          "url": {
            "path": [
              "presentations",
              "verify"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiablePresentation\": {{importers_proforma_invoice_presented_to_customs}},\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e6f59074-af22-4e6b-a66b-4172a3315a4b",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Customs verifies Proforma Invoice\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "var workflowInstances = JSON.parse(pm.collectionVariables.get(\"importers_proforma_invoice_presented_to_customs\")).workflow.instance",
                "",
                "pm.test(\"Customs stores first workflow instance id: \" + workflowInstances[0], function () {",
                "    pm.collectionVariables.set(\"customs_first_workflow_instance_id\", workflowInstances[0]);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "87d13dc3-2489-41c6-af1b-d545552eace2"
            }
          }
        ]
      },
      {
        "id": "5beeee8a-6c01-4733-ae35-66266966a7d4",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"did:key:z6MkmbqKc6KncFZUbVJwUppttTkiMAtnVJ5wzC5oVBWci3pc\",\n        \"type\": [\n            \"VerifiableCredential\",\n            \"HouseBillOfLadingCertificate\"\n        ],\n        \"name\": \"House Bill Of Lading\",\n        \"issuanceDate\": \"2022-03-04T13:40:00Z\",\n        \"issuer\": {\n            \"type\": \"Organization\",\n            \"id\": \"{{org_2_holder}}\",\n            \"name\": \"World Forward, Inc.\",\n            \"address\": {\n                \"type\": \"PostalAddress\",\n                \"organizationName\": \"MCL Multi Container Line LTD.\",\n                \"streetAddress\": \"Well Fung Ind Centre\",\n                \"addressLocality\": \"Kwai Chung\",\n                \"addressRegion\": \"Hong Kong\",\n                \"addressCountry\": \"Hong Kong\"\n            }\n        },\n        \"credentialSubject\": {\n            \"type\": \"HouseBillOfLading\",\n            \"billOfLadingNumber\": \"FF873363210A\",\n            \"bookingNumber\": [\n                \"FF873363210\"\n            ],\n            \"shipper\": {\n                \"type\": \"Organization\",\n                \"name\": \"Espresso Italiano Co.\",\n                \"address\": {\n                    \"type\": \"PostalAddress\",\n                    \"streetAddress\": \"Via Vico Ferrovia 5\",\n                    \"addressLocality\": \"Goro\",\n                    \"addressRegion\": \"Ferrara\",\n                    \"postalCode\": \"44020\",\n                    \"addressCountry\": \"IT\"\n                },\n                \"email\": \"sales@espresso-italiano.example.com\",\n                \"phoneNumber\": \"+39 0351 9067195\"\n            },\n            \"consignee\": {\n                \"type\": \"Organization\",\n                \"name\": \"Prosumer Coffee Supplies, Ltd.\",\n                \"description\": \"Coffee Machine Imports\",\n                \"address\": {\n                    \"type\": \"PostalAddress\",\n                    \"streetAddress\": \"3934 Spinnaker Lane\",\n                    \"addressLocality\": \"Joliet\",\n                    \"addressRegion\": \"Illinois\",\n                    \"postalCode\": \"60432\",\n                    \"addressCountry\": \"US\"\n                }\n            },\n            \"notifyParty\": [\n                {\n                    \"type\": \"Organization\",\n                    \"name\": \"Prosumer Coffee Supplies, Ltd.\",\n                    \"description\": \"Coffee Machine Imports\",\n                    \"address\": {\n                        \"type\": \"PostalAddress\",\n                        \"streetAddress\": \"3934 Spinnaker Lane\",\n                        \"addressLocality\": \"Joliet\",\n                        \"addressRegion\": \"Illinois\",\n                        \"postalCode\": \"60432\",\n                        \"addressCountry\": \"US\"\n                    }\n                }\n            ],\n            \"carrier\": {\n                \"type\": \"Organization\",\n                \"id\": \"did:key:z6MktHQo3fRRohk44dsbE76CuiTpBmyMWq2VVjvV6aBSeE3U\",\n                \"name\": \"World Forward, Inc.\",\n                \"address\": {\n                    \"type\": \"PostalAddress\",\n                    \"organizationName\": \"MCL Multi Container Line LTD.\",\n                    \"streetAddress\": \"Well Fung Ind Centre\",\n                    \"addressLocality\": \"Kwai Chung\",\n                    \"addressRegion\": \"Hong Kong\",\n                    \"addressCountry\": \"Hong Kong\"\n                }\n            },\n            \"mainCarriageTransportMovement\": {\n                \"type\": \"Transport\",\n                \"vesselNumber\": \"MS Seven Seas\",\n                \"voyageNumber\": \"Atl-W0425\"\n            },\n            \"portOfLoading\": {\n                \"type\": \"Place\",\n                \"unLocode\": \"ITMIL\"\n            },\n            \"portOfDischarge\": {\n                \"type\": \"Place\",\n                \"unLocode\": \"USLGB\"\n            },\n            \"totalNumberOfPackages\": 2200,\n            \"transportEquipmentQuantity\": 2,\n            \"includedConsignmentItems\": [\n                {\n                    \"marksAndNumbers\": \"Espresso Italiano\",\n                    \"commodity\": {\n                        \"type\": \"Commodity\",\n                        \"commodityCode\": \"851671\",\n                        \"commodityCodeType\": \"HS\"\n                    },\n                    \"packageQuantity\": 220,\n                    \"netWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"unitCode\": \"kg\",\n                        \"value\": \"1460\"\n                    },\n                    \"grossWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"unitCode\": \"kg\",\n                        \"value\": \"1590\"\n                    },\n                    \"grossVolume\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"value\": \"85\",\n                        \"unitCode\": \"cmb\"\n                    }\n                }\n            ],\n            \"freightAndCharges\": {\n                \"type\": \"ServiceCharge\",\n                \"chargeCode\": \"basicFreight\",\n                \"paymentTerm\": \"collect\",\n                \"chargeText\": \"Negotiated ocean freight\",\n                \"rate\": {\n                    \"type\": \"PriceSpecification\",\n                    \"price\": 225,\n                    \"priceCurrency\": \"USD\"\n                },\n                \"calculationBasis\": \"Per container\",\n                \"appliedAmount\": {\n                    \"type\": \"PriceSpecification\",\n                    \"price\": 450,\n                    \"priceCurrency\": \"USD\"\n                }\n            },\n            \"declaredValue\": {\n                \"type\": \"PriceSpecification\",\n                \"price\": 24000,\n                \"priceCurrency\": \"USD\"\n            },\n            \"termsAndConditions\": \"https://terms-of-shipment.freightforwarder.example.com\"\n        }\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "2dd2de7a-4c14-459d-a9d9-7da84ce17624",
              "type": "text/javascript",
              "exec": [
                "  pm.test(\"House Bill of Lading VC issued\", function () {",
                "      pm.response.to.have.status(201);",
                "      pm.collectionVariables.set('freight_forwarders_hbol_vc', JSON.stringify(pm.response.json()));",
                "  })"
              ],
              "_lastExecutionId": "434d0f8b-2164-46a5-80f3-9d94388f9ce8"
            }
          }
        ]
      },
      {
        "id": "0fe26518-cc5f-4059-82ff-dafa6330dd48",
        "name": "Initiate Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "d6e086b6-be2c-4515-9057-448b792a1535",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"org_3_domain\", responseJson.domain);",
                "pm.collectionVariables.set(\"org_3_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Freight Forwarder has authenticated to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "ec69182e-982d-458f-a908-1fd47941d2cb"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "b1d80933-1c66-4588-b7cc-3db2979d5db8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77dc9f22-fe48-4cd7-a48b-a026cd3d0e88"
            }
          }
        ]
      },
      {
        "id": "16f02eec-3015-46ff-90fc-35f15bee4693",
        "name": "Sign Presentation",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_2\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_2_holder}}\",\n        \"verifiableCredential\": [\n            {{freight_forwarders_hbol_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "b613ff06-c374-49fe-b06f-62375e252408",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"freight_forwarders_house_bill_presented_to_customs\", JSON.stringify(responseJson));",
                "",
                "pm.test(\"Freight Forwarder VP of House Bill of Lading with workflow instance 'instance_2' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "7be057e8-488c-42e4-a786-eb98d5e3ed46"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "c5731d2d-7575-47d0-b561-ac59abea416e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "197c9d3e-59a0-4f7c-a88b-9f80ffc34ee1"
            }
          }
        ]
      },
      {
        "id": "7ba6c0d1-a83a-4db6-a0e1-2ab6f759a348",
        "name": "Complete Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{freight_forwarders_house_bill_presented_to_customs}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "7a2fb47a-7738-4a89-9d18-d981a50ffa75",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Freight Forwarder has successfully presented House Bill of Lading to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"House Bill of Lading VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "82de8eab-a848-4d0e-9d8f-43104ee5ac88"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "4d6c95d8-fd90-4e43-bfb8-80f5ef6aefb2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1d6269d-8b76-4b10-ba34-947fd670c69b"
            }
          }
        ]
      },
      {
        "id": "588a7a26-d87d-4d3c-b703-3906e5d3fc3d",
        "name": "Verify Credential",
        "request": {
          "url": {
            "path": [
              "presentations",
              "verify"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiablePresentation\": {{freight_forwarders_house_bill_presented_to_customs}},\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "58b6a162-b489-464c-985b-dd36cd6599bd",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Customs verifies House Bill of Lading\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "var workflowInstances = JSON.parse(pm.collectionVariables.get(\"freight_forwarders_house_bill_presented_to_customs\")).workflow.instance",
                "",
                "pm.test(\"Customs stores first workflow instance id: \" + workflowInstances[0], function () {",
                "    pm.collectionVariables.set(\"customs_second_workflow_instance_id\", workflowInstances[0]);",
                "});",
                ""
              ],
              "_lastExecutionId": "2af78424-ac10-44a8-b8d8-b6cb1af7945b"
            }
          }
        ]
      },
      {
        "id": "1a126804-ee9d-4737-b7f8-70de5945200a",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"credential\": \n      {\n    \"@context\": [\n      \"https://www.w3.org/2018/credentials/v1\",\n      \"https://w3id.org/traceability/v1\"\n    ],\n    \"id\": \"did:key:z6MkhNsCYEQQWJdyAbfaMZHz4UG6UZoQUGot7z7tBNsbz1JG\",\n    \"type\": [\n      \"VerifiableCredential\",\n      \"CommercialInvoiceCertificate\"\n    ],\n    \"name\": \"Commercial Invoice Certificate\",\n    \"issuanceDate\": \"2022-02-23T11:55:00Z\",\n    \"issuer\": {\n      \"id\": \"{{org_1_holder}}\",\n      \"type\": [\n        \"Organization\"\n      ],\n      \"address\": {\n        \"type\": [\n          \"PostalAddress\"\n        ],\n        \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n        \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n        \"addressLocality\": \"Tsubame-shi\",\n        \"addressRegion\": \"Niigata-ken\",\n        \"postalCode\": \"959-0215\",\n        \"addressCountry\": \"Japan\"\n      }\n    },\n    \"credentialSubject\": {\n      \"type\": [\n        \"Invoice\"\n      ],\n      \"portOfEntry\": {\n        \"type\": \"Place\",\n        \"unLocode\": \"USLGB\"\n      },\n      \"destinationCountry\": \"MEX\",\n      \"purchaseDate\": \"2021-02-21\",\n      \"seller\": {\n        \"type\": [\n          \"Organization\"\n        ],\n        \"address\": {\n          \"type\": [\n            \"PostalAddress\"\n          ],\n          \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n          \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n          \"addressLocality\": \"Tsubame-shi\",\n          \"addressRegion\": \"Niigata-ken\",\n          \"postalCode\": \"959-0215\",\n          \"addressCountry\": \"Japan\"\n        }\n      },\n      \"buyer\": {\n        \"type\": [\n          \"Organization\"\n        ],\n        \"address\": {\n          \"type\": [\n            \"PostalAddress\"\n          ],\n          \"organizationName\": \"Generic Motors of America\",\n          \"streetAddress\": \"12 Generic Motors Dr\",\n          \"addressLocality\": \"Detroit\",\n          \"addressRegion\": \"Michigain\",\n          \"postalCode\": \"48232-5170\",\n          \"addressCountry\": \"USA\"\n        }\n      },\n      \"shipToParty\": {\n        \"type\": [\n          \"Organization\"\n        ],\n        \"address\": {\n          \"type\": [\n            \"PostalAddress\"\n          ],\n          \"organizationName\": \"Generic Motors of America\",\n          \"streetAddress\": \"12 Generic Motors Dr\",\n          \"addressLocality\": \"Detroit\",\n          \"addressRegion\": \"Michigain\",\n          \"postalCode\": \"48232-5170\",\n          \"addressCountry\": \"USA\"\n        }\n      },\n      \"itemsShipped\": [\n        {\n          \"type\": \"TradeLineItem\",\n          \"product\": {\n            \"manufacturer\": {\n              \"type\": \"Organization\",\n              \"address\": {\n                \"type\": \"PostalAddress\",\n                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                \"addressLocality\": \"Tsubame-shi\",\n                \"addressRegion\": \"Niigata-ken\",\n                \"postalCode\": \"959-0215\",\n                \"addressCountry\": \"Japan\"\n              }\n            },\n            \"description\": \"UNS S30400 chromium-nickel stainless steel rolls.\",\n            \"weight\": {\n              \"type\": \"QuantitativeValue\",\n              \"unitCode\": \"lbs\",\n              \"value\": \"16500\"\n            }\n          },\n          \"itemCount\": 5,\n          \"tradeLineItemWeight\": {\n            \"type\": \"QuantitativeValue\",\n            \"value\": \"82500\",\n            \"unitCode\": \"lbs\"\n          },\n          \"priceSpecification\": {\n            \"type\": \"PriceSpecification\",\n            \"price\": 5200,\n            \"priceCurrency\": \"USD\"\n          }\n        },\n        {\n          \"type\": \"TradeLineItem\",\n          \"product\": {\n            \"manufacturer\": {\n              \"type\": \"Organization\",\n              \"address\": {\n                \"type\": \"PostalAddress\",\n                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                \"addressLocality\": \"Tsubame-shi\",\n                \"addressRegion\": \"Niigata-ken\",\n                \"postalCode\": \"959-0215\",\n                \"addressCountry\": \"Japan\"\n              }\n            },\n            \"description\": \"Galvalannealed ASTM A-653 zinc-iron alloy-coated steel sheets.\",\n            \"weight\": {\n              \"type\": \"QuantitativeValue\",\n              \"value\": \"12680\",\n              \"unitCode\": \"lbs\"\n            }\n          },\n          \"itemCount\": 20,\n          \"tradeLineItemWeight\": {\n            \"type\": \"QuantitativeValue\",\n            \"value\": \"253600\",\n            \"unitCode\": \"lbs\"\n          },\n          \"priceSpecification\": {\n            \"type\": \"PriceSpecification\",\n            \"price\": 4400,\n            \"priceCurrency\": \"USD\"\n          }\n        }\n      ],\n      \"totalWeight\": {\n        \"type\": \"QuantitativeValue\",\n        \"value\": \"336100\",\n        \"unitCode\": \"lbs\"\n      },\n      \"totalPaymentDue\": {\n        \"type\": \"PriceSpecification\",\n        \"price\": 9600,\n        \"priceCurrency\": \"USD\"\n      }\n    }\n  },\n  \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "4f5b60f1-5e0d-4c2c-bccb-a9547c9b953d",
              "type": "text/javascript",
              "exec": [
                "  pm.test(\"Commercial Invoice VC issued\", function () {",
                "      pm.response.to.have.status(201);",
                "      pm.collectionVariables.set('importers_commercial_invoice_vc', JSON.stringify(pm.response.json()));",
                "  })"
              ],
              "_lastExecutionId": "d7cb0679-87a9-4ac0-9d5c-91b155600f12"
            }
          }
        ]
      },
      {
        "id": "87718b25-337a-4c3a-9b1f-646cc00ee33f",
        "name": "Initiate Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_2_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "82e8d554-1991-45bc-9939-d8a17009a1d9",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"org_2_domain\", responseJson.domain);",
                "pm.collectionVariables.set(\"org_2_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Importer has authenticated to Freight Forwarder\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "18b1e49c-c902-4fc8-baf4-9376e630a4a0"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "4cc6c7ea-e343-4df7-b73f-4b62d64dd464",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bbdf2d65-ee72-47a7-9eb0-febacdaee0c8"
            }
          }
        ]
      },
      {
        "id": "4684864e-a851-4eac-91bd-0472f5c4a85a",
        "name": "Sign Presentation",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_1\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_1_holder}}\",\n        \"verifiableCredential\": [\n            {{importers_commercial_invoice_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_2_domain}}\",\n        \"challenge\": \"{{org_2_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "dec8ccb1-4a85-4685-8aa8-85aa54ca6406",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"importers_presentation_of_ci_to_freight_forwarder\", JSON.stringify(responseJson));",
                "",
                "pm.test(\"Importer VP of Commercial Invoice with workflow instance 'instance_1' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "9a3b8606-b726-4908-91dc-fcd89136d95b"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "7e89687b-2ffd-42bd-80f4-fab364ea5b60",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ebe55df5-9c46-44ce-bf0d-16a6db22fc47"
            }
          }
        ]
      },
      {
        "id": "d90b3f19-7424-46c5-8d49-8055dd287e60",
        "name": "Complete Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_2_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{importers_presentation_of_ci_to_freight_forwarder}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "1b304db0-4a44-428b-9dca-697fbd96ec27",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Importer has successfully presented Commercial Invoice to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"Commercial Invoice VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "633fed55-02c9-4003-b367-959677e4eaf4"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "85135349-8b3b-457f-b61c-c98fbd1f55b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93a8aa88-c4b6-46af-8294-6b7140f8140e"
            }
          }
        ]
      },
      {
        "id": "63513a1f-ddb3-4bee-b12d-7d83c80a1afa",
        "name": "Initiate Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "d14d1550-fc87-43b6-a958-a789edff02d6",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"org_3_domain\", responseJson.domain);",
                "pm.collectionVariables.set(\"org_3_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Freight Forwarder has authenticated to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "9ef21be9-64ed-43a9-8035-6e8da5dc051c"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "6144461a-35f4-45ab-9f0b-3310afee8e98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c71b705a-d0cf-4685-ad0a-c31a2c0b47aa"
            }
          }
        ]
      },
      {
        "id": "4d081037-5a6a-48be-8c86-a033e2c41c38",
        "name": "Sign Presentation",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_1\", \n                \"instance_2\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_2_holder}}\",\n        \"verifiableCredential\": [\n            {{importers_commercial_invoice_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "928ed988-48f7-4835-b482-21c931ea2c60",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"freight_forwarders_presentation_of_ci_to_customs\", JSON.stringify(responseJson));",
                "",
                "pm.test(\"Freight Forwarder VP of Commercial Invoice with workflow instances 'instance_1' and 'instance_2' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "ac3d7bbe-e658-473a-b3e9-34d69ec8b2bd"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "46254277-9f26-4cf1-8ea3-2f7926c25e43",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a17eca20-6b3c-44a3-8a88-4ced08de96c0"
            }
          }
        ]
      },
      {
        "id": "ecd271e6-afeb-4543-bafb-fa492774152a",
        "name": "Complete Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{freight_forwarders_presentation_of_ci_to_customs}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "689d46e6-b7dc-455a-b662-d61191fed44e",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Freight Forwarder has successfully presented Commercial Invoice to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"Commercial Invoice VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "71c9af53-31a8-4f03-ae04-7db0407d6038"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "2290ba6f-68bf-4cb5-addc-2a2177c26316",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29bff61f-153f-4f89-975d-2e819e86034a"
            }
          }
        ]
      },
      {
        "id": "e917dec2-4a3d-4d4c-ad60-e7bed424e5fc",
        "name": "Join Workflow Graphs",
        "request": {
          "url": {
            "path": [
              "presentations",
              "verify"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiablePresentation\": {{freight_forwarders_presentation_of_ci_to_customs}},\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f56a6fbd-f835-40a2-8363-360ae735b5a0",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Customs verifies Commercial Invoice\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "var workflowInstances = JSON.parse(pm.collectionVariables.get(\"freight_forwarders_presentation_of_ci_to_customs\")).workflow.instance",
                "",
                "pm.test(\"Customs checks known workflow instance ids and join the workflows\", function () {",
                "    pm.expect(workflowInstances[0]).to.eql(pm.collectionVariables.get(\"customs_first_workflow_instance_id\"));",
                "    pm.expect(workflowInstances[1]).to.eql(pm.collectionVariables.get(\"customs_second_workflow_instance_id\"));",
                "});",
                ""
              ],
              "_lastExecutionId": "e4237877-13d5-44e2-b8e2-e7a6604b5cb2"
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 36,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 37,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 12,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 3139.8333333333335,
      "responseMin": 66,
      "responseMax": 8559,
      "responseSd": 3201.762257812962,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1672621578455,
      "completed": 1672621654429
    },
    "executions": [
      {
        "id": "67d7c9bc-2e12-42a6-a337-977610da9b23",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 24,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e53c5273-2475-4371-ae90-fd35e8e2434d",
          "httpRequestId": "7764e7d5-e8a2-4109-9dd7-d47952485535"
        },
        "item": {
          "id": "67d7c9bc-2e12-42a6-a337-977610da9b23",
          "name": "Get Access Token"
        },
        "response": {
          "id": "585a75e2-8c07-4cc5-a16c-83c2665fa14b",
          "status": "OK",
          "code": 200,
          "responseTime": 631,
          "responseSize": 1050
        },
        "assertions": [
          {
            "assertion": "Importer application has access token",
            "skipped": false
          },
          {
            "assertion": "`org_1_access_token` persisted to collectionVariables",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d73523-5543-4e91-bfab-9279308ba3bc",
        "cursor": {
          "ref": "e6863b7c-9ec4-4e5c-ba97-8e5d2b321131",
          "length": 24,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e8053c43-576a-4e0d-9ea0-28657a3568c3"
        },
        "item": {
          "id": "29d73523-5543-4e91-bfab-9279308ba3bc",
          "name": "Get Access Token"
        },
        "response": {
          "id": "13f735cb-00b9-47d2-9fba-9997c0e7a5fa",
          "status": "OK",
          "code": 200,
          "responseTime": 254,
          "responseSize": 1050
        },
        "assertions": [
          {
            "assertion": "Importer application has access token",
            "skipped": false
          },
          {
            "assertion": "`org_2_access_token` persisted to collectionVariables",
            "skipped": false
          }
        ]
      },
      {
        "id": "f097d0d5-645e-47f6-8e2e-5f805f89d55c",
        "cursor": {
          "ref": "78e903b1-36a8-4714-b1a6-efc1bd02f3c7",
          "length": 24,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cb061676-85c6-4a5f-ae0f-492060cc2c34"
        },
        "item": {
          "id": "f097d0d5-645e-47f6-8e2e-5f805f89d55c",
          "name": "Get Access Token"
        },
        "response": {
          "id": "c2e67f6c-ad01-4a29-aa5f-d5f580221e53",
          "status": "OK",
          "code": 200,
          "responseTime": 248,
          "responseSize": 1050
        },
        "assertions": [
          {
            "assertion": "Importer application has access token",
            "skipped": false
          },
          {
            "assertion": "`org_3_access_token` persisted to collectionVariables",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a5a09d-499f-475c-8ece-00d6e3a9256e",
        "cursor": {
          "ref": "031339ed-101a-4ff0-b8c8-c27ac3401cc0",
          "length": 24,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c2a87e25-c14f-456b-b188-1b1417cdc075"
        },
        "item": {
          "id": "05a5a09d-499f-475c-8ece-00d6e3a9256e",
          "name": "Get Organization DIDs"
        },
        "response": {
          "id": "dab55424-82c5-4088-a291-798da33f9ed7",
          "status": "OK",
          "code": 200,
          "responseTime": 1874,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "Importer has holder DID",
            "skipped": false
          },
          {
            "assertion": "Importer has service endpoint",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef915c13-70ad-4d98-970b-cb5feb309bfb",
        "cursor": {
          "ref": "f33fabf1-7b50-4400-b5cf-80be98d88191",
          "length": 24,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "21f18da8-8abf-4df3-bd54-3534cb28d0b5"
        },
        "item": {
          "id": "ef915c13-70ad-4d98-970b-cb5feb309bfb",
          "name": "Get Organization DIDs"
        },
        "response": {
          "id": "26a57960-41f0-45f0-bcae-cb7d73501019",
          "status": "OK",
          "code": 200,
          "responseTime": 1530,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has holder DID",
            "skipped": false
          },
          {
            "assertion": "Freight Forwarder has service endpoint",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38a4d97-fb00-4e24-953b-3881b4b76466",
        "cursor": {
          "ref": "f3732141-e254-478a-8af2-02dcfc5ba3bd",
          "length": 24,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b2b67597-a538-42b0-9ab5-e0de11e71348"
        },
        "item": {
          "id": "f38a4d97-fb00-4e24-953b-3881b4b76466",
          "name": "Get Organization DIDs"
        },
        "response": {
          "id": "8476bdfb-dbce-49cd-8279-41a4e8d46ac0",
          "status": "OK",
          "code": 200,
          "responseTime": 1559,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "Customs has holder DID",
            "skipped": false
          },
          {
            "assertion": "Customs has service endpoint",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bca41f-aba7-44fd-b44e-f1f944416ad5",
        "cursor": {
          "ref": "f1cb33f4-fde4-4f50-97fc-3f49888d355c",
          "length": 24,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c37d1445-b055-4eb6-9685-a119d104026f"
        },
        "item": {
          "id": "80bca41f-aba7-44fd-b44e-f1f944416ad5",
          "name": "Issue Credential"
        },
        "response": {
          "id": "a8b759a2-fe7e-4d1f-a309-a294a36cdba4",
          "status": "Created",
          "code": 201,
          "responseTime": 5775,
          "responseSize": 3415
        },
        "assertions": [
          {
            "assertion": "Proforma Invoice VC issued",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbe79fa-0b12-401c-953e-4dcb601fffdc",
        "cursor": {
          "ref": "815e10fe-ef5f-47cd-95da-8a6a69e575ac",
          "length": 24,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "551a0311-e863-4ea0-a803-13c3d318295a"
        },
        "item": {
          "id": "9cbe79fa-0b12-401c-953e-4dcb601fffdc",
          "name": "Initiate Exchange"
        },
        "response": {
          "id": "04659a26-8eaf-4638-9049-5dc2818e874b",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Importer has authenticated to Customs",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f93517-f949-461e-a7bb-b05b2457110f",
        "cursor": {
          "ref": "f2cb8199-7a15-4f9a-a79e-dd99ca4276aa",
          "length": 24,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9861f4e0-5c18-4655-97e9-891e874a450f"
        },
        "item": {
          "id": "b0f93517-f949-461e-a7bb-b05b2457110f",
          "name": "Sign Presentation"
        },
        "response": {
          "id": "830a0af3-5126-4f0f-8285-cc03e2053af6",
          "status": "Created",
          "code": 201,
          "responseTime": 7104,
          "responseSize": 4245
        },
        "assertions": [
          {
            "assertion": "Importer VP of Proforma Invoice with workflow instance 'instance_1' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec915a9b-daf0-4aca-86ac-4f4e7dde5cd6",
        "cursor": {
          "ref": "bfec302e-9d81-4a2b-bf2e-a744593022b2",
          "length": 24,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bc02b114-49c2-4964-a9c2-4eef82297101"
        },
        "item": {
          "id": "ec915a9b-daf0-4aca-86ac-4f4e7dde5cd6",
          "name": "Complete Exchange"
        },
        "response": {
          "id": "f3e04fbc-137d-469f-ad22-e69867d6aeb7",
          "status": "OK",
          "code": 200,
          "responseTime": 374,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Importer has successfully presented Proforma Invoice to Customs",
            "skipped": false
          },
          {
            "assertion": "Proforma Invoice VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c962c52-13c6-46cb-a03f-d442a050dd1e",
        "cursor": {
          "ref": "14125f74-1ca6-4b04-ba0c-62a0dccd12a5",
          "length": 24,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "001bc64d-f767-42b9-8e39-dced98b05dca"
        },
        "item": {
          "id": "3c962c52-13c6-46cb-a03f-d442a050dd1e",
          "name": "Verify Credential"
        },
        "response": {
          "id": "5f318791-74d0-4c00-a72d-776c9e815f8a",
          "status": "OK",
          "code": 200,
          "responseTime": 8449,
          "responseSize": 3018
        },
        "assertions": [
          {
            "assertion": "Customs verifies Proforma Invoice",
            "skipped": false
          },
          {
            "assertion": "Customs stores first workflow instance id: instance_1",
            "skipped": false
          }
        ]
      },
      {
        "id": "5beeee8a-6c01-4733-ae35-66266966a7d4",
        "cursor": {
          "ref": "f3c9dd19-35dd-4029-b68b-c6d6f1ebef73",
          "length": 24,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "479f57bf-cfec-4ed9-bed0-bed33b1a101f"
        },
        "item": {
          "id": "5beeee8a-6c01-4733-ae35-66266966a7d4",
          "name": "Issue Credential"
        },
        "response": {
          "id": "090fe1cc-392c-42ec-a23b-0c9cf89073df",
          "status": "Created",
          "code": 201,
          "responseTime": 4207,
          "responseSize": 3539
        },
        "assertions": [
          {
            "assertion": "House Bill of Lading VC issued",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe26518-cc5f-4059-82ff-dafa6330dd48",
        "cursor": {
          "ref": "0721bbb3-cb01-457a-b884-963060d0dd09",
          "length": 24,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "35244648-4e0c-4443-8db3-fc9a4913d442"
        },
        "item": {
          "id": "0fe26518-cc5f-4059-82ff-dafa6330dd48",
          "name": "Initiate Exchange"
        },
        "response": {
          "id": "f47e2144-2c26-4449-bb21-68c7d82ed241",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has authenticated to Customs",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f02eec-3015-46ff-90fc-35f15bee4693",
        "cursor": {
          "ref": "b086f572-5125-474b-a21a-aa1823e0f42a",
          "length": 24,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "269df28a-a324-482e-a421-e76ff52bd49b"
        },
        "item": {
          "id": "16f02eec-3015-46ff-90fc-35f15bee4693",
          "name": "Sign Presentation"
        },
        "response": {
          "id": "615970f5-5884-43ab-8900-2964f47325d6",
          "status": "Created",
          "code": 201,
          "responseTime": 6075,
          "responseSize": 4369
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder VP of House Bill of Lading with workflow instance 'instance_2' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba6c0d1-a83a-4db6-a0e1-2ab6f759a348",
        "cursor": {
          "ref": "63c719de-7a1c-4518-8da6-3e7ccd057cf7",
          "length": 24,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b952fafe-58d5-4841-9bb1-0154d5636bbe"
        },
        "item": {
          "id": "7ba6c0d1-a83a-4db6-a0e1-2ab6f759a348",
          "name": "Complete Exchange"
        },
        "response": {
          "id": "fde444f0-06e9-4f31-9df2-dde6e81b8bd4",
          "status": "OK",
          "code": 200,
          "responseTime": 372,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has successfully presented House Bill of Lading to Customs",
            "skipped": false
          },
          {
            "assertion": "House Bill of Lading VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "588a7a26-d87d-4d3c-b703-3906e5d3fc3d",
        "cursor": {
          "ref": "894f115f-d2e9-41e0-af17-840d5feb2fcb",
          "length": 24,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "542b2546-3eea-48ee-b946-b71a020c78c2"
        },
        "item": {
          "id": "588a7a26-d87d-4d3c-b703-3906e5d3fc3d",
          "name": "Verify Credential"
        },
        "response": {
          "id": "51bac487-bf6b-4e45-b03c-cca4ce49b3e5",
          "status": "OK",
          "code": 200,
          "responseTime": 8404,
          "responseSize": 3092
        },
        "assertions": [
          {
            "assertion": "Customs verifies House Bill of Lading",
            "skipped": false
          },
          {
            "assertion": "Customs stores first workflow instance id: instance_2",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a126804-ee9d-4737-b7f8-70de5945200a",
        "cursor": {
          "ref": "f75ed5d3-e8c1-43ac-b0ba-181115bc63a6",
          "length": 24,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b29307c8-75b7-473b-ae31-0893ac36acb5"
        },
        "item": {
          "id": "1a126804-ee9d-4737-b7f8-70de5945200a",
          "name": "Issue Credential"
        },
        "response": {
          "id": "0a174ff2-4214-4bda-8e54-d88689e359e2",
          "status": "Created",
          "code": 201,
          "responseTime": 6131,
          "responseSize": 3479
        },
        "assertions": [
          {
            "assertion": "Commercial Invoice VC issued",
            "skipped": false
          }
        ]
      },
      {
        "id": "87718b25-337a-4c3a-9b1f-646cc00ee33f",
        "cursor": {
          "ref": "801ee645-1f25-418a-bbb8-fb7934a181f9",
          "length": 24,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "36c949e8-670f-46f5-a987-4634e4d9e873"
        },
        "item": {
          "id": "87718b25-337a-4c3a-9b1f-646cc00ee33f",
          "name": "Initiate Exchange"
        },
        "response": {
          "id": "73a1774c-a0b9-41dd-a461-88fe38f314c1",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Importer has authenticated to Freight Forwarder",
            "skipped": false
          }
        ]
      },
      {
        "id": "4684864e-a851-4eac-91bd-0472f5c4a85a",
        "cursor": {
          "ref": "65cb73a5-833d-4236-9261-3066c5856e45",
          "length": 24,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b0a3b732-f02b-4a7f-a9de-baf97a3e44e3"
        },
        "item": {
          "id": "4684864e-a851-4eac-91bd-0472f5c4a85a",
          "name": "Sign Presentation"
        },
        "response": {
          "id": "41365cf6-eb0d-45a3-b6aa-527cc52bd88c",
          "status": "Created",
          "code": 201,
          "responseTime": 6667,
          "responseSize": 4309
        },
        "assertions": [
          {
            "assertion": "Importer VP of Commercial Invoice with workflow instance 'instance_1' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90b3f19-7424-46c5-8d49-8055dd287e60",
        "cursor": {
          "ref": "3ff84921-962e-4390-b475-02fbf2a011f6",
          "length": 24,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b8953660-d6e9-4fc5-a31f-b6a80f9f4b1a"
        },
        "item": {
          "id": "d90b3f19-7424-46c5-8d49-8055dd287e60",
          "name": "Complete Exchange"
        },
        "response": {
          "id": "c5f1a304-bc84-4ea6-b205-0910c77c6dc7",
          "status": "OK",
          "code": 200,
          "responseTime": 413,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Importer has successfully presented Commercial Invoice to Customs",
            "skipped": false
          },
          {
            "assertion": "Commercial Invoice VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "63513a1f-ddb3-4bee-b12d-7d83c80a1afa",
        "cursor": {
          "ref": "f3b57c0b-3fb5-4077-8b60-ff356d1de3f9",
          "length": 24,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fb75ed88-a880-4614-b4c7-154357e6aa3d"
        },
        "item": {
          "id": "63513a1f-ddb3-4bee-b12d-7d83c80a1afa",
          "name": "Initiate Exchange"
        },
        "response": {
          "id": "bb8f5e82-2aec-4442-944c-9301370f0493",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has authenticated to Customs",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d081037-5a6a-48be-8c86-a033e2c41c38",
        "cursor": {
          "ref": "24f366ef-0648-485f-9767-f3b1a08880cc",
          "length": 24,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b8aaaa84-ef74-42af-914a-969592504951"
        },
        "item": {
          "id": "4d081037-5a6a-48be-8c86-a033e2c41c38",
          "name": "Sign Presentation"
        },
        "response": {
          "id": "9d4cc82f-05ee-4d4e-8958-2b0e2ab0132c",
          "status": "Created",
          "code": 201,
          "responseTime": 6126,
          "responseSize": 4322
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder VP of Commercial Invoice with workflow instances 'instance_1' and 'instance_2' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd271e6-afeb-4543-bafb-fa492774152a",
        "cursor": {
          "ref": "c58f31d9-d6dd-4484-beca-2dea2b2ca757",
          "length": 24,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2b24012d-b534-445c-8c2b-6f1ca53cd41f"
        },
        "item": {
          "id": "ecd271e6-afeb-4543-bafb-fa492774152a",
          "name": "Complete Exchange"
        },
        "response": {
          "id": "1e0eead8-2558-4cb2-bb7c-343e6d89713d",
          "status": "OK",
          "code": 200,
          "responseTime": 320,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has successfully presented Commercial Invoice to Customs",
            "skipped": false
          },
          {
            "assertion": "Commercial Invoice VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e917dec2-4a3d-4d4c-ad60-e7bed424e5fc",
        "cursor": {
          "ref": "29ca5b75-8901-49d5-a956-625db8cf784e",
          "length": 24,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "aeedaf97-319b-4d17-a987-09f0cc92a6c6"
        },
        "item": {
          "id": "e917dec2-4a3d-4d4c-ad60-e7bed424e5fc",
          "name": "Join Workflow Graphs"
        },
        "response": {
          "id": "1c0bd9d2-dc74-4bb6-b09a-dff4d2deb2ee",
          "status": "OK",
          "code": 200,
          "responseTime": 8559,
          "responseSize": 3092
        },
        "assertions": [
          {
            "assertion": "Customs verifies Commercial Invoice",
            "skipped": false
          },
          {
            "assertion": "Customs checks known workflow instance ids and join the workflows",
            "skipped": false
          }
        ]
      }
    ]
  }
}