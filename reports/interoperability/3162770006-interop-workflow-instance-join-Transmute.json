{
  "collection": {
    "info": {
      "_postman_id": "c0814470-0c07-43ad-9ed4-2ad4b125c937",
      "name": "Workflow Instance Join",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "11e737f3-ebb7-4a10-a485-174f2c3c9a34",
        "name": "Get Access Token",
        "request": {
          "url": {
            "host": [
              "{{ORG_1_TOKEN_ENDPOINT}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "audience",
                "value": "{{ORG_1_TOKEN_AUDIENCE}}"
              },
              {
                "key": "client_id",
                "value": "{{ORG_1_CLIENT_ID}}"
              },
              {
                "key": "client_secret",
                "value": "{{ORG_1_CLIENT_SECRET}}"
              },
              {
                "key": "grant_type",
                "value": "client_credentials"
              },
              {
                "key": "scope",
                "value": "resolve:dids issue:credentials prove:presentations verify:presentations"
              }
            ]
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "34fddf82-d980-4bf7-8bdf-b62789fb9700",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Importer application has access token\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"`org_1_access_token` persisted to collectionVariables\", function() {",
                "    const { access_token } = pm.response.json()",
                "    pm.collectionVariables.set(\"org_1_access_token\", access_token);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "95b3e461-985b-4883-869f-0601625d171c"
            }
          }
        ]
      },
      {
        "id": "1735d127-5fc0-40e7-bdcf-d2a10763a5de",
        "name": "Get Access Token",
        "request": {
          "url": {
            "host": [
              "{{ORG_2_TOKEN_ENDPOINT}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "audience",
                "value": "{{ORG_2_TOKEN_AUDIENCE}}"
              },
              {
                "key": "client_id",
                "value": "{{ORG_2_CLIENT_ID}}"
              },
              {
                "key": "client_secret",
                "value": "{{ORG_2_CLIENT_SECRET}}"
              },
              {
                "key": "grant_type",
                "value": "client_credentials"
              },
              {
                "key": "scope",
                "value": "resolve:dids issue:credentials prove:presentations verify:presentations"
              }
            ]
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "9ad4fe35-e2a3-4b47-9bf1-b0425fbe93d4",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Importer application has access token\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"`org_2_access_token` persisted to collectionVariables\", function() {",
                "    const { access_token } = pm.response.json()",
                "    pm.collectionVariables.set(\"org_2_access_token\", access_token);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "35359d43-db22-4af5-bd5f-f1ed8f6cc19c"
            }
          }
        ]
      },
      {
        "id": "4b5e021c-da58-4ab2-bbf1-56bff5c33a3b",
        "name": "Get Access Token",
        "request": {
          "url": {
            "host": [
              "{{ORG_3_TOKEN_ENDPOINT}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "audience",
                "value": "{{ORG_3_TOKEN_AUDIENCE}}"
              },
              {
                "key": "client_id",
                "value": "{{ORG_3_CLIENT_ID}}"
              },
              {
                "key": "client_secret",
                "value": "{{ORG_3_CLIENT_SECRET}}"
              },
              {
                "key": "grant_type",
                "value": "client_credentials"
              },
              {
                "key": "scope",
                "value": "resolve:dids issue:credentials prove:presentations verify:presentations"
              }
            ]
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "9ee5343f-dac5-4a21-be86-315f31c44605",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Importer application has access token\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"`org_3_access_token` persisted to collectionVariables\", function() {",
                "    const { access_token } = pm.response.json()",
                "    pm.collectionVariables.set(\"org_3_access_token\", access_token);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "a649eb07-9af2-4b4b-a188-64eff5280788"
            }
          }
        ]
      },
      {
        "id": "fe2b2ec5-4a30-4607-be9a-0f1ba1dca3f3",
        "name": "Get Organization DIDs",
        "request": {
          "url": {
            "path": [
              "identifiers",
              "{{ORG_1_DID_WEB}}"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5cf42ee9-a7e9-4ee5-bac6-9fc99fd08bae",
              "type": "text/javascript",
              "exec": [
                "const { didDocument } = pm.response.json()",
                "pm.collectionVariables.set(\"org_1_holder\", didDocument.id);",
                "pm.collectionVariables.set(\"org_1_tenant_url\", didDocument.service[0].serviceEndpoint);",
                "",
                "pm.test(\"Importer has holder DID\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_1_holder\")).to.not.be.undefined;",
                "});",
                "",
                "pm.test(\"Importer has service endpoint\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_1_tenant_url\")).to.not.be.undefined;",
                "});"
              ],
              "_lastExecutionId": "026acada-17aa-4df1-92ca-3d0433858d88"
            }
          }
        ]
      },
      {
        "id": "2ec611a6-20a7-4a59-95c6-d79c34fa9997",
        "name": "Get Organization DIDs",
        "request": {
          "url": {
            "path": [
              "identifiers",
              "{{ORG_2_DID_WEB}}"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f14204e8-8050-46ef-8ed9-060bfdbf8c2d",
              "type": "text/javascript",
              "exec": [
                "const { didDocument } = pm.response.json()",
                "pm.collectionVariables.set(\"org_2_holder\", didDocument.id);",
                "pm.collectionVariables.set(\"org_2_tenant_url\", didDocument.service[0].serviceEndpoint);",
                "",
                "pm.test(\"Freight Forwarder has holder DID\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_2_holder\")).to.not.be.undefined;",
                "});",
                "",
                "pm.test(\"Freight Forwarder has service endpoint\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_2_tenant_url\")).to.not.be.undefined;",
                "});"
              ],
              "_lastExecutionId": "b4d0348a-2bd3-48d4-93c0-02618469c934"
            }
          }
        ]
      },
      {
        "id": "e268641c-324e-48be-b2f1-0dcac7116195",
        "name": "Get Organization DIDs",
        "request": {
          "url": {
            "path": [
              "identifiers",
              "{{ORG_3_DID_WEB}}"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "cf391df4-4d74-4433-8aed-b2963da1ed8e",
              "type": "text/javascript",
              "exec": [
                "const { didDocument } = pm.response.json()",
                "pm.collectionVariables.set(\"org_3_holder\", didDocument.id);",
                "pm.collectionVariables.set(\"org_3_tenant_url\", didDocument.service[0].serviceEndpoint);",
                "",
                "pm.test(\"Customs has holder DID\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_3_holder\")).to.not.be.undefined;",
                "});",
                "",
                "pm.test(\"Customs has service endpoint\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_3_tenant_url\")).to.not.be.undefined;",
                "});"
              ],
              "_lastExecutionId": "ac002a77-e312-4e87-84e0-6a3096267302"
            }
          }
        ]
      },
      {
        "id": "68111baf-1b8c-46fb-860c-c99684720b2e",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\",\n            \"CommercialInvoiceCertificate\"\n        ],\n        \"name\": \"Commercial Invoice Certificate\",\n        \"issuanceDate\": \"2022-02-23T11:55:00Z\",\n        \"issuer\": {\n            \"id\": \"{{org_1_holder}}\",\n            \"type\": [\n                \"Organization\"\n            ],\n            \"address\": {\n                \"type\": [\n                    \"PostalAddress\"\n                ],\n                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                \"addressLocality\": \"Tsubame-shi\",\n                \"addressRegion\": \"Niigata-ken\",\n                \"postalCode\": \"959-0215\",\n                \"addressCountry\": \"Japan\"\n            }\n        },\n        \"credentialSubject\": {\n            \"type\": [\n                \"Invoice\"\n            ],\n            \"portOfEntry\": {\n                \"type\": \"Place\",\n                \"unLocode\": \"USLGB\"\n            },\n            \"destinationCountry\": \"MEX\",\n            \"purchaseDate\": \"2021-02-21\",\n            \"seller\": {\n                \"type\": [\n                    \"Organization\"\n                ],\n                \"address\": {\n                    \"type\": [\n                        \"PostalAddress\"\n                    ],\n                    \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                    \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                    \"addressLocality\": \"Tsubame-shi\",\n                    \"addressRegion\": \"Niigata-ken\",\n                    \"postalCode\": \"959-0215\",\n                    \"addressCountry\": \"Japan\"\n                }\n            },\n            \"buyer\": {\n                \"type\": [\n                    \"Organization\"\n                ],\n                \"address\": {\n                    \"type\": [\n                        \"PostalAddress\"\n                    ],\n                    \"organizationName\": \"Generic Motors of America\",\n                    \"streetAddress\": \"12 Generic Motors Dr\",\n                    \"addressLocality\": \"Detroit\",\n                    \"addressRegion\": \"Michigain\",\n                    \"postalCode\": \"48232-5170\",\n                    \"addressCountry\": \"USA\"\n                }\n            },\n            \"shipToParty\": {\n                \"type\": [\n                    \"Organization\"\n                ],\n                \"address\": {\n                    \"type\": [\n                        \"PostalAddress\"\n                    ],\n                    \"organizationName\": \"Generic Motors of America\",\n                    \"streetAddress\": \"12 Generic Motors Dr\",\n                    \"addressLocality\": \"Detroit\",\n                    \"addressRegion\": \"Michigain\",\n                    \"postalCode\": \"48232-5170\",\n                    \"addressCountry\": \"USA\"\n                }\n            },\n            \"itemsShipped\": [\n                {\n                    \"type\": \"TradeLineItem\",\n                    \"product\": {\n                        \"manufacturer\": {\n                            \"type\": \"Organization\",\n                            \"address\": {\n                                \"type\": \"PostalAddress\",\n                                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                                \"addressLocality\": \"Tsubame-shi\",\n                                \"addressRegion\": \"Niigata-ken\",\n                                \"postalCode\": \"959-0215\",\n                                \"addressCountry\": \"Japan\"\n                            }\n                        },\n                        \"description\": \"UNS S30400 chromium-nickel stainless steel rolls.\",\n                        \"weight\": {\n                            \"type\": \"QuantitativeValue\",\n                            \"unitCode\": \"lbs\",\n                            \"value\": \"16500\"\n                        }\n                    },\n                    \"itemCount\": 5,\n                    \"tradeLineItemWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"value\": \"82500\",\n                        \"unitCode\": \"lbs\"\n                    },\n                    \"priceSpecification\": {\n                        \"type\": \"PriceSpecification\",\n                        \"price\": 5200,\n                        \"priceCurrency\": \"USD\"\n                    }\n                },\n                {\n                    \"type\": \"TradeLineItem\",\n                    \"product\": {\n                        \"manufacturer\": {\n                            \"type\": \"Organization\",\n                            \"address\": {\n                                \"type\": \"PostalAddress\",\n                                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                                \"addressLocality\": \"Tsubame-shi\",\n                                \"addressRegion\": \"Niigata-ken\",\n                                \"postalCode\": \"959-0215\",\n                                \"addressCountry\": \"Japan\"\n                            }\n                        },\n                        \"description\": \"Galvalannealed ASTM A-653 zinc-iron alloy-coated steel sheets.\",\n                        \"weight\": {\n                            \"type\": \"QuantitativeValue\",\n                            \"value\": \"12680\",\n                            \"unitCode\": \"lbs\"\n                        }\n                    },\n                    \"itemCount\": 20,\n                    \"tradeLineItemWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"value\": \"253600\",\n                        \"unitCode\": \"lbs\"\n                    },\n                    \"priceSpecification\": {\n                        \"type\": \"PriceSpecification\",\n                        \"price\": 4400,\n                        \"priceCurrency\": \"USD\"\n                    }\n                }\n            ],\n            \"totalWeight\": {\n                \"type\": \"QuantitativeValue\",\n                \"value\": \"336100\",\n                \"unitCode\": \"lbs\"\n            },\n            \"totalPaymentDue\": {\n                \"type\": \"PriceSpecification\",\n                \"price\": 9600,\n                \"priceCurrency\": \"USD\"\n            }\n        }\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c0c12377-0e84-462e-853b-fb9aac113cee",
              "type": "text/javascript",
              "exec": [
                "  pm.test(\"Proforma Invoice VC issued\", function () {",
                "      pm.response.to.have.status(201);",
                "      pm.collectionVariables.set('importers_proforma_invoice_vc', JSON.stringify(pm.response.json()));",
                "  })"
              ],
              "_lastExecutionId": "cbd39016-68dd-4959-92ab-0ce8840eca8f"
            }
          }
        ]
      },
      {
        "id": "b94244b2-d1f8-4626-865c-7be3125b18bf",
        "name": "Initiate Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "796e2f78-a360-486b-a7bc-cc6e3f1488cb",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"org_3_domain\", responseJson.domain);",
                "pm.collectionVariables.set(\"org_3_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Importer has authenticated to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "18099ed8-a950-4ec2-9975-72ce5100eb32"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "3d5b00fb-d917-4aa4-8aa8-34690d82cb2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0345e113-e72f-4e84-b1d6-c1eaf24305d3"
            }
          }
        ]
      },
      {
        "id": "d27c2358-0da6-4565-aa97-75fe9775a82d",
        "name": "Sign Presentation",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_1\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_1_holder}}\",\n        \"verifiableCredential\": [\n            {{importers_proforma_invoice_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "b43f422f-7b07-4835-b0c3-12b1b6a48592",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"importers_proforma_invoice_presented_to_customs\", JSON.stringify(responseJson));",
                "",
                "pm.test(\"Importer VP of Proforma Invoice with workflow instance 'instance_1' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "69cce588-f580-4b98-a34c-1d9f8d0b84b2"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "c69efb6b-4d44-4d61-a032-c6c5b72c4405",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6075038c-fcc6-415d-a8b6-3bab5a45950c"
            }
          }
        ]
      },
      {
        "id": "21380c62-405e-4262-b9b5-ababf38e9fd3",
        "name": "Complete Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{importers_proforma_invoice_presented_to_customs}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "ff87fcd1-6d87-4672-8ef1-a8bcbfd337d6",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Importer has successfully presented Proforma Invoice to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"Proforma Invoice VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "d7cbb56f-315b-4731-bae3-4d539587e404"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "b41f3fbc-8271-43e7-b784-586f64e06224",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e2ba3a56-0f90-47d4-a7c8-f5ef51ae558b"
            }
          }
        ]
      },
      {
        "id": "bb360db7-a932-4838-b2b8-7497344db0f4",
        "name": "Verify Credential",
        "request": {
          "url": {
            "path": [
              "presentations",
              "verify"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiablePresentation\": {{importers_proforma_invoice_presented_to_customs}},\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "8b4d306e-e314-4b09-a7fa-22636da54de4",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Customs verifies Proforma Invoice\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "var workflowInstances = JSON.parse(pm.collectionVariables.get(\"importers_proforma_invoice_presented_to_customs\")).workflow.instance",
                "",
                "pm.test(\"Customs stores first workflow instance id: \" + workflowInstances[0], function () {",
                "    pm.collectionVariables.set(\"customs_first_workflow_instance_id\", workflowInstances[0]);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "5a6f8a05-b5e8-4f04-9203-ed9ca079e625"
            }
          }
        ]
      },
      {
        "id": "8f8d9f8c-8e1d-4132-b4a1-fd9fa959309d",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"did:key:z6MkmbqKc6KncFZUbVJwUppttTkiMAtnVJ5wzC5oVBWci3pc\",\n        \"type\": [\n            \"VerifiableCredential\",\n            \"HouseBillOfLadingCertificate\"\n        ],\n        \"name\": \"House Bill Of Lading\",\n        \"issuanceDate\": \"2022-03-04T13:40:00Z\",\n        \"issuer\": {\n            \"type\": \"Organization\",\n            \"id\": \"{{org_2_holder}}\",\n            \"name\": \"World Forward, Inc.\",\n            \"address\": {\n                \"type\": \"PostalAddress\",\n                \"organizationName\": \"MCL Multi Container Line LTD.\",\n                \"streetAddress\": \"Well Fung Ind Centre\",\n                \"addressLocality\": \"Kwai Chung\",\n                \"addressRegion\": \"Hong Kong\",\n                \"addressCountry\": \"Hong Kong\"\n            }\n        },\n        \"credentialSubject\": {\n            \"type\": \"HouseBillOfLading\",\n            \"billOfLadingNumber\": \"FF873363210A\",\n            \"bookingNumber\": [\n                \"FF873363210\"\n            ],\n            \"shipper\": {\n                \"type\": \"Organization\",\n                \"name\": \"Espresso Italiano Co.\",\n                \"address\": {\n                    \"type\": \"PostalAddress\",\n                    \"streetAddress\": \"Via Vico Ferrovia 5\",\n                    \"addressLocality\": \"Goro\",\n                    \"addressRegion\": \"Ferrara\",\n                    \"postalCode\": \"44020\",\n                    \"addressCountry\": \"IT\"\n                },\n                \"email\": \"sales@espresso-italiano.example.com\",\n                \"phoneNumber\": \"+39 0351 9067195\"\n            },\n            \"consignee\": {\n                \"type\": \"Organization\",\n                \"name\": \"Prosumer Coffee Supplies, Ltd.\",\n                \"description\": \"Coffee Machine Imports\",\n                \"address\": {\n                    \"type\": \"PostalAddress\",\n                    \"streetAddress\": \"3934 Spinnaker Lane\",\n                    \"addressLocality\": \"Joliet\",\n                    \"addressRegion\": \"Illinois\",\n                    \"postalCode\": \"60432\",\n                    \"addressCountry\": \"US\"\n                }\n            },\n            \"notifyParty\": [\n                {\n                    \"type\": \"Organization\",\n                    \"name\": \"Prosumer Coffee Supplies, Ltd.\",\n                    \"description\": \"Coffee Machine Imports\",\n                    \"address\": {\n                        \"type\": \"PostalAddress\",\n                        \"streetAddress\": \"3934 Spinnaker Lane\",\n                        \"addressLocality\": \"Joliet\",\n                        \"addressRegion\": \"Illinois\",\n                        \"postalCode\": \"60432\",\n                        \"addressCountry\": \"US\"\n                    }\n                }\n            ],\n            \"carrier\": {\n                \"type\": \"Organization\",\n                \"id\": \"did:key:z6MktHQo3fRRohk44dsbE76CuiTpBmyMWq2VVjvV6aBSeE3U\",\n                \"name\": \"World Forward, Inc.\",\n                \"address\": {\n                    \"type\": \"PostalAddress\",\n                    \"organizationName\": \"MCL Multi Container Line LTD.\",\n                    \"streetAddress\": \"Well Fung Ind Centre\",\n                    \"addressLocality\": \"Kwai Chung\",\n                    \"addressRegion\": \"Hong Kong\",\n                    \"addressCountry\": \"Hong Kong\"\n                }\n            },\n            \"mainCarriageTransportMovement\": {\n                \"type\": \"Transport\",\n                \"vesselNumber\": \"MS Seven Seas\",\n                \"voyageNumber\": \"Atl-W0425\"\n            },\n            \"portOfLoading\": {\n                \"type\": \"Place\",\n                \"unLocode\": \"ITMIL\"\n            },\n            \"portOfDischarge\": {\n                \"type\": \"Place\",\n                \"unLocode\": \"USLGB\"\n            },\n            \"totalNumberOfPackages\": 2200,\n            \"transportEquipmentQuantity\": 2,\n            \"includedConsignmentItems\": [\n                {\n                    \"marksAndNumbers\": \"Espresso Italiano\",\n                    \"commodity\": {\n                        \"type\": \"Commodity\",\n                        \"commodityCode\": \"851671\",\n                        \"commodityCodeType\": \"HS\"\n                    },\n                    \"packageQuantity\": 220,\n                    \"netWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"unitCode\": \"kg\",\n                        \"value\": \"1460\"\n                    },\n                    \"grossWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"unitCode\": \"kg\",\n                        \"value\": \"1590\"\n                    },\n                    \"grossVolume\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"value\": \"85\",\n                        \"unitCode\": \"cmb\"\n                    }\n                }\n            ],\n            \"freightAndCharges\": {\n                \"type\": \"ServiceCharge\",\n                \"chargeCode\": \"basicFreight\",\n                \"paymentTerm\": \"collect\",\n                \"chargeText\": \"Negotiated ocean freight\",\n                \"rate\": {\n                    \"type\": \"PriceSpecification\",\n                    \"price\": 225,\n                    \"priceCurrency\": \"USD\"\n                },\n                \"calculationBasis\": \"Per container\",\n                \"appliedAmount\": {\n                    \"type\": \"PriceSpecification\",\n                    \"price\": 450,\n                    \"priceCurrency\": \"USD\"\n                }\n            },\n            \"declaredValue\": {\n                \"type\": \"PriceSpecification\",\n                \"price\": 24000,\n                \"priceCurrency\": \"USD\"\n            },\n            \"termsAndConditions\": \"https://terms-of-shipment.freightforwarder.example.com\"\n        }\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e7587396-0413-4734-a781-27328df9f26f",
              "type": "text/javascript",
              "exec": [
                "  pm.test(\"House Bill of Lading VC issued\", function () {",
                "      pm.response.to.have.status(201);",
                "      pm.collectionVariables.set('freight_forwarders_hbol_vc', JSON.stringify(pm.response.json()));",
                "  })"
              ],
              "_lastExecutionId": "06e6d5df-5368-4ed2-a90d-09129ecd2ffb"
            }
          }
        ]
      },
      {
        "id": "0f403ecc-46c3-421e-a74b-cefa1757aad6",
        "name": "Initiate Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "b6bfc237-001f-45d7-8a72-4259a608a4ad",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"org_3_domain\", responseJson.domain);",
                "pm.collectionVariables.set(\"org_3_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Freight Forwarder has authenticated to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "e42f32e7-e036-4912-ae82-aca3c9b566d2"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "c677b85c-a4c0-4201-b23a-5a6551d76425",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d361bb5-56c1-454f-bff3-ac7d4df87311"
            }
          }
        ]
      },
      {
        "id": "b05fef78-e535-409b-a3ca-5f7981a5e3ab",
        "name": "Sign Presentation",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_2\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_2_holder}}\",\n        \"verifiableCredential\": [\n            {{freight_forwarders_hbol_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "7b05474e-3e17-4d07-9248-6e641c0ace73",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"freight_forwarders_house_bill_presented_to_customs\", JSON.stringify(responseJson));",
                "",
                "pm.test(\"Freight Forwarder VP of House Bill of Lading with workflow instance 'instance_2' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "7b8cba86-b1a3-4d0a-b147-6dd85c55491d"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "353f550c-05d8-4376-a73a-8448ce783b1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ae65aa5-6055-4f52-9104-498e3aab610a"
            }
          }
        ]
      },
      {
        "id": "4a4e66a8-be60-4b07-8f78-6274d5d24632",
        "name": "Complete Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{freight_forwarders_house_bill_presented_to_customs}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c69adff4-7823-438a-8a68-6f7eaeb89d4d",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Freight Forwarder has successfully presented House Bill of Lading to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"House Bill of Lading VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "4c8a4bd4-addd-4236-9acd-0c742d47f58d"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "49d881d9-6be0-4b05-9409-408dc5608a6b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3730abe7-453b-4186-99ac-8a3036aa99b5"
            }
          }
        ]
      },
      {
        "id": "2bc2492b-02da-4de3-a639-2956fc5d97f8",
        "name": "Verify Credential",
        "request": {
          "url": {
            "path": [
              "presentations",
              "verify"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiablePresentation\": {{freight_forwarders_house_bill_presented_to_customs}},\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "87dc04c9-84f4-4b76-a441-615cd8204610",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Customs verifies House Bill of Lading\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "var workflowInstances = JSON.parse(pm.collectionVariables.get(\"freight_forwarders_house_bill_presented_to_customs\")).workflow.instance",
                "",
                "pm.test(\"Customs stores first workflow instance id: \" + workflowInstances[0], function () {",
                "    pm.collectionVariables.set(\"customs_second_workflow_instance_id\", workflowInstances[0]);",
                "});",
                ""
              ],
              "_lastExecutionId": "1523f4ea-4ea6-4f64-bc1e-506c4b3e2d40"
            }
          }
        ]
      },
      {
        "id": "a17f3603-268d-4b03-a7f9-660be2f8aeb5",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"credential\": \n      {\n    \"@context\": [\n      \"https://www.w3.org/2018/credentials/v1\",\n      \"https://w3id.org/traceability/v1\"\n    ],\n    \"id\": \"did:key:z6MkhNsCYEQQWJdyAbfaMZHz4UG6UZoQUGot7z7tBNsbz1JG\",\n    \"type\": [\n      \"VerifiableCredential\",\n      \"CommercialInvoiceCertificate\"\n    ],\n    \"name\": \"Commercial Invoice Certificate\",\n    \"issuanceDate\": \"2022-02-23T11:55:00Z\",\n    \"issuer\": {\n      \"id\": \"{{org_1_holder}}\",\n      \"type\": [\n        \"Organization\"\n      ],\n      \"address\": {\n        \"type\": [\n          \"PostalAddress\"\n        ],\n        \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n        \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n        \"addressLocality\": \"Tsubame-shi\",\n        \"addressRegion\": \"Niigata-ken\",\n        \"postalCode\": \"959-0215\",\n        \"addressCountry\": \"Japan\"\n      }\n    },\n    \"credentialSubject\": {\n      \"type\": [\n        \"Invoice\"\n      ],\n      \"portOfEntry\": {\n        \"type\": \"Place\",\n        \"unLocode\": \"USLGB\"\n      },\n      \"destinationCountry\": \"MEX\",\n      \"purchaseDate\": \"2021-02-21\",\n      \"seller\": {\n        \"type\": [\n          \"Organization\"\n        ],\n        \"address\": {\n          \"type\": [\n            \"PostalAddress\"\n          ],\n          \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n          \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n          \"addressLocality\": \"Tsubame-shi\",\n          \"addressRegion\": \"Niigata-ken\",\n          \"postalCode\": \"959-0215\",\n          \"addressCountry\": \"Japan\"\n        }\n      },\n      \"buyer\": {\n        \"type\": [\n          \"Organization\"\n        ],\n        \"address\": {\n          \"type\": [\n            \"PostalAddress\"\n          ],\n          \"organizationName\": \"Generic Motors of America\",\n          \"streetAddress\": \"12 Generic Motors Dr\",\n          \"addressLocality\": \"Detroit\",\n          \"addressRegion\": \"Michigain\",\n          \"postalCode\": \"48232-5170\",\n          \"addressCountry\": \"USA\"\n        }\n      },\n      \"shipToParty\": {\n        \"type\": [\n          \"Organization\"\n        ],\n        \"address\": {\n          \"type\": [\n            \"PostalAddress\"\n          ],\n          \"organizationName\": \"Generic Motors of America\",\n          \"streetAddress\": \"12 Generic Motors Dr\",\n          \"addressLocality\": \"Detroit\",\n          \"addressRegion\": \"Michigain\",\n          \"postalCode\": \"48232-5170\",\n          \"addressCountry\": \"USA\"\n        }\n      },\n      \"itemsShipped\": [\n        {\n          \"type\": \"TradeLineItem\",\n          \"product\": {\n            \"manufacturer\": {\n              \"type\": \"Organization\",\n              \"address\": {\n                \"type\": \"PostalAddress\",\n                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                \"addressLocality\": \"Tsubame-shi\",\n                \"addressRegion\": \"Niigata-ken\",\n                \"postalCode\": \"959-0215\",\n                \"addressCountry\": \"Japan\"\n              }\n            },\n            \"description\": \"UNS S30400 chromium-nickel stainless steel rolls.\",\n            \"weight\": {\n              \"type\": \"QuantitativeValue\",\n              \"unitCode\": \"lbs\",\n              \"value\": \"16500\"\n            }\n          },\n          \"itemCount\": 5,\n          \"tradeLineItemWeight\": {\n            \"type\": \"QuantitativeValue\",\n            \"value\": \"82500\",\n            \"unitCode\": \"lbs\"\n          },\n          \"priceSpecification\": {\n            \"type\": \"PriceSpecification\",\n            \"price\": 5200,\n            \"priceCurrency\": \"USD\"\n          }\n        },\n        {\n          \"type\": \"TradeLineItem\",\n          \"product\": {\n            \"manufacturer\": {\n              \"type\": \"Organization\",\n              \"address\": {\n                \"type\": \"PostalAddress\",\n                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                \"addressLocality\": \"Tsubame-shi\",\n                \"addressRegion\": \"Niigata-ken\",\n                \"postalCode\": \"959-0215\",\n                \"addressCountry\": \"Japan\"\n              }\n            },\n            \"description\": \"Galvalannealed ASTM A-653 zinc-iron alloy-coated steel sheets.\",\n            \"weight\": {\n              \"type\": \"QuantitativeValue\",\n              \"value\": \"12680\",\n              \"unitCode\": \"lbs\"\n            }\n          },\n          \"itemCount\": 20,\n          \"tradeLineItemWeight\": {\n            \"type\": \"QuantitativeValue\",\n            \"value\": \"253600\",\n            \"unitCode\": \"lbs\"\n          },\n          \"priceSpecification\": {\n            \"type\": \"PriceSpecification\",\n            \"price\": 4400,\n            \"priceCurrency\": \"USD\"\n          }\n        }\n      ],\n      \"totalWeight\": {\n        \"type\": \"QuantitativeValue\",\n        \"value\": \"336100\",\n        \"unitCode\": \"lbs\"\n      },\n      \"totalPaymentDue\": {\n        \"type\": \"PriceSpecification\",\n        \"price\": 9600,\n        \"priceCurrency\": \"USD\"\n      }\n    }\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "aea68a1a-52f3-41c6-b41c-4939b4dcba20",
              "type": "text/javascript",
              "exec": [
                "  pm.test(\"Commercial Invoice VC issued\", function () {",
                "      pm.response.to.have.status(201);",
                "      pm.collectionVariables.set('importers_commercial_invoice_vc', JSON.stringify(pm.response.json()));",
                "  })"
              ],
              "_lastExecutionId": "c5a57ee4-e268-4d97-9b88-711773ced749"
            }
          }
        ]
      },
      {
        "id": "1cafb233-cb5e-45e6-8ea2-f4b670ec5638",
        "name": "Initiate Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_2_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "add99a26-ce83-44cf-8fb6-df75a9101cf4",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"org_2_domain\", responseJson.domain);",
                "pm.collectionVariables.set(\"org_2_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Importer has authenticated to Freight Forwarder\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "a0cbec70-66c9-4cff-b3b7-95792c5324f5"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "7c520586-d559-4c37-b102-09e0a9b9966d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f36ebae-7cd0-4a10-81ed-88ed449d6817"
            }
          }
        ]
      },
      {
        "id": "37b0532e-a9f7-4fa0-a184-c28e21f8b05e",
        "name": "Sign Presentation",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_1\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_1_holder}}\",\n        \"verifiableCredential\": [\n            {{importers_commercial_invoice_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_2_domain}}\",\n        \"challenge\": \"{{org_2_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "7c3e79d9-8b14-4d0a-b67c-38d9aa126531",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"importers_presentation_of_ci_to_freight_forwarder\", JSON.stringify(responseJson));",
                "",
                "pm.test(\"Importer VP of Commercial Invoice with workflow instance 'instance_1' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "780e9232-efa3-4197-a76d-37ebf94dfa75"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "ff97fb03-5999-4c46-9817-c198d8a8580b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bdccd226-3bdb-4d76-aad7-1f272244b6ea"
            }
          }
        ]
      },
      {
        "id": "b0f783ac-a51a-4af5-8ddc-7dd7248d3050",
        "name": "Complete Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_2_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{importers_presentation_of_ci_to_freight_forwarder}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "751b80ea-1dcb-4c72-a5b8-fbe6bd5020f9",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Importer has successfully presented Commercial Invoice to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"Commercial Invoice VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "a29365cb-d1f3-4559-897d-fa10b7f66e43"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "f48a87c1-b206-433a-8ce5-fa5062927e75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce77289f-919c-4fdd-9d44-adad8b6fc026"
            }
          }
        ]
      },
      {
        "id": "3857e5a2-5d67-47f1-b791-c1d7d9726bce",
        "name": "Initiate Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "345eaade-866a-4498-a724-4fd1e499140f",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"org_3_domain\", responseJson.domain);",
                "pm.collectionVariables.set(\"org_3_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Freight Forwarder has authenticated to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "e38a141b-08d8-4e47-ba40-25b43d2480b1"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "07d35220-9bf7-43a0-9c02-84422396c2c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "492e52d6-0b0f-483b-b7b1-3587278d49da"
            }
          }
        ]
      },
      {
        "id": "6b67a03d-3e21-42f2-8ce3-2ce3d05b32d6",
        "name": "Sign Presentation",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_1\", \n                \"instance_2\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_2_holder}}\",\n        \"verifiableCredential\": [\n            {{importers_commercial_invoice_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "b858493d-8c4e-4e34-a790-95dee1cd412c",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"freight_forwarders_presentation_of_ci_to_customs\", JSON.stringify(responseJson));",
                "",
                "pm.test(\"Freight Forwarder VP of Commercial Invoice with workflow instances 'instance_1' and 'instance_2' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "e6caaa5d-cf31-4810-8048-c3f0bc143daa"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "c108a354-ee2d-49b6-a2d1-62ca8637872a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "84137aa1-7c23-48da-9b2f-001f12703f3e"
            }
          }
        ]
      },
      {
        "id": "878a1dc3-599b-4a55-9730-8288946592fc",
        "name": "Complete Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{freight_forwarders_presentation_of_ci_to_customs}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5b30aa7b-dc9e-403c-a0e5-e6b853ada996",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Freight Forwarder has successfully presented Commercial Invoice to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"Commercial Invoice VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "50a5c157-0fc9-4c8a-8b9d-9dbce9a15f6c"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "49af34b4-773b-4d25-bfde-48f5eda9e39a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "be964baa-71a0-43df-a36b-2a8e2d78a237"
            }
          }
        ]
      },
      {
        "id": "c9838ff4-db5f-4ff9-82ac-3d9cfadc8d60",
        "name": "Join Workflow Graphs",
        "request": {
          "url": {
            "path": [
              "presentations",
              "verify"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiablePresentation\": {{freight_forwarders_presentation_of_ci_to_customs}},\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "4e6ceb76-eebb-41ed-8272-56bb61910a96",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Customs verifies Commercial Invoice\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "var workflowInstances = JSON.parse(pm.collectionVariables.get(\"freight_forwarders_presentation_of_ci_to_customs\")).workflow.instance",
                "",
                "pm.test(\"Customs checks known workflow instance ids and join the workflows\", function () {",
                "    pm.expect(workflowInstances[0]).to.eql(pm.collectionVariables.get(\"customs_first_workflow_instance_id\"));",
                "    pm.expect(workflowInstances[1]).to.eql(pm.collectionVariables.get(\"customs_second_workflow_instance_id\"));",
                "});",
                ""
              ],
              "_lastExecutionId": "35462c2b-5491-431e-a6b9-46383db9c3a9"
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 36,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 37,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 12,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 2708.625,
      "responseMin": 46,
      "responseMax": 9710,
      "responseSd": 3045.3754668964875,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1664589765467,
      "completed": 1664589831109
    },
    "executions": [
      {
        "id": "11e737f3-ebb7-4a10-a485-174f2c3c9a34",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 24,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b22f6699-c05b-42e9-aeaa-685550e1293d",
          "httpRequestId": "4d4aa19e-e7ab-481f-bf6c-84b62efb6988"
        },
        "item": {
          "id": "11e737f3-ebb7-4a10-a485-174f2c3c9a34",
          "name": "Get Access Token"
        },
        "response": {
          "id": "495803c7-ee09-4ac9-a70e-722db61291dc",
          "status": "OK",
          "code": 200,
          "responseTime": 441,
          "responseSize": 2985
        },
        "assertions": [
          {
            "assertion": "Importer application has access token",
            "skipped": false
          },
          {
            "assertion": "`org_1_access_token` persisted to collectionVariables",
            "skipped": false
          }
        ]
      },
      {
        "id": "1735d127-5fc0-40e7-bdcf-d2a10763a5de",
        "cursor": {
          "ref": "1ba5e576-e37c-44d0-a903-ac865d2d3f94",
          "length": 24,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "34a0e7cc-00c6-4177-8f86-a3f3f515feff"
        },
        "item": {
          "id": "1735d127-5fc0-40e7-bdcf-d2a10763a5de",
          "name": "Get Access Token"
        },
        "response": {
          "id": "deea8007-3e02-4edb-bd99-3e20d4eb86ef",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 2985
        },
        "assertions": [
          {
            "assertion": "Importer application has access token",
            "skipped": false
          },
          {
            "assertion": "`org_2_access_token` persisted to collectionVariables",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5e021c-da58-4ab2-bbf1-56bff5c33a3b",
        "cursor": {
          "ref": "5a7ba7dd-8c91-4aed-b190-b60d80e31d79",
          "length": 24,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a0ea8357-5573-4280-adda-4648435a86e7"
        },
        "item": {
          "id": "4b5e021c-da58-4ab2-bbf1-56bff5c33a3b",
          "name": "Get Access Token"
        },
        "response": {
          "id": "aeb24f70-46cf-4b69-84e9-42ea4a178f3c",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 2985
        },
        "assertions": [
          {
            "assertion": "Importer application has access token",
            "skipped": false
          },
          {
            "assertion": "`org_3_access_token` persisted to collectionVariables",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2b2ec5-4a30-4607-be9a-0f1ba1dca3f3",
        "cursor": {
          "ref": "bf154f1b-0b39-4cf2-8b52-3987185d3ce5",
          "length": 24,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4ff503b6-6375-454e-97f7-ccdd3b67c764"
        },
        "item": {
          "id": "fe2b2ec5-4a30-4607-be9a-0f1ba1dca3f3",
          "name": "Get Organization DIDs"
        },
        "response": {
          "id": "e23efa57-e2eb-4531-92b1-97948c4061d3",
          "status": "OK",
          "code": 200,
          "responseTime": 664,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "Importer has holder DID",
            "skipped": false
          },
          {
            "assertion": "Importer has service endpoint",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec611a6-20a7-4a59-95c6-d79c34fa9997",
        "cursor": {
          "ref": "8d14a40a-9ee3-4699-b33d-66fcffdddf34",
          "length": 24,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "45a53bb8-c095-40d1-81a8-cecb75256495"
        },
        "item": {
          "id": "2ec611a6-20a7-4a59-95c6-d79c34fa9997",
          "name": "Get Organization DIDs"
        },
        "response": {
          "id": "2220948f-feaf-4e2b-85a0-c077a80b6ba4",
          "status": "OK",
          "code": 200,
          "responseTime": 764,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has holder DID",
            "skipped": false
          },
          {
            "assertion": "Freight Forwarder has service endpoint",
            "skipped": false
          }
        ]
      },
      {
        "id": "e268641c-324e-48be-b2f1-0dcac7116195",
        "cursor": {
          "ref": "ceb01fab-5b1a-46da-8615-455a531171fa",
          "length": 24,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4d680707-ada0-44b5-b0da-0b982cf2f81a"
        },
        "item": {
          "id": "e268641c-324e-48be-b2f1-0dcac7116195",
          "name": "Get Organization DIDs"
        },
        "response": {
          "id": "28509442-9ec0-4ea0-9078-cb2add5702d9",
          "status": "OK",
          "code": 200,
          "responseTime": 825,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "Customs has holder DID",
            "skipped": false
          },
          {
            "assertion": "Customs has service endpoint",
            "skipped": false
          }
        ]
      },
      {
        "id": "68111baf-1b8c-46fb-860c-c99684720b2e",
        "cursor": {
          "ref": "2ce3f9ee-30e3-4f7b-8e44-c89eb05c9600",
          "length": 24,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "38e2957a-b599-43ad-b2af-1a2af97d1fa1"
        },
        "item": {
          "id": "68111baf-1b8c-46fb-860c-c99684720b2e",
          "name": "Issue Credential"
        },
        "response": {
          "id": "f63f869c-57d1-4d9e-84f2-4b76022db3e6",
          "status": "Created",
          "code": 201,
          "responseTime": 4343,
          "responseSize": 3415
        },
        "assertions": [
          {
            "assertion": "Proforma Invoice VC issued",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94244b2-d1f8-4626-865c-7be3125b18bf",
        "cursor": {
          "ref": "b3e507fb-5b6d-4be0-9335-1b3f0125425f",
          "length": 24,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e248b54b-7554-43f7-8c61-3fb010409c11"
        },
        "item": {
          "id": "b94244b2-d1f8-4626-865c-7be3125b18bf",
          "name": "Initiate Exchange"
        },
        "response": {
          "id": "feaf720b-f7d2-46a0-8090-b41c9585e7ba",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Importer has authenticated to Customs",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27c2358-0da6-4565-aa97-75fe9775a82d",
        "cursor": {
          "ref": "83b2dbfd-3d63-4b89-ab00-1dd168f474b1",
          "length": 24,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "17240fc0-43b6-462c-8c73-8074ec8d8e5c"
        },
        "item": {
          "id": "d27c2358-0da6-4565-aa97-75fe9775a82d",
          "name": "Sign Presentation"
        },
        "response": {
          "id": "c6c5ecff-5696-4326-abc7-89eb387399bf",
          "status": "Created",
          "code": 201,
          "responseTime": 5793,
          "responseSize": 4245
        },
        "assertions": [
          {
            "assertion": "Importer VP of Proforma Invoice with workflow instance 'instance_1' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "21380c62-405e-4262-b9b5-ababf38e9fd3",
        "cursor": {
          "ref": "8d0e50a1-a96a-4239-8b78-e05918c6c645",
          "length": 24,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6b59bf2d-fd8b-401b-8b93-fa8df1333355"
        },
        "item": {
          "id": "21380c62-405e-4262-b9b5-ababf38e9fd3",
          "name": "Complete Exchange"
        },
        "response": {
          "id": "d3b66748-c40f-416b-a792-8bbf56bae08f",
          "status": "OK",
          "code": 200,
          "responseTime": 322,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Importer has successfully presented Proforma Invoice to Customs",
            "skipped": false
          },
          {
            "assertion": "Proforma Invoice VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb360db7-a932-4838-b2b8-7497344db0f4",
        "cursor": {
          "ref": "5bff203a-bfae-4046-8fe0-b2515c1f0907",
          "length": 24,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ad11a9ea-7800-49ce-adb3-53c677e284d6"
        },
        "item": {
          "id": "bb360db7-a932-4838-b2b8-7497344db0f4",
          "name": "Verify Credential"
        },
        "response": {
          "id": "b15345bd-96d7-41e3-8f0f-006a9e0b6324",
          "status": "OK",
          "code": 200,
          "responseTime": 9710,
          "responseSize": 3018
        },
        "assertions": [
          {
            "assertion": "Customs verifies Proforma Invoice",
            "skipped": false
          },
          {
            "assertion": "Customs stores first workflow instance id: instance_1",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8d9f8c-8e1d-4132-b4a1-fd9fa959309d",
        "cursor": {
          "ref": "989b9f20-a752-4d17-9c42-9d24e74056fb",
          "length": 24,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "60b648e0-b037-4a8f-ba06-6fc1db07c5e7"
        },
        "item": {
          "id": "8f8d9f8c-8e1d-4132-b4a1-fd9fa959309d",
          "name": "Issue Credential"
        },
        "response": {
          "id": "2f0ebd36-0d4c-4f93-93fb-e0a9622586af",
          "status": "Created",
          "code": 201,
          "responseTime": 5528,
          "responseSize": 3539
        },
        "assertions": [
          {
            "assertion": "House Bill of Lading VC issued",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f403ecc-46c3-421e-a74b-cefa1757aad6",
        "cursor": {
          "ref": "0a5bf9d3-c181-49a1-8754-30276069244e",
          "length": 24,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9a304ce5-160c-4edf-a3f3-fe969704fd21"
        },
        "item": {
          "id": "0f403ecc-46c3-421e-a74b-cefa1757aad6",
          "name": "Initiate Exchange"
        },
        "response": {
          "id": "0ba578d0-35be-4dac-a3ba-d85b995003dd",
          "status": "OK",
          "code": 200,
          "responseTime": 96,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has authenticated to Customs",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05fef78-e535-409b-a3ca-5f7981a5e3ab",
        "cursor": {
          "ref": "64cbae0f-0c94-4dd2-ac07-93e69fcb369e",
          "length": 24,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bd5debab-479d-42f8-937b-bc51125c1771"
        },
        "item": {
          "id": "b05fef78-e535-409b-a3ca-5f7981a5e3ab",
          "name": "Sign Presentation"
        },
        "response": {
          "id": "c5b8494d-728f-49e0-a651-7477c56ff528",
          "status": "Created",
          "code": 201,
          "responseTime": 5876,
          "responseSize": 4369
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder VP of House Bill of Lading with workflow instance 'instance_2' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4e66a8-be60-4b07-8f78-6274d5d24632",
        "cursor": {
          "ref": "b234d090-99b5-4c7f-96b8-ce73724550bc",
          "length": 24,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cfa50033-7ce4-40cc-baec-bf3780ad9106"
        },
        "item": {
          "id": "4a4e66a8-be60-4b07-8f78-6274d5d24632",
          "name": "Complete Exchange"
        },
        "response": {
          "id": "d319bcef-7cf1-4043-a612-503b34fca2b6",
          "status": "OK",
          "code": 200,
          "responseTime": 260,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has successfully presented House Bill of Lading to Customs",
            "skipped": false
          },
          {
            "assertion": "House Bill of Lading VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc2492b-02da-4de3-a639-2956fc5d97f8",
        "cursor": {
          "ref": "cfc3955e-dfcb-4fc8-a6e6-97a1bf49235a",
          "length": 24,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fb1200e3-a5bf-4937-af7d-42da5a99e7dc"
        },
        "item": {
          "id": "2bc2492b-02da-4de3-a639-2956fc5d97f8",
          "name": "Verify Credential"
        },
        "response": {
          "id": "0dc7ccfe-1116-4f1a-962a-1a8fb54c8eb9",
          "status": "OK",
          "code": 200,
          "responseTime": 7192,
          "responseSize": 3092
        },
        "assertions": [
          {
            "assertion": "Customs verifies House Bill of Lading",
            "skipped": false
          },
          {
            "assertion": "Customs stores first workflow instance id: instance_2",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17f3603-268d-4b03-a7f9-660be2f8aeb5",
        "cursor": {
          "ref": "a5d06eb1-2aab-4798-afc1-e9c9ac259d0f",
          "length": 24,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "72c0bb19-b6fd-4149-bd8b-ddba6635b2a3"
        },
        "item": {
          "id": "a17f3603-268d-4b03-a7f9-660be2f8aeb5",
          "name": "Issue Credential"
        },
        "response": {
          "id": "e9721cc2-91ba-427d-bec0-bacffee08dca",
          "status": "Created",
          "code": 201,
          "responseTime": 3392,
          "responseSize": 3479
        },
        "assertions": [
          {
            "assertion": "Commercial Invoice VC issued",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cafb233-cb5e-45e6-8ea2-f4b670ec5638",
        "cursor": {
          "ref": "2008cb31-87ac-476d-a027-c18d7c0b0eec",
          "length": 24,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9cf08ecc-2bf7-4fd1-a15f-e3ec5acf5962"
        },
        "item": {
          "id": "1cafb233-cb5e-45e6-8ea2-f4b670ec5638",
          "name": "Initiate Exchange"
        },
        "response": {
          "id": "973bf397-6c2d-4632-b5d6-dcbbc20c91c0",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Importer has authenticated to Freight Forwarder",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b0532e-a9f7-4fa0-a184-c28e21f8b05e",
        "cursor": {
          "ref": "c33e1780-5491-4a2b-b73f-015856f2ddb9",
          "length": 24,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1573411e-87bb-4447-8d5b-4b2c05a0c23f"
        },
        "item": {
          "id": "37b0532e-a9f7-4fa0-a184-c28e21f8b05e",
          "name": "Sign Presentation"
        },
        "response": {
          "id": "39df6794-7fb0-4ab7-8af4-09df934e0d06",
          "status": "Created",
          "code": 201,
          "responseTime": 5497,
          "responseSize": 4309
        },
        "assertions": [
          {
            "assertion": "Importer VP of Commercial Invoice with workflow instance 'instance_1' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f783ac-a51a-4af5-8ddc-7dd7248d3050",
        "cursor": {
          "ref": "cdcaca38-2247-4ddb-99e2-b49ebe38458d",
          "length": 24,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "474f94ee-68a7-4035-bd0a-17cb509ee2ab"
        },
        "item": {
          "id": "b0f783ac-a51a-4af5-8ddc-7dd7248d3050",
          "name": "Complete Exchange"
        },
        "response": {
          "id": "465d29c5-e4a0-4ff5-909d-132dfe9d4c54",
          "status": "OK",
          "code": 200,
          "responseTime": 245,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Importer has successfully presented Commercial Invoice to Customs",
            "skipped": false
          },
          {
            "assertion": "Commercial Invoice VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3857e5a2-5d67-47f1-b791-c1d7d9726bce",
        "cursor": {
          "ref": "96aac061-d36d-46d8-9863-3fe3d5302812",
          "length": 24,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "10381e19-33aa-4215-b342-5e84afb53961"
        },
        "item": {
          "id": "3857e5a2-5d67-47f1-b791-c1d7d9726bce",
          "name": "Initiate Exchange"
        },
        "response": {
          "id": "71b500d1-08ca-467a-bf48-2505a4686650",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has authenticated to Customs",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b67a03d-3e21-42f2-8ce3-2ce3d05b32d6",
        "cursor": {
          "ref": "b40fddef-1d1f-4121-8228-d6310eb79e53",
          "length": 24,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3a924678-3d65-485a-aaec-b9f6d1123728"
        },
        "item": {
          "id": "6b67a03d-3e21-42f2-8ce3-2ce3d05b32d6",
          "name": "Sign Presentation"
        },
        "response": {
          "id": "53768ca4-5304-4f28-91fc-e70e10856258",
          "status": "Created",
          "code": 201,
          "responseTime": 5881,
          "responseSize": 4322
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder VP of Commercial Invoice with workflow instances 'instance_1' and 'instance_2' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "878a1dc3-599b-4a55-9730-8288946592fc",
        "cursor": {
          "ref": "71ac917f-a9ba-4a94-90d6-80ba86d89813",
          "length": 24,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "251a5157-141f-4909-8b46-b0882352f8f4"
        },
        "item": {
          "id": "878a1dc3-599b-4a55-9730-8288946592fc",
          "name": "Complete Exchange"
        },
        "response": {
          "id": "11b3ef97-242c-44dd-bc61-08c1a400fc83",
          "status": "OK",
          "code": 200,
          "responseTime": 333,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has successfully presented Commercial Invoice to Customs",
            "skipped": false
          },
          {
            "assertion": "Commercial Invoice VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9838ff4-db5f-4ff9-82ac-3d9cfadc8d60",
        "cursor": {
          "ref": "21398acc-f1f2-430b-bb55-21e7da170d76",
          "length": 24,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8337c763-701d-4a4f-865e-cc1f9522ef27"
        },
        "item": {
          "id": "c9838ff4-db5f-4ff9-82ac-3d9cfadc8d60",
          "name": "Join Workflow Graphs"
        },
        "response": {
          "id": "ac08bd4b-2ea5-4773-b95e-7ff500907c75",
          "status": "OK",
          "code": 200,
          "responseTime": 7521,
          "responseSize": 3092
        },
        "assertions": [
          {
            "assertion": "Customs verifies Commercial Invoice",
            "skipped": false
          },
          {
            "assertion": "Customs checks known workflow instance ids and join the workflows",
            "skipped": false
          }
        ]
      }
    ]
  }
}