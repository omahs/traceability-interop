{
  "collection": {
    "info": {
      "_postman_id": "5f758c01-00c0-41e7-acb7-d2e6a9b36116",
      "name": "Test Report Demo",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7da9d312-fbc8-40ba-8ee5-8960bbc65a96",
        "name": "Discover API Configuration",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "identifiers",
              "did:web:api.did.actor:api"
            ],
            "host": [
              "api",
              "did",
              "actor"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "1627531f-abc5-4fa0-826d-0a946adfe0b1",
              "type": "text/javascript",
              "exec": [
                "const jsonResponse = pm.response.json();",
                "",
                "pm.test(\"The DID Document MUST contain 'alsoKnownAs'\", function () {",
                "    pm.expect(jsonResponse.didDocument.alsoKnownAs).to.be.an(\"array\");",
                "});",
                "",
                "pm.test(\"The DID Document MUST contain 'assertionMethod' DID URL\", function () {",
                "    pm.expect(jsonResponse.didDocument.assertionMethod).to.be.an(\"array\");",
                "    pm.expect(jsonResponse.didDocument.assertionMethod[0]).to.be.a(\"string\");",
                "    pm.environment.set(\"issuer_did_url\", jsonResponse.didDocument.assertionMethod[0]);",
                "});",
                "",
                "pm.test(\"The DID Document MUST contain 'authentication' DID URL\", function () {",
                "    pm.expect(jsonResponse.didDocument.authentication).to.be.an(\"array\");",
                "    pm.expect(jsonResponse.didDocument.authentication[0]).to.be.a(\"string\");",
                "    pm.environment.set(\"holder_did_url\", jsonResponse.didDocument.authentication[0]);",
                "});",
                "",
                "pm.test(\"The DID Document MUST contain 'service'\", function () {",
                "    pm.expect(jsonResponse.didDocument.service).to.be.an(\"array\");",
                "    pm.environment.set(\"traceability_api_root\", jsonResponse.didDocument.service[0].serviceEndpoint);",
                "});"
              ],
              "_lastExecutionId": "7b810a22-b731-47b0-b1e7-80338cde33cd"
            }
          }
        ]
      },
      {
        "id": "903b8b62-329e-478e-9e34-ed007bf4369a",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{traceability_api_root}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"credential\": {\n    \"@context\": [\n      \"https://www.w3.org/2018/credentials/v1\"\n    ],\n    \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n    \"type\": [\n      \"VerifiableCredential\"\n    ],\n    \"issuer\": \"did:key:z6MktiSzqF9kqwdU8VkdBKx56EYzXfpgnNPUAGznpicNiWfn\",\n    \"issuanceDate\": \"2010-01-01T19:23:24Z\",\n    \"credentialSubject\": \"did:key:z6MktiSzqF9kqwdU8VkdBKx56EYzXfpgnNPUAGznpicNiWfn\"\n  },\n  \"options\": {\n    \"type\": \"Ed25519Signature2018\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "614d29e3-0bda-4b5c-84a0-d4450b67851b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d5b87575-ea97-4209-8be8-cbe665245204"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dfed1375-3233-4941-b77f-bdf650fed0a0",
              "type": "text/javascript",
              "exec": [
                "const verifiableCredential = pm.response.json()",
                "",
                "pm.test(\"The Verifiable Credential MUST have a 'proof'\", function () {",
                "    pm.expect(verifiableCredential.proof).to.be.an(\"object\");",
                "    pm.environment.set(\"verifiable_credential\", JSON.stringify(verifiableCredential));",
                "});",
                ""
              ],
              "_lastExecutionId": "c45b9c4b-55ca-4ea4-9056-cd17c0e7df96"
            }
          }
        ]
      },
      {
        "id": "dba83c3e-ebcf-4d6c-bcc7-f41c59029540",
        "name": "Verify Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "verify"
            ],
            "host": [
              "{{traceability_api_root}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiableCredential\": {{verifiable_credential}}\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f7361a3b-737f-426a-8a29-32df26294cba",
              "type": "text/javascript",
              "exec": [
                "const verification = pm.response.json()",
                "",
                "pm.test(\"The Verifiable Credential MUST have been verified\", function () {",
                "    pm.expect(verification.verified).to.eql(true);",
                "});",
                ""
              ],
              "_lastExecutionId": "55cd568e-8f40-49bc-b99b-ffa4c8973b15"
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 4,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 2531.6666666666665,
      "responseMin": 322,
      "responseMax": 6041,
      "responseSd": 2509.1287111044917,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1659490799978,
      "completed": 1659490807657
    },
    "executions": [
      {
        "id": "7da9d312-fbc8-40ba-8ee5-8960bbc65a96",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 3,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ef0d1fc7-ba64-4326-b756-57392623193c",
          "httpRequestId": "e5158323-239e-49ab-9a04-4c94849d3fc2"
        },
        "item": {
          "id": "7da9d312-fbc8-40ba-8ee5-8960bbc65a96",
          "name": "Discover API Configuration"
        },
        "response": {
          "id": "d29be157-6f5f-46e0-8371-cef33627d15a",
          "status": "OK",
          "code": 200,
          "responseTime": 6041,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "The DID Document MUST contain 'alsoKnownAs'",
            "skipped": false
          },
          {
            "assertion": "The DID Document MUST contain 'assertionMethod' DID URL",
            "skipped": false
          },
          {
            "assertion": "The DID Document MUST contain 'authentication' DID URL",
            "skipped": false
          },
          {
            "assertion": "The DID Document MUST contain 'service'",
            "skipped": false
          }
        ]
      },
      {
        "id": "903b8b62-329e-478e-9e34-ed007bf4369a",
        "cursor": {
          "ref": "c273a039-a5d4-40c2-ab8b-f91eb1df155f",
          "length": 3,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "976c1a2a-bbd9-45d8-b24c-da9f005c605e"
        },
        "item": {
          "id": "903b8b62-329e-478e-9e34-ed007bf4369a",
          "name": "Issue Credential"
        },
        "response": {
          "id": "2e246f54-bb98-4e2c-ab92-40bdcda1f7a7",
          "status": "Created",
          "code": 201,
          "responseTime": 1232,
          "responseSize": 713
        },
        "assertions": [
          {
            "assertion": "The Verifiable Credential MUST have a 'proof'",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba83c3e-ebcf-4d6c-bcc7-f41c59029540",
        "cursor": {
          "ref": "a65ef105-81df-4680-b735-34cba633c189",
          "length": 3,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9aaf2962-b14b-48c5-960f-41535ba3eae1"
        },
        "item": {
          "id": "dba83c3e-ebcf-4d6c-bcc7-f41c59029540",
          "name": "Verify Credential"
        },
        "response": {
          "id": "bef3a469-e6f3-49ee-87d8-8083ce26a26b",
          "status": "OK",
          "code": 200,
          "responseTime": 322,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "The Verifiable Credential MUST have been verified",
            "skipped": false
          }
        ]
      }
    ]
  }
}