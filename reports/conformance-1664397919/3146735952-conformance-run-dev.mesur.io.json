{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "374246cb-c4d3-46ee-94fa-e2bde84d9afc",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4de943be-7e10-4bf4-a238-729788f0e9bf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b7fd57f9-2f5c-45d9-883d-dc39b9690b05",
                "name": "did_json",
                "request": {
                  "url": {
                    "path": [
                      "did.json"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "abf50c8c-15e4-496a-86ca-30a911fbccb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f638c94-ae42-4dea-b71b-6c3cdde087d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "ae9b71b3-9229-43e9-90a0-a895f10ed378",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6fd7187e-cc94-43b2-a68f-c860c8128426",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea4c21d5-210d-44c2-8420-a4365469b0e3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "954bad4c-efa0-4a94-af6c-7a8036cdade9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba52ebba-0422-448a-8b74-a40073d5fce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7260b3a5-b56f-42e3-836c-13df0a16b0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120eb4a8-fc41-429d-b937-a30bb95bdb61",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8509152-a86d-47b9-86d8-602fa00f7678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e11d4dd-b87a-4d55-810f-183c5ffdaaaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e4c095-b1fd-4e56-be36-510c0b3fcc53",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed0f28b-8976-4954-8bcb-0d72a013e9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60a4651c-7653-4bb1-b515-71a5fa40f95a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5d76f03e-6091-4244-a1a5-4def881442f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c8ffa4c1-dd2c-47a5-926b-cd9f360b065c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4595d8b-3012-4a8c-b0c6-a396e9892464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed359012-44b0-40b0-8818-34d0c510c5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6e7839-ad7e-4762-a2cf-4f1d137157f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f6b8cc-7254-43ce-bd74-ed0cfa9d64b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207ef314-8d28-4ea1-a455-40031c6d09ab",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f973306b-086b-4446-b384-c4a37b82ee95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e61c837c-c3b5-4652-af44-17eb4974a9ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e72864-31ce-4ea2-81fa-a8be6f844ce2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "17dc0885-9414-412b-b66b-b17c089e042d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6c9f8267-2b13-4994-9d54-6146e948bb6c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "75aa3ad9-d92d-479e-8c58-4320202840f4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae342296-7a8b-4af4-8acf-9fe21b09edcf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d3ba8faa-ed40-4e45-ba38-17193603c584"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eefa2897-3d18-4132-9e42-5d3f49e5213e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "d7e0b4b5-09de-4a00-9ad7-be2e0274fa07"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "738c938b-99b1-454a-9f7b-9f11f5f3ab8d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "478f1b92-1a69-431e-94ea-ee8214973bf5"
            }
          }
        ]
      },
      {
        "id": "9e5df8fc-e122-482b-9a1a-47589fa540a7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7223bd62-a2fb-4d47-98f4-4185ca64cb82",
            "name": "Negative Testing",
            "item": [
              {
                "id": "30d34856-5a93-43f5-b835-7f9c58fd0066",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7833965d-bb9b-4e92-acb2-d8a775f33040",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de8e040-11fe-483f-9816-df69d11d8a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28dace5-2c99-4c19-a046-69f3bba0c735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f03aef8-4bf2-43ba-be6e-239ff5e8cbc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59283e52-9440-4ab9-bd8d-f31b6730d18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3903129-524d-46dc-a9e0-a377b5c4049f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3072c45e-159e-48b5-8a26-50119f3eaa61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d4b4fb-852f-415c-8b93-051cbcd21560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548b0f95-b964-4c35-b895-8a2f0bcdd54a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8453d9ad-ad31-4bee-9868-f5127e35fdf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9bf59b-e487-4efb-b3e3-3758c3d46692",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70151677-1530-4958-a022-e63731e26ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae2bcd3-1445-4ca1-8af4-f04f16b29987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3323dcb1-b423-4bf4-bb3e-fed3de12457e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf07372f-7069-41ea-9ff3-d8ba11b44a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c1dc6c-9085-4577-8067-6f93b29a7aea",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1e0c36-7da3-4449-8d43-f76f80a9cc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a59ac9f-e3ef-4276-b9be-0440618fe7b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb0aa25-6532-49ea-8951-b8d648710546",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0b78257-6822-446a-985a-ae46a7589b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5378b862-a644-414d-b2b2-3dd170678044",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63339171-a418-469d-ae24-4a1f902a06f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b036450-6319-42fb-9ea1-6ad9761130a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7fe76f-6e6c-459b-9e7a-f16156f42164",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9710835c-7c96-463e-9f9d-c122b6bc8ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b4a836-261f-4028-966d-cdbfa03d3927",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8c3753-f0fc-402d-8629-23736bfdfebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e98041-630a-4471-bc56-a15c8ffa597a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20325c9-181a-4311-a4f9-e768b218b603",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "814800c7-afb8-407c-af72-ab3e4eda01fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b9a4f0-f6cc-447d-b51b-3400d5e83271",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51d4a97-2b14-4dc6-93df-197bc2c1979d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c534af-a182-4285-bbaf-df348945079b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0185bba9-e127-471e-a263-db343c77013a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c744b18-5de7-4399-83b6-4f29bc1d3fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43567524-a003-481b-be56-0db0d66d950b",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5615bb68-3efb-4934-8c09-4cf46471c403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07def353-6321-4fb1-bc5d-8a7a9fa31ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2822aeba-1592-410f-8750-1fc74b076531",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "556fd758-82e5-48da-8f3e-f046dafa175d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d7ac2a-d93a-4d9d-837c-ec4909eef8c9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd68a41-716b-4827-9cd5-35a167c0275c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f50b17-4cd3-436b-b763-39cc52137ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cc0ca9-f206-49e1-b54b-a8cb3dafe4c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3077c58-2208-4479-868e-42258fcb542f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea20f4a-6c97-4a51-ab91-837e3779978a",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba61f06-1cb1-4109-8779-966991d07cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f838da6-2915-4f4b-813d-734555679bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cdaf640-c154-4375-950f-8442c7fa50b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88fca7e5-924a-4e51-9924-7e6fd1547297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91077f06-acd8-41df-8af9-79f7805dacdf",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cfb0e4-f6af-467c-8cee-0ca553c10382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9683f09f-905e-43ea-bb78-ff66a9f68660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619875c1-01ea-4cf9-89c8-171158306df9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "100d5cf5-94ca-4e5d-a502-76ae8f655ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9967c79e-6891-478e-9ead-3c6620daa318",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8413a3f-24af-422b-87e0-187557960c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc7b7d1-89ed-4914-8613-c575b37510ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f851c3bd-8a08-4eb8-89bf-574745b3a71a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "2f1f3db6-e0ed-4d7b-9497-44039ece5a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3946cb6c-2c55-4fd1-8088-183570da9111",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939d1b5d-ccc2-42cc-a72d-515b0e8e2d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b1c68a-384d-404a-b124-09727c1cfac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6ba68a-5280-4588-9dd0-d38e1bdbb0b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8e0e774-35df-489f-ad5a-e7e0670669e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b496cae-a648-4fe2-a2ae-1970c4bf7071",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ae89ea-80b2-4d29-a82d-3c8714d83c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d17eff2-3aa5-4b7d-8a69-40cbabbc589e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec32ac2-2ae6-4746-a967-8e99a9b19864",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eebfa26-b745-463d-8305-150012092196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c303df4-5981-40e9-84ac-8245998ad85d",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dae0c4b-beb1-4467-b950-eb70ee9bf873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd71c45-f6c6-4a7f-92d2-5f9701312be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b150ae-33ac-4ae8-b2f5-5c0fce90f753",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "616a798f-6181-46f4-b1c9-058755ad0e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f05428-c844-414e-81e6-a00faa096ff4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e87131-1c0b-4200-b3fb-50ea661468d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d25040f-b4f2-4921-91bf-716f3be8d069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb8f725-7a9b-471b-8fce-52e281720853",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "8443b079-2d55-4056-a5f4-081e8a0073ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03eecdff-dbb6-4bc7-9184-155add5387fe",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c10540d-3116-4908-9ffd-aa4dd2d7b242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ebd779e-9311-4f37-87a3-32649c17c280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769d4250-a2d4-4a08-a655-b7f66e7e39b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e00c386b-e58c-4ffa-9940-3435b4fe30d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07eb58e4-7007-4e01-8e45-615ae2e9f97a",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd53713-18f0-4f94-92e4-bbba354cd3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c4ba79-3d2a-4b25-8b98-a11a082ad16f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4bb054-647c-4978-92a0-362473105f04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3520e4ab-36a2-4785-863e-161d8c769712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42e621c-b879-4138-b415-6acc469a0f11",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87cecc4-f864-4b8e-8070-f7aa7b0ca3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d76bb13-e814-4d34-a05a-ac40fd108049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78997e21-0b3c-49ad-b757-34ba1982f040",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccb458d8-d05b-4c53-890b-02e1e5d071b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4c6f05-a9d6-4d39-84ad-2783b265e466",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5d0402-c343-4ec0-a297-86e6512ec767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb6e53a-af7a-4c96-aec0-88f553755d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85941ee7-53df-49f3-976d-218ea620afee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a56932f7-e40a-4480-8787-b90c7e41c4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95528591-9af0-4adf-83b0-73c33db567ac",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea89813-8a5d-4eda-bee3-91b39d1f2877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b569b08-7bbb-4ea6-8d0b-30dcf117378a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4f39fa-bccf-4e2d-a33f-34fa4ed67065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c05b501-c5b9-47cd-99b5-62564fd15435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0162da-44f8-4db0-91ac-737357673b25",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b001a6e3-f300-4ba4-a20f-4165e11bccf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "646182c4-6751-44c5-bac8-e2472dbf83a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94141668-7719-4dbd-bd2a-f7ab444a79d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1884bf22-5465-413c-b17d-5d7fed5cb9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296b3898-67a9-4f89-89cd-621f362df225",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7346cf6-5a8b-4464-92cb-c30276f029c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45a1738-fbf6-4b52-ab32-16bd4e45ba8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997fd492-32f7-48ad-844f-e7ff713c7ace",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab40c97f-a12e-43ab-9052-ad874f2fc642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7496f28a-5127-422f-bb0a-b0233364d086",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e2fbc2-00ce-4224-8862-2090d6b348e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cddadb5a-4438-431a-8a61-f9e3cef8f8ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874dc8b3-5da8-442f-83c6-b9ac49d35871",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6363f08-02da-456e-a60f-a8a4604b607b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea62adc6-1399-4182-83f4-180065ce8508",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfd3a8d-1760-4db7-8f38-f3aff7ab8581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a71d36-2045-41f9-960e-ca1338423a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02acf16e-ba79-4769-9cf3-ad290a70117e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a43acbcc-27c2-4a97-8de1-603829a1b14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1cb8f0-5944-4053-aadb-8b973e8cdf0f",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b959bfb-28ae-4ccf-b84a-44f042e4cee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49775542-ee9a-48cc-93d1-5c7cf0f5aa91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db7c23a-9078-4a6c-b306-4430b50ca2ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9edc2cf3-ad8a-49da-aa5a-dca5c85ceae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35853c02-6d3e-4ff0-86f3-3e76ecb57bb4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e21b9b5-8ee0-455e-bf29-16cd3de931c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d0c7f9-bd05-4c66-a3ec-c1be044e0628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b49a37-bfe6-4441-a0d3-81c157b791b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6c53cd0-399e-4cad-a351-f1154f73eff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7551f9c2-28c7-4003-bf33-2cdcf125871d",
                    "name": "credentials_issue:options.created:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{access_token}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d2b78d-3aa1-4e4f-8f51-75a7f979dc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4e21ff-f9ab-4fab-b47b-fce45b08d149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdd1a76-e5c2-4e6e-a6cb-650646926cf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.created must be a string when present",
                            "rawBody.options.created = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c79015b3-3460-40bd-8a7e-c12796f085b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec138a7a-bad9-41ed-a67a-468cbbc6a0df",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b05bfa-9102-402f-84dc-3ab8b7de78d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df94dd91-c64d-41b4-8e74-2cf42507e2a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afc7e52-480c-4807-88b3-c454c3865905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9d1eeea-277e-4ae0-b694-d4fc2eceb484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16e60c7-5da9-4508-b2f4-8688d1bf869f",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a313a9-2f30-48b3-9dbe-388b345f565e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9baed1-33a3-4445-84c4-2e488ad6aeda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bd4f26-c7b5-43ce-b9d5-ac663304363e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ecf5b8e-2e9f-481d-b07d-12b3439d94e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5cc25ee-f6cf-45b9-9a09-802bce68f222",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e6416c-84f3-4e28-934e-005f248dae53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7d4e8fbf-0897-42b1-ad42-1cd69f517a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d788eb0d-8c4e-41a5-a773-714014bea866",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26db909e-66c9-492a-8644-b8a51f4b141b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9d029c05-b254-46a6-bdf4-a5089e575a8b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa81ec24-7274-4a86-a2f4-b4661ee9833e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f05940b-1fe1-4d1d-a79a-8e45dd5a41e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33aeb57c-b9dd-4a4b-8170-62a97dcaaac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ffb78c-6387-43ec-b96e-b9ecd2a4ba32",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "07805ce5-ef7a-4840-9c0f-a91fe27a3f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648edd88-b3ba-4dad-982b-699e04811842",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65cef9fd-d41a-43b3-8202-42c5f68cc8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "daa156c8-2e43-4dbc-b685-2b0ad53ebe6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a11dd4-5e17-449b-a0a3-43845be54af4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "f5630832-4a7d-410a-85f3-8f58496a11f6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2dc2a2f5-c582-41f5-8176-809e62686018",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a2450e7-b818-41d3-b349-17ee1f269c01"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "07b7c17a-3d04-4599-a969-942d32f46598",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be94102c-9354-4763-9ee5-f2fb36ed5c35"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6abae173-2874-4aea-b666-0e18947b919e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1dc60930-b0fa-4f9d-b6b4-37a38764befb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0e8c48cd-3fbe-4e99-aca7-7cac3599c06e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0af512f8-cff9-45ea-b0ef-552a961028bc"
                }
              }
            ]
          },
          {
            "id": "312d6f0f-e188-4386-b9f7-dfc42ac12da3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e1df952-0b6b-44d8-b655-f7e8902c5abc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d562b6f7-a5de-4b68-a5ee-df007733062f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1cdd0a15-9fec-44e6-9874-9f0786336134"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "223bffc6-10ed-42a1-822f-2b98679632e7",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "7e3ddec9-415e-476f-bad6-894bdab512ac"
                    }
                  }
                ]
              },
              {
                "id": "01d1e01e-4e1b-4dbf-9348-e101b7b5a339",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81b2dd6c-277b-42a4-bfd0-4a88d26d54f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba519f71-7bb2-4152-9aea-3902ca468c89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de4e5b80-68ab-461a-9b3e-5193bef69c67",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "8e7bdf9a-aa1a-4661-8f38-6c1d97cf7de3"
                    }
                  }
                ]
              },
              {
                "id": "ce66c46a-39c5-4ac7-9979-a68a3dd4c92a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89e969a7-d914-4eb8-9b22-0b7eaa70ccfe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba64395b-a4cd-4858-a9c1-9012aa8266d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6b58652-49b9-43c5-aa11-0b1c4e0102d2",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "ff177726-e8f6-4559-bb53-862686d2ec97"
                    }
                  }
                ]
              },
              {
                "id": "97b3f8f3-4485-4818-ab14-56a7f2e6fce2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e131ce8-21cc-4ac5-89f3-a8e48727c3bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "903f18b9-165d-4a35-8e97-f4c54213bff3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "144698fe-338f-4ebe-bd75-9c6a1a2b24c8",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "8184a430-4f05-47e3-8e17-b923a721032e"
                    }
                  }
                ]
              },
              {
                "id": "3e5bab28-5f8e-40c0-8eac-0b3c76091a66",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88848901-bbad-470f-91d1-6d7da803b055",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7119312-4872-4b1a-b4ab-a7f37c54029f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ec2ebba-f898-45f9-b25d-3342f20c2182",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "9e7e32f3-60f6-44be-8b52-49c9d70d320f"
                    }
                  }
                ]
              },
              {
                "id": "393cee38-eca6-4812-a16a-b28f235919c0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c587d173-eec1-42a1-b606-e7b2c523733e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06b93e95-0611-4be7-889c-0e9ddc12105e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e75de4a8-99f5-4495-a956-5c4b2c43661a",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "2d16e8c2-239c-4ec0-bf3f-deb40caf7d4e"
                    }
                  }
                ]
              },
              {
                "id": "c0d865a3-b6ca-4d02-8fec-42cc1e82c505",
                "name": "credentials_issue:options:opt.credentialStatus.type",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "531ac9cb-11f8-4576-b965-22283476262d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5068be27-02ca-4908-ba75-2f354766b194"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfd4314a-ca6a-40a9-8eb1-8955dec76b13",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus.type can specific string",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "879fcd90-4311-44c0-b090-e9074ff350cb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "31d82da2-e153-4d0e-9cbe-fbc7f3ef6d3b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a3d1c811-54f2-4b2e-b5b6-11e2f68d8e16"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f4875d2b-ce51-4bea-904b-6ef2f7242e6a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6027e75b-0f1b-4991-9878-12482a0b9f85"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19d65c26-65b6-46dc-9527-40bb206cc7b7",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{credential_issuer_id}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"created\": \"2020-04-02T18:48:36Z\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Obtain the credential issuer ID via did:web resolution",
                "utils(pm).getIssuerId();",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "89674718-0474-43a6-a3dd-799564593dfc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07846a9b-e8ce-4aa6-8d4c-034f3d50ab1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6cd3cd43-9668-4347-9158-7a454d233f81"
            }
          }
        ]
      },
      {
        "id": "90c7f0c4-f860-4b42-a0ce-37a1ea59fd46",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "52a70950-4b54-415b-bf9d-d9640da85ba9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a1a6b7d-a9e3-4134-a0cb-fcf00b99702d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ed515bc1-e05a-4225-8366-b026cca600f2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6742ec7-7569-474e-a4ab-50876d2bdd98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9f7126-e003-44fe-b402-be8fbe7dc09c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "177ccb3b-95d7-4427-b554-7c11fb68ab87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "198ba982-988d-47ef-81f9-515ff150bf54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92a0005-732b-43f0-bf18-5eecf8edd3a5",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721070e3-a437-4fb4-a686-e7171e089f02",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "25d90cc0-8d35-41d4-9414-1be524587647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df137b55-ee07-41f4-9493-4e00fda158d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "991a4b97-c157-423b-a2b6-bd1fe2aca954"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1777932-be06-4a10-8d6f-97e5a1566eab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18e6a15f-8477-42a6-9a3c-906a6ae1287b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6edb208d-4126-4eca-b90c-f57c16f13f50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1195173-720f-4724-8bb9-0d1b1318f9bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b641807b-b6a9-45e9-a641-fe575d98b2f2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "8a43e5ad-a87b-4bb6-89c4-cb156a1fbd0e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11ca808a-782a-45b5-bb9f-4c3d6225ac21",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71f7d21f-f51a-4e43-be59-fca2f43acef8"
            }
          }
        ]
      },
      {
        "id": "9d159d97-326c-4331-aec5-f74797a33275",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "70b242fc-3b25-4162-bedb-86c52157b286",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5d5f0636-b83b-4d58-9d96-8d903eebbc5d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "32e15205-b7dd-403c-915d-b1bc1ff83e33",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9507ce28-7d29-4422-9f03-7de72edeabcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e84d974-28d9-4248-befe-e279e10bd4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f22249-aebf-4399-8bd6-2d043e68c21c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c537a8-01a6-4393-8a4d-359f51fe9b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bc0df02-c29e-467e-a2cb-7e3dfa3fb363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec25080f-bd09-4334-80ab-9a388f1f4a37",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52700e4b-3e13-4402-a8ba-62c1bfbe4817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb57a1e-c929-4ae9-aa3b-f20b53fdb54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b5eac7-a1e6-4ee8-9f6b-39fa14c7a9e8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0d364f-c0eb-4b2d-9ed4-f28ea5398156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12caee20-ddf6-4975-b112-82548ee87b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3b62fc-e0eb-4e9f-8f06-e1a300ab776f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990fe53e-6664-4a8d-8351-a80f74cf694e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9cc6ece-b12d-4afa-b81d-a5089f4523c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16c507d-3327-4eeb-a5e2-b72588c7cf7c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127d01d9-7cd0-42cb-9b0c-465ff250fbdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b441ea-f606-4042-9d7b-720be3785cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0805d1-9159-44d7-b803-52c686c0a8d9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a785f57-1469-4c12-a16c-f1e9d7c04a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1596a1fa-4a6c-42fe-9fbc-fd101d83be18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "580f8496-4e98-471a-8f6a-206970bf9b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa22a811-2df3-4f31-b7e7-42aa7a5030fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bda6109-a701-4ce1-927c-1b75c4993d53",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d057536-e6b6-494d-a7d6-cd5febb3ad1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37497e6f-a16a-4577-8c69-5620ae0ccf9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424d259f-881e-4436-b7c2-9fbf7dae1d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1578f17f-bc0a-4efd-a79a-794e223b7891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2814a40f-35d2-48ae-a10f-23fa956afee9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35db963-2871-43f1-8542-8788cad77608",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5670d47-a717-45ec-be58-e45cb5b3352a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2bda2d0-d1f0-4924-9165-3414c2693373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55af423e-d03c-4b51-90ba-31369fc439e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c749dc95-49ca-4017-ab77-69347418f35a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c6325f-ca58-4390-a0e1-26df1182ba77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68ad52ce-d606-4568-87af-071db0daf3e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a6ad4b-14fb-40b1-a5cf-454dabdd2c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98748ba0-08d0-47b8-af0d-0255f68a5d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e28e9b-2f6f-4325-b6ae-7b72d026524a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb29e129-d02f-463b-816c-542b7988dc81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5f2aea-a54c-4046-88f4-fb03025cd26f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd81bb6-76c4-49f3-a56e-09d9f8df9270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3996b3a-6056-4aa3-86f4-1c18350d6fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a806726-56ad-474c-a55a-f636bc65360f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e3d655-f454-498e-920f-ea3f911f2beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47dca5a7-7e3d-49a3-b4da-52157934f20e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62030d3-a7e5-4eb4-9678-512215be87a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a18363e-10ba-41e8-b762-a5ca5b463a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abca23bd-3c20-4a48-a109-32360704461f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065607f4-b857-4f64-93b7-bcec1e75d9b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "088b05aa-5e59-476a-b6ca-79bec75116e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3cc40b-177a-4b94-a9a3-cddfbcfc8067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0e719d-c251-4f97-864c-934e3f6785c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e275ce6-c4f8-443b-87af-d217ed8b98d6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54050ad-73ec-46be-92e3-ae4eb581311a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bc1a2f4-1897-4daa-8e3f-3b008fc7e3c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b453ba0b-9745-4b72-a93a-f7b9fb562baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce925b60-4d0c-495c-9fdc-08962963bd22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398747f5-803c-47b1-a958-b24b9fd90ff1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2085f9-d00e-496c-8082-1ed2cab28d78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c841c420-735a-4fd9-a556-ed5c1c470fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "843d6a8b-e986-45d1-823f-3eb990741a71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7991b8ff-49d5-4abc-b456-2b526c584d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd0d380-1ca6-4bfa-9fb5-1469a5473b36",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271356cf-112c-4790-b286-e68cad05f30b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "385f7883-05d4-45ce-bb7b-8a15cc94f70f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5840f321-4f83-49fa-9b07-9540ed13d2d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ef0fc6-f94b-4858-acd2-46fa0d48fd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9167692c-5f35-486c-a4cd-904da24d4787",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c1f8b3-771c-42a1-9b7c-a7323024447d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3bbbd6-dd26-4c07-8715-58fd631e3f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb73fd64-c4e6-41ce-915a-dfe8e551eefe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dbb44b8-e3ff-49bb-b433-732dfe344f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001fadcd-8ad4-42cf-827a-b0d21ecd0813",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d64ccc-8433-446a-80f6-ffd03102b16d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8c5027-752c-4457-88f5-3a4e7614dc1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98f0385-8cff-4b06-96ed-2d3cc2538eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63aa38d-af8b-468b-bde2-415b86cc1c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1d5c07-c5c4-41b7-a2bb-2072c742913d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e342cc38-bd1d-442e-87c0-55334f7a1018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d976d64-af3e-48df-8338-7c6aa7e331e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b09045f-1eae-4236-a6ba-d39773f6b730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56cc8a6-683d-4e9e-8aaa-51c02d6d6079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d3bc1e-285b-4ed2-96cc-abd0ee7da9f5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454f7d1a-3046-40ad-8ab7-1a756bfb44ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da26d77-1e92-4aa7-95c3-bedad2bd035d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a22126-9144-431c-b1e2-7f5e15fe55eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0bf4bc6-082b-4fd9-af55-52709bba153f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a6a4de-051f-4b8b-bfe2-a1fdcd0cbf36",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a90073f-f4fa-46b2-ae74-e2191807508a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ec72f2-8d2d-4a2e-8eeb-5059ccbdc8a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "660c344b-9d97-4771-a309-de3dbdd70785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df4f49c-dd75-485a-93d6-2ae16ab8b5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e2ea42-0717-46de-b4e5-3ed8f3fb815a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49027c94-9342-4748-8028-72a64f1f433f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62cb304b-de69-4c9b-b300-96e549f1995d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e008be4c-280c-43b2-a9d1-a6f8c564a64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24742791-100a-4285-80c7-9fd95d8fd168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d64f1d1-c5f9-44cc-8d10-0d435325574e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e880d6-cb5e-4fe5-908e-566683d48de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ba802c-3e6f-4474-9c2d-bc4c06247981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce29159-ad8d-43e1-a007-023e9ccc0d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1cab1e-bcbe-4b84-8ce6-dbfeac084df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d211e54-f5da-4195-ac32-ed16aa1a00e4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474efb18-9d2e-41c1-865e-7bbfc1f751ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7da51e4-0347-4e03-aacd-c7fef3a81538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2004c31-9ef8-4cf9-9023-fcf651a7bec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b9a9f47-35a1-4a82-a0cc-3c67da7976ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2035ca6a-8210-4ac0-994b-601e9ec2e376",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf1e9c7-f9f4-471b-8f3b-96668a5f8e72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01c62af5-d0ee-4e97-a2e4-88fda0c86db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8ad50a-201d-4b73-a035-49d418350911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d0ff51b-c69e-4227-a37e-5fe966b1c0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7fef7a-707b-4228-bc4b-ba028599c2f2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37b30ea-659e-482a-8942-ee91b5f7af6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4be0007d-8f93-49c7-8f1d-1390eddc376e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d920169-c349-4e6e-b13f-39019d9a0b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d6ab0b2-aac7-4360-a382-23bbe6c0a9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af089d6-312d-4a10-9c5c-a0aef1c7c090",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1533295-cbc5-4b8f-a899-42a4d61b0f6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "826785d3-a52e-4b7c-a4aa-b80241af4407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7732861a-78c1-422f-9653-41f2aca55e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad1448e-dcc8-45d8-8933-b4a87d6f0f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e223f95-793d-4ec8-8154-54aff9340032",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd43c6e-b120-49f0-aec6-03ff232a8311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbeda1b7-4fe4-45d9-9be4-934a601d0690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdade6a-04ce-453c-998f-e3d88affcccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c2b0ad2-27bb-4bce-af72-c66008648437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccab1cc9-c784-42c3-87c0-c543022b5483",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9b1392-dbb6-4be2-8504-5a4421544e04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1279d409-946e-4c31-a1e9-f2ccb5884d21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28097f3-5fcb-4834-b9e8-07395b2e55c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202447ca-e40b-4a11-9b17-1bb0b7579e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83818a0-531f-4926-9481-7a8133d4acdc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd455ba-6af7-4485-ac6d-5782e58cd7ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e94af34-37c7-453b-b974-9d14533037e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "095e3212-544d-49c1-a604-b16b333c6a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6accb82-53b7-4fbb-babb-c47a64a9591d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b2a70a-4217-4c59-b881-af0c6fad8240",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59808b92-0b75-43df-8bfa-d56f104dd5d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f5df03c-bb4a-4586-8db1-9f985ec13fb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "868312bc-03de-4e89-81e5-d559ab403894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87752fb-b681-41ed-abd5-57657cd7e67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ef09e0-d81b-46ef-8f8c-60c63b4e5caa",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5277c4-0fce-484d-8166-3b13b1aa8db9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94682d36-f32c-4799-810d-b5205b58679f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "127b152f-e361-40aa-b652-99cfd2769e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63404e8-98e2-4268-8e7f-897e394c29f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b9670e-94d2-4e28-9583-83fcc4f744ee",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274d29d4-e827-4bde-9cdf-cb2d33a5f0ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5e167c1-8607-47aa-a174-96c9396c9cf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43514b8-e087-42fa-b2e3-704da6c2a874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c442007e-268a-430a-86f1-03b782536e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8448f9-b6c8-4d78-9292-00df3a06f58f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48e98d2-4290-41a6-8089-098e0aa3a8f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a1e12b-e802-4770-9038-965a6a50731f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb45684-bb93-41b8-b4f9-839115f4fa5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6bb7aa-e975-48d9-96ca-8fce8b8636e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5620c758-6456-41eb-a8d9-087ba715d31d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a175fa7-d0a9-4765-a35e-791f47d1bb2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a199aad-9fff-467a-bf5d-b07e476d97c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92af388-f430-4eed-841b-d8c76d24913f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6c0169-a565-45bd-ba2d-14241e8e9796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d36f83d-929d-451e-b394-2bf1d16a92f3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99b10fe-1870-4cb5-9305-2922b7f86620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e4b6789-da3b-4e9f-a4ae-94138353db52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1289e8-3274-4ee6-9d8a-dda2924d2ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a785ebb-be57-4628-a083-0f4f832d65a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a159878-4517-4a2e-9b3d-1c44332ebe9c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6caa1434-4c01-4020-892d-91e0c6967c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3eabbec-1bc2-4b51-b107-8620ad2a48ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1902288-da3c-4ef6-8b1c-6ad18785c3b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85997066-9b13-4b3b-a632-304b4c7ec5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c26edf5-8c2c-4c2f-a57f-ea97a55b4028",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70625435-7bce-4b1d-91d2-64735fa45753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33a105f-fadd-4b27-8257-7f2b29306a6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f63cae2-a330-47cb-bdf4-2b8897fbe19d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf75c312-1902-4672-a840-73f67166d9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433b000d-d6da-4399-b2a8-682dba56d87e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5363600f-5ece-4b81-a982-0f0d1ca96e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa56cb47-2e6e-47a4-8698-1a172abd2cd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ef6ebf-a9a0-4781-bfb9-490f1ab9e70d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c97c6d67-bde1-452f-bec9-5520fb5d20e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba16ea15-acff-41b2-930c-7ba11e6d5617",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6521f935-62cb-4b97-a69b-d3726069e75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acf7bac9-7e0c-42b1-a541-3635e8fe087e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbb67df-760a-49f0-a249-fde8c86f439b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562a1417-3de5-4d69-ba8b-649f73cd5406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d54743-8d9b-45df-b889-20ce32d71494",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1892a945-f51e-4a89-9334-683b029ff52d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cbb5d8c-4c1d-4695-8e51-9618879bed5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60242944-3094-4c15-83fe-218122d38013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878ec793-66a6-4dea-b80e-0e6f4497aae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792781c6-17a0-4dbb-9c13-40b98ede3954",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a171c66-2260-4670-90e2-cd5da83f11c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ee4e78-b510-41e4-ae88-87463e33748d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e8c73e-8890-473b-ae08-298cb1b89077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb6b10e-b31c-401b-934a-8c3f33b6d36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dad67e5-8b09-4990-9d4b-4969eb4c6199",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e2552b-6543-49ba-8ea5-143eeb91b501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c97f4535-4808-4386-92e2-84d91db1d19e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c802a9-7391-478c-b06d-02c962a313af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c60de4b-3683-42fa-b071-d83433fa60f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4c75d2-381f-46a8-a193-eeac8f229f0c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4beed1f2-3b69-40c8-b543-a4169d506e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab4f542-1539-4702-b998-0e7b76b81fca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "611911fd-662a-4626-a507-0bacdd3a1282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e5820f-f02b-46f2-b319-63dfd93c2881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88651bf-2381-4bf0-925b-e960f3e245e4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220f664f-fffe-437d-ba1f-e3ba21e099b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9564f34-9257-467d-b92c-a97feecb5ca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d078f7-4a55-4c29-bd18-f6e2babb8302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb215a8-e002-4406-bc23-76289ca0e6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848a5402-e3ef-4e38-8f3f-72d23e1b1fa0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f4312d-9463-413d-9181-cb02be39b07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de68278d-39eb-4f08-b2bf-57d36fe7c80e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e044ad9b-90e0-4635-ac55-b8d3e6165f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b1b3200-21de-4823-a931-6ad1158847fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273b15be-9137-4a19-ae2e-5772774fd552",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575ad0a5-25ca-470b-a1c2-580f256bea2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8054db6-c36a-4838-9bd1-43dbad604025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "923df642-a602-436b-a3d5-6f1b7f233da4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcdaee5c-c3cc-4f61-a6bc-4b5c34e49d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f1c934-216a-41bb-8aa9-b2b8fea212c2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0626a4-45e1-4480-82d4-7e0ada7c9933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af56d6a-e498-44b8-937c-835f3cb37ad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b6d657-9bed-4468-ad6e-b954a94607ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26cac4fc-2ace-4b65-8dac-55641fcf1a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6189df8d-df82-4f7d-9ea4-600bf21db2cf",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820bb0ff-a4e1-4a22-a144-6966d5ffd8f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a7c77b-5eb6-4244-bec6-79728b4dd54a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cefc09-35cb-4412-a1d9-2bdc368166a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd25b2c7-ab0e-4aff-b019-5e487235ac5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ef2d9a-dad8-4ff9-9a8c-4d35d076c665",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f940a0-f98f-40d2-b72a-e476a80a1937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70bdce35-9080-42d2-8f13-e93a2c8b8809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7958a7a-8337-4c96-9860-7dddf751e19e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c35709-602e-4c4e-985a-4907495f9053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707e3293-3a4c-4bf0-bab9-d1717f26ebb9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25097ea-81dd-400a-9870-552c60faef87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8469cd3-74c7-4a15-8298-22ae5053ede2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4041f0-ac79-446a-92a6-0cc410814713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57ef6ea6-255d-4d14-8178-3dfe727222d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3103ba-cd34-45ae-9306-b3e9296a8e5e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbcda64-95af-407b-851f-e8f777187336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f050462-13f7-481a-9400-55d632ac47a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae366f28-3c7c-48b0-8914-1d9a2ae34a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0126aeed-1f0a-437d-af7c-2045437e6455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4ee84e-7d79-4bc5-82c5-073a39dc6c8e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42e5291-4c57-48bd-9721-e87bc8915d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd203881-119a-43a5-9e4a-2b8d4dd5bf25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07edb87-edf1-4576-ab25-1839ffd43a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26de0b62-6c1f-4af2-b711-9f0ecc1a8f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cab811f-6c4a-42dc-ab99-a38944c27929",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c7c547-c8e3-4479-8d26-289bd6088210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a2b02c-709f-4147-9464-5d90b6a74109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e92dad8-89f2-4360-aaa8-7b43131e5d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a1a919b-8374-4ee8-8707-0c2ca959eb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5c6d17-8cd6-4cd9-9ae8-8334555507c0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8bbdfa-c875-4abc-9794-180e435fb97a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df3e21d9-4362-405e-81fc-1014176f7de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6746ab-e611-4914-b118-581f6f30c475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a75115-b5ec-415d-a6c2-f4e3323b7fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6bf9d1e-b3c8-4098-9866-0abf939e3857",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f2d68a-2e62-4d8c-87a8-1d79c3eca4f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966a7005-8bac-48ad-9f66-692f4bc42a8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "922ee678-4c55-4c46-94c4-6acd3641f756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257969a9-2eed-4b16-b15d-9c1af697dfc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd945e6-5f99-4f0b-81c1-f0cd1d1d7f63",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c136c3-8cb2-404e-b056-8e11ba25541d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa873dc-ab41-4ffc-b135-8e8c30e5d525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ffbd02-8a64-4fae-82eb-57d8da31977b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4565dd-90db-474c-8b4f-92048bb858de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3a52da-8f17-40f8-8d6f-0c4075aed5c4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c7cac7-d8e5-4ac9-b8c8-ae685e9fd636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab8b0af3-dc0b-42a3-8612-223bf57112c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc01245f-2f8d-4f91-99ac-952df03f82dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bb48836-4526-45e9-a6f3-ff07925f0190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc22609-95ea-430c-ab7a-b542f9b52e8c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6df0aff-9a10-4352-bbab-0d44d5d54509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10e5604-5083-4b6a-8ca7-f867ce5de3b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1778cec-7413-4836-946a-ed15bf1c1a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e0ff20-69a7-49c9-98c5-b8b0e3ea4573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7b27fa-8592-4d7b-8094-053e49648775",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f896653-3b18-4644-9163-23c12b079675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45be1471-1938-4fbd-886e-be54eb65ea3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36f56c7-3b71-4608-983a-767b94bb1798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba06597-19f4-4323-b3b2-8eeaa14d8506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d2c240-3953-49c1-b299-86bf9c30cec1",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb50af2-7064-47f6-8b66-90ebe021d33a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33d7a76-8118-464d-b8fa-8382bbb54cfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "934b10ee-076f-43a7-8ffd-b2c47490b143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86f3803-4a7b-4a7c-a444-4c9f2e60bc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a72a31e-aeae-4812-91fa-757e5f2549e8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a127b2-3d01-4267-8370-abc7d0fbbbeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a46c124-b6b9-442d-813c-2f01a37bf0f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd702b1-c15c-4ba9-a551-ff947133b40b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b95a0c9-0936-4921-9a03-54207ccb9f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941bb006-4dfe-4de3-afed-566c6c02ef03",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e603c3-a0c2-4453-8dec-7cd6e87be2f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f038d83-6f5a-4eeb-bf49-786eed45da6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b57041-8d74-44e5-818d-83f576910839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40fd0bfc-0863-4619-b930-b1d2c85aae0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0eb8dde-23af-460a-b6b4-e66c00e75862",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33e2b4b-5579-42c8-9d12-ce700b9afe54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c21b00a6-b614-4f47-884a-bb1a63b5f343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3f8d97-5196-4b9f-80dd-c0ec9829e9c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0245ce71-f19e-4448-9d0e-d57f50524174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2ff067-789c-4b0a-bd85-2d003f263432",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cb3419-c7ec-4e15-ad97-adf67f1b5004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc640259-8f32-4154-ac50-3e1877e4bf1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f68446-d929-4972-bb30-2cd20fca1c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deaeb55e-23f1-4de5-bfe6-1d4d8eba6de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa20d582-1b95-4e9c-91a0-0e13af6ae324",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7429a691-6377-4065-a852-0369487aef14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b6cd446-d4d3-46eb-86c3-b8117a88feb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4340a8-e635-489e-8160-6445cd368ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de14ca89-50d3-403e-b8c2-d28c1735e92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d806213-94c3-4421-8f7b-6b18d4ba0f0e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6438e914-9801-48f4-a6ef-8a0ce5113fbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51c270d7-778a-4815-99a1-9e5fcb17f2c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e360374d-6564-4281-9086-e3da5cfb2737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70dddad8-0730-4391-bcc4-a747193064be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9302f84-f689-4b94-a0d7-bd5e10166623",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb0bc5a-0cce-4d78-9e6b-e64b3fddf790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b091e666-759c-4627-bc09-885388679ef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "026002e1-a362-44bd-ab73-1fbd083c5e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81078992-f77b-4b48-bc55-8851596abec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c690915e-7c0f-4e12-8226-e852f23c3e71",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cc34de-c737-4a23-ba92-12a47122861e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85f4052f-db4a-4605-a744-9830eece06a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2170f11-5bbf-408f-b87e-3cc7ec76f0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "314cc7c5-68b4-4412-a30a-32b8925e5df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6d989e-81f5-431d-a696-2d74912abbc9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6568c6-6ee8-4e30-b191-90467fe6e1e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a431be27-fcc9-4ebc-9fc0-4c661becbb53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf1dc20-986a-4d06-956d-e238f90fb8c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36851ffa-e3b8-4947-a30c-60075fc6d09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c82b097-8b07-4be0-8e08-55237d2c9766",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db498c5a-4cd1-452b-9ad0-e7643902ffe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5b44062-8a99-4eeb-903a-6a08aefbd307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95308def-1dea-44a4-a8b2-ff05c8b9f4af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a36412-1b24-45d0-8aae-fb2e4c4d714d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d79fa6-0d86-484a-96b0-9395197fa958",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc9fd0e-9a2c-473a-89a5-d6e3f6c08382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc74acea-4001-464d-aca1-87b54caa257b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6eb1809-ecc4-4433-a3fb-fdb74f86c26b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f8f35d-f94a-402e-b865-2a7b9849002e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2421d4-26d2-46a2-a601-63b3585548ad",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe801d24-b625-4588-8c39-252538885cb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34f1c839-c61c-4f5c-9d62-5c1912c9ffa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "220e4581-c39e-4111-9fe3-a0146042fb20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e021548-c842-4152-80be-e6069f635464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1516340c-788b-43bb-941f-747011d31fb3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb80644-f2ee-40fd-b9ae-16ecbc2ce9d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f7c0dc5-748b-4b1f-8056-f5a2eca52f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c163413-7173-48dd-8c98-dbc1b1d9ada9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40158a3f-e796-41db-bc0f-e7785f4b32ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3f123b-502a-4f68-b5c1-97d8742ff9bd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9c27f2-f7a2-4ef6-92d3-9e9daedebd65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa0afdac-1d4c-49a0-bac4-79e0fabc116c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "429f1dab-c606-4991-9aec-036450a09ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e07beb7-8f61-4d15-946c-76122a5a52e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2657b783-1efc-4288-be79-d50c15ec4e8d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6f54b7-97d2-4ba9-931d-0bd2d6101528",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c636dd5e-ffe9-4055-bc06-27499f0deece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bc523f-8e67-48bb-934f-bb2df1572cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2407d068-0079-450e-90aa-db1eacaf1beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b6f938-d970-4c27-a867-3cf44f1da6fd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c7180a-b564-4ede-a097-299675095af3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce4f84ff-f4e5-4fd8-9608-8b50286cd815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc006c9-4581-4cfe-ba7a-75a7a0d4bd54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cafa6fe-7a0e-4978-8da9-1c6bdaf4e9ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634f2d09-34fa-4f46-a318-79ef35a02781",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61475f7e-c965-4f0d-86f9-a17ed6d2c218",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90ce46dd-0689-4a96-87df-6167a7e651dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfab5331-f0b6-4ecc-b6fd-b7ad45f018a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcad90d2-20a3-4619-8cc9-3694096a645f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da29281c-b1a7-4b02-a7d0-db4c38b951a6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42cf366-6e0c-495c-97dc-ca6adea7907c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f059f15-47ff-4d1a-8b03-747af5798d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d929dd6-cf6e-4889-bb80-808b302c31da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a006b0-f84f-4c93-b975-cce99f3ca372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d3e6d5-7249-4c8d-9fc8-18c5ce2bc6cd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8e506a-1315-497a-8173-5da94f31dbbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1591326-92b8-4b62-9832-50f1a1c39dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5823a43e-c261-46e6-b8e2-d9e110e4aa49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3849a7e7-f6ad-40ca-b6e3-e0542e605217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ab9d22-9ff9-4f16-8531-ed2b24d3d8f9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e1b04a-9384-42f3-a66f-00e1dc88ce35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "497f86c0-0b9c-4802-905b-6b4c2859ff43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2c613a-d920-438f-919b-7384fe600339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0496f7-0629-4534-81d8-8a00aec598a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1306ecf-6d56-435f-a74a-c98825afec17",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b79400-b4ec-4d9d-926a-0e58eb8d147d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d30ca77c-5ba5-425e-ad0f-af08061200a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "730e6203-6280-45d6-9d46-7ddcc6f54fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0fe0cb2-b060-4057-bd62-492bc31540ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e551f679-803a-4c30-89be-9eac092c98ca",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba048e97-31ff-4050-a126-e8766b0337f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcbb2407-2b96-447a-b5e1-36d8187346b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4eb776-2bfe-4d56-97dc-479bbaed3a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d565b341-d773-4ac2-a3af-b83f579bc54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11d63ab-6e08-4ec3-942d-e5ee3147fb0f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571f8a19-33f4-4dfb-957c-6b92b6b710c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c98cebcd-36cc-4d34-bdb2-67acc7a505c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a15c756-9ea7-425f-8849-e686f1794079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd7701e-1197-4ed5-b7b3-00b76dc0f648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17306dce-0ffa-46b1-843a-e46cb2b98e3e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2464612f-5ce7-43d7-bfab-d8d3738bac4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e790011b-adb3-4a61-b7f6-ce434da3dae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b09ba0-c2f5-48dc-802a-7c8d0e86af4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45bd77df-e297-4a06-a51a-e1362439888e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92a21e9-1811-4106-95ed-dc7f8f1d957d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509a1792-68d3-46a9-b1ba-2825334d6b18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5842c84a-88df-4e9a-82dd-379cba236de0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9b850c-8ccc-4cae-ac4d-eadea506dc15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc5eda0-d8af-4e10-9bef-7dfc2f7f6c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdaf2ae-4661-43b6-884f-740012a8dcf4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89de129b-8ab5-4dea-83c3-77dbe57da8a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15af7e7d-dbbc-414d-b48a-09881c7de5f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0d5a83-0a37-46a0-afc2-6d1908b622b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6256ca4a-9ba6-4234-9d4f-d704c55b7eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e19444-4a0c-49bf-a016-ef21d2af7c43",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e87a45a-a152-4a1f-8414-7da3af6d734f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fc8aae3-7f5f-4702-ba62-3e939f5171a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e177f9-6ca0-411d-8c1a-b44dff6a3dfd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0323526b-b81a-4c7d-98c4-614038baf5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a1a363-715c-4d11-8d05-9cebd5a1248e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0a6cdf-77a9-4a29-83d2-80d1b56fa9dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37431bca-129f-4715-940f-44b3a28798ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f01da3-6869-4105-a203-1d9286eb3e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aab800c-af0f-4ad3-8094-a50b9c8a69aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97953727-3a50-48c8-93a5-e8779d9ffeda",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8746866-1836-4c95-b789-3ed410551132",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2622d972-4d17-4c6f-9f0b-80b7b4669392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd0fbce-e230-46d5-90ad-687b35850501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f44986a-b3ed-4bdb-89fd-2e073e0676bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ce2865-d511-4e82-8d46-12e945bc9b8d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e4fa60-27b0-4f75-a5df-bccb6e58cb08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b851c80d-b238-4293-95a3-c8b2c517e581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4073205c-817a-4e01-a3c0-d02d2a7530c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f731a188-2f47-423e-8cba-d39c20316329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8615b3fa-1c73-4e97-b526-9681de64f6ae",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df469fa3-4791-4b9d-adc7-fb5ef4646e15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e22d3ecf-ddb4-4137-982c-4efa021dfbd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f0d11c-7140-43e3-912f-7a16649e447b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "336bfad6-cef1-4388-a1c1-98ccff64abd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409108a8-588b-4b18-8654-66527efcb501",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2903bb-1d58-4c97-bf2d-59a8e2259e99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f23e52c6-d94d-46a7-b4e6-71ffc7ea1899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdebe0d-4216-424c-9c58-a8d59db3317a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e0fe27b-947f-4ab0-923e-5f06914bf2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55f42b5-8019-46b2-a8a9-b05e5e69848a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e67b9f-7642-432f-a260-ff47d0fc357b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a96cc01a-69eb-4fe0-a0ef-5663b28339d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "189d2d90-ba79-4ce3-a535-25bd9e74ec49",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d610e208-ec0c-4f45-afe8-a569409bc36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1610f840-ba87-43d2-9354-575a3eb80bc4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd98d110-eaab-4cea-ba70-b400de8d76b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76b7558b-1469-4c00-ac8e-ba29e3459c23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "174e7292-5822-468d-9cd5-299f7799603a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861648cf-7582-4100-95f7-bdcbc180a45e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "981bbc37-80f0-4f1b-a7ef-61337ab9c861",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "836fe6c3-74fe-4195-b3ac-0a522b5de9c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "72ceec15-dd64-4f7e-8a65-baa73467fc5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac42859b-acf1-4576-a009-a903e9a1a5a3"
                    }
                  }
                ]
              },
              {
                "id": "1ddcff9d-9266-4131-8aa9-e814a082ed83",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2896c86-611f-401d-8af2-9c701a75f16c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6ae43d-79ba-4ac4-a14a-7b790de66208",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "80338929-25e5-4422-b738-fdd96c14931e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb36850-4723-468e-8dde-a59b1d2ee4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bdc2a46e-1a2b-4ab3-891e-60bb72ce6ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3650d3-4c1a-4d00-bcfd-c167001adbdd",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1def9a-793e-4cff-94c2-27b26f1302b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "dfb7bf2d-8862-47a2-99c2-d92cbedda718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed114ae-38b2-4ba2-871a-1e657eeb4dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "939ed404-da90-4fe9-bd05-e14676328931"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb7d3533-618b-424f-88a2-533d1f197605",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e04cd1a-958f-45f4-ab0a-f056815ee041"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "020f07a1-24ac-409f-9029-4f043b1e697c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0892f48-b8fa-4514-a1be-fcf4bf23f67d"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "28849168-5f05-41bf-90e3-55ad7fa293cb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "556d7282-d997-409f-b83a-0923e47f1048",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e2d55af-a177-488b-8a92-e6c7ce1953c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1e22c3c-922e-446b-88c5-0d45e9e40895"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4dc4ca1a-14fb-4dc5-8297-1c62e61b7bb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6649de3c-6bc9-48ec-b2b9-47acd472c46c"
                    }
                  }
                ]
              },
              {
                "id": "8e5c36c5-f55a-4b2e-8392-8f98e31f47d8",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03aa3167-b6e0-407d-9dd9-c277a4a3e9b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6fc7af28-797c-4f98-989c-7d44620d669a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f628cb95-1f5c-431d-a5c7-54f2ae8379a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c82cd87-8005-4201-9cc0-1fb2207755f7"
                    }
                  }
                ]
              },
              {
                "id": "60a4d090-3579-477a-888f-0fdf1e7b3e84",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e7ff2e2-2bcc-4efb-8020-45ba4a70ef8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a106334b-cf1e-430c-b597-ddd17ba44e63"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "091f915b-d952-4979-b53a-0f2c7f3673ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14995232-bb99-4c19-8668-1d876269b427"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72eb56fa-c4e8-4443-8d4f-2268f4f5095f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7d548c71-c440-428a-a85b-4d90d5078a15"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68297d62-5947-4eaf-81bd-ae03f97cba40",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "65e5eb64-91f0-47e8-95f9-be7c183bfc8b"
            }
          }
        ]
      },
      {
        "id": "c58904a6-4ec1-4ca1-bcda-b420ae102a72",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "525561d9-07a8-4e62-9507-d3b651dee15c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ad5b7ce-8fa2-484a-8cd9-40420b0490e6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52ea507c-ed6f-4998-a6b9-19cd724ac75b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20714170-79e8-4c2b-961e-da0bb271eabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e244f2-f113-45ac-89d0-dad7ff6a17f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eda9e0f-23d0-46f1-a8db-9669e6fe9f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de6133fc-c1bc-434b-b29f-950a23d44e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c24fd6f-4899-4994-87b9-d6b8a27fb9aa",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cbe8e4-5843-4412-aba1-d596d6b84acc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "f9a659b3-0fed-4d43-8602-3a70977bb769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e13d03-7531-4561-9a7e-1bf6d296afe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2e49d89-6aac-441a-ad69-f9b5990bab1c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0996303-65af-4a08-be28-18eee51b185a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d219f380-c4c6-4fcb-bc31-cc7aa4add6dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d698697-9a93-4213-bd0f-d5ac85ccb931",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "239e91ad-33c2-40fc-be1c-87d7735bdab7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9db8a2ae-1d18-47b0-8df4-2e9484ee3ec0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope",
                "utils(pm).getAccessToken('submit:presentations');",
                ""
              ],
              "_lastExecutionId": "d30581d0-a5cf-45fe-b309-b1bb32b552af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b9ab5b8-9dcf-455b-9d99-0a1bdd4785e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af561066-7b35-415c-a4f1-a0acef9e1a59"
            }
          }
        ]
      },
      {
        "id": "01f13ccc-d44e-48d3-a293-fb7f61cd7037",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "70b730f3-5d52-46f8-9b82-7a81f061a07c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "70ad2bc7-eec7-4179-b2bb-0750d588aa2c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20b1d2cd-d1db-412f-aa6a-2f59439f9175",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e450137-a220-4c60-a7d6-848c113b27b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0aed32a-4143-46be-8177-330b2db28558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1092e6ff-5f70-42b2-a422-f59b5d297978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab7e1f0f-0b7c-45ce-b4f7-080c101399dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db675ed1-2ba3-4bf0-bc1d-8394a6870885",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da684d6-1b04-4a64-80cf-d734621bf86a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "ac98dd06-a7cb-4927-8134-86353714aca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4cf1888-50ad-4d8f-a0b9-3ebef9bc302e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab0759a8-ca59-49a9-9b86-6e05a2c547d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1ea2bf3-9ccc-48f6-ae5b-5bcecbe50df4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a988bf99-95d4-483f-8698-370a468812ca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d19cc2aa-6bbc-4234-aacb-4847257932c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24a84500-4c81-42b2-9230-e0b64dd8a27d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7cc18732-492c-4981-acf6-d81a5bb34d38",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope",
                "utils(pm).getAccessToken('prove:presentations');"
              ],
              "_lastExecutionId": "fdda7059-5115-439f-ad3b-5fd090d49831"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5d50746-3f4e-4f55-8108-c9f718da8a24",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b195c60-24fe-4219-b247-18eeb280829c"
            }
          }
        ]
      },
      {
        "id": "28d63deb-cf7e-47b4-856d-2b92479545ec",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "13e626af-ec8a-4757-b3e4-bc79ab7bfe4c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ddde841-2faf-4992-aea9-6a2991964d65",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99a6d732-83b5-4bd8-ab0e-a8a0b4bc7712",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46dbb79-e6fa-4701-aa4a-b5ba4ba146fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e1bd16-6673-458a-8906-a9fc52bdac38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3c947e-6b07-4621-9a72-77dfd06ecf59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "318044dc-c85c-4654-b90e-d58e67d22ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d51e3b2-3b65-4361-a4bb-35d1ecc67208",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e6a555-7172-43ba-8e76-9ad53a417257",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "6e144bd8-0b12-4a91-96a3-7333457d6d0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce45264-3e42-4cb2-9701-208751ba7ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "819a8be0-f3d1-4f59-b166-c94ddfce16e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19701f81-78b3-473a-8f63-c38a2383b710",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae435cc1-2341-4a72-829e-01762050c249"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0dd093c-b57e-4f53-84ff-567344464bcc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2dad4c8-511b-4fba-b10c-a7f1ea5d3648"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f2ba6dd-c019-4b7e-8b69-7cd752814d90",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope",
                "utils(pm).getAccessToken('verify:presentations');"
              ],
              "_lastExecutionId": "82b56d4a-0122-4d36-8ff9-57fb5bec70ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5075804-ea38-4ad4-9558-a8446993b31f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "07004153-27d2-49d6-8076-981fdb1117c8"
            }
          }
        ]
      },
      {
        "id": "8480643e-62e3-414d-9bf1-eff6acd712a5",
        "name": "Presentations - Notify",
        "item": [],
        "event": []
      },
      {
        "id": "83152f82-d26b-4ac9-91a4-aa9b486cfdf7",
        "name": "Presentations - Submit",
        "item": [],
        "event": []
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1211,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 203,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 315,
        "pending": 0,
        "failed": 8
      },
      "testScripts": {
        "total": 611,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 600,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 129.44827586206895,
      "responseMin": 9,
      "responseMax": 1622,
      "responseSd": 235.6778318553993,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1664397752241,
      "completed": 1664397785528
    },
    "executions": [
      {
        "id": "b7fd57f9-2f5c-45d9-883d-dc39b9690b05",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 155,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "246f0d9e-9110-4a05-b58a-038a1412969c",
          "httpRequestId": "066850b5-6a84-419f-95a1-c96b5d8e60e8"
        },
        "item": {
          "id": "b7fd57f9-2f5c-45d9-883d-dc39b9690b05",
          "name": "did_json"
        },
        "response": {
          "id": "46641e70-1a8d-4cf4-9412-48efbcb547c7",
          "status": "OK",
          "code": 200,
          "responseTime": 296,
          "responseSize": 1369
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954bad4c-efa0-4a94-af6c-7a8036cdade9",
        "cursor": {
          "ref": "ae44318d-f844-4589-b993-cc3e4134cd13",
          "length": 155,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f81114a6-6de1-4bbe-8443-58ea40a19a4f"
        },
        "item": {
          "id": "954bad4c-efa0-4a94-af6c-7a8036cdade9",
          "name": "did:invalid"
        },
        "response": {
          "id": "e1ede329-d9ec-408f-aaca-661e1bc37968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954bad4c-efa0-4a94-af6c-7a8036cdade9",
        "cursor": {
          "ref": "ae44318d-f844-4589-b993-cc3e4134cd13",
          "length": 155,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f81114a6-6de1-4bbe-8443-58ea40a19a4f"
        },
        "item": {
          "id": "954bad4c-efa0-4a94-af6c-7a8036cdade9",
          "name": "did:invalid"
        },
        "response": {
          "id": "e1ede329-d9ec-408f-aaca-661e1bc37968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120eb4a8-fc41-429d-b937-a30bb95bdb61",
        "cursor": {
          "ref": "fa5b7bef-2036-487f-9a21-10f5234f2e14",
          "length": 155,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2d2fea8b-560a-4256-821b-62d39897b97e"
        },
        "item": {
          "id": "120eb4a8-fc41-429d-b937-a30bb95bdb61",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "625c1e4c-cc15-4b30-a80a-c65244d965d8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 204,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e4c095-b1fd-4e56-be36-510c0b3fcc53",
        "cursor": {
          "ref": "8ec606c3-c4a2-4c4b-a449-23553a86ddf0",
          "length": 155,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f8cc9139-6685-4a06-9333-270b65b4611c"
        },
        "item": {
          "id": "85e4c095-b1fd-4e56-be36-510c0b3fcc53",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d4178e2e-916a-4681-b43b-a7d643598420",
          "status": "Not Found",
          "code": 404,
          "responseTime": 28,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ffa4c1-dd2c-47a5-926b-cd9f360b065c",
        "cursor": {
          "ref": "ffded58e-cf41-48af-bd60-4f3e8ba351f4",
          "length": 155,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "955c4019-0d1e-4e1c-a72c-6b954ecf1701"
        },
        "item": {
          "id": "c8ffa4c1-dd2c-47a5-926b-cd9f360b065c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8e7565d6-ddb4-4682-b62f-27bcb9fa384b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207ef314-8d28-4ea1-a455-40031c6d09ab",
        "cursor": {
          "ref": "396ba30f-c97d-48af-af40-01bd4792382a",
          "length": 155,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "126061c9-3d97-4109-9445-1b3bae8687f8"
        },
        "item": {
          "id": "207ef314-8d28-4ea1-a455-40031c6d09ab",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "2f7b78a0-a76a-4926-be32-a73264950653",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 59,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207ef314-8d28-4ea1-a455-40031c6d09ab",
        "cursor": {
          "ref": "396ba30f-c97d-48af-af40-01bd4792382a",
          "length": 155,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "126061c9-3d97-4109-9445-1b3bae8687f8"
        },
        "item": {
          "id": "207ef314-8d28-4ea1-a455-40031c6d09ab",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "2f7b78a0-a76a-4926-be32-a73264950653",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 59,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75aa3ad9-d92d-479e-8c58-4320202840f4",
        "cursor": {
          "ref": "a3eed3e0-9880-4ba6-b9ff-b1a8c9809f3e",
          "length": 155,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4a076a54-d594-419c-9aa6-6fb2402b7205"
        },
        "item": {
          "id": "75aa3ad9-d92d-479e-8c58-4320202840f4",
          "name": "identifiers"
        },
        "response": {
          "id": "70bf6faa-6e3b-46bb-a10e-aa069cfdea30",
          "status": "OK",
          "code": 200,
          "responseTime": 494,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7833965d-bb9b-4e92-acb2-d8a775f33040",
        "cursor": {
          "ref": "d5befa37-7c38-4cfe-8cb9-8e476dafdc38",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "80dabdd3-1223-4830-9422-ddee00abf5df"
        },
        "item": {
          "id": "7833965d-bb9b-4e92-acb2-d8a775f33040",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "47256b73-12fd-4d9b-aec0-9973d386a0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7833965d-bb9b-4e92-acb2-d8a775f33040",
        "cursor": {
          "ref": "d5befa37-7c38-4cfe-8cb9-8e476dafdc38",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "80dabdd3-1223-4830-9422-ddee00abf5df"
        },
        "item": {
          "id": "7833965d-bb9b-4e92-acb2-d8a775f33040",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "47256b73-12fd-4d9b-aec0-9973d386a0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7833965d-bb9b-4e92-acb2-d8a775f33040",
        "cursor": {
          "ref": "d5befa37-7c38-4cfe-8cb9-8e476dafdc38",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "80dabdd3-1223-4830-9422-ddee00abf5df"
        },
        "item": {
          "id": "7833965d-bb9b-4e92-acb2-d8a775f33040",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "47256b73-12fd-4d9b-aec0-9973d386a0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3903129-524d-46dc-a9e0-a377b5c4049f",
        "cursor": {
          "ref": "848e4598-31b8-4313-b3cd-aa298cc5df36",
          "length": 155,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d3176997-d25a-4af2-8771-ad94e0853361"
        },
        "item": {
          "id": "b3903129-524d-46dc-a9e0-a377b5c4049f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "fd337f5c-1da1-4168-b33f-fb90211662f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3903129-524d-46dc-a9e0-a377b5c4049f",
        "cursor": {
          "ref": "848e4598-31b8-4313-b3cd-aa298cc5df36",
          "length": 155,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d3176997-d25a-4af2-8771-ad94e0853361"
        },
        "item": {
          "id": "b3903129-524d-46dc-a9e0-a377b5c4049f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "fd337f5c-1da1-4168-b33f-fb90211662f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9bf59b-e487-4efb-b3e3-3758c3d46692",
        "cursor": {
          "ref": "ea49ef8a-cece-4269-a492-87606caeacfa",
          "length": 155,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "dfbb8e44-f821-4fed-acf6-a403d7fcdcec"
        },
        "item": {
          "id": "fb9bf59b-e487-4efb-b3e3-3758c3d46692",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "9d57ea53-ec2c-4985-b791-1eb0230b7f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9bf59b-e487-4efb-b3e3-3758c3d46692",
        "cursor": {
          "ref": "ea49ef8a-cece-4269-a492-87606caeacfa",
          "length": 155,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "dfbb8e44-f821-4fed-acf6-a403d7fcdcec"
        },
        "item": {
          "id": "fb9bf59b-e487-4efb-b3e3-3758c3d46692",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "9d57ea53-ec2c-4985-b791-1eb0230b7f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c1dc6c-9085-4577-8067-6f93b29a7aea",
        "cursor": {
          "ref": "bbf5f9a9-edf0-4673-9cbd-3d5ac1e42501",
          "length": 155,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3304646f-a21b-4148-920f-5dbbd8220240"
        },
        "item": {
          "id": "90c1dc6c-9085-4577-8067-6f93b29a7aea",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "4d30d26c-abdb-489d-a669-63a091191a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c1dc6c-9085-4577-8067-6f93b29a7aea",
        "cursor": {
          "ref": "bbf5f9a9-edf0-4673-9cbd-3d5ac1e42501",
          "length": 155,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3304646f-a21b-4148-920f-5dbbd8220240"
        },
        "item": {
          "id": "90c1dc6c-9085-4577-8067-6f93b29a7aea",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "4d30d26c-abdb-489d-a669-63a091191a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5378b862-a644-414d-b2b2-3dd170678044",
        "cursor": {
          "ref": "0a244950-b335-47ad-acf2-955f2a422b30",
          "length": 155,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "48f4d1af-d8c6-484d-b966-a62ad0c67649"
        },
        "item": {
          "id": "5378b862-a644-414d-b2b2-3dd170678044",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "5507f55b-1713-4a3b-8009-3dd114e6a4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5378b862-a644-414d-b2b2-3dd170678044",
        "cursor": {
          "ref": "0a244950-b335-47ad-acf2-955f2a422b30",
          "length": 155,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "48f4d1af-d8c6-484d-b966-a62ad0c67649"
        },
        "item": {
          "id": "5378b862-a644-414d-b2b2-3dd170678044",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "5507f55b-1713-4a3b-8009-3dd114e6a4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b4a836-261f-4028-966d-cdbfa03d3927",
        "cursor": {
          "ref": "23f16d35-e8f5-4a5d-9f4d-c8220d17f658",
          "length": 155,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5e940aad-f746-4270-bbc6-8503b7a560cb"
        },
        "item": {
          "id": "25b4a836-261f-4028-966d-cdbfa03d3927",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "81cd7cf4-cfee-40ec-a3d8-26befca1c215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b4a836-261f-4028-966d-cdbfa03d3927",
        "cursor": {
          "ref": "23f16d35-e8f5-4a5d-9f4d-c8220d17f658",
          "length": 155,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5e940aad-f746-4270-bbc6-8503b7a560cb"
        },
        "item": {
          "id": "25b4a836-261f-4028-966d-cdbfa03d3927",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "81cd7cf4-cfee-40ec-a3d8-26befca1c215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b9a4f0-f6cc-447d-b51b-3400d5e83271",
        "cursor": {
          "ref": "0faa6359-ba8b-4711-ba24-39b60d5ab13a",
          "length": 155,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1a4c6324-807c-40ab-897c-c27fba3f285d"
        },
        "item": {
          "id": "44b9a4f0-f6cc-447d-b51b-3400d5e83271",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "575ffc2a-53a4-472b-af48-f2b2f143a484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b9a4f0-f6cc-447d-b51b-3400d5e83271",
        "cursor": {
          "ref": "0faa6359-ba8b-4711-ba24-39b60d5ab13a",
          "length": 155,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1a4c6324-807c-40ab-897c-c27fba3f285d"
        },
        "item": {
          "id": "44b9a4f0-f6cc-447d-b51b-3400d5e83271",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "575ffc2a-53a4-472b-af48-f2b2f143a484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43567524-a003-481b-be56-0db0d66d950b",
        "cursor": {
          "ref": "6a5dfa6c-77d0-4d12-809c-2226b0dc78e1",
          "length": 155,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9bf18ab6-1105-4d01-87e7-cbfb14918cb9"
        },
        "item": {
          "id": "43567524-a003-481b-be56-0db0d66d950b",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "9712c723-0b22-411f-bd53-0aec9445df08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43567524-a003-481b-be56-0db0d66d950b",
        "cursor": {
          "ref": "6a5dfa6c-77d0-4d12-809c-2226b0dc78e1",
          "length": 155,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9bf18ab6-1105-4d01-87e7-cbfb14918cb9"
        },
        "item": {
          "id": "43567524-a003-481b-be56-0db0d66d950b",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "9712c723-0b22-411f-bd53-0aec9445df08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d7ac2a-d93a-4d9d-837c-ec4909eef8c9",
        "cursor": {
          "ref": "ec3f2503-9cce-4a76-bb99-4997778f6715",
          "length": 155,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "da953eaf-1119-42d1-98f0-b0a3f1c2e69c"
        },
        "item": {
          "id": "63d7ac2a-d93a-4d9d-837c-ec4909eef8c9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e261659f-b5e5-4318-b0cd-3e288b95af58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d7ac2a-d93a-4d9d-837c-ec4909eef8c9",
        "cursor": {
          "ref": "ec3f2503-9cce-4a76-bb99-4997778f6715",
          "length": 155,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "da953eaf-1119-42d1-98f0-b0a3f1c2e69c"
        },
        "item": {
          "id": "63d7ac2a-d93a-4d9d-837c-ec4909eef8c9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e261659f-b5e5-4318-b0cd-3e288b95af58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea20f4a-6c97-4a51-ab91-837e3779978a",
        "cursor": {
          "ref": "ac291b0c-5e68-4ec9-aa64-00f810580ef5",
          "length": 155,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a08ab015-1dbd-494c-a779-2b97d610bbf7"
        },
        "item": {
          "id": "4ea20f4a-6c97-4a51-ab91-837e3779978a",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "cb0a2fef-da0a-4e44-8486-fbe6fbf2677d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea20f4a-6c97-4a51-ab91-837e3779978a",
        "cursor": {
          "ref": "ac291b0c-5e68-4ec9-aa64-00f810580ef5",
          "length": 155,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a08ab015-1dbd-494c-a779-2b97d610bbf7"
        },
        "item": {
          "id": "4ea20f4a-6c97-4a51-ab91-837e3779978a",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "cb0a2fef-da0a-4e44-8486-fbe6fbf2677d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91077f06-acd8-41df-8af9-79f7805dacdf",
        "cursor": {
          "ref": "61038dbb-49fb-44a1-9c62-f86bf6f9a91c",
          "length": 155,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b3404425-7b27-4a52-b041-9d8b9926306b"
        },
        "item": {
          "id": "91077f06-acd8-41df-8af9-79f7805dacdf",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "9b186aba-ab6b-465a-9bdf-644aea60635d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91077f06-acd8-41df-8af9-79f7805dacdf",
        "cursor": {
          "ref": "61038dbb-49fb-44a1-9c62-f86bf6f9a91c",
          "length": 155,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b3404425-7b27-4a52-b041-9d8b9926306b"
        },
        "item": {
          "id": "91077f06-acd8-41df-8af9-79f7805dacdf",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "9b186aba-ab6b-465a-9bdf-644aea60635d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9967c79e-6891-478e-9ead-3c6620daa318",
        "cursor": {
          "ref": "968a4671-386f-473c-ad76-2ffc2f9a8589",
          "length": 155,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1bad1da7-0bfd-4288-9621-1fb65910ae4c"
        },
        "item": {
          "id": "9967c79e-6891-478e-9ead-3c6620daa318",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fbeb8a30-0683-404e-9eac-b464c438deef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9967c79e-6891-478e-9ead-3c6620daa318",
        "cursor": {
          "ref": "968a4671-386f-473c-ad76-2ffc2f9a8589",
          "length": 155,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1bad1da7-0bfd-4288-9621-1fb65910ae4c"
        },
        "item": {
          "id": "9967c79e-6891-478e-9ead-3c6620daa318",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fbeb8a30-0683-404e-9eac-b464c438deef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3946cb6c-2c55-4fd1-8088-183570da9111",
        "cursor": {
          "ref": "4d9edcb9-bb33-4bd9-8ebe-1438ac70a001",
          "length": 155,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e8a2b97f-8ef2-4411-b72d-d5c0b111ae92"
        },
        "item": {
          "id": "3946cb6c-2c55-4fd1-8088-183570da9111",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "17784ae9-bc05-4774-bf5b-06c93f927995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3946cb6c-2c55-4fd1-8088-183570da9111",
        "cursor": {
          "ref": "4d9edcb9-bb33-4bd9-8ebe-1438ac70a001",
          "length": 155,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e8a2b97f-8ef2-4411-b72d-d5c0b111ae92"
        },
        "item": {
          "id": "3946cb6c-2c55-4fd1-8088-183570da9111",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "17784ae9-bc05-4774-bf5b-06c93f927995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b496cae-a648-4fe2-a2ae-1970c4bf7071",
        "cursor": {
          "ref": "1807a712-97b1-4087-b065-f552acd8a45b",
          "length": 155,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "54ea3d86-ad85-46e2-8368-ec6e09f8210a"
        },
        "item": {
          "id": "0b496cae-a648-4fe2-a2ae-1970c4bf7071",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "39247458-4395-4ef3-b6e7-b548cf779a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b496cae-a648-4fe2-a2ae-1970c4bf7071",
        "cursor": {
          "ref": "1807a712-97b1-4087-b065-f552acd8a45b",
          "length": 155,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "54ea3d86-ad85-46e2-8368-ec6e09f8210a"
        },
        "item": {
          "id": "0b496cae-a648-4fe2-a2ae-1970c4bf7071",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "39247458-4395-4ef3-b6e7-b548cf779a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c303df4-5981-40e9-84ac-8245998ad85d",
        "cursor": {
          "ref": "0bfd5a37-213a-4bee-aa76-da9719409e3d",
          "length": 155,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8cedb31c-6fb9-40a3-b592-ca3adda310fb"
        },
        "item": {
          "id": "1c303df4-5981-40e9-84ac-8245998ad85d",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "4600700a-6621-4e37-a61c-41df514d5c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c303df4-5981-40e9-84ac-8245998ad85d",
        "cursor": {
          "ref": "0bfd5a37-213a-4bee-aa76-da9719409e3d",
          "length": 155,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8cedb31c-6fb9-40a3-b592-ca3adda310fb"
        },
        "item": {
          "id": "1c303df4-5981-40e9-84ac-8245998ad85d",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "4600700a-6621-4e37-a61c-41df514d5c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f05428-c844-414e-81e6-a00faa096ff4",
        "cursor": {
          "ref": "8312253b-1077-4359-a371-b487025888bd",
          "length": 155,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fd8b8bfb-534a-4059-9e4e-fc736032c2a5"
        },
        "item": {
          "id": "b6f05428-c844-414e-81e6-a00faa096ff4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c502ae1f-e0bf-4376-8d84-0ca70b9c17ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f05428-c844-414e-81e6-a00faa096ff4",
        "cursor": {
          "ref": "8312253b-1077-4359-a371-b487025888bd",
          "length": 155,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fd8b8bfb-534a-4059-9e4e-fc736032c2a5"
        },
        "item": {
          "id": "b6f05428-c844-414e-81e6-a00faa096ff4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c502ae1f-e0bf-4376-8d84-0ca70b9c17ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03eecdff-dbb6-4bc7-9184-155add5387fe",
        "cursor": {
          "ref": "78a75597-f30f-4d2a-a321-86e101d0f6d3",
          "length": 155,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b4d32b0c-38df-45f2-b088-9d9336f14968"
        },
        "item": {
          "id": "03eecdff-dbb6-4bc7-9184-155add5387fe",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "359ee00e-d459-45d4-9343-05753cb43a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03eecdff-dbb6-4bc7-9184-155add5387fe",
        "cursor": {
          "ref": "78a75597-f30f-4d2a-a321-86e101d0f6d3",
          "length": 155,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b4d32b0c-38df-45f2-b088-9d9336f14968"
        },
        "item": {
          "id": "03eecdff-dbb6-4bc7-9184-155add5387fe",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "359ee00e-d459-45d4-9343-05753cb43a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07eb58e4-7007-4e01-8e45-615ae2e9f97a",
        "cursor": {
          "ref": "9383d8d8-4a56-4c81-a5b3-df3fcb9f5a8f",
          "length": 155,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ccac80f4-4a9f-4a59-b17b-2380b4a37fe3"
        },
        "item": {
          "id": "07eb58e4-7007-4e01-8e45-615ae2e9f97a",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "4b1d1aaf-e4ba-4d1d-8a3a-6bb28172a3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07eb58e4-7007-4e01-8e45-615ae2e9f97a",
        "cursor": {
          "ref": "9383d8d8-4a56-4c81-a5b3-df3fcb9f5a8f",
          "length": 155,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ccac80f4-4a9f-4a59-b17b-2380b4a37fe3"
        },
        "item": {
          "id": "07eb58e4-7007-4e01-8e45-615ae2e9f97a",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "4b1d1aaf-e4ba-4d1d-8a3a-6bb28172a3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42e621c-b879-4138-b415-6acc469a0f11",
        "cursor": {
          "ref": "cf52bfbc-3b8c-4926-851b-a8c7c6542066",
          "length": 155,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cf5df4fc-6331-4eac-a32b-617b314904b1"
        },
        "item": {
          "id": "a42e621c-b879-4138-b415-6acc469a0f11",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "58eb2e7c-c24c-4d28-ab0a-4701e21fa46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42e621c-b879-4138-b415-6acc469a0f11",
        "cursor": {
          "ref": "cf52bfbc-3b8c-4926-851b-a8c7c6542066",
          "length": 155,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cf5df4fc-6331-4eac-a32b-617b314904b1"
        },
        "item": {
          "id": "a42e621c-b879-4138-b415-6acc469a0f11",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "58eb2e7c-c24c-4d28-ab0a-4701e21fa46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4c6f05-a9d6-4d39-84ad-2783b265e466",
        "cursor": {
          "ref": "c0b131a5-2de4-4e6b-95ad-4c914bef71bb",
          "length": 155,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4f41dc6e-e31c-4cc4-b73c-c627c9b60119"
        },
        "item": {
          "id": "ff4c6f05-a9d6-4d39-84ad-2783b265e466",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "59d60098-9d9e-4031-b8bd-96cc463caff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4c6f05-a9d6-4d39-84ad-2783b265e466",
        "cursor": {
          "ref": "c0b131a5-2de4-4e6b-95ad-4c914bef71bb",
          "length": 155,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4f41dc6e-e31c-4cc4-b73c-c627c9b60119"
        },
        "item": {
          "id": "ff4c6f05-a9d6-4d39-84ad-2783b265e466",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "59d60098-9d9e-4031-b8bd-96cc463caff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95528591-9af0-4adf-83b0-73c33db567ac",
        "cursor": {
          "ref": "648b02b5-8e15-4579-8ccb-57d31b1e23ab",
          "length": 155,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b0080a0c-c773-454b-be8c-ec6877f85a4f"
        },
        "item": {
          "id": "95528591-9af0-4adf-83b0-73c33db567ac",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "1d2f93ff-52f2-465e-a497-82f18218a4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95528591-9af0-4adf-83b0-73c33db567ac",
        "cursor": {
          "ref": "648b02b5-8e15-4579-8ccb-57d31b1e23ab",
          "length": 155,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b0080a0c-c773-454b-be8c-ec6877f85a4f"
        },
        "item": {
          "id": "95528591-9af0-4adf-83b0-73c33db567ac",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "1d2f93ff-52f2-465e-a497-82f18218a4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0162da-44f8-4db0-91ac-737357673b25",
        "cursor": {
          "ref": "70b97317-644e-4a31-8005-53d1888eca72",
          "length": 155,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c886c170-d5c4-493a-9569-1f5a240db018"
        },
        "item": {
          "id": "0d0162da-44f8-4db0-91ac-737357673b25",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "715e2f90-a505-492d-bf13-a76d28753eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0162da-44f8-4db0-91ac-737357673b25",
        "cursor": {
          "ref": "70b97317-644e-4a31-8005-53d1888eca72",
          "length": 155,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c886c170-d5c4-493a-9569-1f5a240db018"
        },
        "item": {
          "id": "0d0162da-44f8-4db0-91ac-737357673b25",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "715e2f90-a505-492d-bf13-a76d28753eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296b3898-67a9-4f89-89cd-621f362df225",
        "cursor": {
          "ref": "ed57d8bf-8497-45d5-babc-64b7f1472c0f",
          "length": 155,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5845d9b5-bc5e-4811-b08a-228e61f8ef0f"
        },
        "item": {
          "id": "296b3898-67a9-4f89-89cd-621f362df225",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7828b8e3-304a-4282-ab8b-6e12e30ecb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296b3898-67a9-4f89-89cd-621f362df225",
        "cursor": {
          "ref": "ed57d8bf-8497-45d5-babc-64b7f1472c0f",
          "length": 155,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5845d9b5-bc5e-4811-b08a-228e61f8ef0f"
        },
        "item": {
          "id": "296b3898-67a9-4f89-89cd-621f362df225",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7828b8e3-304a-4282-ab8b-6e12e30ecb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7496f28a-5127-422f-bb0a-b0233364d086",
        "cursor": {
          "ref": "96c456d3-e3d9-4137-a8de-068a4db129b4",
          "length": 155,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e159f609-971b-4d66-90ca-d2e1febea57c"
        },
        "item": {
          "id": "7496f28a-5127-422f-bb0a-b0233364d086",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "cf54a5a9-d0de-406c-88cf-a76cd163df6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7496f28a-5127-422f-bb0a-b0233364d086",
        "cursor": {
          "ref": "96c456d3-e3d9-4137-a8de-068a4db129b4",
          "length": 155,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e159f609-971b-4d66-90ca-d2e1febea57c"
        },
        "item": {
          "id": "7496f28a-5127-422f-bb0a-b0233364d086",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "cf54a5a9-d0de-406c-88cf-a76cd163df6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea62adc6-1399-4182-83f4-180065ce8508",
        "cursor": {
          "ref": "d3b3a7cb-ab68-45e5-be40-9c7cdb9be1f3",
          "length": 155,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8bdfa698-b980-44d6-8886-804ee12495dc"
        },
        "item": {
          "id": "ea62adc6-1399-4182-83f4-180065ce8508",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9526a8e6-b208-4c7f-b963-ef0ffd9ea2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea62adc6-1399-4182-83f4-180065ce8508",
        "cursor": {
          "ref": "d3b3a7cb-ab68-45e5-be40-9c7cdb9be1f3",
          "length": 155,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8bdfa698-b980-44d6-8886-804ee12495dc"
        },
        "item": {
          "id": "ea62adc6-1399-4182-83f4-180065ce8508",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9526a8e6-b208-4c7f-b963-ef0ffd9ea2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1cb8f0-5944-4053-aadb-8b973e8cdf0f",
        "cursor": {
          "ref": "2469bb63-bcbd-4932-afcb-8d14489a410a",
          "length": 155,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "fa102dc2-64f7-4d82-8eca-1340571406e2"
        },
        "item": {
          "id": "1e1cb8f0-5944-4053-aadb-8b973e8cdf0f",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "7fefdcb0-7697-41cb-92ff-5b1bf34a02ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1cb8f0-5944-4053-aadb-8b973e8cdf0f",
        "cursor": {
          "ref": "2469bb63-bcbd-4932-afcb-8d14489a410a",
          "length": 155,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "fa102dc2-64f7-4d82-8eca-1340571406e2"
        },
        "item": {
          "id": "1e1cb8f0-5944-4053-aadb-8b973e8cdf0f",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "7fefdcb0-7697-41cb-92ff-5b1bf34a02ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35853c02-6d3e-4ff0-86f3-3e76ecb57bb4",
        "cursor": {
          "ref": "f10f9966-3392-4a86-a0ac-7c0a99a0ccf8",
          "length": 155,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d75bd997-9476-4b0e-9d43-c8c67f9d3c6e"
        },
        "item": {
          "id": "35853c02-6d3e-4ff0-86f3-3e76ecb57bb4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6e6c7611-1522-4270-acbd-41035bf44a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35853c02-6d3e-4ff0-86f3-3e76ecb57bb4",
        "cursor": {
          "ref": "f10f9966-3392-4a86-a0ac-7c0a99a0ccf8",
          "length": 155,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d75bd997-9476-4b0e-9d43-c8c67f9d3c6e"
        },
        "item": {
          "id": "35853c02-6d3e-4ff0-86f3-3e76ecb57bb4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6e6c7611-1522-4270-acbd-41035bf44a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7551f9c2-28c7-4003-bf33-2cdcf125871d",
        "cursor": {
          "ref": "7354f2b2-76cc-4816-be66-dff1e26503a8",
          "length": 155,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "43a17048-6702-4e8c-a37c-b96e16415049"
        },
        "item": {
          "id": "7551f9c2-28c7-4003-bf33-2cdcf125871d",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "d890f2dd-ebee-4ed3-8964-a7a35a75d24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7551f9c2-28c7-4003-bf33-2cdcf125871d",
        "cursor": {
          "ref": "7354f2b2-76cc-4816-be66-dff1e26503a8",
          "length": 155,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "43a17048-6702-4e8c-a37c-b96e16415049"
        },
        "item": {
          "id": "7551f9c2-28c7-4003-bf33-2cdcf125871d",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "d890f2dd-ebee-4ed3-8964-a7a35a75d24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec138a7a-bad9-41ed-a67a-468cbbc6a0df",
        "cursor": {
          "ref": "82b6fc0a-4802-491e-a2ea-b0731f266dcb",
          "length": 155,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7454e4c6-62bd-4e04-9614-56aef4f4c27f"
        },
        "item": {
          "id": "ec138a7a-bad9-41ed-a67a-468cbbc6a0df",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "ed534476-e031-4da5-8344-8c0e204aaba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec138a7a-bad9-41ed-a67a-468cbbc6a0df",
        "cursor": {
          "ref": "82b6fc0a-4802-491e-a2ea-b0731f266dcb",
          "length": 155,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7454e4c6-62bd-4e04-9614-56aef4f4c27f"
        },
        "item": {
          "id": "ec138a7a-bad9-41ed-a67a-468cbbc6a0df",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "ed534476-e031-4da5-8344-8c0e204aaba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16e60c7-5da9-4508-b2f4-8688d1bf869f",
        "cursor": {
          "ref": "d01e9e1c-1db0-4847-b3ed-66bf62cbc8b3",
          "length": 155,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d232735c-0181-40a8-94e5-c4d7d12c63b9"
        },
        "item": {
          "id": "d16e60c7-5da9-4508-b2f4-8688d1bf869f",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "0d8bbeb5-fe84-418e-9fcd-f418da758ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16e60c7-5da9-4508-b2f4-8688d1bf869f",
        "cursor": {
          "ref": "d01e9e1c-1db0-4847-b3ed-66bf62cbc8b3",
          "length": 155,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d232735c-0181-40a8-94e5-c4d7d12c63b9"
        },
        "item": {
          "id": "d16e60c7-5da9-4508-b2f4-8688d1bf869f",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "0d8bbeb5-fe84-418e-9fcd-f418da758ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5cc25ee-f6cf-45b9-9a09-802bce68f222",
        "cursor": {
          "ref": "053be979-4539-472c-86c4-ae1528d66e33",
          "length": 155,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f432a755-9ef8-4f12-8010-59bbcd82c4e4"
        },
        "item": {
          "id": "a5cc25ee-f6cf-45b9-9a09-802bce68f222",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "ab5aee29-d2a9-4bfd-a082-c4704dc653aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5cc25ee-f6cf-45b9-9a09-802bce68f222",
        "cursor": {
          "ref": "053be979-4539-472c-86c4-ae1528d66e33",
          "length": 155,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f432a755-9ef8-4f12-8010-59bbcd82c4e4"
        },
        "item": {
          "id": "a5cc25ee-f6cf-45b9-9a09-802bce68f222",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "ab5aee29-d2a9-4bfd-a082-c4704dc653aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa81ec24-7274-4a86-a2f4-b4661ee9833e",
        "cursor": {
          "ref": "e5efa9d8-ddce-4e53-b9a2-cdbfab162609",
          "length": 155,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "be61a4f7-67a1-4856-aca2-f5ce783372e8"
        },
        "item": {
          "id": "fa81ec24-7274-4a86-a2f4-b4661ee9833e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1ce66605-3966-4a7b-8b1c-83f0a8cc56fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 14,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa81ec24-7274-4a86-a2f4-b4661ee9833e",
        "cursor": {
          "ref": "e5efa9d8-ddce-4e53-b9a2-cdbfab162609",
          "length": 155,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "be61a4f7-67a1-4856-aca2-f5ce783372e8"
        },
        "item": {
          "id": "fa81ec24-7274-4a86-a2f4-b4661ee9833e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1ce66605-3966-4a7b-8b1c-83f0a8cc56fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 14,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648edd88-b3ba-4dad-982b-699e04811842",
        "cursor": {
          "ref": "d759ae08-ecd2-49b4-b3e4-64d37e8af63f",
          "length": 155,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "931825bc-c9d6-4ec0-91fa-a83217db65e6"
        },
        "item": {
          "id": "648edd88-b3ba-4dad-982b-699e04811842",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "782b51bd-243a-4bf8-b843-0d295d8a6aab",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 14,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648edd88-b3ba-4dad-982b-699e04811842",
        "cursor": {
          "ref": "d759ae08-ecd2-49b4-b3e4-64d37e8af63f",
          "length": 155,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "931825bc-c9d6-4ec0-91fa-a83217db65e6"
        },
        "item": {
          "id": "648edd88-b3ba-4dad-982b-699e04811842",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "782b51bd-243a-4bf8-b843-0d295d8a6aab",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 14,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1df952-0b6b-44d8-b655-f7e8902c5abc",
        "cursor": {
          "ref": "f09e1ce0-19c9-4e5c-88bf-4e6e86f48990",
          "length": 155,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fdf1e2ed-4582-4869-a503-8acd13744c02"
        },
        "item": {
          "id": "2e1df952-0b6b-44d8-b655-f7e8902c5abc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c894da3b-03dd-49a4-8ee5-7572db78d0a9",
          "status": "Created",
          "code": 201,
          "responseTime": 414,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1df952-0b6b-44d8-b655-f7e8902c5abc",
        "cursor": {
          "ref": "f09e1ce0-19c9-4e5c-88bf-4e6e86f48990",
          "length": 155,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fdf1e2ed-4582-4869-a503-8acd13744c02"
        },
        "item": {
          "id": "2e1df952-0b6b-44d8-b655-f7e8902c5abc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c894da3b-03dd-49a4-8ee5-7572db78d0a9",
          "status": "Created",
          "code": 201,
          "responseTime": 414,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d1e01e-4e1b-4dbf-9348-e101b7b5a339",
        "cursor": {
          "ref": "5fa8ae54-b708-4fbd-9eb6-166fba792a9d",
          "length": 155,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "dafbed69-9651-4892-9b8e-628bf98f51d8"
        },
        "item": {
          "id": "01d1e01e-4e1b-4dbf-9348-e101b7b5a339",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "6eac214d-0aad-4acf-9b2f-d04ead47970f",
          "status": "Created",
          "code": 201,
          "responseTime": 371,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d1e01e-4e1b-4dbf-9348-e101b7b5a339",
        "cursor": {
          "ref": "5fa8ae54-b708-4fbd-9eb6-166fba792a9d",
          "length": 155,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "dafbed69-9651-4892-9b8e-628bf98f51d8"
        },
        "item": {
          "id": "01d1e01e-4e1b-4dbf-9348-e101b7b5a339",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "6eac214d-0aad-4acf-9b2f-d04ead47970f",
          "status": "Created",
          "code": 201,
          "responseTime": 371,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce66c46a-39c5-4ac7-9979-a68a3dd4c92a",
        "cursor": {
          "ref": "dafb674f-16b4-4aaa-9548-c7f6d63b5748",
          "length": 155,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9c2afd06-5941-4e07-930f-4255c8862b2f"
        },
        "item": {
          "id": "ce66c46a-39c5-4ac7-9979-a68a3dd4c92a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fc06d2de-a544-4278-927d-0f52e23ce7f5",
          "status": "Created",
          "code": 201,
          "responseTime": 386,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce66c46a-39c5-4ac7-9979-a68a3dd4c92a",
        "cursor": {
          "ref": "dafb674f-16b4-4aaa-9548-c7f6d63b5748",
          "length": 155,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9c2afd06-5941-4e07-930f-4255c8862b2f"
        },
        "item": {
          "id": "ce66c46a-39c5-4ac7-9979-a68a3dd4c92a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fc06d2de-a544-4278-927d-0f52e23ce7f5",
          "status": "Created",
          "code": 201,
          "responseTime": 386,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b3f8f3-4485-4818-ab14-56a7f2e6fce2",
        "cursor": {
          "ref": "7362cfca-6cc8-48dc-9812-546243728691",
          "length": 155,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5428eb66-2d01-474f-b3eb-c7b593406b41"
        },
        "item": {
          "id": "97b3f8f3-4485-4818-ab14-56a7f2e6fce2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "07664d3c-5015-4df2-9ac5-3a838a462d9b",
          "status": "Created",
          "code": 201,
          "responseTime": 491,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b3f8f3-4485-4818-ab14-56a7f2e6fce2",
        "cursor": {
          "ref": "7362cfca-6cc8-48dc-9812-546243728691",
          "length": 155,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5428eb66-2d01-474f-b3eb-c7b593406b41"
        },
        "item": {
          "id": "97b3f8f3-4485-4818-ab14-56a7f2e6fce2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "07664d3c-5015-4df2-9ac5-3a838a462d9b",
          "status": "Created",
          "code": 201,
          "responseTime": 491,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5bab28-5f8e-40c0-8eac-0b3c76091a66",
        "cursor": {
          "ref": "2f56be25-3a64-4cb3-b9f9-e24bc10a7f59",
          "length": 155,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e04d2ada-7d64-4b3a-9f01-dcc0e5b15838"
        },
        "item": {
          "id": "3e5bab28-5f8e-40c0-8eac-0b3c76091a66",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d1fe6a5a-2124-40b1-9cd0-6b6dd57f668b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "3e5bab28-5f8e-40c0-8eac-0b3c76091a66",
        "cursor": {
          "ref": "2f56be25-3a64-4cb3-b9f9-e24bc10a7f59",
          "length": 155,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e04d2ada-7d64-4b3a-9f01-dcc0e5b15838"
        },
        "item": {
          "id": "3e5bab28-5f8e-40c0-8eac-0b3c76091a66",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d1fe6a5a-2124-40b1-9cd0-6b6dd57f668b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "393cee38-eca6-4812-a16a-b28f235919c0",
        "cursor": {
          "ref": "a0fed068-1dda-4369-8777-5ace1a5a3835",
          "length": 155,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5a39f380-6c8d-42b2-b2d0-562dfa371dcd"
        },
        "item": {
          "id": "393cee38-eca6-4812-a16a-b28f235919c0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ac71f4b4-f885-4e08-8d61-3597ce78ff32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "393cee38-eca6-4812-a16a-b28f235919c0",
        "cursor": {
          "ref": "a0fed068-1dda-4369-8777-5ace1a5a3835",
          "length": 155,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5a39f380-6c8d-42b2-b2d0-562dfa371dcd"
        },
        "item": {
          "id": "393cee38-eca6-4812-a16a-b28f235919c0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ac71f4b4-f885-4e08-8d61-3597ce78ff32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "c0d865a3-b6ca-4d02-8fec-42cc1e82c505",
        "cursor": {
          "ref": "30138c0f-79e5-4c69-9f2c-1ffb54df00d0",
          "length": 155,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9778ff20-024c-47d3-8dcf-fe7fca2cf8fb"
        },
        "item": {
          "id": "c0d865a3-b6ca-4d02-8fec-42cc1e82c505",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "3d167da4-2dc9-4ad9-9651-17f9bd1d975b",
          "status": "Created",
          "code": 201,
          "responseTime": 675,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d865a3-b6ca-4d02-8fec-42cc1e82c505",
        "cursor": {
          "ref": "30138c0f-79e5-4c69-9f2c-1ffb54df00d0",
          "length": 155,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9778ff20-024c-47d3-8dcf-fe7fca2cf8fb"
        },
        "item": {
          "id": "c0d865a3-b6ca-4d02-8fec-42cc1e82c505",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "3d167da4-2dc9-4ad9-9651-17f9bd1d975b",
          "status": "Created",
          "code": 201,
          "responseTime": 675,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed515bc1-e05a-4225-8366-b026cca600f2",
        "cursor": {
          "ref": "71edf9db-e8c9-43ec-803a-523a9fe6726b",
          "length": 155,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0775c5ea-da6c-43ca-96d8-97430f2e09b9"
        },
        "item": {
          "id": "ed515bc1-e05a-4225-8366-b026cca600f2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5cbdb269-2efe-4cff-aa54-f351a0dd05a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed515bc1-e05a-4225-8366-b026cca600f2",
        "cursor": {
          "ref": "71edf9db-e8c9-43ec-803a-523a9fe6726b",
          "length": 155,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0775c5ea-da6c-43ca-96d8-97430f2e09b9"
        },
        "item": {
          "id": "ed515bc1-e05a-4225-8366-b026cca600f2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5cbdb269-2efe-4cff-aa54-f351a0dd05a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92a0005-732b-43f0-bf18-5eecf8edd3a5",
        "cursor": {
          "ref": "d02679b1-509a-43ad-9ed9-e1774f27e7a0",
          "length": 155,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3e07d845-1317-4ee4-a443-2fb626436780"
        },
        "item": {
          "id": "c92a0005-732b-43f0-bf18-5eecf8edd3a5",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "3795ca1d-93f3-40f3-9e78-a37faa266869",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 90,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e15205-b7dd-403c-915d-b1bc1ff83e33",
        "cursor": {
          "ref": "af1bb66b-d781-497c-b285-82f8f61701cd",
          "length": 155,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3d31abf1-8057-4538-9c0e-9ef1af13c121"
        },
        "item": {
          "id": "32e15205-b7dd-403c-915d-b1bc1ff83e33",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "681883dc-7db0-4c71-b57a-6edca8363f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e15205-b7dd-403c-915d-b1bc1ff83e33",
        "cursor": {
          "ref": "af1bb66b-d781-497c-b285-82f8f61701cd",
          "length": 155,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3d31abf1-8057-4538-9c0e-9ef1af13c121"
        },
        "item": {
          "id": "32e15205-b7dd-403c-915d-b1bc1ff83e33",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "681883dc-7db0-4c71-b57a-6edca8363f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f22249-aebf-4399-8bd6-2d043e68c21c",
        "cursor": {
          "ref": "cc98b0e9-eff9-4a5b-a2c9-49ca135fba65",
          "length": 155,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "50a7e9e9-233d-4dd6-91b9-90d7d683523c"
        },
        "item": {
          "id": "54f22249-aebf-4399-8bd6-2d043e68c21c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "43fec218-739c-4f66-b81c-552e8e4bf32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec25080f-bd09-4334-80ab-9a388f1f4a37",
        "cursor": {
          "ref": "958a1e8b-433d-4277-969c-f9e62fc4de16",
          "length": 155,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a7c2840a-315f-4781-8621-a223d98623f5"
        },
        "item": {
          "id": "ec25080f-bd09-4334-80ab-9a388f1f4a37",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9c79b81a-51cf-43f6-b20b-00a173a91ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b5eac7-a1e6-4ee8-9f6b-39fa14c7a9e8",
        "cursor": {
          "ref": "1a0fa33c-4385-48f3-94be-f7158877d91b",
          "length": 155,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e9cbf973-d5b2-4791-a89c-6e76fbe6c105"
        },
        "item": {
          "id": "29b5eac7-a1e6-4ee8-9f6b-39fa14c7a9e8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b9d3331f-082c-4947-b30e-c5c2391ae390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3b62fc-e0eb-4e9f-8f06-e1a300ab776f",
        "cursor": {
          "ref": "d57ef63d-e2a2-46c8-bada-7ced6f87413d",
          "length": 155,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ab62b631-a0c0-4770-8135-37f0d8fb3aa7"
        },
        "item": {
          "id": "6b3b62fc-e0eb-4e9f-8f06-e1a300ab776f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a9d881b2-6b6d-4d7b-8ceb-5a3916c133d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16c507d-3327-4eeb-a5e2-b72588c7cf7c",
        "cursor": {
          "ref": "a1251446-7e2c-4722-91cd-aee1aad3594e",
          "length": 155,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "893c1296-eef6-4848-a32a-16e4e87bc0e6"
        },
        "item": {
          "id": "c16c507d-3327-4eeb-a5e2-b72588c7cf7c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f7219d6d-5677-4811-bc3d-59c9b59a3d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0805d1-9159-44d7-b803-52c686c0a8d9",
        "cursor": {
          "ref": "76f2c634-dbf1-47c4-8bb8-9d3a8bf8d839",
          "length": 155,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6c9761e0-89bb-454d-9d94-d08fb1e1c536"
        },
        "item": {
          "id": "7f0805d1-9159-44d7-b803-52c686c0a8d9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "cfe479d5-a860-4a8f-a908-775f30f5f270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1622,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bda6109-a701-4ce1-927c-1b75c4993d53",
        "cursor": {
          "ref": "26563231-3d8e-4646-85fd-4beddb6e566d",
          "length": 155,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "dd9d4be6-d656-45ba-82f3-7e0fa570f2bf"
        },
        "item": {
          "id": "1bda6109-a701-4ce1-927c-1b75c4993d53",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ad5774e3-05c7-4366-9bb1-6cb9e7acf4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2814a40f-35d2-48ae-a10f-23fa956afee9",
        "cursor": {
          "ref": "e3a9abba-24f6-4964-9579-dfbd5654bc5c",
          "length": 155,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "50b8d62c-8dd9-4390-88bb-477fd67db304"
        },
        "item": {
          "id": "2814a40f-35d2-48ae-a10f-23fa956afee9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8aef029b-197a-4a35-af64-fe5fd46b3f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c749dc95-49ca-4017-ab77-69347418f35a",
        "cursor": {
          "ref": "16d473c7-90c8-4a34-9ee1-7f53ac345a1a",
          "length": 155,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d801399c-444e-4665-b7e3-a2928836d055"
        },
        "item": {
          "id": "c749dc95-49ca-4017-ab77-69347418f35a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3a897f7b-f4d4-4a87-af6a-6463e7ecabf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e28e9b-2f6f-4325-b6ae-7b72d026524a",
        "cursor": {
          "ref": "c6cf6485-584a-4f5d-8a2e-b6075eeb3969",
          "length": 155,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "69b2d4a6-80b9-4163-b43e-13456c60f362"
        },
        "item": {
          "id": "d0e28e9b-2f6f-4325-b6ae-7b72d026524a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6286f030-09d9-4ef1-910d-6374927254d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a806726-56ad-474c-a55a-f636bc65360f",
        "cursor": {
          "ref": "67d55dcc-5027-45f5-a46f-75bd0310d88d",
          "length": 155,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4a9b52b4-01e5-4f8c-9134-4c4727c2403b"
        },
        "item": {
          "id": "3a806726-56ad-474c-a55a-f636bc65360f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b622e9a2-1fd2-4262-a3c2-0d47c0c98ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abca23bd-3c20-4a48-a109-32360704461f",
        "cursor": {
          "ref": "746e82e2-d2a7-4e04-b73d-e68cf37f578d",
          "length": 155,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f97be3d4-9660-47f0-af87-2e7ffe2599e9"
        },
        "item": {
          "id": "abca23bd-3c20-4a48-a109-32360704461f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "52ef4556-c0e8-4e9c-af7d-a39597000954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e275ce6-c4f8-443b-87af-d217ed8b98d6",
        "cursor": {
          "ref": "a33f5b71-6018-45a0-a332-bef7a44e281d",
          "length": 155,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0fdd2341-a61d-48cd-a5f5-35719b39ac7a"
        },
        "item": {
          "id": "8e275ce6-c4f8-443b-87af-d217ed8b98d6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "95f0ec80-f9e0-4d90-aa32-6e13b1bd1f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398747f5-803c-47b1-a958-b24b9fd90ff1",
        "cursor": {
          "ref": "20386d05-8ccf-46e3-9990-f9de68d10b88",
          "length": 155,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b3c8f2d2-89b8-4339-b5b0-8a33ada58310"
        },
        "item": {
          "id": "398747f5-803c-47b1-a958-b24b9fd90ff1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "cb7ac81a-3567-4e9b-8194-ed1166885194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd0d380-1ca6-4bfa-9fb5-1469a5473b36",
        "cursor": {
          "ref": "d649fbca-8684-49ba-988c-2e9501faa0ed",
          "length": 155,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "45955bea-1ed5-465b-b7d2-e73bd33ca445"
        },
        "item": {
          "id": "cbd0d380-1ca6-4bfa-9fb5-1469a5473b36",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3c72d22d-aa47-4931-b26c-01d27ee7ec6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9167692c-5f35-486c-a4cd-904da24d4787",
        "cursor": {
          "ref": "dc2a15cb-ac13-449c-8b08-9d43e281020e",
          "length": 155,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "86321f5c-f1e9-4fb3-ac13-b160721c8c69"
        },
        "item": {
          "id": "9167692c-5f35-486c-a4cd-904da24d4787",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d01b32f3-26f7-4c23-9a51-430d6328dfc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001fadcd-8ad4-42cf-827a-b0d21ecd0813",
        "cursor": {
          "ref": "74758669-ffa0-46fa-a813-c153bd960b39",
          "length": 155,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6d49a2b5-99aa-4f8e-8561-5eeae7ecc62b"
        },
        "item": {
          "id": "001fadcd-8ad4-42cf-827a-b0d21ecd0813",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e1d46a1f-90c1-441f-89c5-bb0925711d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1062,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1d5c07-c5c4-41b7-a2bb-2072c742913d",
        "cursor": {
          "ref": "7bd80a3a-c42e-4508-a058-94ed06b5433b",
          "length": 155,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "54c2d57e-143c-49ab-8a5f-745b8b69a249"
        },
        "item": {
          "id": "0c1d5c07-c5c4-41b7-a2bb-2072c742913d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b5cd8aed-be94-42c9-ac17-7178a7024d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d3bc1e-285b-4ed2-96cc-abd0ee7da9f5",
        "cursor": {
          "ref": "ab3381c2-74cb-48c0-af1c-822d658f1b12",
          "length": 155,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5829ec98-130e-44c6-85fa-ae038fad8465"
        },
        "item": {
          "id": "e5d3bc1e-285b-4ed2-96cc-abd0ee7da9f5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1039db09-cd59-49b4-a790-b097def46b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a6a4de-051f-4b8b-bfe2-a1fdcd0cbf36",
        "cursor": {
          "ref": "11dbaffd-8b01-4bef-8787-fe5c7581fe1d",
          "length": 155,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "65b7905e-c4d8-4b62-b7a2-23901d805d3d"
        },
        "item": {
          "id": "45a6a4de-051f-4b8b-bfe2-a1fdcd0cbf36",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "73b2af9c-ce59-4868-8ecc-6fd463ba7149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e2ea42-0717-46de-b4e5-3ed8f3fb815a",
        "cursor": {
          "ref": "c1128068-dd9b-4572-b79f-0205bf958532",
          "length": 155,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "07d1b8df-e318-4703-a026-61007cc00797"
        },
        "item": {
          "id": "40e2ea42-0717-46de-b4e5-3ed8f3fb815a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e7b9c990-7e31-4830-b542-fe1fdd9b76d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d64f1d1-c5f9-44cc-8d10-0d435325574e",
        "cursor": {
          "ref": "2bbb021f-c7f2-4a52-9d2b-cd800d7a12b5",
          "length": 155,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4ff514fe-27cf-4642-b927-83e049b6ea0a"
        },
        "item": {
          "id": "4d64f1d1-c5f9-44cc-8d10-0d435325574e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1fb6498c-ec6b-4e6e-85bc-062b1afc3807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d211e54-f5da-4195-ac32-ed16aa1a00e4",
        "cursor": {
          "ref": "e38d3569-94b3-437c-9c09-75b3b35a754e",
          "length": 155,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a1d6d730-fccb-480e-a306-5a5156cd10d2"
        },
        "item": {
          "id": "7d211e54-f5da-4195-ac32-ed16aa1a00e4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "bdbcdb50-0f65-45fa-9fe4-25ee93d466c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2035ca6a-8210-4ac0-994b-601e9ec2e376",
        "cursor": {
          "ref": "f0aa4ce0-3224-48d1-9aa6-c8da0b398549",
          "length": 155,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bd6a7c41-a26a-4ba7-ae34-42e5e5c0fd18"
        },
        "item": {
          "id": "2035ca6a-8210-4ac0-994b-601e9ec2e376",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8587b701-7584-45e8-9c37-6e73b7b7b259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7fef7a-707b-4228-bc4b-ba028599c2f2",
        "cursor": {
          "ref": "7b1a57c4-2410-4268-b1a9-a7e2a430931c",
          "length": 155,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c66210cb-3ae2-456a-abed-a2dcd497ed7b"
        },
        "item": {
          "id": "9c7fef7a-707b-4228-bc4b-ba028599c2f2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "11a6a305-c41b-47d8-99a6-dd8f62941d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af089d6-312d-4a10-9c5c-a0aef1c7c090",
        "cursor": {
          "ref": "726c8002-88e7-46fe-8296-d8f57cdb99b8",
          "length": 155,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ae439f0c-c869-4a27-b486-c538bd7d8165"
        },
        "item": {
          "id": "4af089d6-312d-4a10-9c5c-a0aef1c7c090",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b9bd1d62-5b85-4f27-b940-888acf1653c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e223f95-793d-4ec8-8154-54aff9340032",
        "cursor": {
          "ref": "aecf627b-ce97-417c-9710-a4d3dd17be68",
          "length": 155,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "37a86555-a62c-43a3-8b52-510012a4579c"
        },
        "item": {
          "id": "8e223f95-793d-4ec8-8154-54aff9340032",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b39b0821-2667-404f-adb0-f5714f12eac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccab1cc9-c784-42c3-87c0-c543022b5483",
        "cursor": {
          "ref": "cfd2cb20-845e-4353-ae01-c26a07d1f6fc",
          "length": 155,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d2dc80e5-7ff1-4a13-b9c3-e35a5f1fc902"
        },
        "item": {
          "id": "ccab1cc9-c784-42c3-87c0-c543022b5483",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bc84d9bd-e1a5-4be2-b870-8fadb0e7038a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83818a0-531f-4926-9481-7a8133d4acdc",
        "cursor": {
          "ref": "cde01d6d-f4d8-45fa-b709-bffa07b8a26b",
          "length": 155,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "eb2340ed-f041-44be-9643-9b7ca7c86664"
        },
        "item": {
          "id": "d83818a0-531f-4926-9481-7a8133d4acdc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "bfc832df-8271-4a1f-982d-61a0e660dfcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b2a70a-4217-4c59-b881-af0c6fad8240",
        "cursor": {
          "ref": "b22106e4-053e-4b92-b63f-d5a0d97777f1",
          "length": 155,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0818534e-6b0e-477f-b460-812116ec58e2"
        },
        "item": {
          "id": "b8b2a70a-4217-4c59-b881-af0c6fad8240",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9c54c6fd-5f26-4fc8-bbde-c30e97d41436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ef09e0-d81b-46ef-8f8c-60c63b4e5caa",
        "cursor": {
          "ref": "32889431-46f5-4921-a749-e451dc476441",
          "length": 155,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b7382d00-861b-4590-a766-c7b9f29b6528"
        },
        "item": {
          "id": "f7ef09e0-d81b-46ef-8f8c-60c63b4e5caa",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6cc6f12a-9ab6-4bc0-a9d2-235236c31d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b9670e-94d2-4e28-9583-83fcc4f744ee",
        "cursor": {
          "ref": "4fdf55c6-0317-400e-b506-f75eb96f62b2",
          "length": 155,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "fd730cd9-36a0-46a2-8979-19b2fe17a873"
        },
        "item": {
          "id": "41b9670e-94d2-4e28-9583-83fcc4f744ee",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3e1d09be-ef51-4042-82bf-2e21445029f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8448f9-b6c8-4d78-9292-00df3a06f58f",
        "cursor": {
          "ref": "53e11afa-1271-4f4e-b6dc-1774e06f1f0c",
          "length": 155,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c67e0394-518b-420e-a4b6-a6808709abf7"
        },
        "item": {
          "id": "aa8448f9-b6c8-4d78-9292-00df3a06f58f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "642053cf-0513-4ca6-8133-4a3fde62cacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5620c758-6456-41eb-a8d9-087ba715d31d",
        "cursor": {
          "ref": "17e31fc2-543a-406f-a19b-b60c5d83e92a",
          "length": 155,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "896c4ac0-ae9c-469d-9253-9aa107b27080"
        },
        "item": {
          "id": "5620c758-6456-41eb-a8d9-087ba715d31d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1e50794c-4a12-4617-990a-5f3270a362bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d36f83d-929d-451e-b394-2bf1d16a92f3",
        "cursor": {
          "ref": "5cac555d-484f-41da-8f37-17a0016b39e9",
          "length": 155,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "67521bfb-e886-48ca-a0be-99aa4c2af67b"
        },
        "item": {
          "id": "7d36f83d-929d-451e-b394-2bf1d16a92f3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f5a517a2-1d41-4c6d-9bbe-b846cfc3f314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a159878-4517-4a2e-9b3d-1c44332ebe9c",
        "cursor": {
          "ref": "245e819a-8ab4-4cd0-9de1-caa68d367897",
          "length": 155,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6d132e72-b305-4536-a19d-3e6068ad1506"
        },
        "item": {
          "id": "4a159878-4517-4a2e-9b3d-1c44332ebe9c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "65efe760-d1ff-441c-9e76-0c34665d140c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c26edf5-8c2c-4c2f-a57f-ea97a55b4028",
        "cursor": {
          "ref": "eeecadca-8eb1-4f15-9ccf-23f92749419e",
          "length": 155,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f7c15798-6237-439e-848c-f3ded93d160c"
        },
        "item": {
          "id": "5c26edf5-8c2c-4c2f-a57f-ea97a55b4028",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "641cc63e-98c0-4c64-8a1d-8c96176aeeb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433b000d-d6da-4399-b2a8-682dba56d87e",
        "cursor": {
          "ref": "c946e5f7-8e2a-4461-a7d5-910024bb7847",
          "length": 155,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "26a1270e-a666-4d87-863c-5084fc870485"
        },
        "item": {
          "id": "433b000d-d6da-4399-b2a8-682dba56d87e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a34de6c9-adce-4ddf-a959-220e5e102c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba16ea15-acff-41b2-930c-7ba11e6d5617",
        "cursor": {
          "ref": "88ca6804-4df5-4f8d-b597-c61971c9140e",
          "length": 155,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e0670d68-89a8-43c9-b389-4f511fa38a45"
        },
        "item": {
          "id": "ba16ea15-acff-41b2-930c-7ba11e6d5617",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e131b7f8-602b-4aaf-9518-33a3ec605b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d54743-8d9b-45df-b889-20ce32d71494",
        "cursor": {
          "ref": "9155d427-8637-44d0-ab17-00079ac7ea02",
          "length": 155,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cc105cbf-e5fe-4df7-88d8-4f435f192b48"
        },
        "item": {
          "id": "52d54743-8d9b-45df-b889-20ce32d71494",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fdc3283f-726b-47e6-b77c-e9e304c6ebd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792781c6-17a0-4dbb-9c13-40b98ede3954",
        "cursor": {
          "ref": "7b142788-bb99-4bfa-b4ce-e928c7b171cb",
          "length": 155,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "485c29c0-e0cd-44c8-bd72-a8dfd8449a29"
        },
        "item": {
          "id": "792781c6-17a0-4dbb-9c13-40b98ede3954",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d0db1dac-c7fe-47f8-bf2d-003c0c787aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dad67e5-8b09-4990-9d4b-4969eb4c6199",
        "cursor": {
          "ref": "4bb06ae9-9bf9-4881-b4b4-08e1b5dcf6d1",
          "length": 155,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e371c750-4df2-4777-b5b7-e7129cbe32e6"
        },
        "item": {
          "id": "8dad67e5-8b09-4990-9d4b-4969eb4c6199",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "07578d63-18dc-44bb-bd9e-263dabe57d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4c75d2-381f-46a8-a193-eeac8f229f0c",
        "cursor": {
          "ref": "a7a6e317-bd1c-4e73-a2ab-7df1a00cc4a3",
          "length": 155,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "82a322fa-d129-4d0f-89ba-ae48b35b79d3"
        },
        "item": {
          "id": "8f4c75d2-381f-46a8-a193-eeac8f229f0c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7d94b878-1c68-4604-a33b-666e8526fe7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88651bf-2381-4bf0-925b-e960f3e245e4",
        "cursor": {
          "ref": "5c2a8c87-dae7-4535-99be-e365f2015b3d",
          "length": 155,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7d0ef247-1595-42c7-93bc-ea0e7146e9cb"
        },
        "item": {
          "id": "c88651bf-2381-4bf0-925b-e960f3e245e4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b265c502-a80b-46be-a1a7-cdaf273b2bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848a5402-e3ef-4e38-8f3f-72d23e1b1fa0",
        "cursor": {
          "ref": "edfec617-31bb-4a29-8a21-d03d4f0f60e2",
          "length": 155,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5ca2280b-4ded-4129-922e-62e0ccd7af62"
        },
        "item": {
          "id": "848a5402-e3ef-4e38-8f3f-72d23e1b1fa0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7c3ded1c-c5a1-4731-9c8d-398de80c6aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273b15be-9137-4a19-ae2e-5772774fd552",
        "cursor": {
          "ref": "b3523ae7-420c-4407-a87c-c8a45a0dbda6",
          "length": 155,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "74ba6ce7-3b61-4835-8015-bc183ade1520"
        },
        "item": {
          "id": "273b15be-9137-4a19-ae2e-5772774fd552",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "60c4856b-d58f-4ea2-872b-d2fc05d92927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f1c934-216a-41bb-8aa9-b2b8fea212c2",
        "cursor": {
          "ref": "4c9cfc1f-6092-413f-92d2-69c172ff392d",
          "length": 155,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "55d84ab5-ddab-4fab-8a89-774b8d818743"
        },
        "item": {
          "id": "f0f1c934-216a-41bb-8aa9-b2b8fea212c2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0096e879-d844-4943-b528-902f843fc80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1452,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6189df8d-df82-4f7d-9ea4-600bf21db2cf",
        "cursor": {
          "ref": "7b1b6bd5-63e4-480c-a0e1-5085eb066d03",
          "length": 155,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "df9f52b1-0624-4d2f-9e61-1aae31f1bfc0"
        },
        "item": {
          "id": "6189df8d-df82-4f7d-9ea4-600bf21db2cf",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b9e97b56-e689-4c73-9f26-565f18af4a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ef2d9a-dad8-4ff9-9a8c-4d35d076c665",
        "cursor": {
          "ref": "5357f7aa-be62-41b2-9ec8-fbe743d5e7ec",
          "length": 155,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1eb86440-084b-4731-9c2b-5bfd13eb8828"
        },
        "item": {
          "id": "94ef2d9a-dad8-4ff9-9a8c-4d35d076c665",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0cef6d9e-a215-4387-b21b-1b4a155edc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707e3293-3a4c-4bf0-bab9-d1717f26ebb9",
        "cursor": {
          "ref": "5c8fc9c8-95fb-4c4e-ba10-7384e17e4895",
          "length": 155,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "90886aec-0c8f-42d9-85ea-037b3e946be6"
        },
        "item": {
          "id": "707e3293-3a4c-4bf0-bab9-d1717f26ebb9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8a6a320b-5661-4995-a2ec-2fbc2e79b68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3103ba-cd34-45ae-9306-b3e9296a8e5e",
        "cursor": {
          "ref": "465c1839-711a-4ac2-8e9c-b6a7bdb09397",
          "length": 155,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f7cd23b8-ded6-4f5f-8205-957317ccc3fc"
        },
        "item": {
          "id": "3b3103ba-cd34-45ae-9306-b3e9296a8e5e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0ed2a8eb-b3c5-4efc-a6cc-e39ce6ebb06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4ee84e-7d79-4bc5-82c5-073a39dc6c8e",
        "cursor": {
          "ref": "7472099e-4128-493c-a75d-09f893e55a30",
          "length": 155,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d2be4571-8b49-449a-8472-a9e262ab8b1a"
        },
        "item": {
          "id": "7a4ee84e-7d79-4bc5-82c5-073a39dc6c8e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8e4df988-5916-4299-8982-7b58510f4d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cab811f-6c4a-42dc-ab99-a38944c27929",
        "cursor": {
          "ref": "d317f217-dad3-4863-85da-1fbc9755a59d",
          "length": 155,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7d2ab86b-7537-4e23-b8a0-1ada92320e92"
        },
        "item": {
          "id": "9cab811f-6c4a-42dc-ab99-a38944c27929",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "74d87c89-b232-48e2-b59a-0cf673c87f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5c6d17-8cd6-4cd9-9ae8-8334555507c0",
        "cursor": {
          "ref": "11ca19a6-d58e-4aec-893b-993dd65fcc3b",
          "length": 155,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ef2551f0-8d00-4d65-8b44-6ce7bc5c91f3"
        },
        "item": {
          "id": "fd5c6d17-8cd6-4cd9-9ae8-8334555507c0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "553e7a92-ac75-4b9b-bd6f-260b670ad7d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6bf9d1e-b3c8-4098-9866-0abf939e3857",
        "cursor": {
          "ref": "304d73d4-bfe9-473c-b74a-82a51bb86318",
          "length": 155,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "38473637-d2ee-4f34-8a1e-ce0e86c11197"
        },
        "item": {
          "id": "f6bf9d1e-b3c8-4098-9866-0abf939e3857",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "82350e05-53ff-47e4-ba26-74b24ce0f7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd945e6-5f99-4f0b-81c1-f0cd1d1d7f63",
        "cursor": {
          "ref": "3c496db9-6348-452d-9f4f-a3d9e6522224",
          "length": 155,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "65a1c4f0-e603-4230-a714-15dc769b04aa"
        },
        "item": {
          "id": "ecd945e6-5f99-4f0b-81c1-f0cd1d1d7f63",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e6eeb74a-fe32-467c-aec8-abe6e20d3402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3a52da-8f17-40f8-8d6f-0c4075aed5c4",
        "cursor": {
          "ref": "ea177a07-0a44-4684-8fb6-d560f721c2f6",
          "length": 155,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d7b44b05-ca53-4213-b1ad-f754a5d73fbb"
        },
        "item": {
          "id": "6f3a52da-8f17-40f8-8d6f-0c4075aed5c4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "23a0e76f-926d-4678-ad97-102e9541c56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc22609-95ea-430c-ab7a-b542f9b52e8c",
        "cursor": {
          "ref": "9c734e53-84a9-4f56-9844-658042f6a5da",
          "length": 155,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "806a3774-a652-4d2c-954b-d6d9c905a17c"
        },
        "item": {
          "id": "dcc22609-95ea-430c-ab7a-b542f9b52e8c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "19d1d30c-b1af-4ecf-9173-769a28bf2579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7b27fa-8592-4d7b-8094-053e49648775",
        "cursor": {
          "ref": "603d5fdb-c0fe-43ed-9567-344fa169c2a0",
          "length": 155,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d3d0fec5-68db-4351-8deb-8c72b21cf5f5"
        },
        "item": {
          "id": "eb7b27fa-8592-4d7b-8094-053e49648775",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3f131bf0-b522-4b0c-8292-47eaf133a87d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d2c240-3953-49c1-b299-86bf9c30cec1",
        "cursor": {
          "ref": "300b6038-e05b-4078-8aa8-5542e698fb25",
          "length": 155,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8ae473f8-acb3-4261-bc52-f967448688a2"
        },
        "item": {
          "id": "d3d2c240-3953-49c1-b299-86bf9c30cec1",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5fbbf9b9-b574-4560-b177-ab2708d53b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a72a31e-aeae-4812-91fa-757e5f2549e8",
        "cursor": {
          "ref": "21f60bcf-a392-49c3-a835-f33c8ac7c306",
          "length": 155,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "37895aed-17dc-443c-8f8a-b69fd434841d"
        },
        "item": {
          "id": "0a72a31e-aeae-4812-91fa-757e5f2549e8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "91e9abbe-ec5e-4607-b547-b9df51b51c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941bb006-4dfe-4de3-afed-566c6c02ef03",
        "cursor": {
          "ref": "c12d39b3-30d4-40c7-9a86-f481a9c07c46",
          "length": 155,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fa9b12b1-1c86-46ba-acec-0b295544931c"
        },
        "item": {
          "id": "941bb006-4dfe-4de3-afed-566c6c02ef03",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "17241139-25f0-41cb-aad0-d2bea09aa59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0eb8dde-23af-460a-b6b4-e66c00e75862",
        "cursor": {
          "ref": "92a63711-763f-48c0-88af-9a75860f0256",
          "length": 155,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b51e818d-4505-4105-80ab-0f4b62646502"
        },
        "item": {
          "id": "d0eb8dde-23af-460a-b6b4-e66c00e75862",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "51dac896-e1b1-492f-b0ca-9cc3e6e2c3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2ff067-789c-4b0a-bd85-2d003f263432",
        "cursor": {
          "ref": "b619e04f-9a9e-4e5a-baa9-af730a58190f",
          "length": 155,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7d31aecd-7565-410c-9820-34cc1d8ffa67"
        },
        "item": {
          "id": "9b2ff067-789c-4b0a-bd85-2d003f263432",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e6724e1a-edf8-4df8-8f8c-1cc56e8e7328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa20d582-1b95-4e9c-91a0-0e13af6ae324",
        "cursor": {
          "ref": "1cabad74-52d7-4aeb-8ac2-b45fcd3d9d09",
          "length": 155,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2b149bfd-812b-4fe1-a0d7-2efeafe56d9a"
        },
        "item": {
          "id": "aa20d582-1b95-4e9c-91a0-0e13af6ae324",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4b1ef145-20b5-41a6-b38e-7d117efd0f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d806213-94c3-4421-8f7b-6b18d4ba0f0e",
        "cursor": {
          "ref": "74c49bf8-c90c-42d7-a962-9b4134bed1d4",
          "length": 155,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "aa46a7c3-7ad9-4b40-9a0f-de8f1f551b29"
        },
        "item": {
          "id": "4d806213-94c3-4421-8f7b-6b18d4ba0f0e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "900d329e-1d69-49c2-87da-6114df2ea9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9302f84-f689-4b94-a0d7-bd5e10166623",
        "cursor": {
          "ref": "321cf4dc-bc93-4feb-8583-a37826ea4a73",
          "length": 155,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f1827e03-fc9b-46ad-8500-4a39bda36d63"
        },
        "item": {
          "id": "f9302f84-f689-4b94-a0d7-bd5e10166623",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0fc3c1a4-6098-4cd2-854b-508f34ff7312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c690915e-7c0f-4e12-8226-e852f23c3e71",
        "cursor": {
          "ref": "78841731-2e31-467e-9547-285d1b815e78",
          "length": 155,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "66160c5e-16f8-4a2e-b40c-bc130626dab5"
        },
        "item": {
          "id": "c690915e-7c0f-4e12-8226-e852f23c3e71",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e29c9561-0787-4d17-b1b5-08d433e0e8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6d989e-81f5-431d-a696-2d74912abbc9",
        "cursor": {
          "ref": "81dd27ec-86c1-4cbd-8c00-78b4c650c42a",
          "length": 155,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4d5c5403-08e3-46b2-a075-8b69334baea8"
        },
        "item": {
          "id": "0d6d989e-81f5-431d-a696-2d74912abbc9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7df6cbf0-dc8c-479a-bc0d-6f3b4ccd41a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c82b097-8b07-4be0-8e08-55237d2c9766",
        "cursor": {
          "ref": "79ae47bf-7bf5-48b3-84c3-9c7e428c5df0",
          "length": 155,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "81894c7b-f371-4a14-ace1-fe9c5024f0eb"
        },
        "item": {
          "id": "9c82b097-8b07-4be0-8e08-55237d2c9766",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7b819474-6128-40f9-93ad-e7737187dea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d79fa6-0d86-484a-96b0-9395197fa958",
        "cursor": {
          "ref": "fdb6bf84-a1f3-4874-b7e9-c435126a9c99",
          "length": 155,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7eea674e-4e8f-4e9d-95f9-e882c1c044de"
        },
        "item": {
          "id": "22d79fa6-0d86-484a-96b0-9395197fa958",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "99c5b36a-75d6-4e74-a3f1-53aa3ead0b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2421d4-26d2-46a2-a601-63b3585548ad",
        "cursor": {
          "ref": "f7e5c85d-0dcd-4bb1-af7a-cb382af5675e",
          "length": 155,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3316064e-888d-47e8-b39e-9b1020aba533"
        },
        "item": {
          "id": "2d2421d4-26d2-46a2-a601-63b3585548ad",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "389f41b7-d1e0-4054-88e2-081d6239c0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1516340c-788b-43bb-941f-747011d31fb3",
        "cursor": {
          "ref": "83645ed5-c9a5-4f59-a0d5-bb7ad7de575f",
          "length": 155,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1aa0c1d3-cb69-4838-9bef-6951f009e892"
        },
        "item": {
          "id": "1516340c-788b-43bb-941f-747011d31fb3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f9c79121-0ba0-4f54-8b7e-bdaa6ffbc4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3f123b-502a-4f68-b5c1-97d8742ff9bd",
        "cursor": {
          "ref": "68a43ae3-2cee-45b3-9690-c0cda9b591ee",
          "length": 155,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f9f9d115-457a-4915-8a64-a285636b23d1"
        },
        "item": {
          "id": "0d3f123b-502a-4f68-b5c1-97d8742ff9bd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f121c15a-198f-421d-8805-ea5b8d3f878c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2657b783-1efc-4288-be79-d50c15ec4e8d",
        "cursor": {
          "ref": "2946797d-cf37-440d-bc50-8ddfb08f1181",
          "length": 155,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c062b710-8d6b-4bb1-becb-44425a18d74f"
        },
        "item": {
          "id": "2657b783-1efc-4288-be79-d50c15ec4e8d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "11f0adb7-fff1-4ff5-97a5-e92f3c96bfbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b6f938-d970-4c27-a867-3cf44f1da6fd",
        "cursor": {
          "ref": "42b6cb43-89b4-46c2-a983-1175895898c5",
          "length": 155,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b66eb8e3-9d2c-4356-ad48-9ad6c41acd70"
        },
        "item": {
          "id": "21b6f938-d970-4c27-a867-3cf44f1da6fd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "dfe52990-4c80-4149-a16a-c796ec1fd5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634f2d09-34fa-4f46-a318-79ef35a02781",
        "cursor": {
          "ref": "9523b9a6-4fd3-466d-bbbb-0c9d37acf075",
          "length": 155,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ce117cc2-1ff9-4794-b4de-faf7273425e9"
        },
        "item": {
          "id": "634f2d09-34fa-4f46-a318-79ef35a02781",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "91d981a7-3f31-4af2-9641-317f533e6335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da29281c-b1a7-4b02-a7d0-db4c38b951a6",
        "cursor": {
          "ref": "ced116e2-a4ed-41a9-9b07-af84eaf5da3f",
          "length": 155,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fcd3b5fd-8c1e-4ec4-a054-625ced501998"
        },
        "item": {
          "id": "da29281c-b1a7-4b02-a7d0-db4c38b951a6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2cffb023-5ba1-4bdf-a371-677d0b20ddc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d3e6d5-7249-4c8d-9fc8-18c5ce2bc6cd",
        "cursor": {
          "ref": "92b9c491-5c1a-4e51-816f-eaebf72f319b",
          "length": 155,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a1262fde-2a66-4fa2-b7cd-692282949146"
        },
        "item": {
          "id": "98d3e6d5-7249-4c8d-9fc8-18c5ce2bc6cd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a4c1645b-1912-4fcd-9263-50f0f3925ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ab9d22-9ff9-4f16-8531-ed2b24d3d8f9",
        "cursor": {
          "ref": "6cc72efc-ae23-461f-973a-e69f400bb180",
          "length": 155,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "87e2142c-5ddf-40f6-8299-1f03375bac14"
        },
        "item": {
          "id": "88ab9d22-9ff9-4f16-8531-ed2b24d3d8f9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "218f674a-7c52-4512-83f6-b0ddd57081f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1306ecf-6d56-435f-a74a-c98825afec17",
        "cursor": {
          "ref": "cf13bb36-1811-4e14-8afc-dfff3fa445f5",
          "length": 155,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ac2d4f3a-7182-43b1-af93-6195dc7f31b4"
        },
        "item": {
          "id": "f1306ecf-6d56-435f-a74a-c98825afec17",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "46e916fa-fe73-4ad9-a81a-403a04bcde00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e551f679-803a-4c30-89be-9eac092c98ca",
        "cursor": {
          "ref": "11a7a143-7791-4557-a4b0-3cf6821eb109",
          "length": 155,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ee3fa34b-3ab7-4d3c-990b-8b94347ab945"
        },
        "item": {
          "id": "e551f679-803a-4c30-89be-9eac092c98ca",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0f3c6453-3881-4f24-a8ae-a43bae56c97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11d63ab-6e08-4ec3-942d-e5ee3147fb0f",
        "cursor": {
          "ref": "1e57e9ce-96b6-4986-a1ab-3124f134453c",
          "length": 155,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "78e09c1b-5b1f-4625-a90c-d491c9a5c010"
        },
        "item": {
          "id": "e11d63ab-6e08-4ec3-942d-e5ee3147fb0f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fd68ecf7-8aa0-4b57-8fe6-01bb7b4b8d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17306dce-0ffa-46b1-843a-e46cb2b98e3e",
        "cursor": {
          "ref": "49ed7f60-8253-4328-ae51-4e5e67355879",
          "length": 155,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e0a109bc-1119-4e19-84b6-6fbce1af2fa9"
        },
        "item": {
          "id": "17306dce-0ffa-46b1-843a-e46cb2b98e3e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bfe65d90-6135-4f60-aa13-cdcbbaf07d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92a21e9-1811-4106-95ed-dc7f8f1d957d",
        "cursor": {
          "ref": "bd84838a-de7a-4b28-a2c6-fd1d191c7d9d",
          "length": 155,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8705126f-5c14-4e20-bbb8-3ec60794c7c9"
        },
        "item": {
          "id": "f92a21e9-1811-4106-95ed-dc7f8f1d957d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "dacfa56e-827f-480e-b6cd-57e3069fda9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdaf2ae-4661-43b6-884f-740012a8dcf4",
        "cursor": {
          "ref": "60f71b09-95de-47ba-bb36-1b3e1727b399",
          "length": 155,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "21dbe45e-7160-423b-90c2-8642fc29eff2"
        },
        "item": {
          "id": "3cdaf2ae-4661-43b6-884f-740012a8dcf4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ff12817c-49c6-470b-9cc3-8a6dbb082151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e19444-4a0c-49bf-a016-ef21d2af7c43",
        "cursor": {
          "ref": "d27d2459-b378-4f74-9d14-5ae5e63fc87b",
          "length": 155,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f7d6719f-39cf-402e-8851-755ee05cc524"
        },
        "item": {
          "id": "40e19444-4a0c-49bf-a016-ef21d2af7c43",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8fce8a9e-d75a-4b13-b30d-a3eff49ad812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a1a363-715c-4d11-8d05-9cebd5a1248e",
        "cursor": {
          "ref": "5908bdd4-42e9-4de4-a43b-63dfeb5470d7",
          "length": 155,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "05b2c4a1-5f86-47d8-acaf-4d4681138bae"
        },
        "item": {
          "id": "02a1a363-715c-4d11-8d05-9cebd5a1248e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0b9125a3-d246-4604-a620-91471dbaf33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97953727-3a50-48c8-93a5-e8779d9ffeda",
        "cursor": {
          "ref": "3f8dad91-0b26-4cff-8862-15ba2f2bba94",
          "length": 155,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "aaa3d5b0-0306-4bad-bf0f-8e93bcaad7e2"
        },
        "item": {
          "id": "97953727-3a50-48c8-93a5-e8779d9ffeda",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8eb29ab8-43c8-4df9-aecf-ba89c65f6965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ce2865-d511-4e82-8d46-12e945bc9b8d",
        "cursor": {
          "ref": "f6518ff6-bd7f-43ad-8443-a6edb2a72c09",
          "length": 155,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5a24b9ce-071a-437d-a944-bd23996a75c2"
        },
        "item": {
          "id": "b3ce2865-d511-4e82-8d46-12e945bc9b8d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "194cdf3a-ed3d-4f11-a397-82c260cdbd59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8615b3fa-1c73-4e97-b526-9681de64f6ae",
        "cursor": {
          "ref": "acd68bd0-a1c1-4bdc-afa3-2e8d82888521",
          "length": 155,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9be754f9-8b20-4794-8dc1-4ccbd2da5c3d"
        },
        "item": {
          "id": "8615b3fa-1c73-4e97-b526-9681de64f6ae",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bdc2ae59-396b-4e72-8d70-a9519d839c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409108a8-588b-4b18-8654-66527efcb501",
        "cursor": {
          "ref": "fb43bc5f-6a78-4131-b38b-87ba87d10cc3",
          "length": 155,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "84b50ccd-7360-4a4e-96f2-ccc893de8bd3"
        },
        "item": {
          "id": "409108a8-588b-4b18-8654-66527efcb501",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "273b2643-3f88-4110-afcb-ad2f45d46939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55f42b5-8019-46b2-a8a9-b05e5e69848a",
        "cursor": {
          "ref": "8619b82b-130d-4d11-95b5-1054a7d53d31",
          "length": 155,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e6e60a7b-ac74-424f-a60d-6525714d0f0a"
        },
        "item": {
          "id": "a55f42b5-8019-46b2-a8a9-b05e5e69848a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a08175da-53f9-40f4-a0d4-3f4cec5033cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1610f840-ba87-43d2-9354-575a3eb80bc4",
        "cursor": {
          "ref": "1eb5b828-23b5-49c3-b1ca-ea7097d9da69",
          "length": 155,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "20ce101b-b20d-4876-a750-4aceb22f6ba9"
        },
        "item": {
          "id": "1610f840-ba87-43d2-9354-575a3eb80bc4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fff0ebae-83a8-4391-b84a-51e22e2bf84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2896c86-611f-401d-8af2-9c701a75f16c",
        "cursor": {
          "ref": "e493440e-0b5e-4074-8117-20e4287b0c2d",
          "length": 155,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "21d41c24-30ea-484f-8c24-d1b925acc972"
        },
        "item": {
          "id": "b2896c86-611f-401d-8af2-9c701a75f16c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b72dc2bc-3c7c-4b93-a8d1-6e8a5efc6677",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3650d3-4c1a-4d00-bcfd-c167001adbdd",
        "cursor": {
          "ref": "fbb16c88-f960-4582-803a-fa34efeb3db3",
          "length": 155,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a3c61290-ac70-4c22-8295-679721089933"
        },
        "item": {
          "id": "3a3650d3-4c1a-4d00-bcfd-c167001adbdd",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "23f326fd-c9c4-403c-80e5-48f784bb0fea",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 39,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556d7282-d997-409f-b83a-0923e47f1048",
        "cursor": {
          "ref": "611d0567-2a51-40dd-9b56-1de1b4fbdcc8",
          "length": 155,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cdf5c0ea-a459-485b-b463-280181e96108"
        },
        "item": {
          "id": "556d7282-d997-409f-b83a-0923e47f1048",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fa9b230c-76a2-402e-bc68-7443b104f7ee",
          "status": "OK",
          "code": 200,
          "responseTime": 1200,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5c36c5-f55a-4b2e-8392-8f98e31f47d8",
        "cursor": {
          "ref": "62d89671-774b-417f-9c2e-6dcaf8f95436",
          "length": 155,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fe2a5f34-411d-4890-a3a9-6f7e2d3df619"
        },
        "item": {
          "id": "8e5c36c5-f55a-4b2e-8392-8f98e31f47d8",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "ed08a359-d6e2-4b94-aa36-1d5b59217fd5",
          "status": "OK",
          "code": 200,
          "responseTime": 760,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a4d090-3579-477a-888f-0fdf1e7b3e84",
        "cursor": {
          "ref": "3ad72c6a-6af6-4cd3-9f05-5edf652c88ff",
          "length": 155,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "099b9795-8a6b-4e58-bf8e-1b6b9e678ee4"
        },
        "item": {
          "id": "60a4d090-3579-477a-888f-0fdf1e7b3e84",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "77aa8d9c-f1af-4eb7-a8fc-5d6997cba5c3",
          "status": "OK",
          "code": 200,
          "responseTime": 578,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ea507c-ed6f-4998-a6b9-19cd724ac75b",
        "cursor": {
          "ref": "31d0d393-9dd1-4974-9af9-df50e14756b2",
          "length": 155,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "526512e1-a9d4-4a56-bb53-c45aafdfb7ad"
        },
        "item": {
          "id": "52ea507c-ed6f-4998-a6b9-19cd724ac75b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a78df418-03ce-4395-90dd-d6b857392a2d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ea507c-ed6f-4998-a6b9-19cd724ac75b",
        "cursor": {
          "ref": "31d0d393-9dd1-4974-9af9-df50e14756b2",
          "length": 155,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "526512e1-a9d4-4a56-bb53-c45aafdfb7ad"
        },
        "item": {
          "id": "52ea507c-ed6f-4998-a6b9-19cd724ac75b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a78df418-03ce-4395-90dd-d6b857392a2d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c24fd6f-4899-4994-87b9-d6b8a27fb9aa",
        "cursor": {
          "ref": "95178ead-68ac-4f5c-a22c-6ad14d6e5b8e",
          "length": 155,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2a6502bb-bac9-420b-8b42-b25d0c368978"
        },
        "item": {
          "id": "7c24fd6f-4899-4994-87b9-d6b8a27fb9aa",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "98073e08-8127-46f8-89b9-7be4e37ebd5e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 17,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b1d2cd-d1db-412f-aa6a-2f59439f9175",
        "cursor": {
          "ref": "91497f64-e5b8-42c5-945c-ff52862113a9",
          "length": 155,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "da679eea-f442-4e4d-8226-2ccb0a2876ab"
        },
        "item": {
          "id": "20b1d2cd-d1db-412f-aa6a-2f59439f9175",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5ec60e7f-1b55-457e-8974-e6ce76491a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:152)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:152)"
            }
          }
        ]
      },
      {
        "id": "20b1d2cd-d1db-412f-aa6a-2f59439f9175",
        "cursor": {
          "ref": "91497f64-e5b8-42c5-945c-ff52862113a9",
          "length": 155,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "da679eea-f442-4e4d-8226-2ccb0a2876ab"
        },
        "item": {
          "id": "20b1d2cd-d1db-412f-aa6a-2f59439f9175",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5ec60e7f-1b55-457e-8974-e6ce76491a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:152)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:152)"
            }
          }
        ]
      },
      {
        "id": "db675ed1-2ba3-4bf0-bc1d-8394a6870885",
        "cursor": {
          "ref": "6f82e3e8-8d31-4ccc-b4a4-ef46a43dfb9d",
          "length": 155,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "95e85e82-7532-4e29-a885-61f8885dd681"
        },
        "item": {
          "id": "db675ed1-2ba3-4bf0-bc1d-8394a6870885",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "efe7ffd4-c6db-468e-98f6-870b773ee616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:153)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:153)"
            }
          }
        ]
      },
      {
        "id": "99a6d732-83b5-4bd8-ab0e-a8a0b4bc7712",
        "cursor": {
          "ref": "c3ae7c14-d61b-401a-a50c-356fb75e4b0e",
          "length": 155,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e063e8a9-396f-468f-911d-75b557201636"
        },
        "item": {
          "id": "99a6d732-83b5-4bd8-ab0e-a8a0b4bc7712",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5f9b4e7f-58df-46e3-8f17-66500dfb57e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a6d732-83b5-4bd8-ab0e-a8a0b4bc7712",
        "cursor": {
          "ref": "c3ae7c14-d61b-401a-a50c-356fb75e4b0e",
          "length": 155,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e063e8a9-396f-468f-911d-75b557201636"
        },
        "item": {
          "id": "99a6d732-83b5-4bd8-ab0e-a8a0b4bc7712",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5f9b4e7f-58df-46e3-8f17-66500dfb57e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d51e3b2-3b65-4361-a4bb-35d1ecc67208",
        "cursor": {
          "ref": "60c666f5-64dc-4e7b-af0c-ab2828548f7f",
          "length": 155,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b2726ee7-b2d7-44f4-9d02-d1b6724edf3b"
        },
        "item": {
          "id": "5d51e3b2-3b65-4361-a4bb-35d1ecc67208",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "da22aded-df13-4f70-b51d-fd8bc63a7c91",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 40,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}